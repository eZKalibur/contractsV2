{
	"id": "9374f706db2d432615fa5d20a71ceb82",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"launchpad/ico.sol": {
				"content": "pragma solidity ^0.8.13;\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\r\n/**\r\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\r\n     * given ``owner``'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    function safePermit(\r\n        IERC20Permit token,\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal {\r\n        uint256 nonceBefore = token.nonces(owner);\r\n        token.permit(owner, spender, value, deadline, v, r, s);\r\n        uint256 nonceAfter = token.nonces(owner);\r\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        _nonReentrantBefore();\r\n        _;\r\n        _nonReentrantAfter();\r\n    }\r\n\r\n    function _nonReentrantBefore() private {\r\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n    }\r\n\r\n    function _nonReentrantAfter() private {\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    enum Rounding {\r\n        Down, // Toward negative infinity\r\n        Up, // Toward infinity\r\n        Zero // Toward zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds up instead\r\n     * of rounding down.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\r\n     * with further edits by Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(\r\n        uint256 x,\r\n        uint256 y,\r\n        uint256 denominator\r\n    ) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod0 := mul(x, y)\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            require(denominator > prod1);\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\r\n            // See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\r\n            uint256 twos = denominator & (~denominator + 1);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\r\n            // in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(\r\n        uint256 x,\r\n        uint256 y,\r\n        uint256 denominator,\r\n        Rounding rounding\r\n    ) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10**64) {\r\n                value /= 10**64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10**32) {\r\n                value /= 10**32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10**16) {\r\n                value /= 10**16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10**8) {\r\n                value /= 10**8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10**4) {\r\n                value /= 10**4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10**2) {\r\n                value /= 10**2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10**1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\r\n    uint8 private constant _ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = _SYMBOLS[value & 0xf];\r\n            value >>= 4;\r\n        }\r\n        require(value == 0, \"Strings: hex length insufficient\");\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\r\n/**\r\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\r\n *\r\n * These functions can be used to verify that a message was signed by the holder\r\n * of the private keys of a given address.\r\n */\r\nlibrary ECDSA {\r\n    enum RecoverError {\r\n        NoError,\r\n        InvalidSignature,\r\n        InvalidSignatureLength,\r\n        InvalidSignatureS,\r\n        InvalidSignatureV // Deprecated in v4.8\r\n    }\r\n\r\n    function _throwError(RecoverError error) private pure {\r\n        if (error == RecoverError.NoError) {\r\n            return; // no error: do nothing\r\n        } else if (error == RecoverError.InvalidSignature) {\r\n            revert(\"ECDSA: invalid signature\");\r\n        } else if (error == RecoverError.InvalidSignatureLength) {\r\n            revert(\"ECDSA: invalid signature length\");\r\n        } else if (error == RecoverError.InvalidSignatureS) {\r\n            revert(\"ECDSA: invalid signature 's' value\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address that signed a hashed message (`hash`) with\r\n     * `signature` or error string. This address can then be used for verification purposes.\r\n     *\r\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\r\n     * this function rejects them by requiring the `s` value to be in the lower\r\n     * half order, and the `v` value to be either 27 or 28.\r\n     *\r\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\r\n     * verification to be secure: it is possible to craft signatures that\r\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\r\n     * this is by receiving a hash of the original message (which may otherwise\r\n     * be too long), and then calling {toEthSignedMessageHash} on it.\r\n     *\r\n     * Documentation for signature generation:\r\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\r\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\r\n        if (signature.length == 65) {\r\n            bytes32 r;\r\n            bytes32 s;\r\n            uint8 v;\r\n            // ecrecover takes the signature parameters, and the only way to get them\r\n            // currently is to use assembly.\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                r := mload(add(signature, 0x20))\r\n                s := mload(add(signature, 0x40))\r\n                v := byte(0, mload(add(signature, 0x60)))\r\n            }\r\n            return tryRecover(hash, v, r, s);\r\n        } else {\r\n            return (address(0), RecoverError.InvalidSignatureLength);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address that signed a hashed message (`hash`) with\r\n     * `signature`. This address can then be used for verification purposes.\r\n     *\r\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\r\n     * this function rejects them by requiring the `s` value to be in the lower\r\n     * half order, and the `v` value to be either 27 or 28.\r\n     *\r\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\r\n     * verification to be secure: it is possible to craft signatures that\r\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\r\n     * this is by receiving a hash of the original message (which may otherwise\r\n     * be too long), and then calling {toEthSignedMessageHash} on it.\r\n     */\r\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\r\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\r\n        _throwError(error);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\r\n     *\r\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function tryRecover(\r\n        bytes32 hash,\r\n        bytes32 r,\r\n        bytes32 vs\r\n    ) internal pure returns (address, RecoverError) {\r\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\r\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\r\n        return tryRecover(hash, v, r, s);\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\r\n     *\r\n     * _Available since v4.2._\r\n     */\r\n    function recover(\r\n        bytes32 hash,\r\n        bytes32 r,\r\n        bytes32 vs\r\n    ) internal pure returns (address) {\r\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\r\n        _throwError(error);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\r\n     * `r` and `s` signature fields separately.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function tryRecover(\r\n        bytes32 hash,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal pure returns (address, RecoverError) {\r\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\r\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\r\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\r\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\r\n        //\r\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\r\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\r\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\r\n        // these malleable signatures as well.\r\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\r\n            return (address(0), RecoverError.InvalidSignatureS);\r\n        }\r\n\r\n        // If the signature is valid (and not malleable), return the signer address\r\n        address signer = ecrecover(hash, v, r, s);\r\n        if (signer == address(0)) {\r\n            return (address(0), RecoverError.InvalidSignature);\r\n        }\r\n\r\n        return (signer, RecoverError.NoError);\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\r\n     * `r` and `s` signature fields separately.\r\n     */\r\n    function recover(\r\n        bytes32 hash,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal pure returns (address) {\r\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\r\n        _throwError(error);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\r\n     * produces hash corresponding to the one signed with the\r\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\r\n     * JSON-RPC method as part of EIP-191.\r\n     *\r\n     * See {recover}.\r\n     */\r\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\r\n        // 32 is the length in bytes of hash,\r\n        // enforced by the type signature above\r\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\r\n     * produces hash corresponding to the one signed with the\r\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\r\n     * JSON-RPC method as part of EIP-191.\r\n     *\r\n     * See {recover}.\r\n     */\r\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an Ethereum Signed Typed Data, created from a\r\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\r\n     * to the one signed with the\r\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\r\n     * JSON-RPC method as part of EIP-712.\r\n     *\r\n     * See {recover}.\r\n     */\r\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\r\n    }\r\n}\r\n\r\ncontract OverflowICO is Ownable, ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n    using ECDSA for bytes32;\r\n    IERC20 public immutable salesToken;\r\n    IERC20 public immutable emissionToken;\r\n    uint256 public immutable tokensToSell;\r\n    uint256 public immutable ethersToRaise;\r\n    uint256 public immutable refundThreshold;\r\n    uint256 public immutable totalEmission;\r\n    uint256 public immutable startTime;\r\n    uint256 public immutable endTime;\r\n    uint256 public immutable receiveTime;\r\n    address public immutable burnAddress;\r\n    uint256 public immutable emissionTokenSaleAmount;\r\n\r\n    uint256 public immutable minCommit;\r\n    uint256 public immutable maxCommit;\r\n\r\n    bool public started;\r\n    bool public finished;\r\n\r\n    uint256 emissionPerEther;\r\n    uint256 lastUpdate;\r\n    uint256 public totalCommitments;\r\n    mapping(address => uint256) public commitments;\r\n    mapping(address => uint256) public missedEmissions;\r\n    mapping(address => uint256) public finalEmissions;\r\n    mapping(address => uint256) public finalTokens;\r\n\r\n    event Commit(address indexed buyer, uint256 amount);\r\n    event Claim(\r\n        address indexed buyer,\r\n        uint256 eth,\r\n        uint256 token,\r\n        uint256 emission\r\n    );\r\n    event Claim2(address indexed buyer, uint256 token, uint256 emission, uint256 emissionBonus);\r\n    \r\n    mapping(address => bool) public whitelist;\r\n\r\n    modifier onlyWhitelisted() {\r\n        require(whitelist[msg.sender], \"Only the whitelisted can call this function\");\r\n        _;\r\n    }\r\n\r\n    function calculateEmission(uint256 value) internal view returns (uint256) {\r\n        return (value * emissionPerEther) / 10 ** 18;\r\n    }\r\n\r\n    function _calculateEmission(uint256 value) internal view returns (uint256) {\r\n        require(totalCommitments > 0, \"no commitments\");\r\n\r\n        uint256 elapsed = Math.min(block.timestamp, endTime) -\r\n            Math.max(Math.min(lastUpdate, endTime), startTime);\r\n        uint256 emission = (totalEmission * elapsed) /\r\n            (endTime - startTime);\r\n        uint256 _emissionPerEther = emissionPerEther + (emission * 10 ** 18) / totalCommitments;\r\n        \r\n        return (value * _emissionPerEther) / 10 ** 18;\r\n    }\r\n\r\n\r\n    function _updateEmission() internal {\r\n        require(block.timestamp >= startTime, \"not started\");\r\n        if (totalCommitments > 0) {\r\n            uint256 elapsed = Math.min(block.timestamp, endTime) -\r\n                Math.max(Math.min(lastUpdate, endTime), startTime);\r\n            uint256 emission = (totalEmission * elapsed) /\r\n                (endTime - startTime);\r\n            emissionPerEther += (emission * 10 ** 18) / totalCommitments;\r\n        }\r\n        lastUpdate = block.timestamp;\r\n    }\r\n\r\n    constructor(\r\n        uint256 _tokensToSell,\r\n        uint256 _ethersToRaise,\r\n        uint256 _refundThreshold,\r\n        uint256 _startTime,\r\n        uint256 _endTime,\r\n        uint256 _receiveTime,\r\n        uint256 _minCommit,\r\n        uint256 _maxCommit,\r\n        uint256 _totalEmission,\r\n        address _burnAddress,\r\n        uint256 _emissionTokenSaleAmount\r\n    ) {\r\n        require(\r\n            _startTime >= block.timestamp,\r\n            \"Start time must be in the future.\"\r\n        );\r\n        require(\r\n            _endTime > _startTime,\r\n            \"End time must be greater than start time.\"\r\n        );\r\n        require(_ethersToRaise > 0, \"Ethers to raise should be greater than 0\");\r\n        require(\r\n            _ethersToRaise > _refundThreshold,\r\n            \"Ethers to raise should be greater than refund threshold\"\r\n        );\r\n        require(_minCommit > 0, \"Minimum commitment should be greater than 0\");\r\n        require(\r\n            _maxCommit >= _minCommit,\r\n            \"Maximum commitment should be greater or equal to minimum commitment\"\r\n        );\r\n\r\n        salesToken = IERC20(0x41d962eD9a2Af1B68844EF588e182A628a5FA6f3);\r\n        tokensToSell = _tokensToSell;\r\n        ethersToRaise = _ethersToRaise;\r\n        refundThreshold = _refundThreshold;\r\n        startTime = _startTime;\r\n        endTime = _endTime;\r\n        receiveTime = _receiveTime;\r\n        minCommit = _minCommit;\r\n        maxCommit = _maxCommit;\r\n        emissionToken = IERC20(0xE9F04E418f93Ae73387576e9ab0f8FDB7C88545D);\r\n        totalEmission = _totalEmission;\r\n        burnAddress = _burnAddress;\r\n        emissionTokenSaleAmount = _emissionTokenSaleAmount;\r\n    }\r\n\r\n    function start() external onlyOwner {\r\n        require(!started, \"Already started.\");\r\n        started = true;\r\n        salesToken.safeTransferFrom(msg.sender, address(this), tokensToSell);\r\n        emissionToken.safeTransferFrom(\r\n            msg.sender,\r\n            address(this),\r\n            totalEmission + emissionTokenSaleAmount\r\n        );\r\n    }\r\n\r\n    function commit() external payable nonReentrant {\r\n        _updateEmission();\r\n        require(\r\n            started &&\r\n                block.timestamp >= startTime &&\r\n                block.timestamp < endTime,\r\n            \"Can only deposit Ether during the sale period.\"\r\n        );\r\n        require(\r\n            minCommit <= commitments[msg.sender] + msg.value &&\r\n                commitments[msg.sender] + msg.value <= maxCommit,\r\n            \"Commitment amount is outside the allowed range.\"\r\n        );\r\n        commitments[msg.sender] += msg.value;\r\n        totalCommitments += msg.value;\r\n        missedEmissions[msg.sender] += calculateEmission(msg.value);\r\n        emit Commit(msg.sender, msg.value);\r\n    }\r\n\r\n    function simulateClaim() external returns (uint256, uint256, uint256) {\r\n        _updateEmission();\r\n        if (finalTokens[msg.sender] > 0)\r\n            return (0, finalTokens[msg.sender], finalEmissions[msg.sender]);\r\n\r\n        if (commitments[msg.sender] == 0) return (0, 0, 0);\r\n\r\n        if (totalCommitments >= refundThreshold) {\r\n            uint256 ethersToSpend = Math.min(\r\n                commitments[msg.sender],\r\n                (commitments[msg.sender] * ethersToRaise) / totalCommitments\r\n            );\r\n            uint256 ethersToRefund = commitments[msg.sender] - ethersToSpend;\r\n            uint256 tokensToReceive = (tokensToSell * ethersToSpend) /\r\n                ethersToRaise;\r\n            uint256 emission = calculateEmission(commitments[msg.sender]) -\r\n                missedEmissions[msg.sender];\r\n\r\n            uint256 emissionTokensToReceive = tokensToReceive / 3;\r\n\r\n            return (ethersToRefund, tokensToReceive + emissionTokensToReceive, emission);\r\n        } else {\r\n            uint256 amt = commitments[msg.sender];\r\n            return (amt, 0, 0);\r\n        }\r\n    }\r\n\r\n    function simulateClaimNoUpdate() external view returns (uint256, uint256, uint256, uint256) {\r\n        \r\n        if (finalTokens[msg.sender] > 0)\r\n            return (0, finalTokens[msg.sender], finalTokens[msg.sender]/3, finalEmissions[msg.sender]);\r\n\r\n        if (commitments[msg.sender] == 0) return (0, 0, 0, 0);\r\n\r\n        if (totalCommitments >= refundThreshold) {\r\n            uint256 ethersToSpend = Math.min(\r\n                commitments[msg.sender],\r\n                (commitments[msg.sender] * ethersToRaise) / totalCommitments\r\n            );\r\n            uint256 ethersToRefund = commitments[msg.sender] - ethersToSpend;\r\n            uint256 tokensToReceive = (tokensToSell * ethersToSpend) /\r\n                ethersToRaise;\r\n            uint256 emission = _calculateEmission(commitments[msg.sender]) -\r\n                missedEmissions[msg.sender];\r\n\r\n            uint256 emissionTokensToReceive = tokensToReceive / 3;\r\n\r\n            return (ethersToRefund, tokensToReceive, emissionTokensToReceive, emission);\r\n        } else {\r\n            uint256 amt = commitments[msg.sender];\r\n            return (amt, 0, 0, 0);\r\n        }\r\n    }\r\n\r\n\r\n    function claim() external nonReentrant returns (uint256, uint256, uint256) {\r\n        _updateEmission();\r\n        require(\r\n            block.timestamp > endTime,\r\n            \"Can only claim tokens after the sale has ended.\"\r\n        );\r\n        require(\r\n            commitments[msg.sender] > 0,\r\n            \"You have not deposited any Ether.\"\r\n        );\r\n\r\n        if (totalCommitments >= refundThreshold) {\r\n            uint256 ethersToSpend = Math.min(\r\n                commitments[msg.sender],\r\n                (commitments[msg.sender] * ethersToRaise) / totalCommitments\r\n            );\r\n            uint256 ethersToRefund = commitments[msg.sender] - ethersToSpend;\r\n            uint256 tokensToReceive = (tokensToSell * ethersToSpend) /\r\n                ethersToRaise;\r\n            uint256 emission = calculateEmission(commitments[msg.sender]) -\r\n                missedEmissions[msg.sender];\r\n            missedEmissions[msg.sender] += emission;\r\n\r\n            commitments[msg.sender] = 0;\r\n\r\n            finalEmissions[msg.sender] = emission;\r\n            finalTokens[msg.sender] = tokensToReceive;\r\n\r\n            (bool success, ) = msg.sender.call{value: ethersToRefund}(\"\");\r\n            require(success, \"Failed to transfer ether\");\r\n            emit Claim(msg.sender, ethersToRefund, tokensToReceive, emission);\r\n            return (ethersToRefund, tokensToReceive, emission);\r\n        } else {\r\n            uint256 amt = commitments[msg.sender];\r\n            commitments[msg.sender] = 0;\r\n            (bool success, ) = msg.sender.call{value: amt}(\"\");\r\n            require(success, \"Failed to transfer ether\");\r\n            emit Claim(msg.sender, amt, 0, 0);\r\n            return (amt, 0, 0);\r\n        }\r\n    }\r\n\r\n    function claim2() external nonReentrant {\r\n        require(block.timestamp >= receiveTime, \"not claimable yet\");\r\n        uint256 a1 = finalTokens[msg.sender];\r\n        uint256 a2 = finalEmissions[msg.sender];\r\n        uint256 a3 = finalTokens[msg.sender] / 3;\r\n\r\n        finalTokens[msg.sender] = 0;\r\n        finalEmissions[msg.sender] = 0;\r\n\r\n        salesToken.safeTransfer(msg.sender, a1);\r\n        emissionToken.safeTransfer(msg.sender, a2 + a3);\r\n        emit Claim2(msg.sender, a1, a2, a3);\r\n    }\r\n\r\n    function finish() external onlyOwner {\r\n        require(\r\n            block.timestamp > endTime,\r\n            \"Can only finish after the sale has ended.\"\r\n        );\r\n        require(!finished, \"Already finished.\");\r\n        finished = true;\r\n\r\n        if (totalCommitments >= refundThreshold) {\r\n            (bool success, ) = owner().call{\r\n                value: Math.min(ethersToRaise, totalCommitments)\r\n            }(\"\");\r\n            require(success, \"Failed to transfer ether\");\r\n            if (ethersToRaise > totalCommitments) {\r\n                uint256 emissionTokensToBurn = (emissionTokenSaleAmount * (ethersToRaise - totalCommitments)) / ethersToRaise;\r\n                    emissionToken.safeTransfer(burnAddress, emissionTokensToBurn);\r\n                \r\n                uint256 tokensToBurn = (tokensToSell *\r\n                    (ethersToRaise - totalCommitments)) / ethersToRaise;\r\n                \r\n                emissionToken.safeTransfer(burnAddress, emissionTokensToBurn);\r\n                salesToken.safeTransfer(burnAddress, tokensToBurn);\r\n            }\r\n        } else {\r\n            salesToken.safeTransfer(owner(), tokensToSell);\r\n            emissionToken.safeTransfer(owner(), totalEmission + emissionTokenSaleAmount);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Add to whitelist\r\n     */\r\n    function addToWhitelist(address[] calldata toAddAddresses) \r\n    external onlyOwner\r\n    {\r\n        for (uint i = 0; i < toAddAddresses.length; i++) {\r\n            whitelist[toAddAddresses[i]] = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Remove from whitelist\r\n     */\r\n    function removeFromWhitelist(address[] calldata toRemoveAddresses)\r\n    external onlyOwner\r\n    {\r\n        for (uint i = 0; i < toRemoveAddresses.length; i++) {\r\n            delete whitelist[toRemoveAddresses[i]];\r\n        }\r\n    }\r\n\r\n    function isOnWhitelist(address user) public view returns(bool) {\r\n        return whitelist[user];\r\n    }\r\n\r\n    receive() external payable {}\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"launchpad/ico.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"launchpad/ico.sol\":5211:14410  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"launchpad/ico.sol\":5211:14410  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200878fa54230297347cb661868da2ea14071432507419d9bf7027298f765ea7aa64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200878fa54230297347cb661868da2ea14071432507419d9bf7027298f765ea7aa64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD PUSH25 0xFA54230297347CB661868DA2EA14071432507419D9BF702729 DUP16 PUSH23 0x5EA7AA64736F6C634300080D0033000000000000000000 ",
							"sourceMap": "5211:9199:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200878fa54230297347cb661868da2ea14071432507419d9bf7027298f765ea7aa64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD PUSH25 0xFA54230297347CB661868DA2EA14071432507419D9BF702729 DUP16 PUSH23 0x5EA7AA64736F6C634300080D0033000000000000000000 ",
							"sourceMap": "5211:9199:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5211,
									"end": 14410,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5211,
									"end": 14410,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200878fa54230297347cb661868da2ea14071432507419d9bf7027298f765ea7aa64736f6c634300080d0033",
									".code": [
										{
											"begin": 5211,
											"end": 14410,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 14410,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 14410,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 14410,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5211,
											"end": 14410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 14410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 14410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 14410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 14410,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/ico.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"launchpad/ico.sol\":{\"keccak256\":\"0x1682971126e3105932579dd1dad27f26dd4224abb0d2d39aeb09f9c3d0fccd8c\",\"urls\":[\"bzz-raw://e0a873f643436e9f1f6512a415f25e74b9ac62ec8160d9928158c85357585093\",\"dweb:/ipfs/QmYohrpuWdBDaFgs3Kr4HkCvrbTeHW5idnQJBgAwNg4VnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/ico.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"launchpad/ico.sol\":{\"keccak256\":\"0x1682971126e3105932579dd1dad27f26dd4224abb0d2d39aeb09f9c3d0fccd8c\",\"urls\":[\"bzz-raw://e0a873f643436e9f1f6512a415f25e74b9ac62ec8160d9928158c85357585093\",\"dweb:/ipfs/QmYohrpuWdBDaFgs3Kr4HkCvrbTeHW5idnQJBgAwNg4VnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ECDSA": {
					"abi": [],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"launchpad/ico.sol\":40400:48767  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"launchpad/ico.sol\":40400:48767  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201a12cb1c0d0c8a93e820b60c5822b735987c8a086a131d432d9a790f8ec4447a64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201a12cb1c0d0c8a93e820b60c5822b735987c8a086a131d432d9a790f8ec4447a64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE SLT 0xCB SHR 0xD 0xC DUP11 SWAP4 0xE8 KECCAK256 0xB6 0xC PC 0x22 0xB7 CALLDATALOAD SWAP9 PUSH29 0x8A086A131D432D9A790F8EC4447A64736F6C634300080D003300000000 ",
							"sourceMap": "40400:8367:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201a12cb1c0d0c8a93e820b60c5822b735987c8a086a131d432d9a790f8ec4447a64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE SLT 0xCB SHR 0xD 0xC DUP11 SWAP4 0xE8 KECCAK256 0xB6 0xC PC 0x22 0xB7 CALLDATALOAD SWAP9 PUSH29 0x8A086A131D432D9A790F8EC4447A64736F6C634300080D003300000000 ",
							"sourceMap": "40400:8367:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 40400,
									"end": 48767,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40400,
									"end": 48767,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201a12cb1c0d0c8a93e820b60c5822b735987c8a086a131d432d9a790f8ec4447a64736f6c634300080d0033",
									".code": [
										{
											"begin": 40400,
											"end": 48767,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 40400,
											"end": 48767,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 40400,
											"end": 48767,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40400,
											"end": 48767,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 40400,
											"end": 48767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40400,
											"end": 48767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40400,
											"end": 48767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40400,
											"end": 48767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40400,
											"end": 48767,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/ico.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"launchpad/ico.sol\":{\"keccak256\":\"0x1682971126e3105932579dd1dad27f26dd4224abb0d2d39aeb09f9c3d0fccd8c\",\"urls\":[\"bzz-raw://e0a873f643436e9f1f6512a415f25e74b9ac62ec8160d9928158c85357585093\",\"dweb:/ipfs/QmYohrpuWdBDaFgs3Kr4HkCvrbTeHW5idnQJBgAwNg4VnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/ico.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"launchpad/ico.sol\":{\"keccak256\":\"0x1682971126e3105932579dd1dad27f26dd4224abb0d2d39aeb09f9c3d0fccd8c\",\"urls\":[\"bzz-raw://e0a873f643436e9f1f6512a415f25e74b9ac62ec8160d9928158c85357585093\",\"dweb:/ipfs/QmYohrpuWdBDaFgs3Kr4HkCvrbTeHW5idnQJBgAwNg4VnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/ico.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"launchpad/ico.sol\":{\"keccak256\":\"0x1682971126e3105932579dd1dad27f26dd4224abb0d2d39aeb09f9c3d0fccd8c\",\"urls\":[\"bzz-raw://e0a873f643436e9f1f6512a415f25e74b9ac62ec8160d9928158c85357585093\",\"dweb:/ipfs/QmYohrpuWdBDaFgs3Kr4HkCvrbTeHW5idnQJBgAwNg4VnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"launchpad/ico.sol\":25231:37869  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"launchpad/ico.sol\":25231:37869  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b5c47351ff030f2595f4cb160b658ea83c1d6c2cdfb90a25a2516a44f83f023964736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5c47351ff030f2595f4cb160b658ea83c1d6c2cdfb90a25a2516a44f83f023964736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xC4 PUSH20 0x51FF030F2595F4CB160B658EA83C1D6C2CDFB90A 0x25 LOG2 MLOAD PUSH11 0x44F83F023964736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "25231:12638:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5c47351ff030f2595f4cb160b658ea83c1d6c2cdfb90a25a2516a44f83f023964736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xC4 PUSH20 0x51FF030F2595F4CB160B658EA83C1D6C2CDFB90A 0x25 LOG2 MLOAD PUSH11 0x44F83F023964736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "25231:12638:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25231,
									"end": 37869,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 37869,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b5c47351ff030f2595f4cb160b658ea83c1d6c2cdfb90a25a2516a44f83f023964736f6c634300080d0033",
									".code": [
										{
											"begin": 25231,
											"end": 37869,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 37869,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 37869,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 37869,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25231,
											"end": 37869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25231,
											"end": 37869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 37869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25231,
											"end": 37869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 37869,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/ico.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"launchpad/ico.sol\":{\"keccak256\":\"0x1682971126e3105932579dd1dad27f26dd4224abb0d2d39aeb09f9c3d0fccd8c\",\"urls\":[\"bzz-raw://e0a873f643436e9f1f6512a415f25e74b9ac62ec8160d9928158c85357585093\",\"dweb:/ipfs/QmYohrpuWdBDaFgs3Kr4HkCvrbTeHW5idnQJBgAwNg4VnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"OverflowICO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokensToSell",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_ethersToRaise",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_refundThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_receiveTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minCommit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxCommit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_totalEmission",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_burnAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_emissionTokenSaleAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "token",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "emission",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "token",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "emission",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "emissionBonus",
									"type": "uint256"
								}
							],
							"name": "Claim2",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Commit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "toAddAddresses",
									"type": "address[]"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim2",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "commit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "commitments",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emissionToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emissionTokenSaleAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ethersToRaise",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "finalEmissions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "finalTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finish",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finished",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "isOnWhitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxCommit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minCommit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "missedEmissions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "receiveTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "toRemoveAddresses",
									"type": "address[]"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "salesToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "simulateClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "simulateClaimNoUpdate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "started",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensToSell",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalCommitments",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalEmission",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"launchpad/ico.sol\":48771:60797  contract OverflowICO is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x0220)\n    /* \"launchpad/ico.sol\":51515:53186  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"launchpad/ico.sol\":23339:23371  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"launchpad/ico.sol\":23358:23370  _msgSender() */\n  tag_9\n    /* \"launchpad/ico.sol\":23358:23368  _msgSender */\n  shl(0x20, tag_10)\n    /* \"launchpad/ico.sol\":23358:23370  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"launchpad/ico.sol\":23339:23357  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"launchpad/ico.sol\":23339:23371  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"launchpad/ico.sol\":20500:20501  1 */\n  0x01\n    /* \"launchpad/ico.sol\":20611:20618  _status */\n  dup1\n    /* \"launchpad/ico.sol\":20611:20633  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"launchpad/ico.sol\":51933:51948  block.timestamp */\n  timestamp\n    /* \"launchpad/ico.sol\":51919:51929  _startTime */\n  dup9\n    /* \"launchpad/ico.sol\":51919:51948  _startTime >= block.timestamp */\n  lt\n  iszero\n    /* \"launchpad/ico.sol\":51897:52009  require(... */\n  tag_14\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"launchpad/ico.sol\":52053:52063  _startTime */\n  dup8\n    /* \"launchpad/ico.sol\":52042:52050  _endTime */\n  dup8\n    /* \"launchpad/ico.sol\":52042:52063  _endTime > _startTime */\n  gt\n    /* \"launchpad/ico.sol\":52020:52132  require(... */\n  tag_17\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_17:\n    /* \"launchpad/ico.sol\":52168:52169  0 */\n  0x00\n    /* \"launchpad/ico.sol\":52151:52165  _ethersToRaise */\n  dup11\n    /* \"launchpad/ico.sol\":52151:52169  _ethersToRaise > 0 */\n  gt\n    /* \"launchpad/ico.sol\":52143:52214  require(_ethersToRaise > 0, \"Ethers to raise should be greater than 0\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_20:\n    /* \"launchpad/ico.sol\":52264:52280  _refundThreshold */\n  dup9\n    /* \"launchpad/ico.sol\":52247:52261  _ethersToRaise */\n  dup11\n    /* \"launchpad/ico.sol\":52247:52280  _ethersToRaise > _refundThreshold */\n  gt\n    /* \"launchpad/ico.sol\":52225:52363  require(... */\n  tag_23\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_23:\n    /* \"launchpad/ico.sol\":52395:52396  0 */\n  0x00\n    /* \"launchpad/ico.sol\":52382:52392  _minCommit */\n  dup6\n    /* \"launchpad/ico.sol\":52382:52396  _minCommit > 0 */\n  gt\n    /* \"launchpad/ico.sol\":52374:52444  require(_minCommit > 0, \"Minimum commitment should be greater than 0\") */\n  tag_26\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_27\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_26:\n    /* \"launchpad/ico.sol\":52491:52501  _minCommit */\n  dup5\n    /* \"launchpad/ico.sol\":52477:52487  _maxCommit */\n  dup5\n    /* \"launchpad/ico.sol\":52477:52501  _maxCommit >= _minCommit */\n  lt\n  iszero\n    /* \"launchpad/ico.sol\":52455:52596  require(... */\n  tag_29\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_30\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_29:\n    /* \"launchpad/ico.sol\":52629:52671  0x41d962eD9a2Af1B68844EF588e182A628a5FA6f3 */\n  0x41d962ed9a2af1b68844ef588e182a628a5fa6f3\n    /* \"launchpad/ico.sol\":52609:52672  salesToken = IERC20(0x41d962eD9a2Af1B68844EF588e182A628a5FA6f3) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"launchpad/ico.sol\":52698:52711  _tokensToSell */\n  dup11\n    /* \"launchpad/ico.sol\":52683:52711  tokensToSell = _tokensToSell */\n  0xc0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"launchpad/ico.sol\":52738:52752  _ethersToRaise */\n  dup10\n    /* \"launchpad/ico.sol\":52722:52752  ethersToRaise = _ethersToRaise */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"launchpad/ico.sol\":52781:52797  _refundThreshold */\n  dup9\n    /* \"launchpad/ico.sol\":52763:52797  refundThreshold = _refundThreshold */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"launchpad/ico.sol\":52820:52830  _startTime */\n  dup8\n    /* \"launchpad/ico.sol\":52808:52830  startTime = _startTime */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"launchpad/ico.sol\":52851:52859  _endTime */\n  dup7\n    /* \"launchpad/ico.sol\":52841:52859  endTime = _endTime */\n  0x0160\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"launchpad/ico.sol\":52884:52896  _receiveTime */\n  dup6\n    /* \"launchpad/ico.sol\":52870:52896  receiveTime = _receiveTime */\n  0x0180\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"launchpad/ico.sol\":52919:52929  _minCommit */\n  dup5\n    /* \"launchpad/ico.sol\":52907:52929  minCommit = _minCommit */\n  0x01e0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"launchpad/ico.sol\":52952:52962  _maxCommit */\n  dup4\n    /* \"launchpad/ico.sol\":52940:52962  maxCommit = _maxCommit */\n  0x0200\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"launchpad/ico.sol\":52996:53038  0xE9F04E418f93Ae73387576e9ab0f8FDB7C88545D */\n  0xe9f04e418f93ae73387576e9ab0f8fdb7c88545d\n    /* \"launchpad/ico.sol\":52973:53039  emissionToken = IERC20(0xE9F04E418f93Ae73387576e9ab0f8FDB7C88545D) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"launchpad/ico.sol\":53066:53080  _totalEmission */\n  dup3\n    /* \"launchpad/ico.sol\":53050:53080  totalEmission = _totalEmission */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"launchpad/ico.sol\":53105:53117  _burnAddress */\n  dup2\n    /* \"launchpad/ico.sol\":53091:53117  burnAddress = _burnAddress */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x01a0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"launchpad/ico.sol\":53154:53178  _emissionTokenSaleAmount */\n  dup1\n    /* \"launchpad/ico.sol\":53128:53178  emissionTokenSaleAmount = _emissionTokenSaleAmount */\n  0x01c0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"launchpad/ico.sol\":51515:53186  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"launchpad/ico.sol\":48771:60797  contract OverflowICO is Ownable, ReentrancyGuard {... */\n  jump(tag_32)\n    /* \"launchpad/ico.sol\":22257:22355  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"launchpad/ico.sol\":22310:22317  address */\n  0x00\n    /* \"launchpad/ico.sol\":22337:22347  msg.sender */\n  caller\n    /* \"launchpad/ico.sol\":22330:22347  return msg.sender */\n  swap1\n  pop\n    /* \"launchpad/ico.sol\":22257:22355  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"launchpad/ico.sol\":24885:25076  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"launchpad/ico.sol\":24959:24975  address oldOwner */\n  0x00\n    /* \"launchpad/ico.sol\":24978:24984  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"launchpad/ico.sol\":24959:24984  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"launchpad/ico.sol\":25004:25012  newOwner */\n  dup2\n    /* \"launchpad/ico.sol\":24995:25001  _owner */\n  0x00\n  dup1\n    /* \"launchpad/ico.sol\":24995:25012  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"launchpad/ico.sol\":25059:25067  newOwner */\n  dup2\n    /* \"launchpad/ico.sol\":25028:25068  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"launchpad/ico.sol\":25049:25057  oldOwner */\n  dup2\n    /* \"launchpad/ico.sol\":25028:25068  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"launchpad/ico.sol\":24948:25076  {... */\n  pop\n    /* \"launchpad/ico.sol\":24885:25076  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_36:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_38:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_39:\n    /* \"#utility.yul\":490:514   */\n  tag_64\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_38\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_65:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_40:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_67\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_39\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_41:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_42:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_70\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_41\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_43:\n    /* \"#utility.yul\":1001:1025   */\n  tag_72\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_42\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_73:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_44:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_75\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_43\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:3126   */\ntag_3:\n    /* \"#utility.yul\":1365:1371   */\n  0x00\n    /* \"#utility.yul\":1373:1379   */\n  dup1\n    /* \"#utility.yul\":1381:1387   */\n  0x00\n    /* \"#utility.yul\":1389:1395   */\n  dup1\n    /* \"#utility.yul\":1397:1403   */\n  0x00\n    /* \"#utility.yul\":1405:1411   */\n  dup1\n    /* \"#utility.yul\":1413:1419   */\n  0x00\n    /* \"#utility.yul\":1421:1427   */\n  dup1\n    /* \"#utility.yul\":1429:1435   */\n  0x00\n    /* \"#utility.yul\":1437:1443   */\n  dup1\n    /* \"#utility.yul\":1445:1452   */\n  0x00\n    /* \"#utility.yul\":1495:1498   */\n  0x0160\n    /* \"#utility.yul\":1483:1492   */\n  dup13\n    /* \"#utility.yul\":1474:1481   */\n  dup15\n    /* \"#utility.yul\":1470:1493   */\n  sub\n    /* \"#utility.yul\":1466:1499   */\n  slt\n    /* \"#utility.yul\":1463:1583   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":1502:1581   */\n  tag_78\n  tag_36\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1463:1583   */\ntag_77:\n    /* \"#utility.yul\":1622:1623   */\n  0x00\n    /* \"#utility.yul\":1647:1711   */\n  tag_79\n    /* \"#utility.yul\":1703:1710   */\n  dup15\n    /* \"#utility.yul\":1694:1700   */\n  dup3\n    /* \"#utility.yul\":1683:1692   */\n  dup16\n    /* \"#utility.yul\":1679:1701   */\n  add\n    /* \"#utility.yul\":1647:1711   */\n  tag_40\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1637:1711   */\n  swap12\n  pop\n    /* \"#utility.yul\":1593:1721   */\n  pop\n    /* \"#utility.yul\":1760:1762   */\n  0x20\n    /* \"#utility.yul\":1786:1850   */\n  tag_80\n    /* \"#utility.yul\":1842:1849   */\n  dup15\n    /* \"#utility.yul\":1833:1839   */\n  dup3\n    /* \"#utility.yul\":1822:1831   */\n  dup16\n    /* \"#utility.yul\":1818:1840   */\n  add\n    /* \"#utility.yul\":1786:1850   */\n  tag_40\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1776:1850   */\n  swap11\n  pop\n    /* \"#utility.yul\":1731:1860   */\n  pop\n    /* \"#utility.yul\":1899:1901   */\n  0x40\n    /* \"#utility.yul\":1925:1989   */\n  tag_81\n    /* \"#utility.yul\":1981:1988   */\n  dup15\n    /* \"#utility.yul\":1972:1978   */\n  dup3\n    /* \"#utility.yul\":1961:1970   */\n  dup16\n    /* \"#utility.yul\":1957:1979   */\n  add\n    /* \"#utility.yul\":1925:1989   */\n  tag_40\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1915:1989   */\n  swap10\n  pop\n    /* \"#utility.yul\":1870:1999   */\n  pop\n    /* \"#utility.yul\":2038:2040   */\n  0x60\n    /* \"#utility.yul\":2064:2128   */\n  tag_82\n    /* \"#utility.yul\":2120:2127   */\n  dup15\n    /* \"#utility.yul\":2111:2117   */\n  dup3\n    /* \"#utility.yul\":2100:2109   */\n  dup16\n    /* \"#utility.yul\":2096:2118   */\n  add\n    /* \"#utility.yul\":2064:2128   */\n  tag_40\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2054:2128   */\n  swap9\n  pop\n    /* \"#utility.yul\":2009:2138   */\n  pop\n    /* \"#utility.yul\":2177:2180   */\n  0x80\n    /* \"#utility.yul\":2204:2268   */\n  tag_83\n    /* \"#utility.yul\":2260:2267   */\n  dup15\n    /* \"#utility.yul\":2251:2257   */\n  dup3\n    /* \"#utility.yul\":2240:2249   */\n  dup16\n    /* \"#utility.yul\":2236:2258   */\n  add\n    /* \"#utility.yul\":2204:2268   */\n  tag_40\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2194:2268   */\n  swap8\n  pop\n    /* \"#utility.yul\":2148:2278   */\n  pop\n    /* \"#utility.yul\":2317:2320   */\n  0xa0\n    /* \"#utility.yul\":2344:2408   */\n  tag_84\n    /* \"#utility.yul\":2400:2407   */\n  dup15\n    /* \"#utility.yul\":2391:2397   */\n  dup3\n    /* \"#utility.yul\":2380:2389   */\n  dup16\n    /* \"#utility.yul\":2376:2398   */\n  add\n    /* \"#utility.yul\":2344:2408   */\n  tag_40\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2334:2408   */\n  swap7\n  pop\n    /* \"#utility.yul\":2288:2418   */\n  pop\n    /* \"#utility.yul\":2457:2460   */\n  0xc0\n    /* \"#utility.yul\":2484:2548   */\n  tag_85\n    /* \"#utility.yul\":2540:2547   */\n  dup15\n    /* \"#utility.yul\":2531:2537   */\n  dup3\n    /* \"#utility.yul\":2520:2529   */\n  dup16\n    /* \"#utility.yul\":2516:2538   */\n  add\n    /* \"#utility.yul\":2484:2548   */\n  tag_40\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2474:2548   */\n  swap6\n  pop\n    /* \"#utility.yul\":2428:2558   */\n  pop\n    /* \"#utility.yul\":2597:2600   */\n  0xe0\n    /* \"#utility.yul\":2624:2688   */\n  tag_86\n    /* \"#utility.yul\":2680:2687   */\n  dup15\n    /* \"#utility.yul\":2671:2677   */\n  dup3\n    /* \"#utility.yul\":2660:2669   */\n  dup16\n    /* \"#utility.yul\":2656:2678   */\n  add\n    /* \"#utility.yul\":2624:2688   */\n  tag_40\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2614:2688   */\n  swap5\n  pop\n    /* \"#utility.yul\":2568:2698   */\n  pop\n    /* \"#utility.yul\":2737:2740   */\n  0x0100\n    /* \"#utility.yul\":2764:2828   */\n  tag_87\n    /* \"#utility.yul\":2820:2827   */\n  dup15\n    /* \"#utility.yul\":2811:2817   */\n  dup3\n    /* \"#utility.yul\":2800:2809   */\n  dup16\n    /* \"#utility.yul\":2796:2818   */\n  add\n    /* \"#utility.yul\":2764:2828   */\n  tag_40\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2754:2828   */\n  swap4\n  pop\n    /* \"#utility.yul\":2708:2838   */\n  pop\n    /* \"#utility.yul\":2877:2880   */\n  0x0120\n    /* \"#utility.yul\":2904:2968   */\n  tag_88\n    /* \"#utility.yul\":2960:2967   */\n  dup15\n    /* \"#utility.yul\":2951:2957   */\n  dup3\n    /* \"#utility.yul\":2940:2949   */\n  dup16\n    /* \"#utility.yul\":2936:2958   */\n  add\n    /* \"#utility.yul\":2904:2968   */\n  tag_44\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2894:2968   */\n  swap3\n  pop\n    /* \"#utility.yul\":2848:2978   */\n  pop\n    /* \"#utility.yul\":3017:3020   */\n  0x0140\n    /* \"#utility.yul\":3045:3109   */\n  tag_89\n    /* \"#utility.yul\":3101:3108   */\n  dup15\n    /* \"#utility.yul\":3092:3098   */\n  dup3\n    /* \"#utility.yul\":3081:3090   */\n  dup16\n    /* \"#utility.yul\":3077:3099   */\n  add\n    /* \"#utility.yul\":3045:3109   */\n  tag_40\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3034:3109   */\n  swap2\n  pop\n    /* \"#utility.yul\":2988:3119   */\n  pop\n    /* \"#utility.yul\":1205:3126   */\n  swap3\n  swap6\n  swap9\n  swap12\n  pop\n  swap3\n  swap6\n  swap9\n  swap12\n  swap1\n  swap4\n  swap7\n  swap10\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3132:3301   */\ntag_45:\n    /* \"#utility.yul\":3216:3227   */\n  0x00\n    /* \"#utility.yul\":3250:3256   */\n  dup3\n    /* \"#utility.yul\":3245:3248   */\n  dup3\n    /* \"#utility.yul\":3238:3257   */\n  mstore\n    /* \"#utility.yul\":3290:3294   */\n  0x20\n    /* \"#utility.yul\":3285:3288   */\n  dup3\n    /* \"#utility.yul\":3281:3295   */\n  add\n    /* \"#utility.yul\":3266:3295   */\n  swap1\n  pop\n    /* \"#utility.yul\":3132:3301   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3307:3527   */\ntag_46:\n    /* \"#utility.yul\":3447:3481   */\n  0x53746172742074696d65206d75737420626520696e2074686520667574757265\n    /* \"#utility.yul\":3443:3444   */\n  0x00\n    /* \"#utility.yul\":3435:3441   */\n  dup3\n    /* \"#utility.yul\":3431:3445   */\n  add\n    /* \"#utility.yul\":3424:3482   */\n  mstore\n    /* \"#utility.yul\":3516:3519   */\n  0x2e00000000000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3511:3513   */\n  0x20\n    /* \"#utility.yul\":3503:3509   */\n  dup3\n    /* \"#utility.yul\":3499:3514   */\n  add\n    /* \"#utility.yul\":3492:3520   */\n  mstore\n    /* \"#utility.yul\":3307:3527   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3899   */\ntag_47:\n    /* \"#utility.yul\":3675:3678   */\n  0x00\n    /* \"#utility.yul\":3696:3763   */\n  tag_93\n    /* \"#utility.yul\":3760:3762   */\n  0x21\n    /* \"#utility.yul\":3755:3758   */\n  dup4\n    /* \"#utility.yul\":3696:3763   */\n  tag_45\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3689:3763   */\n  swap2\n  pop\n    /* \"#utility.yul\":3772:3865   */\n  tag_94\n    /* \"#utility.yul\":3861:3864   */\n  dup3\n    /* \"#utility.yul\":3772:3865   */\n  tag_46\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3890:3892   */\n  0x40\n    /* \"#utility.yul\":3885:3888   */\n  dup3\n    /* \"#utility.yul\":3881:3893   */\n  add\n    /* \"#utility.yul\":3874:3893   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3899   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3905:4324   */\ntag_16:\n    /* \"#utility.yul\":4071:4075   */\n  0x00\n    /* \"#utility.yul\":4109:4111   */\n  0x20\n    /* \"#utility.yul\":4098:4107   */\n  dup3\n    /* \"#utility.yul\":4094:4112   */\n  add\n    /* \"#utility.yul\":4086:4112   */\n  swap1\n  pop\n    /* \"#utility.yul\":4158:4167   */\n  dup2\n    /* \"#utility.yul\":4152:4156   */\n  dup2\n    /* \"#utility.yul\":4148:4168   */\n  sub\n    /* \"#utility.yul\":4144:4145   */\n  0x00\n    /* \"#utility.yul\":4133:4142   */\n  dup4\n    /* \"#utility.yul\":4129:4146   */\n  add\n    /* \"#utility.yul\":4122:4169   */\n  mstore\n    /* \"#utility.yul\":4186:4317   */\n  tag_96\n    /* \"#utility.yul\":4312:4316   */\n  dup2\n    /* \"#utility.yul\":4186:4317   */\n  tag_47\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4178:4317   */\n  swap1\n  pop\n    /* \"#utility.yul\":3905:4324   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4330:4558   */\ntag_48:\n    /* \"#utility.yul\":4470:4504   */\n  0x456e642074696d65206d7573742062652067726561746572207468616e207374\n    /* \"#utility.yul\":4466:4467   */\n  0x00\n    /* \"#utility.yul\":4458:4464   */\n  dup3\n    /* \"#utility.yul\":4454:4468   */\n  add\n    /* \"#utility.yul\":4447:4505   */\n  mstore\n    /* \"#utility.yul\":4539:4550   */\n  0x6172742074696d652e0000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4534:4536   */\n  0x20\n    /* \"#utility.yul\":4526:4532   */\n  dup3\n    /* \"#utility.yul\":4522:4537   */\n  add\n    /* \"#utility.yul\":4515:4551   */\n  mstore\n    /* \"#utility.yul\":4330:4558   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4564:4930   */\ntag_49:\n    /* \"#utility.yul\":4706:4709   */\n  0x00\n    /* \"#utility.yul\":4727:4794   */\n  tag_99\n    /* \"#utility.yul\":4791:4793   */\n  0x29\n    /* \"#utility.yul\":4786:4789   */\n  dup4\n    /* \"#utility.yul\":4727:4794   */\n  tag_45\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4720:4794   */\n  swap2\n  pop\n    /* \"#utility.yul\":4803:4896   */\n  tag_100\n    /* \"#utility.yul\":4892:4895   */\n  dup3\n    /* \"#utility.yul\":4803:4896   */\n  tag_48\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4921:4923   */\n  0x40\n    /* \"#utility.yul\":4916:4919   */\n  dup3\n    /* \"#utility.yul\":4912:4924   */\n  add\n    /* \"#utility.yul\":4905:4924   */\n  swap1\n  pop\n    /* \"#utility.yul\":4564:4930   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4936:5355   */\ntag_19:\n    /* \"#utility.yul\":5102:5106   */\n  0x00\n    /* \"#utility.yul\":5140:5142   */\n  0x20\n    /* \"#utility.yul\":5129:5138   */\n  dup3\n    /* \"#utility.yul\":5125:5143   */\n  add\n    /* \"#utility.yul\":5117:5143   */\n  swap1\n  pop\n    /* \"#utility.yul\":5189:5198   */\n  dup2\n    /* \"#utility.yul\":5183:5187   */\n  dup2\n    /* \"#utility.yul\":5179:5199   */\n  sub\n    /* \"#utility.yul\":5175:5176   */\n  0x00\n    /* \"#utility.yul\":5164:5173   */\n  dup4\n    /* \"#utility.yul\":5160:5177   */\n  add\n    /* \"#utility.yul\":5153:5200   */\n  mstore\n    /* \"#utility.yul\":5217:5348   */\n  tag_102\n    /* \"#utility.yul\":5343:5347   */\n  dup2\n    /* \"#utility.yul\":5217:5348   */\n  tag_49\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5209:5348   */\n  swap1\n  pop\n    /* \"#utility.yul\":4936:5355   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5361:5588   */\ntag_50:\n    /* \"#utility.yul\":5501:5535   */\n  0x45746865727320746f2072616973652073686f756c6420626520677265617465\n    /* \"#utility.yul\":5497:5498   */\n  0x00\n    /* \"#utility.yul\":5489:5495   */\n  dup3\n    /* \"#utility.yul\":5485:5499   */\n  add\n    /* \"#utility.yul\":5478:5536   */\n  mstore\n    /* \"#utility.yul\":5570:5580   */\n  0x72207468616e2030000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5565:5567   */\n  0x20\n    /* \"#utility.yul\":5557:5563   */\n  dup3\n    /* \"#utility.yul\":5553:5568   */\n  add\n    /* \"#utility.yul\":5546:5581   */\n  mstore\n    /* \"#utility.yul\":5361:5588   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5594:5960   */\ntag_51:\n    /* \"#utility.yul\":5736:5739   */\n  0x00\n    /* \"#utility.yul\":5757:5824   */\n  tag_105\n    /* \"#utility.yul\":5821:5823   */\n  0x28\n    /* \"#utility.yul\":5816:5819   */\n  dup4\n    /* \"#utility.yul\":5757:5824   */\n  tag_45\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5750:5824   */\n  swap2\n  pop\n    /* \"#utility.yul\":5833:5926   */\n  tag_106\n    /* \"#utility.yul\":5922:5925   */\n  dup3\n    /* \"#utility.yul\":5833:5926   */\n  tag_50\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5951:5953   */\n  0x40\n    /* \"#utility.yul\":5946:5949   */\n  dup3\n    /* \"#utility.yul\":5942:5954   */\n  add\n    /* \"#utility.yul\":5935:5954   */\n  swap1\n  pop\n    /* \"#utility.yul\":5594:5960   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5966:6385   */\ntag_22:\n    /* \"#utility.yul\":6132:6136   */\n  0x00\n    /* \"#utility.yul\":6170:6172   */\n  0x20\n    /* \"#utility.yul\":6159:6168   */\n  dup3\n    /* \"#utility.yul\":6155:6173   */\n  add\n    /* \"#utility.yul\":6147:6173   */\n  swap1\n  pop\n    /* \"#utility.yul\":6219:6228   */\n  dup2\n    /* \"#utility.yul\":6213:6217   */\n  dup2\n    /* \"#utility.yul\":6209:6229   */\n  sub\n    /* \"#utility.yul\":6205:6206   */\n  0x00\n    /* \"#utility.yul\":6194:6203   */\n  dup4\n    /* \"#utility.yul\":6190:6207   */\n  add\n    /* \"#utility.yul\":6183:6230   */\n  mstore\n    /* \"#utility.yul\":6247:6378   */\n  tag_108\n    /* \"#utility.yul\":6373:6377   */\n  dup2\n    /* \"#utility.yul\":6247:6378   */\n  tag_51\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":6239:6378   */\n  swap1\n  pop\n    /* \"#utility.yul\":5966:6385   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6391:6633   */\ntag_52:\n    /* \"#utility.yul\":6531:6565   */\n  0x45746865727320746f2072616973652073686f756c6420626520677265617465\n    /* \"#utility.yul\":6527:6528   */\n  0x00\n    /* \"#utility.yul\":6519:6525   */\n  dup3\n    /* \"#utility.yul\":6515:6529   */\n  add\n    /* \"#utility.yul\":6508:6566   */\n  mstore\n    /* \"#utility.yul\":6600:6625   */\n  0x72207468616e20726566756e64207468726573686f6c64000000000000000000\n    /* \"#utility.yul\":6595:6597   */\n  0x20\n    /* \"#utility.yul\":6587:6593   */\n  dup3\n    /* \"#utility.yul\":6583:6598   */\n  add\n    /* \"#utility.yul\":6576:6626   */\n  mstore\n    /* \"#utility.yul\":6391:6633   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6639:7005   */\ntag_53:\n    /* \"#utility.yul\":6781:6784   */\n  0x00\n    /* \"#utility.yul\":6802:6869   */\n  tag_111\n    /* \"#utility.yul\":6866:6868   */\n  0x37\n    /* \"#utility.yul\":6861:6864   */\n  dup4\n    /* \"#utility.yul\":6802:6869   */\n  tag_45\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":6795:6869   */\n  swap2\n  pop\n    /* \"#utility.yul\":6878:6971   */\n  tag_112\n    /* \"#utility.yul\":6967:6970   */\n  dup3\n    /* \"#utility.yul\":6878:6971   */\n  tag_52\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":6996:6998   */\n  0x40\n    /* \"#utility.yul\":6991:6994   */\n  dup3\n    /* \"#utility.yul\":6987:6999   */\n  add\n    /* \"#utility.yul\":6980:6999   */\n  swap1\n  pop\n    /* \"#utility.yul\":6639:7005   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7011:7430   */\ntag_25:\n    /* \"#utility.yul\":7177:7181   */\n  0x00\n    /* \"#utility.yul\":7215:7217   */\n  0x20\n    /* \"#utility.yul\":7204:7213   */\n  dup3\n    /* \"#utility.yul\":7200:7218   */\n  add\n    /* \"#utility.yul\":7192:7218   */\n  swap1\n  pop\n    /* \"#utility.yul\":7264:7273   */\n  dup2\n    /* \"#utility.yul\":7258:7262   */\n  dup2\n    /* \"#utility.yul\":7254:7274   */\n  sub\n    /* \"#utility.yul\":7250:7251   */\n  0x00\n    /* \"#utility.yul\":7239:7248   */\n  dup4\n    /* \"#utility.yul\":7235:7252   */\n  add\n    /* \"#utility.yul\":7228:7275   */\n  mstore\n    /* \"#utility.yul\":7292:7423   */\n  tag_114\n    /* \"#utility.yul\":7418:7422   */\n  dup2\n    /* \"#utility.yul\":7292:7423   */\n  tag_53\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":7284:7423   */\n  swap1\n  pop\n    /* \"#utility.yul\":7011:7430   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7436:7666   */\ntag_54:\n    /* \"#utility.yul\":7576:7610   */\n  0x4d696e696d756d20636f6d6d69746d656e742073686f756c6420626520677265\n    /* \"#utility.yul\":7572:7573   */\n  0x00\n    /* \"#utility.yul\":7564:7570   */\n  dup3\n    /* \"#utility.yul\":7560:7574   */\n  add\n    /* \"#utility.yul\":7553:7611   */\n  mstore\n    /* \"#utility.yul\":7645:7658   */\n  0x61746572207468616e2030000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7640:7642   */\n  0x20\n    /* \"#utility.yul\":7632:7638   */\n  dup3\n    /* \"#utility.yul\":7628:7643   */\n  add\n    /* \"#utility.yul\":7621:7659   */\n  mstore\n    /* \"#utility.yul\":7436:7666   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7672:8038   */\ntag_55:\n    /* \"#utility.yul\":7814:7817   */\n  0x00\n    /* \"#utility.yul\":7835:7902   */\n  tag_117\n    /* \"#utility.yul\":7899:7901   */\n  0x2b\n    /* \"#utility.yul\":7894:7897   */\n  dup4\n    /* \"#utility.yul\":7835:7902   */\n  tag_45\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":7828:7902   */\n  swap2\n  pop\n    /* \"#utility.yul\":7911:8004   */\n  tag_118\n    /* \"#utility.yul\":8000:8003   */\n  dup3\n    /* \"#utility.yul\":7911:8004   */\n  tag_54\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":8029:8031   */\n  0x40\n    /* \"#utility.yul\":8024:8027   */\n  dup3\n    /* \"#utility.yul\":8020:8032   */\n  add\n    /* \"#utility.yul\":8013:8032   */\n  swap1\n  pop\n    /* \"#utility.yul\":7672:8038   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8044:8463   */\ntag_28:\n    /* \"#utility.yul\":8210:8214   */\n  0x00\n    /* \"#utility.yul\":8248:8250   */\n  0x20\n    /* \"#utility.yul\":8237:8246   */\n  dup3\n    /* \"#utility.yul\":8233:8251   */\n  add\n    /* \"#utility.yul\":8225:8251   */\n  swap1\n  pop\n    /* \"#utility.yul\":8297:8306   */\n  dup2\n    /* \"#utility.yul\":8291:8295   */\n  dup2\n    /* \"#utility.yul\":8287:8307   */\n  sub\n    /* \"#utility.yul\":8283:8284   */\n  0x00\n    /* \"#utility.yul\":8272:8281   */\n  dup4\n    /* \"#utility.yul\":8268:8285   */\n  add\n    /* \"#utility.yul\":8261:8308   */\n  mstore\n    /* \"#utility.yul\":8325:8456   */\n  tag_120\n    /* \"#utility.yul\":8451:8455   */\n  dup2\n    /* \"#utility.yul\":8325:8456   */\n  tag_55\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":8317:8456   */\n  swap1\n  pop\n    /* \"#utility.yul\":8044:8463   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8469:8760   */\ntag_56:\n    /* \"#utility.yul\":8609:8643   */\n  0x4d6178696d756d20636f6d6d69746d656e742073686f756c6420626520677265\n    /* \"#utility.yul\":8605:8606   */\n  0x00\n    /* \"#utility.yul\":8597:8603   */\n  dup3\n    /* \"#utility.yul\":8593:8607   */\n  add\n    /* \"#utility.yul\":8586:8644   */\n  mstore\n    /* \"#utility.yul\":8678:8712   */\n  0x61746572206f7220657175616c20746f206d696e696d756d20636f6d6d69746d\n    /* \"#utility.yul\":8673:8675   */\n  0x20\n    /* \"#utility.yul\":8665:8671   */\n  dup3\n    /* \"#utility.yul\":8661:8676   */\n  add\n    /* \"#utility.yul\":8654:8713   */\n  mstore\n    /* \"#utility.yul\":8747:8752   */\n  0x656e740000000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8742:8744   */\n  0x40\n    /* \"#utility.yul\":8734:8740   */\n  dup3\n    /* \"#utility.yul\":8730:8745   */\n  add\n    /* \"#utility.yul\":8723:8753   */\n  mstore\n    /* \"#utility.yul\":8469:8760   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8766:9132   */\ntag_57:\n    /* \"#utility.yul\":8908:8911   */\n  0x00\n    /* \"#utility.yul\":8929:8996   */\n  tag_123\n    /* \"#utility.yul\":8993:8995   */\n  0x43\n    /* \"#utility.yul\":8988:8991   */\n  dup4\n    /* \"#utility.yul\":8929:8996   */\n  tag_45\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":8922:8996   */\n  swap2\n  pop\n    /* \"#utility.yul\":9005:9098   */\n  tag_124\n    /* \"#utility.yul\":9094:9097   */\n  dup3\n    /* \"#utility.yul\":9005:9098   */\n  tag_56\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":9123:9125   */\n  0x60\n    /* \"#utility.yul\":9118:9121   */\n  dup3\n    /* \"#utility.yul\":9114:9126   */\n  add\n    /* \"#utility.yul\":9107:9126   */\n  swap1\n  pop\n    /* \"#utility.yul\":8766:9132   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9138:9557   */\ntag_31:\n    /* \"#utility.yul\":9304:9308   */\n  0x00\n    /* \"#utility.yul\":9342:9344   */\n  0x20\n    /* \"#utility.yul\":9331:9340   */\n  dup3\n    /* \"#utility.yul\":9327:9345   */\n  add\n    /* \"#utility.yul\":9319:9345   */\n  swap1\n  pop\n    /* \"#utility.yul\":9391:9400   */\n  dup2\n    /* \"#utility.yul\":9385:9389   */\n  dup2\n    /* \"#utility.yul\":9381:9401   */\n  sub\n    /* \"#utility.yul\":9377:9378   */\n  0x00\n    /* \"#utility.yul\":9366:9375   */\n  dup4\n    /* \"#utility.yul\":9362:9379   */\n  add\n    /* \"#utility.yul\":9355:9402   */\n  mstore\n    /* \"#utility.yul\":9419:9550   */\n  tag_126\n    /* \"#utility.yul\":9545:9549   */\n  dup2\n    /* \"#utility.yul\":9419:9550   */\n  tag_57\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":9411:9550   */\n  swap1\n  pop\n    /* \"#utility.yul\":9138:9557   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"launchpad/ico.sol\":48771:60797  contract OverflowICO is Ownable, ReentrancyGuard {... */\ntag_32:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  mload(0x0160)\n  mload(0x0180)\n  mload(0x01a0)\n  mload(0x01c0)\n  mload(0x01e0)\n  mload(0x0200)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x2e146e4054721a17b0bcbf76ec43b6f46a05beded7f5d79154519b5b8d21cac9\")\n  0x00\n  assignImmutable(\"0xa713e8a8872bb0155cea7e4a309a3186c8dd5f960e594c89246d1c2da55a60c5\")\n  0x00\n  assignImmutable(\"0x371700833a35d5844ebee172e3abba82802265d50654e653968bcfaaf1848fe9\")\n  0x00\n  assignImmutable(\"0xe9485078fd916cbeef4a0222eca894f90e40b3ef1458ce4ae1a7bb4a3bb4c8b7\")\n  0x00\n  assignImmutable(\"0xed634dea044fe92f6d8c9612c3844c4951054c5417a8e35c842720c22633a04d\")\n  0x00\n  assignImmutable(\"0x7193ba2649120c030b7e19c26ca270a26287fe4420fb922543ecab5a52a96372\")\n  0x00\n  assignImmutable(\"0x08284d1a615d458bb1a1970eb00419a577a84c5d2d84d81fbf2dc144a0f2c51f\")\n  0x00\n  assignImmutable(\"0x88a18f158b0c6b06eb886632f103fa3830edd15f4c0dfbf4f54521a0435a69b6\")\n  0x00\n  assignImmutable(\"0xca2794e0ef7228796d763d1c5c1add225921900f2287518a82d887536e703022\")\n  0x00\n  assignImmutable(\"0x7e907fbe90f02d771bd71353882a45266d04db8e6d102752ddad0ae3bde80b4d\")\n  0x00\n  assignImmutable(\"0xe173cdf51dd014ef27b36735c7ab5bd65657319d4a8710b41c74babbefc8027a\")\n  0x00\n  assignImmutable(\"0xde9ee2313c098c937c7896d2855ad10f2c7024da9f5ce363ad04fa3542c5ca58\")\n  0x00\n  assignImmutable(\"0xbf6f835d95322ea2fd9dfa6b25c8d7515040c169d9453c90b384510eaa64a886\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"launchpad/ico.sol\":48771:60797  contract OverflowICO is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70d5ae05\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x94ef7e62\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xbef4876b\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xbef4876b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd56b2889\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xe2099438\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xe8fcf723\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x94ef7e62\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa8ea6f4c\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x78e97925\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x7f649783\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8e05fb74\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x70d5ae05\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x72da776e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x78bb86d3\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x3a3ab672\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x4d412357\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x4d412357\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x4ec01774\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x548db174\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x599e10ce\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x3a3ab672\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3c7a3aff\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3d956691\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x483383c8\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x1f2698ab\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x1f2698ab\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2bcbf7cd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3197cbb6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x32acd355\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x01eaaec4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1048ab28\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x12adecda\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x16fc4869\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"launchpad/ico.sol\":58292:58796  function claim2() external nonReentrant {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"launchpad/ico.sol\":49722:49771  mapping(address => uint256) public finalEmissions */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":54285:55394  function simulateClaim() external returns (uint256, uint256, uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":49064:49104  uint256 public immutable refundThreshold */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":49463:49482  bool public started */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":49379:49413  uint256 public immutable minCommit */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":49197:49229  uint256 public immutable endTime */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":49019:49057  uint256 public immutable ethersToRaise */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":60653:60757  function isOnWhitelist(address user) public view returns(bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":53557:54277  function commit() external payable nonReentrant {... */\n    tag_12:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      stop\n        /* \"launchpad/ico.sol\":48975:49012  uint256 public immutable tokensToSell */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":49420:49454  uint256 public immutable maxCommit */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":49111:49149  uint256 public immutable totalEmission */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":56558:58284  function claim() external nonReentrant returns (uint256, uint256, uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":49778:49824  mapping(address => uint256) public finalTokens */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":60414:60645  function removeFromWhitelist(address[] calldata toRemoveAddresses)... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n    tag_111:\n      stop\n        /* \"launchpad/ico.sol\":49665:49715  mapping(address => uint256) public missedEmissions */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":49279:49315  address public immutable burnAddress */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":24266:24369  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      stop\n        /* \"launchpad/ico.sol\":48890:48924  IERC20 public immutable salesToken */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":49574:49605  uint256 public totalCommitments */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":49156:49190  uint256 public immutable startTime */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":60132:60350  function addToWhitelist(address[] calldata toAddAddresses) ... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      stop\n        /* \"launchpad/ico.sol\":23618:23705  function owner() public view virtual returns (address) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":49236:49272  uint256 public immutable receiveTime */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":55402:56548  function simulateClaimNoUpdate() external view returns (uint256, uint256, uint256, uint256) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_154\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      tag_156\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":50125:50166  mapping(address => bool) public whitelist */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_159\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":49322:49370  uint256 public immutable emissionTokenSaleAmount */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      tag_166\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":53194:53549  function start() external onlyOwner {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_168\n      tag_169\n      jump\t// in\n    tag_168:\n      stop\n        /* \"launchpad/ico.sol\":49489:49509  bool public finished */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      tag_173\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":58804:60073  function finish() external onlyOwner {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      tag_175\n      tag_176\n      jump\t// in\n    tag_175:\n      stop\n        /* \"launchpad/ico.sol\":48931:48968  IERC20 public immutable emissionToken */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      tag_178\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      tag_180\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":49612:49658  mapping(address => uint256) public commitments */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      tag_182\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_183:\n      tag_184\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      tag_185\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/ico.sol\":24524:24725  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      tag_187\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_188\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_188:\n      tag_189\n      jump\t// in\n    tag_187:\n      stop\n        /* \"launchpad/ico.sol\":58292:58796  function claim2() external nonReentrant {... */\n    tag_48:\n        /* \"launchpad/ico.sol\":21062:21083  _nonReentrantBefore() */\n      tag_191\n        /* \"launchpad/ico.sol\":21062:21081  _nonReentrantBefore */\n      tag_192\n        /* \"launchpad/ico.sol\":21062:21083  _nonReentrantBefore() */\n      jump\t// in\n    tag_191:\n        /* \"launchpad/ico.sol\":58370:58381  receiveTime */\n      immutable(\"0xed634dea044fe92f6d8c9612c3844c4951054c5417a8e35c842720c22633a04d\")\n        /* \"launchpad/ico.sol\":58351:58366  block.timestamp */\n      timestamp\n        /* \"launchpad/ico.sol\":58351:58381  block.timestamp >= receiveTime */\n      lt\n      iszero\n        /* \"launchpad/ico.sol\":58343:58403  require(block.timestamp >= receiveTime, \"not claimable yet\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"launchpad/ico.sol\":58414:58424  uint256 a1 */\n      0x00\n        /* \"launchpad/ico.sol\":58427:58438  finalTokens */\n      0x09\n        /* \"launchpad/ico.sol\":58427:58450  finalTokens[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":58439:58449  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":58427:58450  finalTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":58414:58450  uint256 a1 = finalTokens[msg.sender] */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":58461:58471  uint256 a2 */\n      0x00\n        /* \"launchpad/ico.sol\":58474:58488  finalEmissions */\n      0x08\n        /* \"launchpad/ico.sol\":58474:58500  finalEmissions[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":58489:58499  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":58474:58500  finalEmissions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":58461:58500  uint256 a2 = finalEmissions[msg.sender] */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":58511:58521  uint256 a3 */\n      0x00\n        /* \"launchpad/ico.sol\":58550:58551  3 */\n      0x03\n        /* \"launchpad/ico.sol\":58524:58535  finalTokens */\n      0x09\n        /* \"launchpad/ico.sol\":58524:58547  finalTokens[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":58536:58546  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":58524:58547  finalTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":58524:58551  finalTokens[msg.sender] / 3 */\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"launchpad/ico.sol\":58511:58551  uint256 a3 = finalTokens[msg.sender] / 3 */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":58590:58591  0 */\n      0x00\n        /* \"launchpad/ico.sol\":58564:58575  finalTokens */\n      0x09\n        /* \"launchpad/ico.sol\":58564:58587  finalTokens[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":58576:58586  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":58564:58587  finalTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"launchpad/ico.sol\":58564:58591  finalTokens[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":58631:58632  0 */\n      0x00\n        /* \"launchpad/ico.sol\":58602:58616  finalEmissions */\n      0x08\n        /* \"launchpad/ico.sol\":58602:58628  finalEmissions[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":58617:58627  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":58602:58628  finalEmissions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"launchpad/ico.sol\":58602:58632  finalEmissions[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":58645:58684  salesToken.safeTransfer(msg.sender, a1) */\n      tag_199\n        /* \"launchpad/ico.sol\":58669:58679  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":58681:58683  a1 */\n      dup5\n        /* \"launchpad/ico.sol\":58645:58655  salesToken */\n      immutable(\"0xbf6f835d95322ea2fd9dfa6b25c8d7515040c169d9453c90b384510eaa64a886\")\n        /* \"launchpad/ico.sol\":58645:58668  salesToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_200\n      swap1\n        /* \"launchpad/ico.sol\":58645:58684  salesToken.safeTransfer(msg.sender, a1) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"launchpad/ico.sol\":58695:58742  emissionToken.safeTransfer(msg.sender, a2 + a3) */\n      tag_201\n        /* \"launchpad/ico.sol\":58722:58732  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":58739:58741  a3 */\n      dup3\n        /* \"launchpad/ico.sol\":58734:58736  a2 */\n      dup5\n        /* \"launchpad/ico.sol\":58734:58741  a2 + a3 */\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"launchpad/ico.sol\":58695:58708  emissionToken */\n      immutable(\"0xde9ee2313c098c937c7896d2855ad10f2c7024da9f5ce363ad04fa3542c5ca58\")\n        /* \"launchpad/ico.sol\":58695:58721  emissionToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_200\n      swap1\n        /* \"launchpad/ico.sol\":58695:58742  emissionToken.safeTransfer(msg.sender, a2 + a3) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"launchpad/ico.sol\":58765:58775  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":58758:58788  Claim2(msg.sender, a1, a2, a3) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x98658f77a1c9013bc3a00213385d7b07de0435b7b3b3023a43c66b91e05566c2\n        /* \"launchpad/ico.sol\":58777:58779  a1 */\n      dup5\n        /* \"launchpad/ico.sol\":58781:58783  a2 */\n      dup5\n        /* \"launchpad/ico.sol\":58785:58787  a3 */\n      dup5\n        /* \"launchpad/ico.sol\":58758:58788  Claim2(msg.sender, a1, a2, a3) */\n      mload(0x40)\n      tag_204\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"launchpad/ico.sol\":58332:58796  {... */\n      pop\n      pop\n      pop\n        /* \"launchpad/ico.sol\":21106:21126  _nonReentrantAfter() */\n      tag_205\n        /* \"launchpad/ico.sol\":21106:21124  _nonReentrantAfter */\n      tag_206\n        /* \"launchpad/ico.sol\":21106:21126  _nonReentrantAfter() */\n      jump\t// in\n    tag_205:\n        /* \"launchpad/ico.sol\":58292:58796  function claim2() external nonReentrant {... */\n      jump\t// out\n        /* \"launchpad/ico.sol\":49722:49771  mapping(address => uint256) public finalEmissions */\n    tag_53:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":54285:55394  function simulateClaim() external returns (uint256, uint256, uint256) {... */\n    tag_58:\n        /* \"launchpad/ico.sol\":54328:54335  uint256 */\n      0x00\n        /* \"launchpad/ico.sol\":54337:54344  uint256 */\n      dup1\n        /* \"launchpad/ico.sol\":54346:54353  uint256 */\n      0x00\n        /* \"launchpad/ico.sol\":54366:54383  _updateEmission() */\n      tag_208\n        /* \"launchpad/ico.sol\":54366:54381  _updateEmission */\n      tag_209\n        /* \"launchpad/ico.sol\":54366:54383  _updateEmission() */\n      jump\t// in\n    tag_208:\n        /* \"launchpad/ico.sol\":54424:54425  0 */\n      0x00\n        /* \"launchpad/ico.sol\":54398:54409  finalTokens */\n      0x09\n        /* \"launchpad/ico.sol\":54398:54421  finalTokens[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":54410:54420  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":54398:54421  finalTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":54398:54425  finalTokens[msg.sender] > 0 */\n      gt\n        /* \"launchpad/ico.sol\":54394:54503  if (finalTokens[msg.sender] > 0)... */\n      iszero\n      tag_210\n      jumpi\n        /* \"launchpad/ico.sol\":54448:54449  0 */\n      0x00\n        /* \"launchpad/ico.sol\":54451:54462  finalTokens */\n      0x09\n        /* \"launchpad/ico.sol\":54451:54474  finalTokens[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":54463:54473  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":54451:54474  finalTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":54476:54490  finalEmissions */\n      0x08\n        /* \"launchpad/ico.sol\":54476:54502  finalEmissions[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":54491:54501  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":54476:54502  finalEmissions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":54440:54503  return (0, finalTokens[msg.sender], finalEmissions[msg.sender]) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_207)\n        /* \"launchpad/ico.sol\":54394:54503  if (finalTokens[msg.sender] > 0)... */\n    tag_210:\n        /* \"launchpad/ico.sol\":54547:54548  0 */\n      0x00\n        /* \"launchpad/ico.sol\":54520:54531  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":54520:54543  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":54532:54542  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":54520:54543  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":54520:54548  commitments[msg.sender] == 0 */\n      sub\n        /* \"launchpad/ico.sol\":54516:54566  if (commitments[msg.sender] == 0) return (0, 0, 0) */\n      tag_211\n      jumpi\n        /* \"launchpad/ico.sol\":54558:54559  0 */\n      0x00\n        /* \"launchpad/ico.sol\":54561:54562  0 */\n      dup1\n        /* \"launchpad/ico.sol\":54564:54565  0 */\n      0x00\n        /* \"launchpad/ico.sol\":54550:54566  return (0, 0, 0) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_207)\n        /* \"launchpad/ico.sol\":54516:54566  if (commitments[msg.sender] == 0) return (0, 0, 0) */\n    tag_211:\n        /* \"launchpad/ico.sol\":54603:54618  refundThreshold */\n      immutable(\"0xca2794e0ef7228796d763d1c5c1add225921900f2287518a82d887536e703022\")\n        /* \"launchpad/ico.sol\":54583:54599  totalCommitments */\n      sload(0x05)\n        /* \"launchpad/ico.sol\":54583:54618  totalCommitments >= refundThreshold */\n      lt\n        /* \"launchpad/ico.sol\":54579:55387  if (totalCommitments >= refundThreshold) {... */\n      tag_212\n      jumpi\n        /* \"launchpad/ico.sol\":54635:54656  uint256 ethersToSpend */\n      0x00\n        /* \"launchpad/ico.sol\":54659:54803  Math.min(... */\n      tag_213\n        /* \"launchpad/ico.sol\":54686:54697  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":54686:54709  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":54698:54708  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":54686:54709  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":54772:54788  totalCommitments */\n      sload(0x05)\n        /* \"launchpad/ico.sol\":54755:54768  ethersToRaise */\n      immutable(\"0x7e907fbe90f02d771bd71353882a45266d04db8e6d102752ddad0ae3bde80b4d\")\n        /* \"launchpad/ico.sol\":54729:54740  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":54729:54752  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":54741:54751  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":54729:54752  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":54729:54768  commitments[msg.sender] * ethersToRaise */\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"launchpad/ico.sol\":54728:54788  (commitments[msg.sender] * ethersToRaise) / totalCommitments */\n      tag_216\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_216:\n        /* \"launchpad/ico.sol\":54659:54667  Math.min */\n      tag_217\n        /* \"launchpad/ico.sol\":54659:54803  Math.min(... */\n      jump\t// in\n    tag_213:\n        /* \"launchpad/ico.sol\":54635:54803  uint256 ethersToSpend = Math.min(... */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":54818:54840  uint256 ethersToRefund */\n      0x00\n        /* \"launchpad/ico.sol\":54869:54882  ethersToSpend */\n      dup2\n        /* \"launchpad/ico.sol\":54843:54854  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":54843:54866  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":54855:54865  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":54843:54866  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":54843:54882  commitments[msg.sender] - ethersToSpend */\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"launchpad/ico.sol\":54818:54882  uint256 ethersToRefund = commitments[msg.sender] - ethersToSpend */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":54897:54920  uint256 tokensToReceive */\n      0x00\n        /* \"launchpad/ico.sol\":54973:54986  ethersToRaise */\n      immutable(\"0x7e907fbe90f02d771bd71353882a45266d04db8e6d102752ddad0ae3bde80b4d\")\n        /* \"launchpad/ico.sol\":54939:54952  ethersToSpend */\n      dup4\n        /* \"launchpad/ico.sol\":54924:54936  tokensToSell */\n      immutable(\"0xe173cdf51dd014ef27b36735c7ab5bd65657319d4a8710b41c74babbefc8027a\")\n        /* \"launchpad/ico.sol\":54924:54952  tokensToSell * ethersToSpend */\n      tag_220\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_220:\n        /* \"launchpad/ico.sol\":54923:54986  (tokensToSell * ethersToSpend) /... */\n      tag_221\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_221:\n        /* \"launchpad/ico.sol\":54897:54986  uint256 tokensToReceive = (tokensToSell * ethersToSpend) /... */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":55001:55017  uint256 emission */\n      0x00\n        /* \"launchpad/ico.sol\":55082:55097  missedEmissions */\n      0x07\n        /* \"launchpad/ico.sol\":55082:55109  missedEmissions[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":55098:55108  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":55082:55109  missedEmissions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":55020:55062  calculateEmission(commitments[msg.sender]) */\n      tag_222\n        /* \"launchpad/ico.sol\":55038:55049  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":55038:55061  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":55050:55060  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":55038:55061  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":55020:55037  calculateEmission */\n      tag_223\n        /* \"launchpad/ico.sol\":55020:55062  calculateEmission(commitments[msg.sender]) */\n      jump\t// in\n    tag_222:\n        /* \"launchpad/ico.sol\":55020:55109  calculateEmission(commitments[msg.sender]) -... */\n      tag_224\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_224:\n        /* \"launchpad/ico.sol\":55001:55109  uint256 emission = calculateEmission(commitments[msg.sender]) -... */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":55126:55157  uint256 emissionTokensToReceive */\n      0x00\n        /* \"launchpad/ico.sol\":55178:55179  3 */\n      0x03\n        /* \"launchpad/ico.sol\":55160:55175  tokensToReceive */\n      dup4\n        /* \"launchpad/ico.sol\":55160:55179  tokensToReceive / 3 */\n      tag_225\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_225:\n        /* \"launchpad/ico.sol\":55126:55179  uint256 emissionTokensToReceive = tokensToReceive / 3 */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":55204:55218  ethersToRefund */\n      dup4\n        /* \"launchpad/ico.sol\":55238:55261  emissionTokensToReceive */\n      dup2\n        /* \"launchpad/ico.sol\":55220:55235  tokensToReceive */\n      dup5\n        /* \"launchpad/ico.sol\":55220:55261  tokensToReceive + emissionTokensToReceive */\n      tag_226\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_226:\n        /* \"launchpad/ico.sol\":55263:55271  emission */\n      dup4\n        /* \"launchpad/ico.sol\":55196:55272  return (ethersToRefund, tokensToReceive + emissionTokensToReceive, emission) */\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_207)\n        /* \"launchpad/ico.sol\":54579:55387  if (totalCommitments >= refundThreshold) {... */\n    tag_212:\n        /* \"launchpad/ico.sol\":55305:55316  uint256 amt */\n      0x00\n        /* \"launchpad/ico.sol\":55319:55330  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":55319:55342  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":55331:55341  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":55319:55342  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":55305:55342  uint256 amt = commitments[msg.sender] */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":55365:55368  amt */\n      dup1\n        /* \"launchpad/ico.sol\":55370:55371  0 */\n      0x00\n        /* \"launchpad/ico.sol\":55373:55374  0 */\n      dup1\n        /* \"launchpad/ico.sol\":55357:55375  return (amt, 0, 0) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"launchpad/ico.sol\":54285:55394  function simulateClaim() external returns (uint256, uint256, uint256) {... */\n    tag_207:\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"launchpad/ico.sol\":49064:49104  uint256 public immutable refundThreshold */\n    tag_63:\n      immutable(\"0xca2794e0ef7228796d763d1c5c1add225921900f2287518a82d887536e703022\")\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":49463:49482  bool public started */\n    tag_67:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":49379:49413  uint256 public immutable minCommit */\n    tag_72:\n      immutable(\"0xa713e8a8872bb0155cea7e4a309a3186c8dd5f960e594c89246d1c2da55a60c5\")\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":49197:49229  uint256 public immutable endTime */\n    tag_76:\n      immutable(\"0x7193ba2649120c030b7e19c26ca270a26287fe4420fb922543ecab5a52a96372\")\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":49019:49057  uint256 public immutable ethersToRaise */\n    tag_80:\n      immutable(\"0x7e907fbe90f02d771bd71353882a45266d04db8e6d102752ddad0ae3bde80b4d\")\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":60653:60757  function isOnWhitelist(address user) public view returns(bool) {... */\n    tag_85:\n        /* \"launchpad/ico.sol\":60710:60714  bool */\n      0x00\n        /* \"launchpad/ico.sol\":60734:60743  whitelist */\n      0x0a\n        /* \"launchpad/ico.sol\":60734:60749  whitelist[user] */\n      0x00\n        /* \"launchpad/ico.sol\":60744:60748  user */\n      dup4\n        /* \"launchpad/ico.sol\":60734:60749  whitelist[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"launchpad/ico.sol\":60727:60749  return whitelist[user] */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":60653:60757  function isOnWhitelist(address user) public view returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":53557:54277  function commit() external payable nonReentrant {... */\n    tag_88:\n        /* \"launchpad/ico.sol\":21062:21083  _nonReentrantBefore() */\n      tag_230\n        /* \"launchpad/ico.sol\":21062:21081  _nonReentrantBefore */\n      tag_192\n        /* \"launchpad/ico.sol\":21062:21083  _nonReentrantBefore() */\n      jump\t// in\n    tag_230:\n        /* \"launchpad/ico.sol\":53616:53633  _updateEmission() */\n      tag_232\n        /* \"launchpad/ico.sol\":53616:53631  _updateEmission */\n      tag_209\n        /* \"launchpad/ico.sol\":53616:53633  _updateEmission() */\n      jump\t// in\n    tag_232:\n        /* \"launchpad/ico.sol\":53666:53673  started */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"launchpad/ico.sol\":53666:53722  started &&... */\n      dup1\n      iszero\n      tag_233\n      jumpi\n      pop\n        /* \"launchpad/ico.sol\":53713:53722  startTime */\n      immutable(\"0x08284d1a615d458bb1a1970eb00419a577a84c5d2d84d81fbf2dc144a0f2c51f\")\n        /* \"launchpad/ico.sol\":53694:53709  block.timestamp */\n      timestamp\n        /* \"launchpad/ico.sol\":53694:53722  block.timestamp >= startTime */\n      lt\n      iszero\n        /* \"launchpad/ico.sol\":53666:53722  started &&... */\n    tag_233:\n        /* \"launchpad/ico.sol\":53666:53768  started &&... */\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n        /* \"launchpad/ico.sol\":53761:53768  endTime */\n      immutable(\"0x7193ba2649120c030b7e19c26ca270a26287fe4420fb922543ecab5a52a96372\")\n        /* \"launchpad/ico.sol\":53743:53758  block.timestamp */\n      timestamp\n        /* \"launchpad/ico.sol\":53743:53768  block.timestamp < endTime */\n      lt\n        /* \"launchpad/ico.sol\":53666:53768  started &&... */\n    tag_234:\n        /* \"launchpad/ico.sol\":53644:53842  require(... */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"launchpad/ico.sol\":53914:53923  msg.value */\n      callvalue\n        /* \"launchpad/ico.sol\":53888:53899  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":53888:53911  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":53900:53910  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":53888:53911  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":53888:53923  commitments[msg.sender] + msg.value */\n      tag_238\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_238:\n        /* \"launchpad/ico.sol\":53875:53884  minCommit */\n      immutable(\"0xa713e8a8872bb0155cea7e4a309a3186c8dd5f960e594c89246d1c2da55a60c5\")\n        /* \"launchpad/ico.sol\":53875:53923  minCommit <= commitments[msg.sender] + msg.value */\n      gt\n      iszero\n        /* \"launchpad/ico.sol\":53875:53992  minCommit <= commitments[msg.sender] + msg.value &&... */\n      dup1\n      iszero\n      tag_239\n      jumpi\n      pop\n        /* \"launchpad/ico.sol\":53983:53992  maxCommit */\n      immutable(\"0x2e146e4054721a17b0bcbf76ec43b6f46a05beded7f5d79154519b5b8d21cac9\")\n        /* \"launchpad/ico.sol\":53970:53979  msg.value */\n      callvalue\n        /* \"launchpad/ico.sol\":53944:53955  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":53944:53967  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":53956:53966  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":53944:53967  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":53944:53979  commitments[msg.sender] + msg.value */\n      tag_240\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_240:\n        /* \"launchpad/ico.sol\":53944:53992  commitments[msg.sender] + msg.value <= maxCommit */\n      gt\n      iszero\n        /* \"launchpad/ico.sol\":53875:53992  minCommit <= commitments[msg.sender] + msg.value &&... */\n    tag_239:\n        /* \"launchpad/ico.sol\":53853:54067  require(... */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"launchpad/ico.sol\":54105:54114  msg.value */\n      callvalue\n        /* \"launchpad/ico.sol\":54078:54089  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":54078:54101  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":54090:54100  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":54078:54101  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"launchpad/ico.sol\":54078:54114  commitments[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_244\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_244:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":54145:54154  msg.value */\n      callvalue\n        /* \"launchpad/ico.sol\":54125:54141  totalCommitments */\n      0x05\n      0x00\n        /* \"launchpad/ico.sol\":54125:54154  totalCommitments += msg.value */\n      dup3\n      dup3\n      sload\n      tag_245\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_245:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":54196:54224  calculateEmission(msg.value) */\n      tag_246\n        /* \"launchpad/ico.sol\":54214:54223  msg.value */\n      callvalue\n        /* \"launchpad/ico.sol\":54196:54213  calculateEmission */\n      tag_223\n        /* \"launchpad/ico.sol\":54196:54224  calculateEmission(msg.value) */\n      jump\t// in\n    tag_246:\n        /* \"launchpad/ico.sol\":54165:54180  missedEmissions */\n      0x07\n        /* \"launchpad/ico.sol\":54165:54192  missedEmissions[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":54181:54191  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":54165:54192  missedEmissions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"launchpad/ico.sol\":54165:54224  missedEmissions[msg.sender] += calculateEmission(msg.value) */\n      dup3\n      dup3\n      sload\n      tag_247\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_247:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":54247:54257  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":54240:54269  Commit(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5e1dd8c4451717d5ca4ffbefdada35e22e0871220b9ed9dd03a351f0938c5ed7\n        /* \"launchpad/ico.sol\":54259:54268  msg.value */\n      callvalue\n        /* \"launchpad/ico.sol\":54240:54269  Commit(msg.sender, msg.value) */\n      mload(0x40)\n      tag_248\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"launchpad/ico.sol\":21106:21126  _nonReentrantAfter() */\n      tag_249\n        /* \"launchpad/ico.sol\":21106:21124  _nonReentrantAfter */\n      tag_206\n        /* \"launchpad/ico.sol\":21106:21126  _nonReentrantAfter() */\n      jump\t// in\n    tag_249:\n        /* \"launchpad/ico.sol\":53557:54277  function commit() external payable nonReentrant {... */\n      jump\t// out\n        /* \"launchpad/ico.sol\":48975:49012  uint256 public immutable tokensToSell */\n    tag_91:\n      immutable(\"0xe173cdf51dd014ef27b36735c7ab5bd65657319d4a8710b41c74babbefc8027a\")\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":49420:49454  uint256 public immutable maxCommit */\n    tag_95:\n      immutable(\"0x2e146e4054721a17b0bcbf76ec43b6f46a05beded7f5d79154519b5b8d21cac9\")\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":49111:49149  uint256 public immutable totalEmission */\n    tag_99:\n      immutable(\"0x88a18f158b0c6b06eb886632f103fa3830edd15f4c0dfbf4f54521a0435a69b6\")\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":56558:58284  function claim() external nonReentrant returns (uint256, uint256, uint256) {... */\n    tag_103:\n        /* \"launchpad/ico.sol\":56606:56613  uint256 */\n      0x00\n        /* \"launchpad/ico.sol\":56615:56622  uint256 */\n      dup1\n        /* \"launchpad/ico.sol\":56624:56631  uint256 */\n      0x00\n        /* \"launchpad/ico.sol\":21062:21083  _nonReentrantBefore() */\n      tag_251\n        /* \"launchpad/ico.sol\":21062:21081  _nonReentrantBefore */\n      tag_192\n        /* \"launchpad/ico.sol\":21062:21083  _nonReentrantBefore() */\n      jump\t// in\n    tag_251:\n        /* \"launchpad/ico.sol\":56644:56661  _updateEmission() */\n      tag_253\n        /* \"launchpad/ico.sol\":56644:56659  _updateEmission */\n      tag_209\n        /* \"launchpad/ico.sol\":56644:56661  _updateEmission() */\n      jump\t// in\n    tag_253:\n        /* \"launchpad/ico.sol\":56712:56719  endTime */\n      immutable(\"0x7193ba2649120c030b7e19c26ca270a26287fe4420fb922543ecab5a52a96372\")\n        /* \"launchpad/ico.sol\":56694:56709  block.timestamp */\n      timestamp\n        /* \"launchpad/ico.sol\":56694:56719  block.timestamp > endTime */\n      gt\n        /* \"launchpad/ico.sol\":56672:56794  require(... */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"launchpad/ico.sol\":56853:56854  0 */\n      0x00\n        /* \"launchpad/ico.sol\":56827:56838  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":56827:56850  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":56839:56849  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":56827:56850  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":56827:56854  commitments[msg.sender] > 0 */\n      gt\n        /* \"launchpad/ico.sol\":56805:56915  require(... */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"launchpad/ico.sol\":56952:56967  refundThreshold */\n      immutable(\"0xca2794e0ef7228796d763d1c5c1add225921900f2287518a82d887536e703022\")\n        /* \"launchpad/ico.sol\":56932:56948  totalCommitments */\n      sload(0x05)\n        /* \"launchpad/ico.sol\":56932:56967  totalCommitments >= refundThreshold */\n      lt\n        /* \"launchpad/ico.sol\":56928:58277  if (totalCommitments >= refundThreshold) {... */\n      tag_260\n      jumpi\n        /* \"launchpad/ico.sol\":56984:57005  uint256 ethersToSpend */\n      0x00\n        /* \"launchpad/ico.sol\":57008:57152  Math.min(... */\n      tag_261\n        /* \"launchpad/ico.sol\":57035:57046  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":57035:57058  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":57047:57057  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":57035:57058  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":57121:57137  totalCommitments */\n      sload(0x05)\n        /* \"launchpad/ico.sol\":57104:57117  ethersToRaise */\n      immutable(\"0x7e907fbe90f02d771bd71353882a45266d04db8e6d102752ddad0ae3bde80b4d\")\n        /* \"launchpad/ico.sol\":57078:57089  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":57078:57101  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":57090:57100  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":57078:57101  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":57078:57117  commitments[msg.sender] * ethersToRaise */\n      tag_262\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_262:\n        /* \"launchpad/ico.sol\":57077:57137  (commitments[msg.sender] * ethersToRaise) / totalCommitments */\n      tag_263\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_263:\n        /* \"launchpad/ico.sol\":57008:57016  Math.min */\n      tag_217\n        /* \"launchpad/ico.sol\":57008:57152  Math.min(... */\n      jump\t// in\n    tag_261:\n        /* \"launchpad/ico.sol\":56984:57152  uint256 ethersToSpend = Math.min(... */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":57167:57189  uint256 ethersToRefund */\n      0x00\n        /* \"launchpad/ico.sol\":57218:57231  ethersToSpend */\n      dup2\n        /* \"launchpad/ico.sol\":57192:57203  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":57192:57215  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":57204:57214  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":57192:57215  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":57192:57231  commitments[msg.sender] - ethersToSpend */\n      tag_264\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_264:\n        /* \"launchpad/ico.sol\":57167:57231  uint256 ethersToRefund = commitments[msg.sender] - ethersToSpend */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":57246:57269  uint256 tokensToReceive */\n      0x00\n        /* \"launchpad/ico.sol\":57322:57335  ethersToRaise */\n      immutable(\"0x7e907fbe90f02d771bd71353882a45266d04db8e6d102752ddad0ae3bde80b4d\")\n        /* \"launchpad/ico.sol\":57288:57301  ethersToSpend */\n      dup4\n        /* \"launchpad/ico.sol\":57273:57285  tokensToSell */\n      immutable(\"0xe173cdf51dd014ef27b36735c7ab5bd65657319d4a8710b41c74babbefc8027a\")\n        /* \"launchpad/ico.sol\":57273:57301  tokensToSell * ethersToSpend */\n      tag_265\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_265:\n        /* \"launchpad/ico.sol\":57272:57335  (tokensToSell * ethersToSpend) /... */\n      tag_266\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_266:\n        /* \"launchpad/ico.sol\":57246:57335  uint256 tokensToReceive = (tokensToSell * ethersToSpend) /... */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":57350:57366  uint256 emission */\n      0x00\n        /* \"launchpad/ico.sol\":57431:57446  missedEmissions */\n      0x07\n        /* \"launchpad/ico.sol\":57431:57458  missedEmissions[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":57447:57457  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":57431:57458  missedEmissions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":57369:57411  calculateEmission(commitments[msg.sender]) */\n      tag_267\n        /* \"launchpad/ico.sol\":57387:57398  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":57387:57410  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":57399:57409  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":57387:57410  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":57369:57386  calculateEmission */\n      tag_223\n        /* \"launchpad/ico.sol\":57369:57411  calculateEmission(commitments[msg.sender]) */\n      jump\t// in\n    tag_267:\n        /* \"launchpad/ico.sol\":57369:57458  calculateEmission(commitments[msg.sender]) -... */\n      tag_268\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_268:\n        /* \"launchpad/ico.sol\":57350:57458  uint256 emission = calculateEmission(commitments[msg.sender]) -... */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":57504:57512  emission */\n      dup1\n        /* \"launchpad/ico.sol\":57473:57488  missedEmissions */\n      0x07\n        /* \"launchpad/ico.sol\":57473:57500  missedEmissions[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":57489:57499  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":57473:57500  missedEmissions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"launchpad/ico.sol\":57473:57512  missedEmissions[msg.sender] += emission */\n      dup3\n      dup3\n      sload\n      tag_269\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_269:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":57555:57556  0 */\n      0x00\n        /* \"launchpad/ico.sol\":57529:57540  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":57529:57552  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":57541:57551  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":57529:57552  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"launchpad/ico.sol\":57529:57556  commitments[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":57602:57610  emission */\n      dup1\n        /* \"launchpad/ico.sol\":57573:57587  finalEmissions */\n      0x08\n        /* \"launchpad/ico.sol\":57573:57599  finalEmissions[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":57588:57598  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":57573:57599  finalEmissions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"launchpad/ico.sol\":57573:57610  finalEmissions[msg.sender] = emission */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":57651:57666  tokensToReceive */\n      dup2\n        /* \"launchpad/ico.sol\":57625:57636  finalTokens */\n      0x09\n        /* \"launchpad/ico.sol\":57625:57648  finalTokens[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":57637:57647  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":57625:57648  finalTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"launchpad/ico.sol\":57625:57666  finalTokens[msg.sender] = tokensToReceive */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":57684:57696  bool success */\n      0x00\n        /* \"launchpad/ico.sol\":57702:57712  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":57702:57717  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"launchpad/ico.sol\":57725:57739  ethersToRefund */\n      dup5\n        /* \"launchpad/ico.sol\":57702:57744  msg.sender.call{value: ethersToRefund}(\"\") */\n      mload(0x40)\n      tag_270\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_274\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_273)\n    tag_274:\n      0x60\n      swap2\n      pop\n    tag_273:\n      pop\n        /* \"launchpad/ico.sol\":57683:57744  (bool success, ) = msg.sender.call{value: ethersToRefund}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":57767:57774  success */\n      dup1\n        /* \"launchpad/ico.sol\":57759:57803  require(success, \"Failed to transfer ether\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_275:\n        /* \"launchpad/ico.sol\":57829:57839  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":57823:57883  Claim(msg.sender, ethersToRefund, tokensToReceive, emission) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x45c072aa05b9853b5a993de7a28bc332ee01404a628cec1a23ce0f659f842ef1\n        /* \"launchpad/ico.sol\":57841:57855  ethersToRefund */\n      dup6\n        /* \"launchpad/ico.sol\":57857:57872  tokensToReceive */\n      dup6\n        /* \"launchpad/ico.sol\":57874:57882  emission */\n      dup6\n        /* \"launchpad/ico.sol\":57823:57883  Claim(msg.sender, ethersToRefund, tokensToReceive, emission) */\n      mload(0x40)\n      tag_278\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"launchpad/ico.sol\":57906:57920  ethersToRefund */\n      dup4\n        /* \"launchpad/ico.sol\":57922:57937  tokensToReceive */\n      dup4\n        /* \"launchpad/ico.sol\":57939:57947  emission */\n      dup4\n        /* \"launchpad/ico.sol\":57898:57948  return (ethersToRefund, tokensToReceive, emission) */\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_252)\n        /* \"launchpad/ico.sol\":56928:58277  if (totalCommitments >= refundThreshold) {... */\n    tag_260:\n        /* \"launchpad/ico.sol\":57981:57992  uint256 amt */\n      0x00\n        /* \"launchpad/ico.sol\":57995:58006  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":57995:58018  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":58007:58017  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":57995:58018  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":57981:58018  uint256 amt = commitments[msg.sender] */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":58059:58060  0 */\n      0x00\n        /* \"launchpad/ico.sol\":58033:58044  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":58033:58056  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":58045:58055  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":58033:58056  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"launchpad/ico.sol\":58033:58060  commitments[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":58076:58088  bool success */\n      0x00\n        /* \"launchpad/ico.sol\":58094:58104  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":58094:58109  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"launchpad/ico.sol\":58117:58120  amt */\n      dup3\n        /* \"launchpad/ico.sol\":58094:58125  msg.sender.call{value: amt}(\"\") */\n      mload(0x40)\n      tag_280\n      swap1\n      tag_271\n      jump\t// in\n    tag_280:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_283\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_282)\n    tag_283:\n      0x60\n      swap2\n      pop\n    tag_282:\n      pop\n        /* \"launchpad/ico.sol\":58075:58125  (bool success, ) = msg.sender.call{value: amt}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":58148:58155  success */\n      dup1\n        /* \"launchpad/ico.sol\":58140:58184  require(success, \"Failed to transfer ether\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap1\n      tag_277\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"launchpad/ico.sol\":58210:58220  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":58204:58232  Claim(msg.sender, amt, 0, 0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x45c072aa05b9853b5a993de7a28bc332ee01404a628cec1a23ce0f659f842ef1\n        /* \"launchpad/ico.sol\":58222:58225  amt */\n      dup4\n        /* \"launchpad/ico.sol\":58227:58228  0 */\n      0x00\n        /* \"launchpad/ico.sol\":58230:58231  0 */\n      dup1\n        /* \"launchpad/ico.sol\":58204:58232  Claim(msg.sender, amt, 0, 0) */\n      mload(0x40)\n      tag_286\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"launchpad/ico.sol\":58255:58258  amt */\n      dup2\n        /* \"launchpad/ico.sol\":58260:58261  0 */\n      0x00\n        /* \"launchpad/ico.sol\":58263:58264  0 */\n      dup1\n        /* \"launchpad/ico.sol\":58247:58265  return (amt, 0, 0) */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n        /* \"launchpad/ico.sol\":21094:21095  _ */\n    tag_252:\n        /* \"launchpad/ico.sol\":21106:21126  _nonReentrantAfter() */\n      tag_288\n        /* \"launchpad/ico.sol\":21106:21124  _nonReentrantAfter */\n      tag_206\n        /* \"launchpad/ico.sol\":21106:21126  _nonReentrantAfter() */\n      jump\t// in\n    tag_288:\n        /* \"launchpad/ico.sol\":56558:58284  function claim() external nonReentrant returns (uint256, uint256, uint256) {... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"launchpad/ico.sol\":49778:49824  mapping(address => uint256) public finalTokens */\n    tag_108:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":60414:60645  function removeFromWhitelist(address[] calldata toRemoveAddresses)... */\n    tag_114:\n        /* \"launchpad/ico.sol\":23504:23517  _checkOwner() */\n      tag_290\n        /* \"launchpad/ico.sol\":23504:23515  _checkOwner */\n      tag_291\n        /* \"launchpad/ico.sol\":23504:23517  _checkOwner() */\n      jump\t// in\n    tag_290:\n        /* \"launchpad/ico.sol\":60526:60532  uint i */\n      0x00\n        /* \"launchpad/ico.sol\":60521:60638  for (uint i = 0; i < toRemoveAddresses.length; i++) {... */\n    tag_293:\n        /* \"launchpad/ico.sol\":60542:60559  toRemoveAddresses */\n      dup3\n      dup3\n        /* \"launchpad/ico.sol\":60542:60566  toRemoveAddresses.length */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":60538:60539  i */\n      dup2\n        /* \"launchpad/ico.sol\":60538:60566  i < toRemoveAddresses.length */\n      lt\n        /* \"launchpad/ico.sol\":60521:60638  for (uint i = 0; i < toRemoveAddresses.length; i++) {... */\n      iszero\n      tag_294\n      jumpi\n        /* \"launchpad/ico.sol\":60595:60604  whitelist */\n      0x0a\n        /* \"launchpad/ico.sol\":60595:60626  whitelist[toRemoveAddresses[i]] */\n      0x00\n        /* \"launchpad/ico.sol\":60605:60622  toRemoveAddresses */\n      dup5\n      dup5\n        /* \"launchpad/ico.sol\":60623:60624  i */\n      dup5\n        /* \"launchpad/ico.sol\":60605:60625  toRemoveAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_296\n      jumpi\n      tag_297\n      tag_298\n      jump\t// in\n    tag_297:\n    tag_296:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_299\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_299:\n        /* \"launchpad/ico.sol\":60595:60626  whitelist[toRemoveAddresses[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"launchpad/ico.sol\":60588:60626  delete whitelist[toRemoveAddresses[i]] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"launchpad/ico.sol\":60568:60571  i++ */\n      dup1\n      dup1\n      tag_300\n      swap1\n      tag_301\n      jump\t// in\n    tag_300:\n      swap2\n      pop\n      pop\n        /* \"launchpad/ico.sol\":60521:60638  for (uint i = 0; i < toRemoveAddresses.length; i++) {... */\n      jump(tag_293)\n    tag_294:\n      pop\n        /* \"launchpad/ico.sol\":60414:60645  function removeFromWhitelist(address[] calldata toRemoveAddresses)... */\n      pop\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":49665:49715  mapping(address => uint256) public missedEmissions */\n    tag_118:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":49279:49315  address public immutable burnAddress */\n    tag_122:\n      immutable(\"0xe9485078fd916cbeef4a0222eca894f90e40b3ef1458ce4ae1a7bb4a3bb4c8b7\")\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":24266:24369  function renounceOwnership() public virtual onlyOwner {... */\n    tag_127:\n        /* \"launchpad/ico.sol\":23504:23517  _checkOwner() */\n      tag_303\n        /* \"launchpad/ico.sol\":23504:23515  _checkOwner */\n      tag_291\n        /* \"launchpad/ico.sol\":23504:23517  _checkOwner() */\n      jump\t// in\n    tag_303:\n        /* \"launchpad/ico.sol\":24331:24361  _transferOwnership(address(0)) */\n      tag_305\n        /* \"launchpad/ico.sol\":24358:24359  0 */\n      0x00\n        /* \"launchpad/ico.sol\":24331:24349  _transferOwnership */\n      tag_306\n        /* \"launchpad/ico.sol\":24331:24361  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_305:\n        /* \"launchpad/ico.sol\":24266:24369  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"launchpad/ico.sol\":48890:48924  IERC20 public immutable salesToken */\n    tag_130:\n      immutable(\"0xbf6f835d95322ea2fd9dfa6b25c8d7515040c169d9453c90b384510eaa64a886\")\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":49574:49605  uint256 public totalCommitments */\n    tag_135:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":49156:49190  uint256 public immutable startTime */\n    tag_139:\n      immutable(\"0x08284d1a615d458bb1a1970eb00419a577a84c5d2d84d81fbf2dc144a0f2c51f\")\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":60132:60350  function addToWhitelist(address[] calldata toAddAddresses) ... */\n    tag_144:\n        /* \"launchpad/ico.sol\":23504:23517  _checkOwner() */\n      tag_308\n        /* \"launchpad/ico.sol\":23504:23515  _checkOwner */\n      tag_291\n        /* \"launchpad/ico.sol\":23504:23517  _checkOwner() */\n      jump\t// in\n    tag_308:\n        /* \"launchpad/ico.sol\":60237:60243  uint i */\n      0x00\n        /* \"launchpad/ico.sol\":60232:60343  for (uint i = 0; i < toAddAddresses.length; i++) {... */\n    tag_310:\n        /* \"launchpad/ico.sol\":60253:60267  toAddAddresses */\n      dup3\n      dup3\n        /* \"launchpad/ico.sol\":60253:60274  toAddAddresses.length */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":60249:60250  i */\n      dup2\n        /* \"launchpad/ico.sol\":60249:60274  i < toAddAddresses.length */\n      lt\n        /* \"launchpad/ico.sol\":60232:60343  for (uint i = 0; i < toAddAddresses.length; i++) {... */\n      iszero\n      tag_311\n      jumpi\n        /* \"launchpad/ico.sol\":60327:60331  true */\n      0x01\n        /* \"launchpad/ico.sol\":60296:60305  whitelist */\n      0x0a\n        /* \"launchpad/ico.sol\":60296:60324  whitelist[toAddAddresses[i]] */\n      0x00\n        /* \"launchpad/ico.sol\":60306:60320  toAddAddresses */\n      dup6\n      dup6\n        /* \"launchpad/ico.sol\":60321:60322  i */\n      dup6\n        /* \"launchpad/ico.sol\":60306:60323  toAddAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_313\n      jumpi\n      tag_314\n      tag_298\n      jump\t// in\n    tag_314:\n    tag_313:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_315\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_315:\n        /* \"launchpad/ico.sol\":60296:60324  whitelist[toAddAddresses[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"launchpad/ico.sol\":60296:60331  whitelist[toAddAddresses[i]] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":60276:60279  i++ */\n      dup1\n      dup1\n      tag_316\n      swap1\n      tag_301\n      jump\t// in\n    tag_316:\n      swap2\n      pop\n      pop\n        /* \"launchpad/ico.sol\":60232:60343  for (uint i = 0; i < toAddAddresses.length; i++) {... */\n      jump(tag_310)\n    tag_311:\n      pop\n        /* \"launchpad/ico.sol\":60132:60350  function addToWhitelist(address[] calldata toAddAddresses) ... */\n      pop\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":23618:23705  function owner() public view virtual returns (address) {... */\n    tag_147:\n        /* \"launchpad/ico.sol\":23664:23671  address */\n      0x00\n        /* \"launchpad/ico.sol\":23691:23697  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"launchpad/ico.sol\":23684:23697  return _owner */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":23618:23705  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"launchpad/ico.sol\":49236:49272  uint256 public immutable receiveTime */\n    tag_151:\n      immutable(\"0xed634dea044fe92f6d8c9612c3844c4951054c5417a8e35c842720c22633a04d\")\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":55402:56548  function simulateClaimNoUpdate() external view returns (uint256, uint256, uint256, uint256) {... */\n    tag_155:\n        /* \"launchpad/ico.sol\":55458:55465  uint256 */\n      0x00\n        /* \"launchpad/ico.sol\":55467:55474  uint256 */\n      dup1\n        /* \"launchpad/ico.sol\":55476:55483  uint256 */\n      0x00\n        /* \"launchpad/ico.sol\":55485:55492  uint256 */\n      dup1\n        /* \"launchpad/ico.sol\":55545:55546  0 */\n      0x00\n        /* \"launchpad/ico.sol\":55519:55530  finalTokens */\n      0x09\n        /* \"launchpad/ico.sol\":55519:55542  finalTokens[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":55531:55541  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":55519:55542  finalTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":55519:55546  finalTokens[msg.sender] > 0 */\n      gt\n        /* \"launchpad/ico.sol\":55515:55651  if (finalTokens[msg.sender] > 0)... */\n      iszero\n      tag_319\n      jumpi\n        /* \"launchpad/ico.sol\":55569:55570  0 */\n      0x00\n        /* \"launchpad/ico.sol\":55572:55583  finalTokens */\n      0x09\n        /* \"launchpad/ico.sol\":55572:55595  finalTokens[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":55584:55594  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":55572:55595  finalTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":55621:55622  3 */\n      0x03\n        /* \"launchpad/ico.sol\":55597:55608  finalTokens */\n      0x09\n        /* \"launchpad/ico.sol\":55597:55620  finalTokens[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":55609:55619  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":55597:55620  finalTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":55597:55622  finalTokens[msg.sender]/3 */\n      tag_320\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_320:\n        /* \"launchpad/ico.sol\":55624:55638  finalEmissions */\n      0x08\n        /* \"launchpad/ico.sol\":55624:55650  finalEmissions[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":55639:55649  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":55624:55650  finalEmissions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":55561:55651  return (0, finalTokens[msg.sender], finalTokens[msg.sender]/3, finalEmissions[msg.sender]) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      jump(tag_318)\n        /* \"launchpad/ico.sol\":55515:55651  if (finalTokens[msg.sender] > 0)... */\n    tag_319:\n        /* \"launchpad/ico.sol\":55695:55696  0 */\n      0x00\n        /* \"launchpad/ico.sol\":55668:55679  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":55668:55691  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":55680:55690  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":55668:55691  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":55668:55696  commitments[msg.sender] == 0 */\n      sub\n        /* \"launchpad/ico.sol\":55664:55717  if (commitments[msg.sender] == 0) return (0, 0, 0, 0) */\n      tag_321\n      jumpi\n        /* \"launchpad/ico.sol\":55706:55707  0 */\n      0x00\n        /* \"launchpad/ico.sol\":55709:55710  0 */\n      dup1\n        /* \"launchpad/ico.sol\":55712:55713  0 */\n      0x00\n        /* \"launchpad/ico.sol\":55715:55716  0 */\n      dup1\n        /* \"launchpad/ico.sol\":55698:55717  return (0, 0, 0, 0) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      jump(tag_318)\n        /* \"launchpad/ico.sol\":55664:55717  if (commitments[msg.sender] == 0) return (0, 0, 0, 0) */\n    tag_321:\n        /* \"launchpad/ico.sol\":55754:55769  refundThreshold */\n      immutable(\"0xca2794e0ef7228796d763d1c5c1add225921900f2287518a82d887536e703022\")\n        /* \"launchpad/ico.sol\":55734:55750  totalCommitments */\n      sload(0x05)\n        /* \"launchpad/ico.sol\":55734:55769  totalCommitments >= refundThreshold */\n      lt\n        /* \"launchpad/ico.sol\":55730:56541  if (totalCommitments >= refundThreshold) {... */\n      tag_322\n      jumpi\n        /* \"launchpad/ico.sol\":55786:55807  uint256 ethersToSpend */\n      0x00\n        /* \"launchpad/ico.sol\":55810:55954  Math.min(... */\n      tag_323\n        /* \"launchpad/ico.sol\":55837:55848  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":55837:55860  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":55849:55859  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":55837:55860  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":55923:55939  totalCommitments */\n      sload(0x05)\n        /* \"launchpad/ico.sol\":55906:55919  ethersToRaise */\n      immutable(\"0x7e907fbe90f02d771bd71353882a45266d04db8e6d102752ddad0ae3bde80b4d\")\n        /* \"launchpad/ico.sol\":55880:55891  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":55880:55903  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":55892:55902  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":55880:55903  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":55880:55919  commitments[msg.sender] * ethersToRaise */\n      tag_324\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_324:\n        /* \"launchpad/ico.sol\":55879:55939  (commitments[msg.sender] * ethersToRaise) / totalCommitments */\n      tag_325\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_325:\n        /* \"launchpad/ico.sol\":55810:55818  Math.min */\n      tag_217\n        /* \"launchpad/ico.sol\":55810:55954  Math.min(... */\n      jump\t// in\n    tag_323:\n        /* \"launchpad/ico.sol\":55786:55954  uint256 ethersToSpend = Math.min(... */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":55969:55991  uint256 ethersToRefund */\n      0x00\n        /* \"launchpad/ico.sol\":56020:56033  ethersToSpend */\n      dup2\n        /* \"launchpad/ico.sol\":55994:56005  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":55994:56017  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":56006:56016  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":55994:56017  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":55994:56033  commitments[msg.sender] - ethersToSpend */\n      tag_326\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_326:\n        /* \"launchpad/ico.sol\":55969:56033  uint256 ethersToRefund = commitments[msg.sender] - ethersToSpend */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":56048:56071  uint256 tokensToReceive */\n      0x00\n        /* \"launchpad/ico.sol\":56124:56137  ethersToRaise */\n      immutable(\"0x7e907fbe90f02d771bd71353882a45266d04db8e6d102752ddad0ae3bde80b4d\")\n        /* \"launchpad/ico.sol\":56090:56103  ethersToSpend */\n      dup4\n        /* \"launchpad/ico.sol\":56075:56087  tokensToSell */\n      immutable(\"0xe173cdf51dd014ef27b36735c7ab5bd65657319d4a8710b41c74babbefc8027a\")\n        /* \"launchpad/ico.sol\":56075:56103  tokensToSell * ethersToSpend */\n      tag_327\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_327:\n        /* \"launchpad/ico.sol\":56074:56137  (tokensToSell * ethersToSpend) /... */\n      tag_328\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_328:\n        /* \"launchpad/ico.sol\":56048:56137  uint256 tokensToReceive = (tokensToSell * ethersToSpend) /... */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":56152:56168  uint256 emission */\n      0x00\n        /* \"launchpad/ico.sol\":56234:56249  missedEmissions */\n      0x07\n        /* \"launchpad/ico.sol\":56234:56261  missedEmissions[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":56250:56260  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":56234:56261  missedEmissions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":56171:56214  _calculateEmission(commitments[msg.sender]) */\n      tag_329\n        /* \"launchpad/ico.sol\":56190:56201  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":56190:56213  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":56202:56212  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":56190:56213  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":56171:56189  _calculateEmission */\n      tag_330\n        /* \"launchpad/ico.sol\":56171:56214  _calculateEmission(commitments[msg.sender]) */\n      jump\t// in\n    tag_329:\n        /* \"launchpad/ico.sol\":56171:56261  _calculateEmission(commitments[msg.sender]) -... */\n      tag_331\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_331:\n        /* \"launchpad/ico.sol\":56152:56261  uint256 emission = _calculateEmission(commitments[msg.sender]) -... */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":56278:56309  uint256 emissionTokensToReceive */\n      0x00\n        /* \"launchpad/ico.sol\":56330:56331  3 */\n      0x03\n        /* \"launchpad/ico.sol\":56312:56327  tokensToReceive */\n      dup4\n        /* \"launchpad/ico.sol\":56312:56331  tokensToReceive / 3 */\n      tag_332\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_332:\n        /* \"launchpad/ico.sol\":56278:56331  uint256 emissionTokensToReceive = tokensToReceive / 3 */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":56356:56370  ethersToRefund */\n      dup4\n        /* \"launchpad/ico.sol\":56372:56387  tokensToReceive */\n      dup4\n        /* \"launchpad/ico.sol\":56389:56412  emissionTokensToReceive */\n      dup3\n        /* \"launchpad/ico.sol\":56414:56422  emission */\n      dup5\n        /* \"launchpad/ico.sol\":56348:56423  return (ethersToRefund, tokensToReceive, emissionTokensToReceive, emission) */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_318)\n        /* \"launchpad/ico.sol\":55730:56541  if (totalCommitments >= refundThreshold) {... */\n    tag_322:\n        /* \"launchpad/ico.sol\":56456:56467  uint256 amt */\n      0x00\n        /* \"launchpad/ico.sol\":56470:56481  commitments */\n      0x06\n        /* \"launchpad/ico.sol\":56470:56493  commitments[msg.sender] */\n      0x00\n        /* \"launchpad/ico.sol\":56482:56492  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":56470:56493  commitments[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"launchpad/ico.sol\":56456:56493  uint256 amt = commitments[msg.sender] */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":56516:56519  amt */\n      dup1\n        /* \"launchpad/ico.sol\":56521:56522  0 */\n      0x00\n        /* \"launchpad/ico.sol\":56524:56525  0 */\n      dup1\n        /* \"launchpad/ico.sol\":56527:56528  0 */\n      0x00\n        /* \"launchpad/ico.sol\":56508:56529  return (amt, 0, 0, 0) */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      pop\n        /* \"launchpad/ico.sol\":55402:56548  function simulateClaimNoUpdate() external view returns (uint256, uint256, uint256, uint256) {... */\n    tag_318:\n      swap1\n      swap2\n      swap3\n      swap4\n      jump\t// out\n        /* \"launchpad/ico.sol\":50125:50166  mapping(address => bool) public whitelist */\n    tag_161:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":49322:49370  uint256 public immutable emissionTokenSaleAmount */\n    tag_165:\n      immutable(\"0x371700833a35d5844ebee172e3abba82802265d50654e653968bcfaaf1848fe9\")\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":53194:53549  function start() external onlyOwner {... */\n    tag_169:\n        /* \"launchpad/ico.sol\":23504:23517  _checkOwner() */\n      tag_335\n        /* \"launchpad/ico.sol\":23504:23515  _checkOwner */\n      tag_291\n        /* \"launchpad/ico.sol\":23504:23517  _checkOwner() */\n      jump\t// in\n    tag_335:\n        /* \"launchpad/ico.sol\":53250:53257  started */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"launchpad/ico.sol\":53249:53257  !started */\n      iszero\n        /* \"launchpad/ico.sol\":53241:53278  require(!started, \"Already started.\") */\n      tag_337\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_338\n      swap1\n      tag_339\n      jump\t// in\n    tag_338:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_337:\n        /* \"launchpad/ico.sol\":53299:53303  true */\n      0x01\n        /* \"launchpad/ico.sol\":53289:53296  started */\n      0x02\n      0x00\n        /* \"launchpad/ico.sol\":53289:53303  started = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":53314:53382  salesToken.safeTransferFrom(msg.sender, address(this), tokensToSell) */\n      tag_340\n        /* \"launchpad/ico.sol\":53342:53352  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":53362:53366  this */\n      address\n        /* \"launchpad/ico.sol\":53369:53381  tokensToSell */\n      immutable(\"0xe173cdf51dd014ef27b36735c7ab5bd65657319d4a8710b41c74babbefc8027a\")\n        /* \"launchpad/ico.sol\":53314:53324  salesToken */\n      immutable(\"0xbf6f835d95322ea2fd9dfa6b25c8d7515040c169d9453c90b384510eaa64a886\")\n        /* \"launchpad/ico.sol\":53314:53341  salesToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_341\n      swap1\n        /* \"launchpad/ico.sol\":53314:53382  salesToken.safeTransferFrom(msg.sender, address(this), tokensToSell) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_340:\n        /* \"launchpad/ico.sol\":53393:53541  emissionToken.safeTransferFrom(... */\n      tag_342\n        /* \"launchpad/ico.sol\":53438:53448  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":53471:53475  this */\n      address\n        /* \"launchpad/ico.sol\":53507:53530  emissionTokenSaleAmount */\n      immutable(\"0x371700833a35d5844ebee172e3abba82802265d50654e653968bcfaaf1848fe9\")\n        /* \"launchpad/ico.sol\":53491:53504  totalEmission */\n      immutable(\"0x88a18f158b0c6b06eb886632f103fa3830edd15f4c0dfbf4f54521a0435a69b6\")\n        /* \"launchpad/ico.sol\":53491:53530  totalEmission + emissionTokenSaleAmount */\n      tag_343\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_343:\n        /* \"launchpad/ico.sol\":53393:53406  emissionToken */\n      immutable(\"0xde9ee2313c098c937c7896d2855ad10f2c7024da9f5ce363ad04fa3542c5ca58\")\n        /* \"launchpad/ico.sol\":53393:53423  emissionToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_341\n      swap1\n        /* \"launchpad/ico.sol\":53393:53541  emissionToken.safeTransferFrom(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_342:\n        /* \"launchpad/ico.sol\":53194:53549  function start() external onlyOwner {... */\n      jump\t// out\n        /* \"launchpad/ico.sol\":49489:49509  bool public finished */\n    tag_172:\n      0x02\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":58804:60073  function finish() external onlyOwner {... */\n    tag_176:\n        /* \"launchpad/ico.sol\":23504:23517  _checkOwner() */\n      tag_345\n        /* \"launchpad/ico.sol\":23504:23515  _checkOwner */\n      tag_291\n        /* \"launchpad/ico.sol\":23504:23517  _checkOwner() */\n      jump\t// in\n    tag_345:\n        /* \"launchpad/ico.sol\":58892:58899  endTime */\n      immutable(\"0x7193ba2649120c030b7e19c26ca270a26287fe4420fb922543ecab5a52a96372\")\n        /* \"launchpad/ico.sol\":58874:58889  block.timestamp */\n      timestamp\n        /* \"launchpad/ico.sol\":58874:58899  block.timestamp > endTime */\n      gt\n        /* \"launchpad/ico.sol\":58852:58968  require(... */\n      tag_347\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_348\n      swap1\n      tag_349\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_347:\n        /* \"launchpad/ico.sol\":58988:58996  finished */\n      0x02\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"launchpad/ico.sol\":58987:58996  !finished */\n      iszero\n        /* \"launchpad/ico.sol\":58979:59018  require(!finished, \"Already finished.\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_350:\n        /* \"launchpad/ico.sol\":59040:59044  true */\n      0x01\n        /* \"launchpad/ico.sol\":59029:59037  finished */\n      0x02\n      0x01\n        /* \"launchpad/ico.sol\":59029:59044  finished = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":59081:59096  refundThreshold */\n      immutable(\"0xca2794e0ef7228796d763d1c5c1add225921900f2287518a82d887536e703022\")\n        /* \"launchpad/ico.sol\":59061:59077  totalCommitments */\n      sload(0x05)\n        /* \"launchpad/ico.sol\":59061:59096  totalCommitments >= refundThreshold */\n      lt\n        /* \"launchpad/ico.sol\":59057:60066  if (totalCommitments >= refundThreshold) {... */\n      tag_353\n      jumpi\n        /* \"launchpad/ico.sol\":59114:59126  bool success */\n      0x00\n        /* \"launchpad/ico.sol\":59132:59139  owner() */\n      tag_354\n        /* \"launchpad/ico.sol\":59132:59137  owner */\n      tag_147\n        /* \"launchpad/ico.sol\":59132:59139  owner() */\n      jump\t// in\n    tag_354:\n        /* \"launchpad/ico.sol\":59132:59144  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"launchpad/ico.sol\":59170:59211  Math.min(ethersToRaise, totalCommitments) */\n      tag_355\n        /* \"launchpad/ico.sol\":59179:59192  ethersToRaise */\n      immutable(\"0x7e907fbe90f02d771bd71353882a45266d04db8e6d102752ddad0ae3bde80b4d\")\n        /* \"launchpad/ico.sol\":59194:59210  totalCommitments */\n      sload(0x05)\n        /* \"launchpad/ico.sol\":59170:59178  Math.min */\n      tag_217\n        /* \"launchpad/ico.sol\":59170:59211  Math.min(ethersToRaise, totalCommitments) */\n      jump\t// in\n    tag_355:\n        /* \"launchpad/ico.sol\":59132:59230  owner().call{... */\n      mload(0x40)\n      tag_356\n      swap1\n      tag_271\n      jump\t// in\n    tag_356:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_359\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_358)\n    tag_359:\n      0x60\n      swap2\n      pop\n    tag_358:\n      pop\n        /* \"launchpad/ico.sol\":59113:59230  (bool success, ) = owner().call{... */\n      pop\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":59253:59260  success */\n      dup1\n        /* \"launchpad/ico.sol\":59245:59289  require(success, \"Failed to transfer ether\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_361\n      swap1\n      tag_277\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_360:\n        /* \"launchpad/ico.sol\":59324:59340  totalCommitments */\n      sload(0x05)\n        /* \"launchpad/ico.sol\":59308:59321  ethersToRaise */\n      immutable(\"0x7e907fbe90f02d771bd71353882a45266d04db8e6d102752ddad0ae3bde80b4d\")\n        /* \"launchpad/ico.sol\":59308:59340  ethersToRaise > totalCommitments */\n      gt\n        /* \"launchpad/ico.sol\":59304:59885  if (ethersToRaise > totalCommitments) {... */\n      iszero\n      tag_362\n      jumpi\n        /* \"launchpad/ico.sol\":59361:59389  uint256 emissionTokensToBurn */\n      0x00\n        /* \"launchpad/ico.sol\":59457:59470  ethersToRaise */\n      immutable(\"0x7e907fbe90f02d771bd71353882a45266d04db8e6d102752ddad0ae3bde80b4d\")\n        /* \"launchpad/ico.sol\":59436:59452  totalCommitments */\n      sload(0x05)\n        /* \"launchpad/ico.sol\":59420:59433  ethersToRaise */\n      immutable(\"0x7e907fbe90f02d771bd71353882a45266d04db8e6d102752ddad0ae3bde80b4d\")\n        /* \"launchpad/ico.sol\":59420:59452  ethersToRaise - totalCommitments */\n      tag_363\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_363:\n        /* \"launchpad/ico.sol\":59393:59416  emissionTokenSaleAmount */\n      immutable(\"0x371700833a35d5844ebee172e3abba82802265d50654e653968bcfaaf1848fe9\")\n        /* \"launchpad/ico.sol\":59393:59453  emissionTokenSaleAmount * (ethersToRaise - totalCommitments) */\n      tag_364\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_364:\n        /* \"launchpad/ico.sol\":59392:59470  (emissionTokenSaleAmount * (ethersToRaise - totalCommitments)) / ethersToRaise */\n      tag_365\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_365:\n        /* \"launchpad/ico.sol\":59361:59470  uint256 emissionTokensToBurn = (emissionTokenSaleAmount * (ethersToRaise - totalCommitments)) / ethersToRaise */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":59493:59554  emissionToken.safeTransfer(burnAddress, emissionTokensToBurn) */\n      tag_366\n        /* \"launchpad/ico.sol\":59520:59531  burnAddress */\n      immutable(\"0xe9485078fd916cbeef4a0222eca894f90e40b3ef1458ce4ae1a7bb4a3bb4c8b7\")\n        /* \"launchpad/ico.sol\":59533:59553  emissionTokensToBurn */\n      dup3\n        /* \"launchpad/ico.sol\":59493:59506  emissionToken */\n      immutable(\"0xde9ee2313c098c937c7896d2855ad10f2c7024da9f5ce363ad04fa3542c5ca58\")\n        /* \"launchpad/ico.sol\":59493:59519  emissionToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_200\n      swap1\n        /* \"launchpad/ico.sol\":59493:59554  emissionToken.safeTransfer(burnAddress, emissionTokensToBurn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_366:\n        /* \"launchpad/ico.sol\":59591:59611  uint256 tokensToBurn */\n      0x00\n        /* \"launchpad/ico.sol\":59689:59702  ethersToRaise */\n      immutable(\"0x7e907fbe90f02d771bd71353882a45266d04db8e6d102752ddad0ae3bde80b4d\")\n        /* \"launchpad/ico.sol\":59668:59684  totalCommitments */\n      sload(0x05)\n        /* \"launchpad/ico.sol\":59652:59665  ethersToRaise */\n      immutable(\"0x7e907fbe90f02d771bd71353882a45266d04db8e6d102752ddad0ae3bde80b4d\")\n        /* \"launchpad/ico.sol\":59652:59684  ethersToRaise - totalCommitments */\n      tag_367\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_367:\n        /* \"launchpad/ico.sol\":59615:59627  tokensToSell */\n      immutable(\"0xe173cdf51dd014ef27b36735c7ab5bd65657319d4a8710b41c74babbefc8027a\")\n        /* \"launchpad/ico.sol\":59615:59685  tokensToSell *... */\n      tag_368\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_368:\n        /* \"launchpad/ico.sol\":59614:59702  (tokensToSell *... */\n      tag_369\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_369:\n        /* \"launchpad/ico.sol\":59591:59702  uint256 tokensToBurn = (tokensToSell *... */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":59739:59800  emissionToken.safeTransfer(burnAddress, emissionTokensToBurn) */\n      tag_370\n        /* \"launchpad/ico.sol\":59766:59777  burnAddress */\n      immutable(\"0xe9485078fd916cbeef4a0222eca894f90e40b3ef1458ce4ae1a7bb4a3bb4c8b7\")\n        /* \"launchpad/ico.sol\":59779:59799  emissionTokensToBurn */\n      dup4\n        /* \"launchpad/ico.sol\":59739:59752  emissionToken */\n      immutable(\"0xde9ee2313c098c937c7896d2855ad10f2c7024da9f5ce363ad04fa3542c5ca58\")\n        /* \"launchpad/ico.sol\":59739:59765  emissionToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_200\n      swap1\n        /* \"launchpad/ico.sol\":59739:59800  emissionToken.safeTransfer(burnAddress, emissionTokensToBurn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_370:\n        /* \"launchpad/ico.sol\":59819:59869  salesToken.safeTransfer(burnAddress, tokensToBurn) */\n      tag_371\n        /* \"launchpad/ico.sol\":59843:59854  burnAddress */\n      immutable(\"0xe9485078fd916cbeef4a0222eca894f90e40b3ef1458ce4ae1a7bb4a3bb4c8b7\")\n        /* \"launchpad/ico.sol\":59856:59868  tokensToBurn */\n      dup3\n        /* \"launchpad/ico.sol\":59819:59829  salesToken */\n      immutable(\"0xbf6f835d95322ea2fd9dfa6b25c8d7515040c169d9453c90b384510eaa64a886\")\n        /* \"launchpad/ico.sol\":59819:59842  salesToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_200\n      swap1\n        /* \"launchpad/ico.sol\":59819:59869  salesToken.safeTransfer(burnAddress, tokensToBurn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_371:\n        /* \"launchpad/ico.sol\":59342:59885  {... */\n      pop\n      pop\n        /* \"launchpad/ico.sol\":59304:59885  if (ethersToRaise > totalCommitments) {... */\n    tag_362:\n        /* \"launchpad/ico.sol\":59098:59896  {... */\n      pop\n        /* \"launchpad/ico.sol\":59057:60066  if (totalCommitments >= refundThreshold) {... */\n      jump(tag_372)\n    tag_353:\n        /* \"launchpad/ico.sol\":59917:59963  salesToken.safeTransfer(owner(), tokensToSell) */\n      tag_373\n        /* \"launchpad/ico.sol\":59941:59948  owner() */\n      tag_374\n        /* \"launchpad/ico.sol\":59941:59946  owner */\n      tag_147\n        /* \"launchpad/ico.sol\":59941:59948  owner() */\n      jump\t// in\n    tag_374:\n        /* \"launchpad/ico.sol\":59950:59962  tokensToSell */\n      immutable(\"0xe173cdf51dd014ef27b36735c7ab5bd65657319d4a8710b41c74babbefc8027a\")\n        /* \"launchpad/ico.sol\":59917:59927  salesToken */\n      immutable(\"0xbf6f835d95322ea2fd9dfa6b25c8d7515040c169d9453c90b384510eaa64a886\")\n        /* \"launchpad/ico.sol\":59917:59940  salesToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_200\n      swap1\n        /* \"launchpad/ico.sol\":59917:59963  salesToken.safeTransfer(owner(), tokensToSell) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_373:\n        /* \"launchpad/ico.sol\":59978:60054  emissionToken.safeTransfer(owner(), totalEmission + emissionTokenSaleAmount) */\n      tag_375\n        /* \"launchpad/ico.sol\":60005:60012  owner() */\n      tag_376\n        /* \"launchpad/ico.sol\":60005:60010  owner */\n      tag_147\n        /* \"launchpad/ico.sol\":60005:60012  owner() */\n      jump\t// in\n    tag_376:\n        /* \"launchpad/ico.sol\":60030:60053  emissionTokenSaleAmount */\n      immutable(\"0x371700833a35d5844ebee172e3abba82802265d50654e653968bcfaaf1848fe9\")\n        /* \"launchpad/ico.sol\":60014:60027  totalEmission */\n      immutable(\"0x88a18f158b0c6b06eb886632f103fa3830edd15f4c0dfbf4f54521a0435a69b6\")\n        /* \"launchpad/ico.sol\":60014:60053  totalEmission + emissionTokenSaleAmount */\n      tag_377\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_377:\n        /* \"launchpad/ico.sol\":59978:59991  emissionToken */\n      immutable(\"0xde9ee2313c098c937c7896d2855ad10f2c7024da9f5ce363ad04fa3542c5ca58\")\n        /* \"launchpad/ico.sol\":59978:60004  emissionToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_200\n      swap1\n        /* \"launchpad/ico.sol\":59978:60054  emissionToken.safeTransfer(owner(), totalEmission + emissionTokenSaleAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_375:\n        /* \"launchpad/ico.sol\":59057:60066  if (totalCommitments >= refundThreshold) {... */\n    tag_372:\n        /* \"launchpad/ico.sol\":58804:60073  function finish() external onlyOwner {... */\n      jump\t// out\n        /* \"launchpad/ico.sol\":48931:48968  IERC20 public immutable emissionToken */\n    tag_179:\n      immutable(\"0xde9ee2313c098c937c7896d2855ad10f2c7024da9f5ce363ad04fa3542c5ca58\")\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":49612:49658  mapping(address => uint256) public commitments */\n    tag_184:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"launchpad/ico.sol\":24524:24725  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_189:\n        /* \"launchpad/ico.sol\":23504:23517  _checkOwner() */\n      tag_379\n        /* \"launchpad/ico.sol\":23504:23515  _checkOwner */\n      tag_291\n        /* \"launchpad/ico.sol\":23504:23517  _checkOwner() */\n      jump\t// in\n    tag_379:\n        /* \"launchpad/ico.sol\":24633:24634  0 */\n      0x00\n        /* \"launchpad/ico.sol\":24613:24635  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"launchpad/ico.sol\":24613:24621  newOwner */\n      dup2\n        /* \"launchpad/ico.sol\":24613:24635  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"launchpad/ico.sol\":24605:24678  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_381\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_382\n      swap1\n      tag_383\n      jump\t// in\n    tag_382:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_381:\n        /* \"launchpad/ico.sol\":24689:24717  _transferOwnership(newOwner) */\n      tag_384\n        /* \"launchpad/ico.sol\":24708:24716  newOwner */\n      dup2\n        /* \"launchpad/ico.sol\":24689:24707  _transferOwnership */\n      tag_306\n        /* \"launchpad/ico.sol\":24689:24717  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_384:\n        /* \"launchpad/ico.sol\":24524:24725  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":21142:21435  function _nonReentrantBefore() private {... */\n    tag_192:\n        /* \"launchpad/ico.sol\":20544:20545  2 */\n      0x02\n        /* \"launchpad/ico.sol\":21276:21283  _status */\n      sload(0x01)\n        /* \"launchpad/ico.sol\":21276:21295  _status != _ENTERED */\n      sub\n        /* \"launchpad/ico.sol\":21268:21331  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_386\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_387\n      swap1\n      tag_388\n      jump\t// in\n    tag_387:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_386:\n        /* \"launchpad/ico.sol\":20544:20545  2 */\n      0x02\n        /* \"launchpad/ico.sol\":21409:21416  _status */\n      0x01\n        /* \"launchpad/ico.sol\":21409:21427  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":21142:21435  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"launchpad/ico.sol\":15023:15234  function safeTransfer(... */\n    tag_200:\n        /* \"launchpad/ico.sol\":15140:15226  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_390\n        /* \"launchpad/ico.sol\":15160:15165  token */\n      dup4\n        /* \"launchpad/ico.sol\":15190:15213  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"launchpad/ico.sol\":15215:15217  to */\n      dup5\n        /* \"launchpad/ico.sol\":15219:15224  value */\n      dup5\n        /* \"launchpad/ico.sol\":15167:15225  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_391\n      swap3\n      swap2\n      swap1\n      tag_392\n      jump\t// in\n    tag_391:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"launchpad/ico.sol\":15140:15159  _callOptionalReturn */\n      tag_393\n        /* \"launchpad/ico.sol\":15140:15226  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_390:\n        /* \"launchpad/ico.sol\":15023:15234  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":21443:21656  function _nonReentrantAfter() private {... */\n    tag_206:\n        /* \"launchpad/ico.sol\":20500:20501  1 */\n      0x01\n        /* \"launchpad/ico.sol\":21626:21633  _status */\n      dup1\n        /* \"launchpad/ico.sol\":21626:21648  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":21443:21656  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"launchpad/ico.sol\":51001:51507  function _updateEmission() internal {... */\n    tag_209:\n        /* \"launchpad/ico.sol\":51075:51084  startTime */\n      immutable(\"0x08284d1a615d458bb1a1970eb00419a577a84c5d2d84d81fbf2dc144a0f2c51f\")\n        /* \"launchpad/ico.sol\":51056:51071  block.timestamp */\n      timestamp\n        /* \"launchpad/ico.sol\":51056:51084  block.timestamp >= startTime */\n      lt\n      iszero\n        /* \"launchpad/ico.sol\":51048:51100  require(block.timestamp >= startTime, \"not started\") */\n      tag_396\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_397\n      swap1\n      tag_398\n      jump\t// in\n    tag_397:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_396:\n        /* \"launchpad/ico.sol\":51134:51135  0 */\n      0x00\n        /* \"launchpad/ico.sol\":51115:51131  totalCommitments */\n      sload(0x05)\n        /* \"launchpad/ico.sol\":51115:51135  totalCommitments > 0 */\n      gt\n        /* \"launchpad/ico.sol\":51111:51461  if (totalCommitments > 0) {... */\n      iszero\n      tag_399\n      jumpi\n        /* \"launchpad/ico.sol\":51152:51167  uint256 elapsed */\n      0x00\n        /* \"launchpad/ico.sol\":51224:51274  Math.max(Math.min(lastUpdate, endTime), startTime) */\n      tag_400\n        /* \"launchpad/ico.sol\":51233:51262  Math.min(lastUpdate, endTime) */\n      tag_401\n        /* \"launchpad/ico.sol\":51242:51252  lastUpdate */\n      sload(0x04)\n        /* \"launchpad/ico.sol\":51254:51261  endTime */\n      immutable(\"0x7193ba2649120c030b7e19c26ca270a26287fe4420fb922543ecab5a52a96372\")\n        /* \"launchpad/ico.sol\":51233:51241  Math.min */\n      tag_217\n        /* \"launchpad/ico.sol\":51233:51262  Math.min(lastUpdate, endTime) */\n      jump\t// in\n    tag_401:\n        /* \"launchpad/ico.sol\":51264:51273  startTime */\n      immutable(\"0x08284d1a615d458bb1a1970eb00419a577a84c5d2d84d81fbf2dc144a0f2c51f\")\n        /* \"launchpad/ico.sol\":51224:51232  Math.max */\n      tag_402\n        /* \"launchpad/ico.sol\":51224:51274  Math.max(Math.min(lastUpdate, endTime), startTime) */\n      jump\t// in\n    tag_400:\n        /* \"launchpad/ico.sol\":51170:51204  Math.min(block.timestamp, endTime) */\n      tag_403\n        /* \"launchpad/ico.sol\":51179:51194  block.timestamp */\n      timestamp\n        /* \"launchpad/ico.sol\":51196:51203  endTime */\n      immutable(\"0x7193ba2649120c030b7e19c26ca270a26287fe4420fb922543ecab5a52a96372\")\n        /* \"launchpad/ico.sol\":51170:51178  Math.min */\n      tag_217\n        /* \"launchpad/ico.sol\":51170:51204  Math.min(block.timestamp, endTime) */\n      jump\t// in\n    tag_403:\n        /* \"launchpad/ico.sol\":51170:51274  Math.min(block.timestamp, endTime) -... */\n      tag_404\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_404:\n        /* \"launchpad/ico.sol\":51152:51274  uint256 elapsed = Math.min(block.timestamp, endTime) -... */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":51289:51305  uint256 emission */\n      0x00\n        /* \"launchpad/ico.sol\":51364:51373  startTime */\n      immutable(\"0x08284d1a615d458bb1a1970eb00419a577a84c5d2d84d81fbf2dc144a0f2c51f\")\n        /* \"launchpad/ico.sol\":51354:51361  endTime */\n      immutable(\"0x7193ba2649120c030b7e19c26ca270a26287fe4420fb922543ecab5a52a96372\")\n        /* \"launchpad/ico.sol\":51354:51373  endTime - startTime */\n      tag_405\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_405:\n        /* \"launchpad/ico.sol\":51325:51332  elapsed */\n      dup3\n        /* \"launchpad/ico.sol\":51309:51322  totalEmission */\n      immutable(\"0x88a18f158b0c6b06eb886632f103fa3830edd15f4c0dfbf4f54521a0435a69b6\")\n        /* \"launchpad/ico.sol\":51309:51332  totalEmission * elapsed */\n      tag_406\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_406:\n        /* \"launchpad/ico.sol\":51308:51374  (totalEmission * elapsed) /... */\n      tag_407\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_407:\n        /* \"launchpad/ico.sol\":51289:51374  uint256 emission = (totalEmission * elapsed) /... */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":51433:51449  totalCommitments */\n      sload(0x05)\n        /* \"launchpad/ico.sol\":51421:51429  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"launchpad/ico.sol\":51410:51418  emission */\n      dup3\n        /* \"launchpad/ico.sol\":51410:51429  emission * 10 ** 18 */\n      tag_408\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_408:\n        /* \"launchpad/ico.sol\":51409:51449  (emission * 10 ** 18) / totalCommitments */\n      tag_409\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_409:\n        /* \"launchpad/ico.sol\":51389:51405  emissionPerEther */\n      0x03\n      0x00\n        /* \"launchpad/ico.sol\":51389:51449  emissionPerEther += (emission * 10 ** 18) / totalCommitments */\n      dup3\n      dup3\n      sload\n      tag_410\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_410:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":51137:51461  {... */\n      pop\n      pop\n        /* \"launchpad/ico.sol\":51111:51461  if (totalCommitments > 0) {... */\n    tag_399:\n        /* \"launchpad/ico.sol\":51484:51499  block.timestamp */\n      timestamp\n        /* \"launchpad/ico.sol\":51471:51481  lastUpdate */\n      0x04\n        /* \"launchpad/ico.sol\":51471:51499  lastUpdate = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":51001:51507  function _updateEmission() internal {... */\n      jump\t// out\n        /* \"launchpad/ico.sol\":25634:25740  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_217:\n        /* \"launchpad/ico.sol\":25692:25699  uint256 */\n      0x00\n        /* \"launchpad/ico.sol\":25723:25724  b */\n      dup2\n        /* \"launchpad/ico.sol\":25719:25720  a */\n      dup4\n        /* \"launchpad/ico.sol\":25719:25724  a < b */\n      lt\n        /* \"launchpad/ico.sol\":25719:25732  a < b ? a : b */\n      tag_412\n      jumpi\n        /* \"launchpad/ico.sol\":25731:25732  b */\n      dup2\n        /* \"launchpad/ico.sol\":25719:25732  a < b ? a : b */\n      jump(tag_413)\n    tag_412:\n        /* \"launchpad/ico.sol\":25727:25728  a */\n      dup3\n        /* \"launchpad/ico.sol\":25719:25732  a < b ? a : b */\n    tag_413:\n        /* \"launchpad/ico.sol\":25712:25732  return a < b ? a : b */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":25634:25740  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":50318:50455  function calculateEmission(uint256 value) internal view returns (uint256) {... */\n    tag_223:\n        /* \"launchpad/ico.sol\":50383:50390  uint256 */\n      0x00\n        /* \"launchpad/ico.sol\":50439:50447  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"launchpad/ico.sol\":50419:50435  emissionPerEther */\n      sload(0x03)\n        /* \"launchpad/ico.sol\":50411:50416  value */\n      dup4\n        /* \"launchpad/ico.sol\":50411:50435  value * emissionPerEther */\n      tag_415\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_415:\n        /* \"launchpad/ico.sol\":50410:50447  (value * emissionPerEther) / 10 ** 18 */\n      tag_416\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_416:\n        /* \"launchpad/ico.sol\":50403:50447  return (value * emissionPerEther) / 10 ** 18 */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":50318:50455  function calculateEmission(uint256 value) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":23783:23915  function _checkOwner() internal view virtual {... */\n    tag_291:\n        /* \"launchpad/ico.sol\":23858:23870  _msgSender() */\n      tag_418\n        /* \"launchpad/ico.sol\":23858:23868  _msgSender */\n      tag_419\n        /* \"launchpad/ico.sol\":23858:23870  _msgSender() */\n      jump\t// in\n    tag_418:\n        /* \"launchpad/ico.sol\":23847:23870  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"launchpad/ico.sol\":23847:23854  owner() */\n      tag_420\n        /* \"launchpad/ico.sol\":23847:23852  owner */\n      tag_147\n        /* \"launchpad/ico.sol\":23847:23854  owner() */\n      jump\t// in\n    tag_420:\n        /* \"launchpad/ico.sol\":23847:23870  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"launchpad/ico.sol\":23839:23907  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_421\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_422\n      swap1\n      tag_423\n      jump\t// in\n    tag_422:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_421:\n        /* \"launchpad/ico.sol\":23783:23915  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"launchpad/ico.sol\":24885:25076  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_306:\n        /* \"launchpad/ico.sol\":24959:24975  address oldOwner */\n      0x00\n        /* \"launchpad/ico.sol\":24978:24984  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"launchpad/ico.sol\":24959:24984  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":25004:25012  newOwner */\n      dup2\n        /* \"launchpad/ico.sol\":24995:25001  _owner */\n      0x00\n      dup1\n        /* \"launchpad/ico.sol\":24995:25012  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"launchpad/ico.sol\":25059:25067  newOwner */\n      dup2\n        /* \"launchpad/ico.sol\":25028:25068  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"launchpad/ico.sol\":25049:25057  oldOwner */\n      dup2\n        /* \"launchpad/ico.sol\":25028:25068  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"launchpad/ico.sol\":24948:25076  {... */\n      pop\n        /* \"launchpad/ico.sol\":24885:25076  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":50463:50991  function _calculateEmission(uint256 value) internal view returns (uint256) {... */\n    tag_330:\n        /* \"launchpad/ico.sol\":50529:50536  uint256 */\n      0x00\n        /* \"launchpad/ico.sol\":50576:50577  0 */\n      dup1\n        /* \"launchpad/ico.sol\":50557:50573  totalCommitments */\n      sload(0x05)\n        /* \"launchpad/ico.sol\":50557:50577  totalCommitments > 0 */\n      gt\n        /* \"launchpad/ico.sol\":50549:50596  require(totalCommitments > 0, \"no commitments\") */\n      tag_426\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_427\n      swap1\n      tag_428\n      jump\t// in\n    tag_427:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_426:\n        /* \"launchpad/ico.sol\":50609:50624  uint256 elapsed */\n      0x00\n        /* \"launchpad/ico.sol\":50677:50727  Math.max(Math.min(lastUpdate, endTime), startTime) */\n      tag_429\n        /* \"launchpad/ico.sol\":50686:50715  Math.min(lastUpdate, endTime) */\n      tag_430\n        /* \"launchpad/ico.sol\":50695:50705  lastUpdate */\n      sload(0x04)\n        /* \"launchpad/ico.sol\":50707:50714  endTime */\n      immutable(\"0x7193ba2649120c030b7e19c26ca270a26287fe4420fb922543ecab5a52a96372\")\n        /* \"launchpad/ico.sol\":50686:50694  Math.min */\n      tag_217\n        /* \"launchpad/ico.sol\":50686:50715  Math.min(lastUpdate, endTime) */\n      jump\t// in\n    tag_430:\n        /* \"launchpad/ico.sol\":50717:50726  startTime */\n      immutable(\"0x08284d1a615d458bb1a1970eb00419a577a84c5d2d84d81fbf2dc144a0f2c51f\")\n        /* \"launchpad/ico.sol\":50677:50685  Math.max */\n      tag_402\n        /* \"launchpad/ico.sol\":50677:50727  Math.max(Math.min(lastUpdate, endTime), startTime) */\n      jump\t// in\n    tag_429:\n        /* \"launchpad/ico.sol\":50627:50661  Math.min(block.timestamp, endTime) */\n      tag_431\n        /* \"launchpad/ico.sol\":50636:50651  block.timestamp */\n      timestamp\n        /* \"launchpad/ico.sol\":50653:50660  endTime */\n      immutable(\"0x7193ba2649120c030b7e19c26ca270a26287fe4420fb922543ecab5a52a96372\")\n        /* \"launchpad/ico.sol\":50627:50635  Math.min */\n      tag_217\n        /* \"launchpad/ico.sol\":50627:50661  Math.min(block.timestamp, endTime) */\n      jump\t// in\n    tag_431:\n        /* \"launchpad/ico.sol\":50627:50727  Math.min(block.timestamp, endTime) -... */\n      tag_432\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_432:\n        /* \"launchpad/ico.sol\":50609:50727  uint256 elapsed = Math.min(block.timestamp, endTime) -... */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":50738:50754  uint256 emission */\n      0x00\n        /* \"launchpad/ico.sol\":50809:50818  startTime */\n      immutable(\"0x08284d1a615d458bb1a1970eb00419a577a84c5d2d84d81fbf2dc144a0f2c51f\")\n        /* \"launchpad/ico.sol\":50799:50806  endTime */\n      immutable(\"0x7193ba2649120c030b7e19c26ca270a26287fe4420fb922543ecab5a52a96372\")\n        /* \"launchpad/ico.sol\":50799:50818  endTime - startTime */\n      tag_433\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_433:\n        /* \"launchpad/ico.sol\":50774:50781  elapsed */\n      dup3\n        /* \"launchpad/ico.sol\":50758:50771  totalEmission */\n      immutable(\"0x88a18f158b0c6b06eb886632f103fa3830edd15f4c0dfbf4f54521a0435a69b6\")\n        /* \"launchpad/ico.sol\":50758:50781  totalEmission * elapsed */\n      tag_434\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_434:\n        /* \"launchpad/ico.sol\":50757:50819  (totalEmission * elapsed) /... */\n      tag_435\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_435:\n        /* \"launchpad/ico.sol\":50738:50819  uint256 emission = (totalEmission * elapsed) /... */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":50830:50855  uint256 _emissionPerEther */\n      0x00\n        /* \"launchpad/ico.sol\":50901:50917  totalCommitments */\n      sload(0x05)\n        /* \"launchpad/ico.sol\":50889:50897  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"launchpad/ico.sol\":50878:50886  emission */\n      dup4\n        /* \"launchpad/ico.sol\":50878:50897  emission * 10 ** 18 */\n      tag_436\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_436:\n        /* \"launchpad/ico.sol\":50877:50917  (emission * 10 ** 18) / totalCommitments */\n      tag_437\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_437:\n        /* \"launchpad/ico.sol\":50858:50874  emissionPerEther */\n      sload(0x03)\n        /* \"launchpad/ico.sol\":50858:50917  emissionPerEther + (emission * 10 ** 18) / totalCommitments */\n      tag_438\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_438:\n        /* \"launchpad/ico.sol\":50830:50917  uint256 _emissionPerEther = emissionPerEther + (emission * 10 ** 18) / totalCommitments */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":50975:50983  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"launchpad/ico.sol\":50954:50971  _emissionPerEther */\n      dup2\n        /* \"launchpad/ico.sol\":50946:50951  value */\n      dup7\n        /* \"launchpad/ico.sol\":50946:50971  value * _emissionPerEther */\n      tag_439\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_439:\n        /* \"launchpad/ico.sol\":50945:50983  (value * _emissionPerEther) / 10 ** 18 */\n      tag_440\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_440:\n        /* \"launchpad/ico.sol\":50938:50983  return (value * _emissionPerEther) / 10 ** 18 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"launchpad/ico.sol\":50463:50991  function _calculateEmission(uint256 value) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":15242:15490  function safeTransferFrom(... */\n    tag_341:\n        /* \"launchpad/ico.sol\":15386:15482  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_442\n        /* \"launchpad/ico.sol\":15406:15411  token */\n      dup5\n        /* \"launchpad/ico.sol\":15436:15463  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"launchpad/ico.sol\":15465:15469  from */\n      dup6\n        /* \"launchpad/ico.sol\":15471:15473  to */\n      dup6\n        /* \"launchpad/ico.sol\":15475:15480  value */\n      dup6\n        /* \"launchpad/ico.sol\":15413:15481  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_443\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_443:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"launchpad/ico.sol\":15386:15405  _callOptionalReturn */\n      tag_393\n        /* \"launchpad/ico.sol\":15386:15482  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_442:\n        /* \"launchpad/ico.sol\":15242:15490  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":18090:18806  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_393:\n        /* \"launchpad/ico.sol\":18514:18537  bytes memory returndata */\n      0x00\n        /* \"launchpad/ico.sol\":18540:18609  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_446\n        /* \"launchpad/ico.sol\":18568:18572  data */\n      dup3\n        /* \"launchpad/ico.sol\":18540:18609  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"launchpad/ico.sol\":18548:18553  token */\n      dup6\n        /* \"launchpad/ico.sol\":18540:18567  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_447\n      swap1\n        /* \"launchpad/ico.sol\":18540:18609  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_446:\n        /* \"launchpad/ico.sol\":18514:18609  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":18644:18645  0 */\n      0x00\n        /* \"launchpad/ico.sol\":18624:18634  returndata */\n      dup2\n        /* \"launchpad/ico.sol\":18624:18641  returndata.length */\n      mload\n        /* \"launchpad/ico.sol\":18624:18645  returndata.length > 0 */\n      gt\n        /* \"launchpad/ico.sol\":18620:18799  if (returndata.length > 0) {... */\n      iszero\n      tag_448\n      jumpi\n        /* \"launchpad/ico.sol\":18721:18731  returndata */\n      dup1\n        /* \"launchpad/ico.sol\":18710:18740  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_449\n      swap2\n      swap1\n      tag_450\n      jump\t// in\n    tag_449:\n        /* \"launchpad/ico.sol\":18702:18787  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_451\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_452\n      swap1\n      tag_453\n      jump\t// in\n    tag_452:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_451:\n        /* \"launchpad/ico.sol\":18620:18799  if (returndata.length > 0) {... */\n    tag_448:\n        /* \"launchpad/ico.sol\":18160:18806  {... */\n      pop\n        /* \"launchpad/ico.sol\":18090:18806  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":25452:25558  function max(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_402:\n        /* \"launchpad/ico.sol\":25510:25517  uint256 */\n      0x00\n        /* \"launchpad/ico.sol\":25541:25542  b */\n      dup2\n        /* \"launchpad/ico.sol\":25537:25538  a */\n      dup4\n        /* \"launchpad/ico.sol\":25537:25542  a > b */\n      gt\n        /* \"launchpad/ico.sol\":25537:25550  a > b ? a : b */\n      tag_455\n      jumpi\n        /* \"launchpad/ico.sol\":25549:25550  b */\n      dup2\n        /* \"launchpad/ico.sol\":25537:25550  a > b ? a : b */\n      jump(tag_456)\n    tag_455:\n        /* \"launchpad/ico.sol\":25545:25546  a */\n      dup3\n        /* \"launchpad/ico.sol\":25537:25550  a > b ? a : b */\n    tag_456:\n        /* \"launchpad/ico.sol\":25530:25550  return a > b ? a : b */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":25452:25558  function max(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":22257:22355  function _msgSender() internal view virtual returns (address) {... */\n    tag_419:\n        /* \"launchpad/ico.sol\":22310:22317  address */\n      0x00\n        /* \"launchpad/ico.sol\":22337:22347  msg.sender */\n      caller\n        /* \"launchpad/ico.sol\":22330:22347  return msg.sender */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":22257:22355  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"launchpad/ico.sol\":8976:9205  function functionCall(... */\n    tag_447:\n        /* \"launchpad/ico.sol\":9113:9125  bytes memory */\n      0x60\n        /* \"launchpad/ico.sol\":9145:9197  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_459\n        /* \"launchpad/ico.sol\":9167:9173  target */\n      dup5\n        /* \"launchpad/ico.sol\":9175:9179  data */\n      dup5\n        /* \"launchpad/ico.sol\":9181:9182  0 */\n      0x00\n        /* \"launchpad/ico.sol\":9184:9196  errorMessage */\n      dup6\n        /* \"launchpad/ico.sol\":9145:9166  functionCallWithValue */\n      tag_460\n        /* \"launchpad/ico.sol\":9145:9197  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_459:\n        /* \"launchpad/ico.sol\":9138:9197  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":8976:9205  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":10096:10551  function functionCallWithValue(... */\n    tag_460:\n        /* \"launchpad/ico.sol\":10266:10278  bytes memory */\n      0x60\n        /* \"launchpad/ico.sol\":10324:10329  value */\n      dup3\n        /* \"launchpad/ico.sol\":10299:10320  address(this).balance */\n      selfbalance\n        /* \"launchpad/ico.sol\":10299:10329  address(this).balance >= value */\n      lt\n      iszero\n        /* \"launchpad/ico.sol\":10291:10372  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_462\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_463\n      swap1\n      tag_464\n      jump\t// in\n    tag_463:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_462:\n        /* \"launchpad/ico.sol\":10384:10396  bool success */\n      0x00\n        /* \"launchpad/ico.sol\":10398:10421  bytes memory returndata */\n      dup1\n        /* \"launchpad/ico.sol\":10425:10431  target */\n      dup7\n        /* \"launchpad/ico.sol\":10425:10436  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"launchpad/ico.sol\":10444:10449  value */\n      dup6\n        /* \"launchpad/ico.sol\":10451:10455  data */\n      dup8\n        /* \"launchpad/ico.sol\":10425:10456  target.call{value: value}(data) */\n      mload(0x40)\n      tag_465\n      swap2\n      swap1\n      tag_466\n      jump\t// in\n    tag_465:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_469\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_468)\n    tag_469:\n      0x60\n      swap2\n      pop\n    tag_468:\n      pop\n        /* \"launchpad/ico.sol\":10383:10456  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"launchpad/ico.sol\":10474:10543  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_470\n        /* \"launchpad/ico.sol\":10501:10507  target */\n      dup8\n        /* \"launchpad/ico.sol\":10509:10516  success */\n      dup4\n        /* \"launchpad/ico.sol\":10518:10528  returndata */\n      dup4\n        /* \"launchpad/ico.sol\":10530:10542  errorMessage */\n      dup8\n        /* \"launchpad/ico.sol\":10474:10500  verifyCallResultFromTarget */\n      tag_471\n        /* \"launchpad/ico.sol\":10474:10543  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_470:\n        /* \"launchpad/ico.sol\":10467:10543  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"launchpad/ico.sol\":10096:10551  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":12669:13313  function verifyCallResultFromTarget(... */\n    tag_471:\n        /* \"launchpad/ico.sol\":12854:12866  bytes memory */\n      0x60\n        /* \"launchpad/ico.sol\":12883:12890  success */\n      dup4\n        /* \"launchpad/ico.sol\":12879:13306  if (success) {... */\n      iszero\n      tag_473\n      jumpi\n        /* \"launchpad/ico.sol\":12932:12933  0 */\n      0x00\n        /* \"launchpad/ico.sol\":12911:12921  returndata */\n      dup4\n        /* \"launchpad/ico.sol\":12911:12928  returndata.length */\n      mload\n        /* \"launchpad/ico.sol\":12911:12933  returndata.length == 0 */\n      sub\n        /* \"launchpad/ico.sol\":12907:13197  if (returndata.length == 0) {... */\n      tag_474\n      jumpi\n        /* \"launchpad/ico.sol\":13129:13147  isContract(target) */\n      tag_475\n        /* \"launchpad/ico.sol\":13140:13146  target */\n      dup6\n        /* \"launchpad/ico.sol\":13129:13139  isContract */\n      tag_476\n        /* \"launchpad/ico.sol\":13129:13147  isContract(target) */\n      jump\t// in\n    tag_475:\n        /* \"launchpad/ico.sol\":13121:13181  require(isContract(target), \"Address: call to non-contract\") */\n      tag_477\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_478\n      swap1\n      tag_479\n      jump\t// in\n    tag_478:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_477:\n        /* \"launchpad/ico.sol\":12907:13197  if (returndata.length == 0) {... */\n    tag_474:\n        /* \"launchpad/ico.sol\":13218:13228  returndata */\n      dup3\n        /* \"launchpad/ico.sol\":13211:13228  return returndata */\n      swap1\n      pop\n      jump(tag_472)\n        /* \"launchpad/ico.sol\":12879:13306  if (success) {... */\n    tag_473:\n        /* \"launchpad/ico.sol\":13261:13294  _revert(returndata, errorMessage) */\n      tag_481\n        /* \"launchpad/ico.sol\":13269:13279  returndata */\n      dup4\n        /* \"launchpad/ico.sol\":13281:13293  errorMessage */\n      dup4\n        /* \"launchpad/ico.sol\":13261:13268  _revert */\n      tag_482\n        /* \"launchpad/ico.sol\":13261:13294  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_481:\n        /* \"launchpad/ico.sol\":12669:13313  function verifyCallResultFromTarget(... */\n    tag_472:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":6219:6545  function isContract(address account) internal view returns (bool) {... */\n    tag_476:\n        /* \"launchpad/ico.sol\":6279:6283  bool */\n      0x00\n        /* \"launchpad/ico.sol\":6536:6537  0 */\n      dup1\n        /* \"launchpad/ico.sol\":6514:6521  account */\n      dup3\n        /* \"launchpad/ico.sol\":6514:6533  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"launchpad/ico.sol\":6514:6537  account.code.length > 0 */\n      gt\n        /* \"launchpad/ico.sol\":6507:6537  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"launchpad/ico.sol\":6219:6545  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"launchpad/ico.sol\":13855:14407  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_482:\n        /* \"launchpad/ico.sol\":14036:14037  0 */\n      0x00\n        /* \"launchpad/ico.sol\":14016:14026  returndata */\n      dup3\n        /* \"launchpad/ico.sol\":14016:14033  returndata.length */\n      mload\n        /* \"launchpad/ico.sol\":14016:14037  returndata.length > 0 */\n      gt\n        /* \"launchpad/ico.sol\":14012:14400  if (returndata.length > 0) {... */\n      iszero\n      tag_485\n      jumpi\n        /* \"launchpad/ico.sol\":14248:14258  returndata */\n      dup2\n        /* \"launchpad/ico.sol\":14242:14259  mload(returndata) */\n      mload\n        /* \"launchpad/ico.sol\":14305:14320  returndata_size */\n      dup1\n        /* \"launchpad/ico.sol\":14292:14302  returndata */\n      dup4\n        /* \"launchpad/ico.sol\":14288:14290  32 */\n      0x20\n        /* \"launchpad/ico.sol\":14284:14303  add(32, returndata) */\n      add\n        /* \"launchpad/ico.sol\":14277:14321  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"launchpad/ico.sol\":14012:14400  if (returndata.length > 0) {... */\n    tag_485:\n        /* \"launchpad/ico.sol\":14375:14387  errorMessage */\n      dup1\n        /* \"launchpad/ico.sol\":14368:14388  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_487\n      swap2\n      swap1\n      tag_488\n      jump\t// in\n    tag_487:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_490:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_491:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_492:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_493:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_567\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_492\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_494:\n        /* \"#utility.yul\":641:665   */\n      tag_569\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_493\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_570\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_570:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_495:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_572\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_494\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_52:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_575\n      tag_490\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":917:1036   */\n    tag_574:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_576\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_495\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_496:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_497:\n        /* \"#utility.yul\":1346:1370   */\n      tag_579\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_496\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_55:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_581\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_497\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:2053   */\n    tag_60:\n        /* \"#utility.yul\":1760:1764   */\n      0x00\n        /* \"#utility.yul\":1798:1800   */\n      0x60\n        /* \"#utility.yul\":1787:1796   */\n      dup3\n        /* \"#utility.yul\":1783:1801   */\n      add\n        /* \"#utility.yul\":1775:1801   */\n      swap1\n      pop\n        /* \"#utility.yul\":1811:1882   */\n      tag_583\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1868:1877   */\n      dup4\n        /* \"#utility.yul\":1864:1881   */\n      add\n        /* \"#utility.yul\":1855:1861   */\n      dup7\n        /* \"#utility.yul\":1811:1882   */\n      tag_497\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":1892:1964   */\n      tag_584\n        /* \"#utility.yul\":1960:1962   */\n      0x20\n        /* \"#utility.yul\":1949:1958   */\n      dup4\n        /* \"#utility.yul\":1945:1963   */\n      add\n        /* \"#utility.yul\":1936:1942   */\n      dup6\n        /* \"#utility.yul\":1892:1964   */\n      tag_497\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":1974:2046   */\n      tag_585\n        /* \"#utility.yul\":2042:2044   */\n      0x40\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2027:2045   */\n      add\n        /* \"#utility.yul\":2018:2024   */\n      dup5\n        /* \"#utility.yul\":1974:2046   */\n      tag_497\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":1611:2053   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2059:2149   */\n    tag_498:\n        /* \"#utility.yul\":2093:2100   */\n      0x00\n        /* \"#utility.yul\":2136:2141   */\n      dup2\n        /* \"#utility.yul\":2129:2142   */\n      iszero\n        /* \"#utility.yul\":2122:2143   */\n      iszero\n        /* \"#utility.yul\":2111:2143   */\n      swap1\n      pop\n        /* \"#utility.yul\":2059:2149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2155:2264   */\n    tag_499:\n        /* \"#utility.yul\":2236:2257   */\n      tag_588\n        /* \"#utility.yul\":2251:2256   */\n      dup2\n        /* \"#utility.yul\":2236:2257   */\n      tag_498\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":2231:2234   */\n      dup3\n        /* \"#utility.yul\":2224:2258   */\n      mstore\n        /* \"#utility.yul\":2155:2264   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2270:2480   */\n    tag_69:\n        /* \"#utility.yul\":2357:2361   */\n      0x00\n        /* \"#utility.yul\":2395:2397   */\n      0x20\n        /* \"#utility.yul\":2384:2393   */\n      dup3\n        /* \"#utility.yul\":2380:2398   */\n      add\n        /* \"#utility.yul\":2372:2398   */\n      swap1\n      pop\n        /* \"#utility.yul\":2408:2473   */\n      tag_590\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2459:2468   */\n      dup4\n        /* \"#utility.yul\":2455:2472   */\n      add\n        /* \"#utility.yul\":2446:2452   */\n      dup5\n        /* \"#utility.yul\":2408:2473   */\n      tag_499\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":2270:2480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2486:2603   */\n    tag_500:\n        /* \"#utility.yul\":2595:2596   */\n      0x00\n        /* \"#utility.yul\":2592:2593   */\n      dup1\n        /* \"#utility.yul\":2585:2597   */\n      revert\n        /* \"#utility.yul\":2609:2726   */\n    tag_501:\n        /* \"#utility.yul\":2718:2719   */\n      0x00\n        /* \"#utility.yul\":2715:2716   */\n      dup1\n        /* \"#utility.yul\":2708:2720   */\n      revert\n        /* \"#utility.yul\":2732:2849   */\n    tag_502:\n        /* \"#utility.yul\":2841:2842   */\n      0x00\n        /* \"#utility.yul\":2838:2839   */\n      dup1\n        /* \"#utility.yul\":2831:2843   */\n      revert\n        /* \"#utility.yul\":2872:3440   */\n    tag_503:\n        /* \"#utility.yul\":2945:2953   */\n      0x00\n        /* \"#utility.yul\":2955:2961   */\n      dup1\n        /* \"#utility.yul\":3005:3008   */\n      dup4\n        /* \"#utility.yul\":2998:3002   */\n      0x1f\n        /* \"#utility.yul\":2990:2996   */\n      dup5\n        /* \"#utility.yul\":2986:3003   */\n      add\n        /* \"#utility.yul\":2982:3009   */\n      slt\n        /* \"#utility.yul\":2972:3094   */\n      tag_595\n      jumpi\n        /* \"#utility.yul\":3013:3092   */\n      tag_596\n      tag_500\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":2972:3094   */\n    tag_595:\n        /* \"#utility.yul\":3126:3132   */\n      dup3\n        /* \"#utility.yul\":3113:3133   */\n      calldataload\n        /* \"#utility.yul\":3103:3133   */\n      swap1\n      pop\n        /* \"#utility.yul\":3156:3174   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3148:3154   */\n      dup2\n        /* \"#utility.yul\":3145:3175   */\n      gt\n        /* \"#utility.yul\":3142:3259   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":3178:3257   */\n      tag_598\n      tag_501\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":3142:3259   */\n    tag_597:\n        /* \"#utility.yul\":3292:3296   */\n      0x20\n        /* \"#utility.yul\":3284:3290   */\n      dup4\n        /* \"#utility.yul\":3280:3297   */\n      add\n        /* \"#utility.yul\":3268:3297   */\n      swap2\n      pop\n        /* \"#utility.yul\":3346:3349   */\n      dup4\n        /* \"#utility.yul\":3338:3342   */\n      0x20\n        /* \"#utility.yul\":3330:3336   */\n      dup3\n        /* \"#utility.yul\":3326:3343   */\n      mul\n        /* \"#utility.yul\":3316:3324   */\n      dup4\n        /* \"#utility.yul\":3312:3344   */\n      add\n        /* \"#utility.yul\":3309:3350   */\n      gt\n        /* \"#utility.yul\":3306:3434   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":3353:3432   */\n      tag_600\n      tag_502\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":3306:3434   */\n    tag_599:\n        /* \"#utility.yul\":2872:3440   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:4005   */\n    tag_113:\n        /* \"#utility.yul\":3532:3538   */\n      0x00\n        /* \"#utility.yul\":3540:3546   */\n      dup1\n        /* \"#utility.yul\":3589:3591   */\n      0x20\n        /* \"#utility.yul\":3577:3586   */\n      dup4\n        /* \"#utility.yul\":3568:3575   */\n      dup6\n        /* \"#utility.yul\":3564:3587   */\n      sub\n        /* \"#utility.yul\":3560:3592   */\n      slt\n        /* \"#utility.yul\":3557:3676   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":3595:3674   */\n      tag_603\n      tag_490\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":3557:3676   */\n    tag_602:\n        /* \"#utility.yul\":3743:3744   */\n      0x00\n        /* \"#utility.yul\":3732:3741   */\n      dup4\n        /* \"#utility.yul\":3728:3745   */\n      add\n        /* \"#utility.yul\":3715:3746   */\n      calldataload\n        /* \"#utility.yul\":3773:3791   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3765:3771   */\n      dup2\n        /* \"#utility.yul\":3762:3792   */\n      gt\n        /* \"#utility.yul\":3759:3876   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":3795:3874   */\n      tag_605\n      tag_491\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":3759:3876   */\n    tag_604:\n        /* \"#utility.yul\":3908:3988   */\n      tag_606\n        /* \"#utility.yul\":3980:3987   */\n      dup6\n        /* \"#utility.yul\":3971:3977   */\n      dup3\n        /* \"#utility.yul\":3960:3969   */\n      dup7\n        /* \"#utility.yul\":3956:3978   */\n      add\n        /* \"#utility.yul\":3908:3988   */\n      tag_503\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":3890:3988   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3686:3998   */\n      pop\n        /* \"#utility.yul\":3446:4005   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4011:4129   */\n    tag_504:\n        /* \"#utility.yul\":4098:4122   */\n      tag_608\n        /* \"#utility.yul\":4116:4121   */\n      dup2\n        /* \"#utility.yul\":4098:4122   */\n      tag_493\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":4093:4096   */\n      dup3\n        /* \"#utility.yul\":4086:4123   */\n      mstore\n        /* \"#utility.yul\":4011:4129   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4135:4357   */\n    tag_124:\n        /* \"#utility.yul\":4228:4232   */\n      0x00\n        /* \"#utility.yul\":4266:4268   */\n      0x20\n        /* \"#utility.yul\":4255:4264   */\n      dup3\n        /* \"#utility.yul\":4251:4269   */\n      add\n        /* \"#utility.yul\":4243:4269   */\n      swap1\n      pop\n        /* \"#utility.yul\":4279:4350   */\n      tag_610\n        /* \"#utility.yul\":4347:4348   */\n      0x00\n        /* \"#utility.yul\":4336:4345   */\n      dup4\n        /* \"#utility.yul\":4332:4349   */\n      add\n        /* \"#utility.yul\":4323:4329   */\n      dup5\n        /* \"#utility.yul\":4279:4350   */\n      tag_504\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":4135:4357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4363:4423   */\n    tag_505:\n        /* \"#utility.yul\":4391:4394   */\n      0x00\n        /* \"#utility.yul\":4412:4417   */\n      dup2\n        /* \"#utility.yul\":4405:4417   */\n      swap1\n      pop\n        /* \"#utility.yul\":4363:4423   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4429:4571   */\n    tag_506:\n        /* \"#utility.yul\":4479:4488   */\n      0x00\n        /* \"#utility.yul\":4512:4565   */\n      tag_613\n        /* \"#utility.yul\":4530:4564   */\n      tag_614\n        /* \"#utility.yul\":4539:4563   */\n      tag_615\n        /* \"#utility.yul\":4557:4562   */\n      dup5\n        /* \"#utility.yul\":4539:4563   */\n      tag_492\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":4530:4564   */\n      tag_505\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":4512:4565   */\n      tag_492\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":4499:4565   */\n      swap1\n      pop\n        /* \"#utility.yul\":4429:4571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4577:4703   */\n    tag_507:\n        /* \"#utility.yul\":4627:4636   */\n      0x00\n        /* \"#utility.yul\":4660:4697   */\n      tag_617\n        /* \"#utility.yul\":4691:4696   */\n      dup3\n        /* \"#utility.yul\":4660:4697   */\n      tag_506\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":4647:4697   */\n      swap1\n      pop\n        /* \"#utility.yul\":4577:4703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4709:4848   */\n    tag_508:\n        /* \"#utility.yul\":4772:4781   */\n      0x00\n        /* \"#utility.yul\":4805:4842   */\n      tag_619\n        /* \"#utility.yul\":4836:4841   */\n      dup3\n        /* \"#utility.yul\":4805:4842   */\n      tag_507\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":4792:4842   */\n      swap1\n      pop\n        /* \"#utility.yul\":4709:4848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4854:5011   */\n    tag_509:\n        /* \"#utility.yul\":4954:5004   */\n      tag_621\n        /* \"#utility.yul\":4998:5003   */\n      dup2\n        /* \"#utility.yul\":4954:5004   */\n      tag_508\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":4949:4952   */\n      dup3\n        /* \"#utility.yul\":4942:5005   */\n      mstore\n        /* \"#utility.yul\":4854:5011   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5017:5265   */\n    tag_132:\n        /* \"#utility.yul\":5123:5127   */\n      0x00\n        /* \"#utility.yul\":5161:5163   */\n      0x20\n        /* \"#utility.yul\":5150:5159   */\n      dup3\n        /* \"#utility.yul\":5146:5164   */\n      add\n        /* \"#utility.yul\":5138:5164   */\n      swap1\n      pop\n        /* \"#utility.yul\":5174:5258   */\n      tag_623\n        /* \"#utility.yul\":5255:5256   */\n      0x00\n        /* \"#utility.yul\":5244:5253   */\n      dup4\n        /* \"#utility.yul\":5240:5257   */\n      add\n        /* \"#utility.yul\":5231:5237   */\n      dup5\n        /* \"#utility.yul\":5174:5258   */\n      tag_509\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":5017:5265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5271:5824   */\n    tag_157:\n        /* \"#utility.yul\":5448:5452   */\n      0x00\n        /* \"#utility.yul\":5486:5489   */\n      0x80\n        /* \"#utility.yul\":5475:5484   */\n      dup3\n        /* \"#utility.yul\":5471:5490   */\n      add\n        /* \"#utility.yul\":5463:5490   */\n      swap1\n      pop\n        /* \"#utility.yul\":5500:5571   */\n      tag_625\n        /* \"#utility.yul\":5568:5569   */\n      0x00\n        /* \"#utility.yul\":5557:5566   */\n      dup4\n        /* \"#utility.yul\":5553:5570   */\n      add\n        /* \"#utility.yul\":5544:5550   */\n      dup8\n        /* \"#utility.yul\":5500:5571   */\n      tag_497\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":5581:5653   */\n      tag_626\n        /* \"#utility.yul\":5649:5651   */\n      0x20\n        /* \"#utility.yul\":5638:5647   */\n      dup4\n        /* \"#utility.yul\":5634:5652   */\n      add\n        /* \"#utility.yul\":5625:5631   */\n      dup7\n        /* \"#utility.yul\":5581:5653   */\n      tag_497\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":5663:5735   */\n      tag_627\n        /* \"#utility.yul\":5731:5733   */\n      0x40\n        /* \"#utility.yul\":5720:5729   */\n      dup4\n        /* \"#utility.yul\":5716:5734   */\n      add\n        /* \"#utility.yul\":5707:5713   */\n      dup6\n        /* \"#utility.yul\":5663:5735   */\n      tag_497\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":5745:5817   */\n      tag_628\n        /* \"#utility.yul\":5813:5815   */\n      0x60\n        /* \"#utility.yul\":5802:5811   */\n      dup4\n        /* \"#utility.yul\":5798:5816   */\n      add\n        /* \"#utility.yul\":5789:5795   */\n      dup5\n        /* \"#utility.yul\":5745:5817   */\n      tag_497\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":5271:5824   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5830:5999   */\n    tag_510:\n        /* \"#utility.yul\":5914:5925   */\n      0x00\n        /* \"#utility.yul\":5948:5954   */\n      dup3\n        /* \"#utility.yul\":5943:5946   */\n      dup3\n        /* \"#utility.yul\":5936:5955   */\n      mstore\n        /* \"#utility.yul\":5988:5992   */\n      0x20\n        /* \"#utility.yul\":5983:5986   */\n      dup3\n        /* \"#utility.yul\":5979:5993   */\n      add\n        /* \"#utility.yul\":5964:5993   */\n      swap1\n      pop\n        /* \"#utility.yul\":5830:5999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6005:6172   */\n    tag_511:\n        /* \"#utility.yul\":6145:6164   */\n      0x6e6f7420636c61696d61626c6520796574000000000000000000000000000000\n        /* \"#utility.yul\":6141:6142   */\n      0x00\n        /* \"#utility.yul\":6133:6139   */\n      dup3\n        /* \"#utility.yul\":6129:6143   */\n      add\n        /* \"#utility.yul\":6122:6165   */\n      mstore\n        /* \"#utility.yul\":6005:6172   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6178:6544   */\n    tag_512:\n        /* \"#utility.yul\":6320:6323   */\n      0x00\n        /* \"#utility.yul\":6341:6408   */\n      tag_632\n        /* \"#utility.yul\":6405:6407   */\n      0x11\n        /* \"#utility.yul\":6400:6403   */\n      dup4\n        /* \"#utility.yul\":6341:6408   */\n      tag_510\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":6334:6408   */\n      swap2\n      pop\n        /* \"#utility.yul\":6417:6510   */\n      tag_633\n        /* \"#utility.yul\":6506:6509   */\n      dup3\n        /* \"#utility.yul\":6417:6510   */\n      tag_511\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":6535:6537   */\n      0x20\n        /* \"#utility.yul\":6530:6533   */\n      dup3\n        /* \"#utility.yul\":6526:6538   */\n      add\n        /* \"#utility.yul\":6519:6538   */\n      swap1\n      pop\n        /* \"#utility.yul\":6178:6544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6550:6969   */\n    tag_196:\n        /* \"#utility.yul\":6716:6720   */\n      0x00\n        /* \"#utility.yul\":6754:6756   */\n      0x20\n        /* \"#utility.yul\":6743:6752   */\n      dup3\n        /* \"#utility.yul\":6739:6757   */\n      add\n        /* \"#utility.yul\":6731:6757   */\n      swap1\n      pop\n        /* \"#utility.yul\":6803:6812   */\n      dup2\n        /* \"#utility.yul\":6797:6801   */\n      dup2\n        /* \"#utility.yul\":6793:6813   */\n      sub\n        /* \"#utility.yul\":6789:6790   */\n      0x00\n        /* \"#utility.yul\":6778:6787   */\n      dup4\n        /* \"#utility.yul\":6774:6791   */\n      add\n        /* \"#utility.yul\":6767:6814   */\n      mstore\n        /* \"#utility.yul\":6831:6962   */\n      tag_635\n        /* \"#utility.yul\":6957:6961   */\n      dup2\n        /* \"#utility.yul\":6831:6962   */\n      tag_512\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":6823:6962   */\n      swap1\n      pop\n        /* \"#utility.yul\":6550:6969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6975:7155   */\n    tag_513:\n        /* \"#utility.yul\":7023:7100   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7020:7021   */\n      0x00\n        /* \"#utility.yul\":7013:7101   */\n      mstore\n        /* \"#utility.yul\":7120:7124   */\n      0x12\n        /* \"#utility.yul\":7117:7118   */\n      0x04\n        /* \"#utility.yul\":7110:7125   */\n      mstore\n        /* \"#utility.yul\":7144:7148   */\n      0x24\n        /* \"#utility.yul\":7141:7142   */\n      0x00\n        /* \"#utility.yul\":7134:7149   */\n      revert\n        /* \"#utility.yul\":7161:7341   */\n    tag_514:\n        /* \"#utility.yul\":7209:7286   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7206:7207   */\n      0x00\n        /* \"#utility.yul\":7199:7287   */\n      mstore\n        /* \"#utility.yul\":7306:7310   */\n      0x11\n        /* \"#utility.yul\":7303:7304   */\n      0x04\n        /* \"#utility.yul\":7296:7311   */\n      mstore\n        /* \"#utility.yul\":7330:7334   */\n      0x24\n        /* \"#utility.yul\":7327:7328   */\n      0x00\n        /* \"#utility.yul\":7320:7335   */\n      revert\n        /* \"#utility.yul\":7347:7532   */\n    tag_198:\n        /* \"#utility.yul\":7387:7388   */\n      0x00\n        /* \"#utility.yul\":7404:7424   */\n      tag_639\n        /* \"#utility.yul\":7422:7423   */\n      dup3\n        /* \"#utility.yul\":7404:7424   */\n      tag_496\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":7399:7424   */\n      swap2\n      pop\n        /* \"#utility.yul\":7438:7458   */\n      tag_640\n        /* \"#utility.yul\":7456:7457   */\n      dup4\n        /* \"#utility.yul\":7438:7458   */\n      tag_496\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":7433:7458   */\n      swap3\n      pop\n        /* \"#utility.yul\":7477:7478   */\n      dup3\n        /* \"#utility.yul\":7467:7502   */\n      tag_641\n      jumpi\n        /* \"#utility.yul\":7482:7500   */\n      tag_642\n      tag_513\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":7467:7502   */\n    tag_641:\n        /* \"#utility.yul\":7524:7525   */\n      dup3\n        /* \"#utility.yul\":7521:7522   */\n      dup3\n        /* \"#utility.yul\":7517:7526   */\n      div\n        /* \"#utility.yul\":7512:7526   */\n      swap1\n      pop\n        /* \"#utility.yul\":7347:7532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7538:7843   */\n    tag_203:\n        /* \"#utility.yul\":7578:7581   */\n      0x00\n        /* \"#utility.yul\":7597:7617   */\n      tag_644\n        /* \"#utility.yul\":7615:7616   */\n      dup3\n        /* \"#utility.yul\":7597:7617   */\n      tag_496\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":7592:7617   */\n      swap2\n      pop\n        /* \"#utility.yul\":7631:7651   */\n      tag_645\n        /* \"#utility.yul\":7649:7650   */\n      dup4\n        /* \"#utility.yul\":7631:7651   */\n      tag_496\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":7626:7651   */\n      swap3\n      pop\n        /* \"#utility.yul\":7785:7786   */\n      dup3\n        /* \"#utility.yul\":7717:7783   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7713:7787   */\n      sub\n        /* \"#utility.yul\":7710:7711   */\n      dup3\n        /* \"#utility.yul\":7707:7788   */\n      gt\n        /* \"#utility.yul\":7704:7811   */\n      iszero\n      tag_646\n      jumpi\n        /* \"#utility.yul\":7791:7809   */\n      tag_647\n      tag_514\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":7704:7811   */\n    tag_646:\n        /* \"#utility.yul\":7835:7836   */\n      dup3\n        /* \"#utility.yul\":7832:7833   */\n      dup3\n        /* \"#utility.yul\":7828:7837   */\n      add\n        /* \"#utility.yul\":7821:7837   */\n      swap1\n      pop\n        /* \"#utility.yul\":7538:7843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7849:8197   */\n    tag_215:\n        /* \"#utility.yul\":7889:7896   */\n      0x00\n        /* \"#utility.yul\":7912:7932   */\n      tag_649\n        /* \"#utility.yul\":7930:7931   */\n      dup3\n        /* \"#utility.yul\":7912:7932   */\n      tag_496\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":7907:7932   */\n      swap2\n      pop\n        /* \"#utility.yul\":7946:7966   */\n      tag_650\n        /* \"#utility.yul\":7964:7965   */\n      dup4\n        /* \"#utility.yul\":7946:7966   */\n      tag_496\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":7941:7966   */\n      swap3\n      pop\n        /* \"#utility.yul\":8134:8135   */\n      dup2\n        /* \"#utility.yul\":8066:8132   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8062:8136   */\n      div\n        /* \"#utility.yul\":8059:8060   */\n      dup4\n        /* \"#utility.yul\":8056:8137   */\n      gt\n        /* \"#utility.yul\":8051:8052   */\n      dup3\n        /* \"#utility.yul\":8044:8053   */\n      iszero\n        /* \"#utility.yul\":8037:8054   */\n      iszero\n        /* \"#utility.yul\":8033:8138   */\n      and\n        /* \"#utility.yul\":8030:8161   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":8141:8159   */\n      tag_652\n      tag_514\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":8030:8161   */\n    tag_651:\n        /* \"#utility.yul\":8189:8190   */\n      dup3\n        /* \"#utility.yul\":8186:8187   */\n      dup3\n        /* \"#utility.yul\":8182:8191   */\n      mul\n        /* \"#utility.yul\":8171:8191   */\n      swap1\n      pop\n        /* \"#utility.yul\":7849:8197   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8203:8394   */\n    tag_219:\n        /* \"#utility.yul\":8243:8247   */\n      0x00\n        /* \"#utility.yul\":8263:8283   */\n      tag_654\n        /* \"#utility.yul\":8281:8282   */\n      dup3\n        /* \"#utility.yul\":8263:8283   */\n      tag_496\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":8258:8283   */\n      swap2\n      pop\n        /* \"#utility.yul\":8297:8317   */\n      tag_655\n        /* \"#utility.yul\":8315:8316   */\n      dup4\n        /* \"#utility.yul\":8297:8317   */\n      tag_496\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":8292:8317   */\n      swap3\n      pop\n        /* \"#utility.yul\":8336:8337   */\n      dup3\n        /* \"#utility.yul\":8333:8334   */\n      dup3\n        /* \"#utility.yul\":8330:8338   */\n      lt\n        /* \"#utility.yul\":8327:8361   */\n      iszero\n      tag_656\n      jumpi\n        /* \"#utility.yul\":8341:8359   */\n      tag_657\n      tag_514\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":8327:8361   */\n    tag_656:\n        /* \"#utility.yul\":8386:8387   */\n      dup3\n        /* \"#utility.yul\":8383:8384   */\n      dup3\n        /* \"#utility.yul\":8379:8388   */\n      sub\n        /* \"#utility.yul\":8371:8388   */\n      swap1\n      pop\n        /* \"#utility.yul\":8203:8394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8400:8633   */\n    tag_515:\n        /* \"#utility.yul\":8540:8574   */\n      0x43616e206f6e6c79206465706f73697420457468657220647572696e67207468\n        /* \"#utility.yul\":8536:8537   */\n      0x00\n        /* \"#utility.yul\":8528:8534   */\n      dup3\n        /* \"#utility.yul\":8524:8538   */\n      add\n        /* \"#utility.yul\":8517:8575   */\n      mstore\n        /* \"#utility.yul\":8609:8625   */\n      0x652073616c6520706572696f642e000000000000000000000000000000000000\n        /* \"#utility.yul\":8604:8606   */\n      0x20\n        /* \"#utility.yul\":8596:8602   */\n      dup3\n        /* \"#utility.yul\":8592:8607   */\n      add\n        /* \"#utility.yul\":8585:8626   */\n      mstore\n        /* \"#utility.yul\":8400:8633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8639:9005   */\n    tag_516:\n        /* \"#utility.yul\":8781:8784   */\n      0x00\n        /* \"#utility.yul\":8802:8869   */\n      tag_660\n        /* \"#utility.yul\":8866:8868   */\n      0x2e\n        /* \"#utility.yul\":8861:8864   */\n      dup4\n        /* \"#utility.yul\":8802:8869   */\n      tag_510\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":8795:8869   */\n      swap2\n      pop\n        /* \"#utility.yul\":8878:8971   */\n      tag_661\n        /* \"#utility.yul\":8967:8970   */\n      dup3\n        /* \"#utility.yul\":8878:8971   */\n      tag_515\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":8996:8998   */\n      0x40\n        /* \"#utility.yul\":8991:8994   */\n      dup3\n        /* \"#utility.yul\":8987:8999   */\n      add\n        /* \"#utility.yul\":8980:8999   */\n      swap1\n      pop\n        /* \"#utility.yul\":8639:9005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9011:9430   */\n    tag_237:\n        /* \"#utility.yul\":9177:9181   */\n      0x00\n        /* \"#utility.yul\":9215:9217   */\n      0x20\n        /* \"#utility.yul\":9204:9213   */\n      dup3\n        /* \"#utility.yul\":9200:9218   */\n      add\n        /* \"#utility.yul\":9192:9218   */\n      swap1\n      pop\n        /* \"#utility.yul\":9264:9273   */\n      dup2\n        /* \"#utility.yul\":9258:9262   */\n      dup2\n        /* \"#utility.yul\":9254:9274   */\n      sub\n        /* \"#utility.yul\":9250:9251   */\n      0x00\n        /* \"#utility.yul\":9239:9248   */\n      dup4\n        /* \"#utility.yul\":9235:9252   */\n      add\n        /* \"#utility.yul\":9228:9275   */\n      mstore\n        /* \"#utility.yul\":9292:9423   */\n      tag_663\n        /* \"#utility.yul\":9418:9422   */\n      dup2\n        /* \"#utility.yul\":9292:9423   */\n      tag_516\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":9284:9423   */\n      swap1\n      pop\n        /* \"#utility.yul\":9011:9430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9436:9670   */\n    tag_517:\n        /* \"#utility.yul\":9576:9610   */\n      0x436f6d6d69746d656e7420616d6f756e74206973206f75747369646520746865\n        /* \"#utility.yul\":9572:9573   */\n      0x00\n        /* \"#utility.yul\":9564:9570   */\n      dup3\n        /* \"#utility.yul\":9560:9574   */\n      add\n        /* \"#utility.yul\":9553:9611   */\n      mstore\n        /* \"#utility.yul\":9645:9662   */\n      0x20616c6c6f7765642072616e67652e0000000000000000000000000000000000\n        /* \"#utility.yul\":9640:9642   */\n      0x20\n        /* \"#utility.yul\":9632:9638   */\n      dup3\n        /* \"#utility.yul\":9628:9643   */\n      add\n        /* \"#utility.yul\":9621:9663   */\n      mstore\n        /* \"#utility.yul\":9436:9670   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9676:10042   */\n    tag_518:\n        /* \"#utility.yul\":9818:9821   */\n      0x00\n        /* \"#utility.yul\":9839:9906   */\n      tag_666\n        /* \"#utility.yul\":9903:9905   */\n      0x2f\n        /* \"#utility.yul\":9898:9901   */\n      dup4\n        /* \"#utility.yul\":9839:9906   */\n      tag_510\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":9832:9906   */\n      swap2\n      pop\n        /* \"#utility.yul\":9915:10008   */\n      tag_667\n        /* \"#utility.yul\":10004:10007   */\n      dup3\n        /* \"#utility.yul\":9915:10008   */\n      tag_517\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":10033:10035   */\n      0x40\n        /* \"#utility.yul\":10028:10031   */\n      dup3\n        /* \"#utility.yul\":10024:10036   */\n      add\n        /* \"#utility.yul\":10017:10036   */\n      swap1\n      pop\n        /* \"#utility.yul\":9676:10042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10048:10467   */\n    tag_243:\n        /* \"#utility.yul\":10214:10218   */\n      0x00\n        /* \"#utility.yul\":10252:10254   */\n      0x20\n        /* \"#utility.yul\":10241:10250   */\n      dup3\n        /* \"#utility.yul\":10237:10255   */\n      add\n        /* \"#utility.yul\":10229:10255   */\n      swap1\n      pop\n        /* \"#utility.yul\":10301:10310   */\n      dup2\n        /* \"#utility.yul\":10295:10299   */\n      dup2\n        /* \"#utility.yul\":10291:10311   */\n      sub\n        /* \"#utility.yul\":10287:10288   */\n      0x00\n        /* \"#utility.yul\":10276:10285   */\n      dup4\n        /* \"#utility.yul\":10272:10289   */\n      add\n        /* \"#utility.yul\":10265:10312   */\n      mstore\n        /* \"#utility.yul\":10329:10460   */\n      tag_669\n        /* \"#utility.yul\":10455:10459   */\n      dup2\n        /* \"#utility.yul\":10329:10460   */\n      tag_518\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":10321:10460   */\n      swap1\n      pop\n        /* \"#utility.yul\":10048:10467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10473:10707   */\n    tag_519:\n        /* \"#utility.yul\":10613:10647   */\n      0x43616e206f6e6c7920636c61696d20746f6b656e732061667465722074686520\n        /* \"#utility.yul\":10609:10610   */\n      0x00\n        /* \"#utility.yul\":10601:10607   */\n      dup3\n        /* \"#utility.yul\":10597:10611   */\n      add\n        /* \"#utility.yul\":10590:10648   */\n      mstore\n        /* \"#utility.yul\":10682:10699   */\n      0x73616c652068617320656e6465642e0000000000000000000000000000000000\n        /* \"#utility.yul\":10677:10679   */\n      0x20\n        /* \"#utility.yul\":10669:10675   */\n      dup3\n        /* \"#utility.yul\":10665:10680   */\n      add\n        /* \"#utility.yul\":10658:10700   */\n      mstore\n        /* \"#utility.yul\":10473:10707   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10713:11079   */\n    tag_520:\n        /* \"#utility.yul\":10855:10858   */\n      0x00\n        /* \"#utility.yul\":10876:10943   */\n      tag_672\n        /* \"#utility.yul\":10940:10942   */\n      0x2f\n        /* \"#utility.yul\":10935:10938   */\n      dup4\n        /* \"#utility.yul\":10876:10943   */\n      tag_510\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":10869:10943   */\n      swap2\n      pop\n        /* \"#utility.yul\":10952:11045   */\n      tag_673\n        /* \"#utility.yul\":11041:11044   */\n      dup3\n        /* \"#utility.yul\":10952:11045   */\n      tag_519\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":11070:11072   */\n      0x40\n        /* \"#utility.yul\":11065:11068   */\n      dup3\n        /* \"#utility.yul\":11061:11073   */\n      add\n        /* \"#utility.yul\":11054:11073   */\n      swap1\n      pop\n        /* \"#utility.yul\":10713:11079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11085:11504   */\n    tag_256:\n        /* \"#utility.yul\":11251:11255   */\n      0x00\n        /* \"#utility.yul\":11289:11291   */\n      0x20\n        /* \"#utility.yul\":11278:11287   */\n      dup3\n        /* \"#utility.yul\":11274:11292   */\n      add\n        /* \"#utility.yul\":11266:11292   */\n      swap1\n      pop\n        /* \"#utility.yul\":11338:11347   */\n      dup2\n        /* \"#utility.yul\":11332:11336   */\n      dup2\n        /* \"#utility.yul\":11328:11348   */\n      sub\n        /* \"#utility.yul\":11324:11325   */\n      0x00\n        /* \"#utility.yul\":11313:11322   */\n      dup4\n        /* \"#utility.yul\":11309:11326   */\n      add\n        /* \"#utility.yul\":11302:11349   */\n      mstore\n        /* \"#utility.yul\":11366:11497   */\n      tag_675\n        /* \"#utility.yul\":11492:11496   */\n      dup2\n        /* \"#utility.yul\":11366:11497   */\n      tag_520\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":11358:11497   */\n      swap1\n      pop\n        /* \"#utility.yul\":11085:11504   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11510:11730   */\n    tag_521:\n        /* \"#utility.yul\":11650:11684   */\n      0x596f752068617665206e6f74206465706f736974656420616e79204574686572\n        /* \"#utility.yul\":11646:11647   */\n      0x00\n        /* \"#utility.yul\":11638:11644   */\n      dup3\n        /* \"#utility.yul\":11634:11648   */\n      add\n        /* \"#utility.yul\":11627:11685   */\n      mstore\n        /* \"#utility.yul\":11719:11722   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11714:11716   */\n      0x20\n        /* \"#utility.yul\":11706:11712   */\n      dup3\n        /* \"#utility.yul\":11702:11717   */\n      add\n        /* \"#utility.yul\":11695:11723   */\n      mstore\n        /* \"#utility.yul\":11510:11730   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11736:12102   */\n    tag_522:\n        /* \"#utility.yul\":11878:11881   */\n      0x00\n        /* \"#utility.yul\":11899:11966   */\n      tag_678\n        /* \"#utility.yul\":11963:11965   */\n      0x21\n        /* \"#utility.yul\":11958:11961   */\n      dup4\n        /* \"#utility.yul\":11899:11966   */\n      tag_510\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":11892:11966   */\n      swap2\n      pop\n        /* \"#utility.yul\":11975:12068   */\n      tag_679\n        /* \"#utility.yul\":12064:12067   */\n      dup3\n        /* \"#utility.yul\":11975:12068   */\n      tag_521\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":12093:12095   */\n      0x40\n        /* \"#utility.yul\":12088:12091   */\n      dup3\n        /* \"#utility.yul\":12084:12096   */\n      add\n        /* \"#utility.yul\":12077:12096   */\n      swap1\n      pop\n        /* \"#utility.yul\":11736:12102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12108:12527   */\n    tag_259:\n        /* \"#utility.yul\":12274:12278   */\n      0x00\n        /* \"#utility.yul\":12312:12314   */\n      0x20\n        /* \"#utility.yul\":12301:12310   */\n      dup3\n        /* \"#utility.yul\":12297:12315   */\n      add\n        /* \"#utility.yul\":12289:12315   */\n      swap1\n      pop\n        /* \"#utility.yul\":12361:12370   */\n      dup2\n        /* \"#utility.yul\":12355:12359   */\n      dup2\n        /* \"#utility.yul\":12351:12371   */\n      sub\n        /* \"#utility.yul\":12347:12348   */\n      0x00\n        /* \"#utility.yul\":12336:12345   */\n      dup4\n        /* \"#utility.yul\":12332:12349   */\n      add\n        /* \"#utility.yul\":12325:12372   */\n      mstore\n        /* \"#utility.yul\":12389:12520   */\n      tag_681\n        /* \"#utility.yul\":12515:12519   */\n      dup2\n        /* \"#utility.yul\":12389:12520   */\n      tag_522\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":12381:12520   */\n      swap1\n      pop\n        /* \"#utility.yul\":12108:12527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12533:12680   */\n    tag_523:\n        /* \"#utility.yul\":12634:12645   */\n      0x00\n        /* \"#utility.yul\":12671:12674   */\n      dup2\n        /* \"#utility.yul\":12656:12674   */\n      swap1\n      pop\n        /* \"#utility.yul\":12533:12680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12686:12800   */\n    tag_524:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12806:13204   */\n    tag_525:\n        /* \"#utility.yul\":12965:12968   */\n      0x00\n        /* \"#utility.yul\":12986:13069   */\n      tag_685\n        /* \"#utility.yul\":13067:13068   */\n      0x00\n        /* \"#utility.yul\":13062:13065   */\n      dup4\n        /* \"#utility.yul\":12986:13069   */\n      tag_523\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":12979:13069   */\n      swap2\n      pop\n        /* \"#utility.yul\":13078:13171   */\n      tag_686\n        /* \"#utility.yul\":13167:13170   */\n      dup3\n        /* \"#utility.yul\":13078:13171   */\n      tag_524\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":13196:13197   */\n      0x00\n        /* \"#utility.yul\":13191:13194   */\n      dup3\n        /* \"#utility.yul\":13187:13198   */\n      add\n        /* \"#utility.yul\":13180:13198   */\n      swap1\n      pop\n        /* \"#utility.yul\":12806:13204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13210:13589   */\n    tag_271:\n        /* \"#utility.yul\":13394:13397   */\n      0x00\n        /* \"#utility.yul\":13416:13563   */\n      tag_688\n        /* \"#utility.yul\":13559:13562   */\n      dup3\n        /* \"#utility.yul\":13416:13563   */\n      tag_525\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":13409:13563   */\n      swap2\n      pop\n        /* \"#utility.yul\":13580:13583   */\n      dup2\n        /* \"#utility.yul\":13573:13583   */\n      swap1\n      pop\n        /* \"#utility.yul\":13210:13589   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13595:13769   */\n    tag_526:\n        /* \"#utility.yul\":13735:13761   */\n      0x4661696c656420746f207472616e736665722065746865720000000000000000\n        /* \"#utility.yul\":13731:13732   */\n      0x00\n        /* \"#utility.yul\":13723:13729   */\n      dup3\n        /* \"#utility.yul\":13719:13733   */\n      add\n        /* \"#utility.yul\":13712:13762   */\n      mstore\n        /* \"#utility.yul\":13595:13769   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13775:14141   */\n    tag_527:\n        /* \"#utility.yul\":13917:13920   */\n      0x00\n        /* \"#utility.yul\":13938:14005   */\n      tag_691\n        /* \"#utility.yul\":14002:14004   */\n      0x18\n        /* \"#utility.yul\":13997:14000   */\n      dup4\n        /* \"#utility.yul\":13938:14005   */\n      tag_510\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":13931:14005   */\n      swap2\n      pop\n        /* \"#utility.yul\":14014:14107   */\n      tag_692\n        /* \"#utility.yul\":14103:14106   */\n      dup3\n        /* \"#utility.yul\":14014:14107   */\n      tag_526\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":14132:14134   */\n      0x20\n        /* \"#utility.yul\":14127:14130   */\n      dup3\n        /* \"#utility.yul\":14123:14135   */\n      add\n        /* \"#utility.yul\":14116:14135   */\n      swap1\n      pop\n        /* \"#utility.yul\":13775:14141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14147:14566   */\n    tag_277:\n        /* \"#utility.yul\":14313:14317   */\n      0x00\n        /* \"#utility.yul\":14351:14353   */\n      0x20\n        /* \"#utility.yul\":14340:14349   */\n      dup3\n        /* \"#utility.yul\":14336:14354   */\n      add\n        /* \"#utility.yul\":14328:14354   */\n      swap1\n      pop\n        /* \"#utility.yul\":14400:14409   */\n      dup2\n        /* \"#utility.yul\":14394:14398   */\n      dup2\n        /* \"#utility.yul\":14390:14410   */\n      sub\n        /* \"#utility.yul\":14386:14387   */\n      0x00\n        /* \"#utility.yul\":14375:14384   */\n      dup4\n        /* \"#utility.yul\":14371:14388   */\n      add\n        /* \"#utility.yul\":14364:14411   */\n      mstore\n        /* \"#utility.yul\":14428:14559   */\n      tag_694\n        /* \"#utility.yul\":14554:14558   */\n      dup2\n        /* \"#utility.yul\":14428:14559   */\n      tag_527\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":14420:14559   */\n      swap1\n      pop\n        /* \"#utility.yul\":14147:14566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14572:14657   */\n    tag_528:\n        /* \"#utility.yul\":14617:14624   */\n      0x00\n        /* \"#utility.yul\":14646:14651   */\n      dup2\n        /* \"#utility.yul\":14635:14651   */\n      swap1\n      pop\n        /* \"#utility.yul\":14572:14657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14663:14821   */\n    tag_529:\n        /* \"#utility.yul\":14721:14730   */\n      0x00\n        /* \"#utility.yul\":14754:14815   */\n      tag_697\n        /* \"#utility.yul\":14772:14814   */\n      tag_698\n        /* \"#utility.yul\":14781:14813   */\n      tag_699\n        /* \"#utility.yul\":14807:14812   */\n      dup5\n        /* \"#utility.yul\":14781:14813   */\n      tag_528\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":14772:14814   */\n      tag_505\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":14754:14815   */\n      tag_496\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":14741:14815   */\n      swap1\n      pop\n        /* \"#utility.yul\":14663:14821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14827:14974   */\n    tag_530:\n        /* \"#utility.yul\":14922:14967   */\n      tag_701\n        /* \"#utility.yul\":14961:14966   */\n      dup2\n        /* \"#utility.yul\":14922:14967   */\n      tag_529\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":14917:14920   */\n      dup3\n        /* \"#utility.yul\":14910:14968   */\n      mstore\n        /* \"#utility.yul\":14827:14974   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14980:15454   */\n    tag_287:\n        /* \"#utility.yul\":15145:15149   */\n      0x00\n        /* \"#utility.yul\":15183:15185   */\n      0x60\n        /* \"#utility.yul\":15172:15181   */\n      dup3\n        /* \"#utility.yul\":15168:15186   */\n      add\n        /* \"#utility.yul\":15160:15186   */\n      swap1\n      pop\n        /* \"#utility.yul\":15196:15267   */\n      tag_703\n        /* \"#utility.yul\":15264:15265   */\n      0x00\n        /* \"#utility.yul\":15253:15262   */\n      dup4\n        /* \"#utility.yul\":15249:15266   */\n      add\n        /* \"#utility.yul\":15240:15246   */\n      dup7\n        /* \"#utility.yul\":15196:15267   */\n      tag_497\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":15277:15357   */\n      tag_704\n        /* \"#utility.yul\":15353:15355   */\n      0x20\n        /* \"#utility.yul\":15342:15351   */\n      dup4\n        /* \"#utility.yul\":15338:15356   */\n      add\n        /* \"#utility.yul\":15329:15335   */\n      dup6\n        /* \"#utility.yul\":15277:15357   */\n      tag_530\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":15367:15447   */\n      tag_705\n        /* \"#utility.yul\":15443:15445   */\n      0x40\n        /* \"#utility.yul\":15432:15441   */\n      dup4\n        /* \"#utility.yul\":15428:15446   */\n      add\n        /* \"#utility.yul\":15419:15425   */\n      dup5\n        /* \"#utility.yul\":15367:15447   */\n      tag_530\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":14980:15454   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15460:15640   */\n    tag_298:\n        /* \"#utility.yul\":15508:15585   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15505:15506   */\n      0x00\n        /* \"#utility.yul\":15498:15586   */\n      mstore\n        /* \"#utility.yul\":15605:15609   */\n      0x32\n        /* \"#utility.yul\":15602:15603   */\n      0x04\n        /* \"#utility.yul\":15595:15610   */\n      mstore\n        /* \"#utility.yul\":15629:15633   */\n      0x24\n        /* \"#utility.yul\":15626:15627   */\n      0x00\n        /* \"#utility.yul\":15619:15634   */\n      revert\n        /* \"#utility.yul\":15646:15879   */\n    tag_301:\n        /* \"#utility.yul\":15685:15688   */\n      0x00\n        /* \"#utility.yul\":15708:15732   */\n      tag_708\n        /* \"#utility.yul\":15726:15731   */\n      dup3\n        /* \"#utility.yul\":15708:15732   */\n      tag_496\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":15699:15732   */\n      swap2\n      pop\n        /* \"#utility.yul\":15754:15820   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15747:15752   */\n      dup3\n        /* \"#utility.yul\":15744:15821   */\n      sub\n        /* \"#utility.yul\":15741:15844   */\n      tag_709\n      jumpi\n        /* \"#utility.yul\":15824:15842   */\n      tag_710\n      tag_514\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":15741:15844   */\n    tag_709:\n        /* \"#utility.yul\":15871:15872   */\n      0x01\n        /* \"#utility.yul\":15864:15869   */\n      dup3\n        /* \"#utility.yul\":15860:15873   */\n      add\n        /* \"#utility.yul\":15853:15873   */\n      swap1\n      pop\n        /* \"#utility.yul\":15646:15879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15885:16051   */\n    tag_531:\n        /* \"#utility.yul\":16025:16043   */\n      0x416c726561647920737461727465642e00000000000000000000000000000000\n        /* \"#utility.yul\":16021:16022   */\n      0x00\n        /* \"#utility.yul\":16013:16019   */\n      dup3\n        /* \"#utility.yul\":16009:16023   */\n      add\n        /* \"#utility.yul\":16002:16044   */\n      mstore\n        /* \"#utility.yul\":15885:16051   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16057:16423   */\n    tag_532:\n        /* \"#utility.yul\":16199:16202   */\n      0x00\n        /* \"#utility.yul\":16220:16287   */\n      tag_713\n        /* \"#utility.yul\":16284:16286   */\n      0x10\n        /* \"#utility.yul\":16279:16282   */\n      dup4\n        /* \"#utility.yul\":16220:16287   */\n      tag_510\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":16213:16287   */\n      swap2\n      pop\n        /* \"#utility.yul\":16296:16389   */\n      tag_714\n        /* \"#utility.yul\":16385:16388   */\n      dup3\n        /* \"#utility.yul\":16296:16389   */\n      tag_531\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":16414:16416   */\n      0x20\n        /* \"#utility.yul\":16409:16412   */\n      dup3\n        /* \"#utility.yul\":16405:16417   */\n      add\n        /* \"#utility.yul\":16398:16417   */\n      swap1\n      pop\n        /* \"#utility.yul\":16057:16423   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16429:16848   */\n    tag_339:\n        /* \"#utility.yul\":16595:16599   */\n      0x00\n        /* \"#utility.yul\":16633:16635   */\n      0x20\n        /* \"#utility.yul\":16622:16631   */\n      dup3\n        /* \"#utility.yul\":16618:16636   */\n      add\n        /* \"#utility.yul\":16610:16636   */\n      swap1\n      pop\n        /* \"#utility.yul\":16682:16691   */\n      dup2\n        /* \"#utility.yul\":16676:16680   */\n      dup2\n        /* \"#utility.yul\":16672:16692   */\n      sub\n        /* \"#utility.yul\":16668:16669   */\n      0x00\n        /* \"#utility.yul\":16657:16666   */\n      dup4\n        /* \"#utility.yul\":16653:16670   */\n      add\n        /* \"#utility.yul\":16646:16693   */\n      mstore\n        /* \"#utility.yul\":16710:16841   */\n      tag_716\n        /* \"#utility.yul\":16836:16840   */\n      dup2\n        /* \"#utility.yul\":16710:16841   */\n      tag_532\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":16702:16841   */\n      swap1\n      pop\n        /* \"#utility.yul\":16429:16848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16854:17082   */\n    tag_533:\n        /* \"#utility.yul\":16994:17028   */\n      0x43616e206f6e6c792066696e697368206166746572207468652073616c652068\n        /* \"#utility.yul\":16990:16991   */\n      0x00\n        /* \"#utility.yul\":16982:16988   */\n      dup3\n        /* \"#utility.yul\":16978:16992   */\n      add\n        /* \"#utility.yul\":16971:17029   */\n      mstore\n        /* \"#utility.yul\":17063:17074   */\n      0x617320656e6465642e0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17058:17060   */\n      0x20\n        /* \"#utility.yul\":17050:17056   */\n      dup3\n        /* \"#utility.yul\":17046:17061   */\n      add\n        /* \"#utility.yul\":17039:17075   */\n      mstore\n        /* \"#utility.yul\":16854:17082   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17088:17454   */\n    tag_534:\n        /* \"#utility.yul\":17230:17233   */\n      0x00\n        /* \"#utility.yul\":17251:17318   */\n      tag_719\n        /* \"#utility.yul\":17315:17317   */\n      0x29\n        /* \"#utility.yul\":17310:17313   */\n      dup4\n        /* \"#utility.yul\":17251:17318   */\n      tag_510\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":17244:17318   */\n      swap2\n      pop\n        /* \"#utility.yul\":17327:17420   */\n      tag_720\n        /* \"#utility.yul\":17416:17419   */\n      dup3\n        /* \"#utility.yul\":17327:17420   */\n      tag_533\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":17445:17447   */\n      0x40\n        /* \"#utility.yul\":17440:17443   */\n      dup3\n        /* \"#utility.yul\":17436:17448   */\n      add\n        /* \"#utility.yul\":17429:17448   */\n      swap1\n      pop\n        /* \"#utility.yul\":17088:17454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17460:17879   */\n    tag_349:\n        /* \"#utility.yul\":17626:17630   */\n      0x00\n        /* \"#utility.yul\":17664:17666   */\n      0x20\n        /* \"#utility.yul\":17653:17662   */\n      dup3\n        /* \"#utility.yul\":17649:17667   */\n      add\n        /* \"#utility.yul\":17641:17667   */\n      swap1\n      pop\n        /* \"#utility.yul\":17713:17722   */\n      dup2\n        /* \"#utility.yul\":17707:17711   */\n      dup2\n        /* \"#utility.yul\":17703:17723   */\n      sub\n        /* \"#utility.yul\":17699:17700   */\n      0x00\n        /* \"#utility.yul\":17688:17697   */\n      dup4\n        /* \"#utility.yul\":17684:17701   */\n      add\n        /* \"#utility.yul\":17677:17724   */\n      mstore\n        /* \"#utility.yul\":17741:17872   */\n      tag_722\n        /* \"#utility.yul\":17867:17871   */\n      dup2\n        /* \"#utility.yul\":17741:17872   */\n      tag_534\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":17733:17872   */\n      swap1\n      pop\n        /* \"#utility.yul\":17460:17879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17885:18052   */\n    tag_535:\n        /* \"#utility.yul\":18025:18044   */\n      0x416c72656164792066696e69736865642e000000000000000000000000000000\n        /* \"#utility.yul\":18021:18022   */\n      0x00\n        /* \"#utility.yul\":18013:18019   */\n      dup3\n        /* \"#utility.yul\":18009:18023   */\n      add\n        /* \"#utility.yul\":18002:18045   */\n      mstore\n        /* \"#utility.yul\":17885:18052   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18058:18424   */\n    tag_536:\n        /* \"#utility.yul\":18200:18203   */\n      0x00\n        /* \"#utility.yul\":18221:18288   */\n      tag_725\n        /* \"#utility.yul\":18285:18287   */\n      0x11\n        /* \"#utility.yul\":18280:18283   */\n      dup4\n        /* \"#utility.yul\":18221:18288   */\n      tag_510\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":18214:18288   */\n      swap2\n      pop\n        /* \"#utility.yul\":18297:18390   */\n      tag_726\n        /* \"#utility.yul\":18386:18389   */\n      dup3\n        /* \"#utility.yul\":18297:18390   */\n      tag_535\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":18415:18417   */\n      0x20\n        /* \"#utility.yul\":18410:18413   */\n      dup3\n        /* \"#utility.yul\":18406:18418   */\n      add\n        /* \"#utility.yul\":18399:18418   */\n      swap1\n      pop\n        /* \"#utility.yul\":18058:18424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18430:18849   */\n    tag_352:\n        /* \"#utility.yul\":18596:18600   */\n      0x00\n        /* \"#utility.yul\":18634:18636   */\n      0x20\n        /* \"#utility.yul\":18623:18632   */\n      dup3\n        /* \"#utility.yul\":18619:18637   */\n      add\n        /* \"#utility.yul\":18611:18637   */\n      swap1\n      pop\n        /* \"#utility.yul\":18683:18692   */\n      dup2\n        /* \"#utility.yul\":18677:18681   */\n      dup2\n        /* \"#utility.yul\":18673:18693   */\n      sub\n        /* \"#utility.yul\":18669:18670   */\n      0x00\n        /* \"#utility.yul\":18658:18667   */\n      dup4\n        /* \"#utility.yul\":18654:18671   */\n      add\n        /* \"#utility.yul\":18647:18694   */\n      mstore\n        /* \"#utility.yul\":18711:18842   */\n      tag_728\n        /* \"#utility.yul\":18837:18841   */\n      dup2\n        /* \"#utility.yul\":18711:18842   */\n      tag_536\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":18703:18842   */\n      swap1\n      pop\n        /* \"#utility.yul\":18430:18849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18855:19080   */\n    tag_537:\n        /* \"#utility.yul\":18995:19029   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":18991:18992   */\n      0x00\n        /* \"#utility.yul\":18983:18989   */\n      dup3\n        /* \"#utility.yul\":18979:18993   */\n      add\n        /* \"#utility.yul\":18972:19030   */\n      mstore\n        /* \"#utility.yul\":19064:19072   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19059:19061   */\n      0x20\n        /* \"#utility.yul\":19051:19057   */\n      dup3\n        /* \"#utility.yul\":19047:19062   */\n      add\n        /* \"#utility.yul\":19040:19073   */\n      mstore\n        /* \"#utility.yul\":18855:19080   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19086:19452   */\n    tag_538:\n        /* \"#utility.yul\":19228:19231   */\n      0x00\n        /* \"#utility.yul\":19249:19316   */\n      tag_731\n        /* \"#utility.yul\":19313:19315   */\n      0x26\n        /* \"#utility.yul\":19308:19311   */\n      dup4\n        /* \"#utility.yul\":19249:19316   */\n      tag_510\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":19242:19316   */\n      swap2\n      pop\n        /* \"#utility.yul\":19325:19418   */\n      tag_732\n        /* \"#utility.yul\":19414:19417   */\n      dup3\n        /* \"#utility.yul\":19325:19418   */\n      tag_537\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":19443:19445   */\n      0x40\n        /* \"#utility.yul\":19438:19441   */\n      dup3\n        /* \"#utility.yul\":19434:19446   */\n      add\n        /* \"#utility.yul\":19427:19446   */\n      swap1\n      pop\n        /* \"#utility.yul\":19086:19452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19458:19877   */\n    tag_383:\n        /* \"#utility.yul\":19624:19628   */\n      0x00\n        /* \"#utility.yul\":19662:19664   */\n      0x20\n        /* \"#utility.yul\":19651:19660   */\n      dup3\n        /* \"#utility.yul\":19647:19665   */\n      add\n        /* \"#utility.yul\":19639:19665   */\n      swap1\n      pop\n        /* \"#utility.yul\":19711:19720   */\n      dup2\n        /* \"#utility.yul\":19705:19709   */\n      dup2\n        /* \"#utility.yul\":19701:19721   */\n      sub\n        /* \"#utility.yul\":19697:19698   */\n      0x00\n        /* \"#utility.yul\":19686:19695   */\n      dup4\n        /* \"#utility.yul\":19682:19699   */\n      add\n        /* \"#utility.yul\":19675:19722   */\n      mstore\n        /* \"#utility.yul\":19739:19870   */\n      tag_734\n        /* \"#utility.yul\":19865:19869   */\n      dup2\n        /* \"#utility.yul\":19739:19870   */\n      tag_538\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":19731:19870   */\n      swap1\n      pop\n        /* \"#utility.yul\":19458:19877   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19883:20064   */\n    tag_539:\n        /* \"#utility.yul\":20023:20056   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":20019:20020   */\n      0x00\n        /* \"#utility.yul\":20011:20017   */\n      dup3\n        /* \"#utility.yul\":20007:20021   */\n      add\n        /* \"#utility.yul\":20000:20057   */\n      mstore\n        /* \"#utility.yul\":19883:20064   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20070:20436   */\n    tag_540:\n        /* \"#utility.yul\":20212:20215   */\n      0x00\n        /* \"#utility.yul\":20233:20300   */\n      tag_737\n        /* \"#utility.yul\":20297:20299   */\n      0x1f\n        /* \"#utility.yul\":20292:20295   */\n      dup4\n        /* \"#utility.yul\":20233:20300   */\n      tag_510\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":20226:20300   */\n      swap2\n      pop\n        /* \"#utility.yul\":20309:20402   */\n      tag_738\n        /* \"#utility.yul\":20398:20401   */\n      dup3\n        /* \"#utility.yul\":20309:20402   */\n      tag_539\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":20427:20429   */\n      0x20\n        /* \"#utility.yul\":20422:20425   */\n      dup3\n        /* \"#utility.yul\":20418:20430   */\n      add\n        /* \"#utility.yul\":20411:20430   */\n      swap1\n      pop\n        /* \"#utility.yul\":20070:20436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20442:20861   */\n    tag_388:\n        /* \"#utility.yul\":20608:20612   */\n      0x00\n        /* \"#utility.yul\":20646:20648   */\n      0x20\n        /* \"#utility.yul\":20635:20644   */\n      dup3\n        /* \"#utility.yul\":20631:20649   */\n      add\n        /* \"#utility.yul\":20623:20649   */\n      swap1\n      pop\n        /* \"#utility.yul\":20695:20704   */\n      dup2\n        /* \"#utility.yul\":20689:20693   */\n      dup2\n        /* \"#utility.yul\":20685:20705   */\n      sub\n        /* \"#utility.yul\":20681:20682   */\n      0x00\n        /* \"#utility.yul\":20670:20679   */\n      dup4\n        /* \"#utility.yul\":20666:20683   */\n      add\n        /* \"#utility.yul\":20659:20706   */\n      mstore\n        /* \"#utility.yul\":20723:20854   */\n      tag_740\n        /* \"#utility.yul\":20849:20853   */\n      dup2\n        /* \"#utility.yul\":20723:20854   */\n      tag_540\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":20715:20854   */\n      swap1\n      pop\n        /* \"#utility.yul\":20442:20861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20867:21199   */\n    tag_392:\n        /* \"#utility.yul\":20988:20992   */\n      0x00\n        /* \"#utility.yul\":21026:21028   */\n      0x40\n        /* \"#utility.yul\":21015:21024   */\n      dup3\n        /* \"#utility.yul\":21011:21029   */\n      add\n        /* \"#utility.yul\":21003:21029   */\n      swap1\n      pop\n        /* \"#utility.yul\":21039:21110   */\n      tag_742\n        /* \"#utility.yul\":21107:21108   */\n      0x00\n        /* \"#utility.yul\":21096:21105   */\n      dup4\n        /* \"#utility.yul\":21092:21109   */\n      add\n        /* \"#utility.yul\":21083:21089   */\n      dup6\n        /* \"#utility.yul\":21039:21110   */\n      tag_504\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":21120:21192   */\n      tag_743\n        /* \"#utility.yul\":21188:21190   */\n      0x20\n        /* \"#utility.yul\":21177:21186   */\n      dup4\n        /* \"#utility.yul\":21173:21191   */\n      add\n        /* \"#utility.yul\":21164:21170   */\n      dup5\n        /* \"#utility.yul\":21120:21192   */\n      tag_497\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":20867:21199   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21205:21366   */\n    tag_541:\n        /* \"#utility.yul\":21345:21358   */\n      0x6e6f742073746172746564000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21341:21342   */\n      0x00\n        /* \"#utility.yul\":21333:21339   */\n      dup3\n        /* \"#utility.yul\":21329:21343   */\n      add\n        /* \"#utility.yul\":21322:21359   */\n      mstore\n        /* \"#utility.yul\":21205:21366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21372:21738   */\n    tag_542:\n        /* \"#utility.yul\":21514:21517   */\n      0x00\n        /* \"#utility.yul\":21535:21602   */\n      tag_746\n        /* \"#utility.yul\":21599:21601   */\n      0x0b\n        /* \"#utility.yul\":21594:21597   */\n      dup4\n        /* \"#utility.yul\":21535:21602   */\n      tag_510\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":21528:21602   */\n      swap2\n      pop\n        /* \"#utility.yul\":21611:21704   */\n      tag_747\n        /* \"#utility.yul\":21700:21703   */\n      dup3\n        /* \"#utility.yul\":21611:21704   */\n      tag_541\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":21729:21731   */\n      0x20\n        /* \"#utility.yul\":21724:21727   */\n      dup3\n        /* \"#utility.yul\":21720:21732   */\n      add\n        /* \"#utility.yul\":21713:21732   */\n      swap1\n      pop\n        /* \"#utility.yul\":21372:21738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21744:22163   */\n    tag_398:\n        /* \"#utility.yul\":21910:21914   */\n      0x00\n        /* \"#utility.yul\":21948:21950   */\n      0x20\n        /* \"#utility.yul\":21937:21946   */\n      dup3\n        /* \"#utility.yul\":21933:21951   */\n      add\n        /* \"#utility.yul\":21925:21951   */\n      swap1\n      pop\n        /* \"#utility.yul\":21997:22006   */\n      dup2\n        /* \"#utility.yul\":21991:21995   */\n      dup2\n        /* \"#utility.yul\":21987:22007   */\n      sub\n        /* \"#utility.yul\":21983:21984   */\n      0x00\n        /* \"#utility.yul\":21972:21981   */\n      dup4\n        /* \"#utility.yul\":21968:21985   */\n      add\n        /* \"#utility.yul\":21961:22008   */\n      mstore\n        /* \"#utility.yul\":22025:22156   */\n      tag_749\n        /* \"#utility.yul\":22151:22155   */\n      dup2\n        /* \"#utility.yul\":22025:22156   */\n      tag_542\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":22017:22156   */\n      swap1\n      pop\n        /* \"#utility.yul\":21744:22163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22169:22351   */\n    tag_543:\n        /* \"#utility.yul\":22309:22343   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":22305:22306   */\n      0x00\n        /* \"#utility.yul\":22297:22303   */\n      dup3\n        /* \"#utility.yul\":22293:22307   */\n      add\n        /* \"#utility.yul\":22286:22344   */\n      mstore\n        /* \"#utility.yul\":22169:22351   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22357:22723   */\n    tag_544:\n        /* \"#utility.yul\":22499:22502   */\n      0x00\n        /* \"#utility.yul\":22520:22587   */\n      tag_752\n        /* \"#utility.yul\":22584:22586   */\n      0x20\n        /* \"#utility.yul\":22579:22582   */\n      dup4\n        /* \"#utility.yul\":22520:22587   */\n      tag_510\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":22513:22587   */\n      swap2\n      pop\n        /* \"#utility.yul\":22596:22689   */\n      tag_753\n        /* \"#utility.yul\":22685:22688   */\n      dup3\n        /* \"#utility.yul\":22596:22689   */\n      tag_543\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":22714:22716   */\n      0x20\n        /* \"#utility.yul\":22709:22712   */\n      dup3\n        /* \"#utility.yul\":22705:22717   */\n      add\n        /* \"#utility.yul\":22698:22717   */\n      swap1\n      pop\n        /* \"#utility.yul\":22357:22723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22729:23148   */\n    tag_423:\n        /* \"#utility.yul\":22895:22899   */\n      0x00\n        /* \"#utility.yul\":22933:22935   */\n      0x20\n        /* \"#utility.yul\":22922:22931   */\n      dup3\n        /* \"#utility.yul\":22918:22936   */\n      add\n        /* \"#utility.yul\":22910:22936   */\n      swap1\n      pop\n        /* \"#utility.yul\":22982:22991   */\n      dup2\n        /* \"#utility.yul\":22976:22980   */\n      dup2\n        /* \"#utility.yul\":22972:22992   */\n      sub\n        /* \"#utility.yul\":22968:22969   */\n      0x00\n        /* \"#utility.yul\":22957:22966   */\n      dup4\n        /* \"#utility.yul\":22953:22970   */\n      add\n        /* \"#utility.yul\":22946:22993   */\n      mstore\n        /* \"#utility.yul\":23010:23141   */\n      tag_755\n        /* \"#utility.yul\":23136:23140   */\n      dup2\n        /* \"#utility.yul\":23010:23141   */\n      tag_544\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":23002:23141   */\n      swap1\n      pop\n        /* \"#utility.yul\":22729:23148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23154:23318   */\n    tag_545:\n        /* \"#utility.yul\":23294:23310   */\n      0x6e6f20636f6d6d69746d656e7473000000000000000000000000000000000000\n        /* \"#utility.yul\":23290:23291   */\n      0x00\n        /* \"#utility.yul\":23282:23288   */\n      dup3\n        /* \"#utility.yul\":23278:23292   */\n      add\n        /* \"#utility.yul\":23271:23311   */\n      mstore\n        /* \"#utility.yul\":23154:23318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23324:23690   */\n    tag_546:\n        /* \"#utility.yul\":23466:23469   */\n      0x00\n        /* \"#utility.yul\":23487:23554   */\n      tag_758\n        /* \"#utility.yul\":23551:23553   */\n      0x0e\n        /* \"#utility.yul\":23546:23549   */\n      dup4\n        /* \"#utility.yul\":23487:23554   */\n      tag_510\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":23480:23554   */\n      swap2\n      pop\n        /* \"#utility.yul\":23563:23656   */\n      tag_759\n        /* \"#utility.yul\":23652:23655   */\n      dup3\n        /* \"#utility.yul\":23563:23656   */\n      tag_545\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":23681:23683   */\n      0x20\n        /* \"#utility.yul\":23676:23679   */\n      dup3\n        /* \"#utility.yul\":23672:23684   */\n      add\n        /* \"#utility.yul\":23665:23684   */\n      swap1\n      pop\n        /* \"#utility.yul\":23324:23690   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23696:24115   */\n    tag_428:\n        /* \"#utility.yul\":23862:23866   */\n      0x00\n        /* \"#utility.yul\":23900:23902   */\n      0x20\n        /* \"#utility.yul\":23889:23898   */\n      dup3\n        /* \"#utility.yul\":23885:23903   */\n      add\n        /* \"#utility.yul\":23877:23903   */\n      swap1\n      pop\n        /* \"#utility.yul\":23949:23958   */\n      dup2\n        /* \"#utility.yul\":23943:23947   */\n      dup2\n        /* \"#utility.yul\":23939:23959   */\n      sub\n        /* \"#utility.yul\":23935:23936   */\n      0x00\n        /* \"#utility.yul\":23924:23933   */\n      dup4\n        /* \"#utility.yul\":23920:23937   */\n      add\n        /* \"#utility.yul\":23913:23960   */\n      mstore\n        /* \"#utility.yul\":23977:24108   */\n      tag_761\n        /* \"#utility.yul\":24103:24107   */\n      dup2\n        /* \"#utility.yul\":23977:24108   */\n      tag_546\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":23969:24108   */\n      swap1\n      pop\n        /* \"#utility.yul\":23696:24115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24121:24563   */\n    tag_444:\n        /* \"#utility.yul\":24270:24274   */\n      0x00\n        /* \"#utility.yul\":24308:24310   */\n      0x60\n        /* \"#utility.yul\":24297:24306   */\n      dup3\n        /* \"#utility.yul\":24293:24311   */\n      add\n        /* \"#utility.yul\":24285:24311   */\n      swap1\n      pop\n        /* \"#utility.yul\":24321:24392   */\n      tag_763\n        /* \"#utility.yul\":24389:24390   */\n      0x00\n        /* \"#utility.yul\":24378:24387   */\n      dup4\n        /* \"#utility.yul\":24374:24391   */\n      add\n        /* \"#utility.yul\":24365:24371   */\n      dup7\n        /* \"#utility.yul\":24321:24392   */\n      tag_504\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":24402:24474   */\n      tag_764\n        /* \"#utility.yul\":24470:24472   */\n      0x20\n        /* \"#utility.yul\":24459:24468   */\n      dup4\n        /* \"#utility.yul\":24455:24473   */\n      add\n        /* \"#utility.yul\":24446:24452   */\n      dup6\n        /* \"#utility.yul\":24402:24474   */\n      tag_504\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":24484:24556   */\n      tag_765\n        /* \"#utility.yul\":24552:24554   */\n      0x40\n        /* \"#utility.yul\":24541:24550   */\n      dup4\n        /* \"#utility.yul\":24537:24555   */\n      add\n        /* \"#utility.yul\":24528:24534   */\n      dup5\n        /* \"#utility.yul\":24484:24556   */\n      tag_497\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":24121:24563   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24569:24685   */\n    tag_547:\n        /* \"#utility.yul\":24639:24660   */\n      tag_767\n        /* \"#utility.yul\":24654:24659   */\n      dup2\n        /* \"#utility.yul\":24639:24660   */\n      tag_498\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":24632:24637   */\n      dup2\n        /* \"#utility.yul\":24629:24661   */\n      eq\n        /* \"#utility.yul\":24619:24679   */\n      tag_768\n      jumpi\n        /* \"#utility.yul\":24675:24676   */\n      0x00\n        /* \"#utility.yul\":24672:24673   */\n      dup1\n        /* \"#utility.yul\":24665:24677   */\n      revert\n        /* \"#utility.yul\":24619:24679   */\n    tag_768:\n        /* \"#utility.yul\":24569:24685   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24691:24828   */\n    tag_548:\n        /* \"#utility.yul\":24745:24750   */\n      0x00\n        /* \"#utility.yul\":24776:24782   */\n      dup2\n        /* \"#utility.yul\":24770:24783   */\n      mload\n        /* \"#utility.yul\":24761:24783   */\n      swap1\n      pop\n        /* \"#utility.yul\":24792:24822   */\n      tag_770\n        /* \"#utility.yul\":24816:24821   */\n      dup2\n        /* \"#utility.yul\":24792:24822   */\n      tag_547\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":24691:24828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24834:25179   */\n    tag_450:\n        /* \"#utility.yul\":24901:24907   */\n      0x00\n        /* \"#utility.yul\":24950:24952   */\n      0x20\n        /* \"#utility.yul\":24938:24947   */\n      dup3\n        /* \"#utility.yul\":24929:24936   */\n      dup5\n        /* \"#utility.yul\":24925:24948   */\n      sub\n        /* \"#utility.yul\":24921:24953   */\n      slt\n        /* \"#utility.yul\":24918:25037   */\n      iszero\n      tag_772\n      jumpi\n        /* \"#utility.yul\":24956:25035   */\n      tag_773\n      tag_490\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":24918:25037   */\n    tag_772:\n        /* \"#utility.yul\":25076:25077   */\n      0x00\n        /* \"#utility.yul\":25101:25162   */\n      tag_774\n        /* \"#utility.yul\":25154:25161   */\n      dup5\n        /* \"#utility.yul\":25145:25151   */\n      dup3\n        /* \"#utility.yul\":25134:25143   */\n      dup6\n        /* \"#utility.yul\":25130:25152   */\n      add\n        /* \"#utility.yul\":25101:25162   */\n      tag_548\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":25091:25162   */\n      swap2\n      pop\n        /* \"#utility.yul\":25047:25172   */\n      pop\n        /* \"#utility.yul\":24834:25179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25185:25414   */\n    tag_549:\n        /* \"#utility.yul\":25325:25359   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":25321:25322   */\n      0x00\n        /* \"#utility.yul\":25313:25319   */\n      dup3\n        /* \"#utility.yul\":25309:25323   */\n      add\n        /* \"#utility.yul\":25302:25360   */\n      mstore\n        /* \"#utility.yul\":25394:25406   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25389:25391   */\n      0x20\n        /* \"#utility.yul\":25381:25387   */\n      dup3\n        /* \"#utility.yul\":25377:25392   */\n      add\n        /* \"#utility.yul\":25370:25407   */\n      mstore\n        /* \"#utility.yul\":25185:25414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25420:25786   */\n    tag_550:\n        /* \"#utility.yul\":25562:25565   */\n      0x00\n        /* \"#utility.yul\":25583:25650   */\n      tag_777\n        /* \"#utility.yul\":25647:25649   */\n      0x2a\n        /* \"#utility.yul\":25642:25645   */\n      dup4\n        /* \"#utility.yul\":25583:25650   */\n      tag_510\n      jump\t// in\n    tag_777:\n        /* \"#utility.yul\":25576:25650   */\n      swap2\n      pop\n        /* \"#utility.yul\":25659:25752   */\n      tag_778\n        /* \"#utility.yul\":25748:25751   */\n      dup3\n        /* \"#utility.yul\":25659:25752   */\n      tag_549\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":25777:25779   */\n      0x40\n        /* \"#utility.yul\":25772:25775   */\n      dup3\n        /* \"#utility.yul\":25768:25780   */\n      add\n        /* \"#utility.yul\":25761:25780   */\n      swap1\n      pop\n        /* \"#utility.yul\":25420:25786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25792:26211   */\n    tag_453:\n        /* \"#utility.yul\":25958:25962   */\n      0x00\n        /* \"#utility.yul\":25996:25998   */\n      0x20\n        /* \"#utility.yul\":25985:25994   */\n      dup3\n        /* \"#utility.yul\":25981:25999   */\n      add\n        /* \"#utility.yul\":25973:25999   */\n      swap1\n      pop\n        /* \"#utility.yul\":26045:26054   */\n      dup2\n        /* \"#utility.yul\":26039:26043   */\n      dup2\n        /* \"#utility.yul\":26035:26055   */\n      sub\n        /* \"#utility.yul\":26031:26032   */\n      0x00\n        /* \"#utility.yul\":26020:26029   */\n      dup4\n        /* \"#utility.yul\":26016:26033   */\n      add\n        /* \"#utility.yul\":26009:26056   */\n      mstore\n        /* \"#utility.yul\":26073:26204   */\n      tag_780\n        /* \"#utility.yul\":26199:26203   */\n      dup2\n        /* \"#utility.yul\":26073:26204   */\n      tag_550\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":26065:26204   */\n      swap1\n      pop\n        /* \"#utility.yul\":25792:26211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26217:26442   */\n    tag_551:\n        /* \"#utility.yul\":26357:26391   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":26353:26354   */\n      0x00\n        /* \"#utility.yul\":26345:26351   */\n      dup3\n        /* \"#utility.yul\":26341:26355   */\n      add\n        /* \"#utility.yul\":26334:26392   */\n      mstore\n        /* \"#utility.yul\":26426:26434   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26421:26423   */\n      0x20\n        /* \"#utility.yul\":26413:26419   */\n      dup3\n        /* \"#utility.yul\":26409:26424   */\n      add\n        /* \"#utility.yul\":26402:26435   */\n      mstore\n        /* \"#utility.yul\":26217:26442   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26448:26814   */\n    tag_552:\n        /* \"#utility.yul\":26590:26593   */\n      0x00\n        /* \"#utility.yul\":26611:26678   */\n      tag_783\n        /* \"#utility.yul\":26675:26677   */\n      0x26\n        /* \"#utility.yul\":26670:26673   */\n      dup4\n        /* \"#utility.yul\":26611:26678   */\n      tag_510\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":26604:26678   */\n      swap2\n      pop\n        /* \"#utility.yul\":26687:26780   */\n      tag_784\n        /* \"#utility.yul\":26776:26779   */\n      dup3\n        /* \"#utility.yul\":26687:26780   */\n      tag_551\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":26805:26807   */\n      0x40\n        /* \"#utility.yul\":26800:26803   */\n      dup3\n        /* \"#utility.yul\":26796:26808   */\n      add\n        /* \"#utility.yul\":26789:26808   */\n      swap1\n      pop\n        /* \"#utility.yul\":26448:26814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26820:27239   */\n    tag_464:\n        /* \"#utility.yul\":26986:26990   */\n      0x00\n        /* \"#utility.yul\":27024:27026   */\n      0x20\n        /* \"#utility.yul\":27013:27022   */\n      dup3\n        /* \"#utility.yul\":27009:27027   */\n      add\n        /* \"#utility.yul\":27001:27027   */\n      swap1\n      pop\n        /* \"#utility.yul\":27073:27082   */\n      dup2\n        /* \"#utility.yul\":27067:27071   */\n      dup2\n        /* \"#utility.yul\":27063:27083   */\n      sub\n        /* \"#utility.yul\":27059:27060   */\n      0x00\n        /* \"#utility.yul\":27048:27057   */\n      dup4\n        /* \"#utility.yul\":27044:27061   */\n      add\n        /* \"#utility.yul\":27037:27084   */\n      mstore\n        /* \"#utility.yul\":27101:27232   */\n      tag_786\n        /* \"#utility.yul\":27227:27231   */\n      dup2\n        /* \"#utility.yul\":27101:27232   */\n      tag_552\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":27093:27232   */\n      swap1\n      pop\n        /* \"#utility.yul\":26820:27239   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27245:27343   */\n    tag_553:\n        /* \"#utility.yul\":27296:27302   */\n      0x00\n        /* \"#utility.yul\":27330:27335   */\n      dup2\n        /* \"#utility.yul\":27324:27336   */\n      mload\n        /* \"#utility.yul\":27314:27336   */\n      swap1\n      pop\n        /* \"#utility.yul\":27245:27343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27349:27656   */\n    tag_554:\n        /* \"#utility.yul\":27417:27418   */\n      0x00\n        /* \"#utility.yul\":27427:27540   */\n    tag_789:\n        /* \"#utility.yul\":27441:27447   */\n      dup4\n        /* \"#utility.yul\":27438:27439   */\n      dup2\n        /* \"#utility.yul\":27435:27448   */\n      lt\n        /* \"#utility.yul\":27427:27540   */\n      iszero\n      tag_791\n      jumpi\n        /* \"#utility.yul\":27526:27527   */\n      dup1\n        /* \"#utility.yul\":27521:27524   */\n      dup3\n        /* \"#utility.yul\":27517:27528   */\n      add\n        /* \"#utility.yul\":27511:27529   */\n      mload\n        /* \"#utility.yul\":27507:27508   */\n      dup2\n        /* \"#utility.yul\":27502:27505   */\n      dup5\n        /* \"#utility.yul\":27498:27509   */\n      add\n        /* \"#utility.yul\":27491:27530   */\n      mstore\n        /* \"#utility.yul\":27463:27465   */\n      0x20\n        /* \"#utility.yul\":27460:27461   */\n      dup2\n        /* \"#utility.yul\":27456:27466   */\n      add\n        /* \"#utility.yul\":27451:27466   */\n      swap1\n      pop\n        /* \"#utility.yul\":27427:27540   */\n      jump(tag_789)\n    tag_791:\n        /* \"#utility.yul\":27558:27564   */\n      dup4\n        /* \"#utility.yul\":27555:27556   */\n      dup2\n        /* \"#utility.yul\":27552:27565   */\n      gt\n        /* \"#utility.yul\":27549:27650   */\n      iszero\n      tag_792\n      jumpi\n        /* \"#utility.yul\":27638:27639   */\n      0x00\n        /* \"#utility.yul\":27629:27635   */\n      dup5\n        /* \"#utility.yul\":27624:27627   */\n      dup5\n        /* \"#utility.yul\":27620:27636   */\n      add\n        /* \"#utility.yul\":27613:27640   */\n      mstore\n        /* \"#utility.yul\":27549:27650   */\n    tag_792:\n        /* \"#utility.yul\":27398:27656   */\n      pop\n        /* \"#utility.yul\":27349:27656   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27662:28035   */\n    tag_555:\n        /* \"#utility.yul\":27766:27769   */\n      0x00\n        /* \"#utility.yul\":27794:27832   */\n      tag_794\n        /* \"#utility.yul\":27826:27831   */\n      dup3\n        /* \"#utility.yul\":27794:27832   */\n      tag_553\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":27848:27936   */\n      tag_795\n        /* \"#utility.yul\":27929:27935   */\n      dup2\n        /* \"#utility.yul\":27924:27927   */\n      dup6\n        /* \"#utility.yul\":27848:27936   */\n      tag_523\n      jump\t// in\n    tag_795:\n        /* \"#utility.yul\":27841:27936   */\n      swap4\n      pop\n        /* \"#utility.yul\":27945:27997   */\n      tag_796\n        /* \"#utility.yul\":27990:27996   */\n      dup2\n        /* \"#utility.yul\":27985:27988   */\n      dup6\n        /* \"#utility.yul\":27978:27982   */\n      0x20\n        /* \"#utility.yul\":27971:27976   */\n      dup7\n        /* \"#utility.yul\":27967:27983   */\n      add\n        /* \"#utility.yul\":27945:27997   */\n      tag_554\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":28022:28028   */\n      dup1\n        /* \"#utility.yul\":28017:28020   */\n      dup5\n        /* \"#utility.yul\":28013:28029   */\n      add\n        /* \"#utility.yul\":28006:28029   */\n      swap2\n      pop\n        /* \"#utility.yul\":27770:28035   */\n      pop\n        /* \"#utility.yul\":27662:28035   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28041:28312   */\n    tag_466:\n        /* \"#utility.yul\":28171:28174   */\n      0x00\n        /* \"#utility.yul\":28193:28286   */\n      tag_798\n        /* \"#utility.yul\":28282:28285   */\n      dup3\n        /* \"#utility.yul\":28273:28279   */\n      dup5\n        /* \"#utility.yul\":28193:28286   */\n      tag_555\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":28186:28286   */\n      swap2\n      pop\n        /* \"#utility.yul\":28303:28306   */\n      dup2\n        /* \"#utility.yul\":28296:28306   */\n      swap1\n      pop\n        /* \"#utility.yul\":28041:28312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28318:28497   */\n    tag_556:\n        /* \"#utility.yul\":28458:28489   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":28454:28455   */\n      0x00\n        /* \"#utility.yul\":28446:28452   */\n      dup3\n        /* \"#utility.yul\":28442:28456   */\n      add\n        /* \"#utility.yul\":28435:28490   */\n      mstore\n        /* \"#utility.yul\":28318:28497   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28503:28869   */\n    tag_557:\n        /* \"#utility.yul\":28645:28648   */\n      0x00\n        /* \"#utility.yul\":28666:28733   */\n      tag_801\n        /* \"#utility.yul\":28730:28732   */\n      0x1d\n        /* \"#utility.yul\":28725:28728   */\n      dup4\n        /* \"#utility.yul\":28666:28733   */\n      tag_510\n      jump\t// in\n    tag_801:\n        /* \"#utility.yul\":28659:28733   */\n      swap2\n      pop\n        /* \"#utility.yul\":28742:28835   */\n      tag_802\n        /* \"#utility.yul\":28831:28834   */\n      dup3\n        /* \"#utility.yul\":28742:28835   */\n      tag_556\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":28860:28862   */\n      0x20\n        /* \"#utility.yul\":28855:28858   */\n      dup3\n        /* \"#utility.yul\":28851:28863   */\n      add\n        /* \"#utility.yul\":28844:28863   */\n      swap1\n      pop\n        /* \"#utility.yul\":28503:28869   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28875:29294   */\n    tag_479:\n        /* \"#utility.yul\":29041:29045   */\n      0x00\n        /* \"#utility.yul\":29079:29081   */\n      0x20\n        /* \"#utility.yul\":29068:29077   */\n      dup3\n        /* \"#utility.yul\":29064:29082   */\n      add\n        /* \"#utility.yul\":29056:29082   */\n      swap1\n      pop\n        /* \"#utility.yul\":29128:29137   */\n      dup2\n        /* \"#utility.yul\":29122:29126   */\n      dup2\n        /* \"#utility.yul\":29118:29138   */\n      sub\n        /* \"#utility.yul\":29114:29115   */\n      0x00\n        /* \"#utility.yul\":29103:29112   */\n      dup4\n        /* \"#utility.yul\":29099:29116   */\n      add\n        /* \"#utility.yul\":29092:29139   */\n      mstore\n        /* \"#utility.yul\":29156:29287   */\n      tag_804\n        /* \"#utility.yul\":29282:29286   */\n      dup2\n        /* \"#utility.yul\":29156:29287   */\n      tag_557\n      jump\t// in\n    tag_804:\n        /* \"#utility.yul\":29148:29287   */\n      swap1\n      pop\n        /* \"#utility.yul\":28875:29294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29300:29399   */\n    tag_558:\n        /* \"#utility.yul\":29352:29358   */\n      0x00\n        /* \"#utility.yul\":29386:29391   */\n      dup2\n        /* \"#utility.yul\":29380:29392   */\n      mload\n        /* \"#utility.yul\":29370:29392   */\n      swap1\n      pop\n        /* \"#utility.yul\":29300:29399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29405:29507   */\n    tag_559:\n        /* \"#utility.yul\":29446:29452   */\n      0x00\n        /* \"#utility.yul\":29497:29499   */\n      0x1f\n        /* \"#utility.yul\":29493:29500   */\n      not\n        /* \"#utility.yul\":29488:29490   */\n      0x1f\n        /* \"#utility.yul\":29481:29486   */\n      dup4\n        /* \"#utility.yul\":29477:29491   */\n      add\n        /* \"#utility.yul\":29473:29501   */\n      and\n        /* \"#utility.yul\":29463:29501   */\n      swap1\n      pop\n        /* \"#utility.yul\":29405:29507   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29513:29877   */\n    tag_560:\n        /* \"#utility.yul\":29601:29604   */\n      0x00\n        /* \"#utility.yul\":29629:29668   */\n      tag_808\n        /* \"#utility.yul\":29662:29667   */\n      dup3\n        /* \"#utility.yul\":29629:29668   */\n      tag_558\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":29684:29755   */\n      tag_809\n        /* \"#utility.yul\":29748:29754   */\n      dup2\n        /* \"#utility.yul\":29743:29746   */\n      dup6\n        /* \"#utility.yul\":29684:29755   */\n      tag_510\n      jump\t// in\n    tag_809:\n        /* \"#utility.yul\":29677:29755   */\n      swap4\n      pop\n        /* \"#utility.yul\":29764:29816   */\n      tag_810\n        /* \"#utility.yul\":29809:29815   */\n      dup2\n        /* \"#utility.yul\":29804:29807   */\n      dup6\n        /* \"#utility.yul\":29797:29801   */\n      0x20\n        /* \"#utility.yul\":29790:29795   */\n      dup7\n        /* \"#utility.yul\":29786:29802   */\n      add\n        /* \"#utility.yul\":29764:29816   */\n      tag_554\n      jump\t// in\n    tag_810:\n        /* \"#utility.yul\":29841:29870   */\n      tag_811\n        /* \"#utility.yul\":29863:29869   */\n      dup2\n        /* \"#utility.yul\":29841:29870   */\n      tag_559\n      jump\t// in\n    tag_811:\n        /* \"#utility.yul\":29836:29839   */\n      dup5\n        /* \"#utility.yul\":29832:29871   */\n      add\n        /* \"#utility.yul\":29825:29871   */\n      swap2\n      pop\n        /* \"#utility.yul\":29605:29877   */\n      pop\n        /* \"#utility.yul\":29513:29877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29883:30196   */\n    tag_488:\n        /* \"#utility.yul\":29996:30000   */\n      0x00\n        /* \"#utility.yul\":30034:30036   */\n      0x20\n        /* \"#utility.yul\":30023:30032   */\n      dup3\n        /* \"#utility.yul\":30019:30037   */\n      add\n        /* \"#utility.yul\":30011:30037   */\n      swap1\n      pop\n        /* \"#utility.yul\":30083:30092   */\n      dup2\n        /* \"#utility.yul\":30077:30081   */\n      dup2\n        /* \"#utility.yul\":30073:30093   */\n      sub\n        /* \"#utility.yul\":30069:30070   */\n      0x00\n        /* \"#utility.yul\":30058:30067   */\n      dup4\n        /* \"#utility.yul\":30054:30071   */\n      add\n        /* \"#utility.yul\":30047:30094   */\n      mstore\n        /* \"#utility.yul\":30111:30189   */\n      tag_813\n        /* \"#utility.yul\":30184:30188   */\n      dup2\n        /* \"#utility.yul\":30175:30181   */\n      dup5\n        /* \"#utility.yul\":30111:30189   */\n      tag_560\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":30103:30189   */\n      swap1\n      pop\n        /* \"#utility.yul\":29883:30196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122028ba7bc4e5d385f317a39de86fc00cd208b5ef212d3b8c0fca43bc80b75c91f664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2671": {
									"entryPoint": null,
									"id": 2671,
									"parameterSlots": 11,
									"returnSlots": 0
								},
								"@_732": {
									"entryPoint": null,
									"id": 732,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_808": {
									"entryPoint": null,
									"id": 808,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_777": {
									"entryPoint": 815,
									"id": 777,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_896": {
									"entryPoint": 823,
									"id": 896,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_addresst_uint256_fromMemory": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 11
								},
								"abi_encode_t_stringliteral_10d8fb2eb8acaf21b9be7215663ea4532cb3c6ec89e31c0d947fdb8ed7ca6090_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_34eb37593ef37f9aa15266f34da59cd4c6cc420115437aa50285585f1ae9e04e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7ffb54d5888da07207794d46ba2074909741fd305023c4e6c8a8cfe69aef1393_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9c67585b736274cf310f8ecd28f301d1a27386921996d078ffd4f820817ab4cc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a08386fa97c3416be6417fc53bec008ff546259d6e6560af54c4ed621b26f258_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bf633b11af979adfb29caed3c8eb8a935f98963ff6db8f3172dc702a514dc404_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_10d8fb2eb8acaf21b9be7215663ea4532cb3c6ec89e31c0d947fdb8ed7ca6090__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_34eb37593ef37f9aa15266f34da59cd4c6cc420115437aa50285585f1ae9e04e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7ffb54d5888da07207794d46ba2074909741fd305023c4e6c8a8cfe69aef1393__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9c67585b736274cf310f8ecd28f301d1a27386921996d078ffd4f820817ab4cc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a08386fa97c3416be6417fc53bec008ff546259d6e6560af54c4ed621b26f258__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf633b11af979adfb29caed3c8eb8a935f98963ff6db8f3172dc702a514dc404__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_10d8fb2eb8acaf21b9be7215663ea4532cb3c6ec89e31c0d947fdb8ed7ca6090": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_34eb37593ef37f9aa15266f34da59cd4c6cc420115437aa50285585f1ae9e04e": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7ffb54d5888da07207794d46ba2074909741fd305023c4e6c8a8cfe69aef1393": {
									"entryPoint": 1774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9c67585b736274cf310f8ecd28f301d1a27386921996d078ffd4f820817ab4cc": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a08386fa97c3416be6417fc53bec008ff546259d6e6560af54c4ed621b26f258": {
									"entryPoint": 1622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bf633b11af979adfb29caed3c8eb8a935f98963ff6db8f3172dc702a514dc404": {
									"entryPoint": 2230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9560:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:1",
														"type": ""
													}
												],
												"src": "545:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "749:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "771:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "760:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "721:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "731:7:1",
														"type": ""
													}
												],
												"src": "694:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "881:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "853:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "863:7:1",
														"type": ""
													}
												],
												"src": "826:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:1"
															},
															"nodeType": "YulIf",
															"src": "981:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:1",
														"type": ""
													}
												],
												"src": "928:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:1",
														"type": ""
													}
												],
												"src": "1056:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1453:1673:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1500:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1502:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1502:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1502:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1474:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1483:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1470:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1470:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1495:3:1",
																		"type": "",
																		"value": "352"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1466:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:33:1"
															},
															"nodeType": "YulIf",
															"src": "1463:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1593:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1622:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1637:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1683:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1694:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1679:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1679:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1703:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1647:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1647:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1637:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1731:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1746:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1750:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1776:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1822:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1833:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1818:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1818:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1842:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1786:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1786:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1776:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1870:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1885:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1899:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1889:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1915:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1961:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1972:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1957:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1957:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1981:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1925:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1925:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1915:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2009:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2024:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2038:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2028:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2054:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2100:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2111:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2096:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2096:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2120:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2064:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2064:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2054:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2148:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2163:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2177:3:1",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2167:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2194:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2240:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2251:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2236:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2236:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2260:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2204:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2204:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "2194:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2288:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2303:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2317:3:1",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2307:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2334:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2380:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2391:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2376:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2376:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2400:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2344:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2344:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "2334:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2428:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2443:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2457:3:1",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2447:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2474:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2520:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2531:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2516:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2516:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2540:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2484:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2484:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "2474:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2568:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2583:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:3:1",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2587:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2614:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2660:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2671:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2656:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2656:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2680:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2624:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2624:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nodeType": "YulIdentifier",
																			"src": "2614:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2708:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2723:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2737:3:1",
																		"type": "",
																		"value": "256"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2727:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2754:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2800:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2811:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2796:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2796:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2820:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2764:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2764:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value8",
																			"nodeType": "YulIdentifier",
																			"src": "2754:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2848:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2863:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2877:3:1",
																		"type": "",
																		"value": "288"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2867:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2894:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2940:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2951:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2936:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2936:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2960:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2904:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2904:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value9",
																			"nodeType": "YulIdentifier",
																			"src": "2894:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2988:131:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3003:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3017:3:1",
																		"type": "",
																		"value": "320"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3007:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3034:75:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3081:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3092:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3077:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3077:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3101:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3045:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3045:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value10",
																			"nodeType": "YulIdentifier",
																			"src": "3034:7:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1342:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1353:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1365:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1373:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1381:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1389:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1397:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1405:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1413:6:1",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "1421:6:1",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "1429:6:1",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "1437:6:1",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "1445:7:1",
														"type": ""
													}
												],
												"src": "1205:1921:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3228:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3245:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3250:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3238:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3238:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3238:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3266:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3285:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3281:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3266:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3200:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3205:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3216:11:1",
														"type": ""
													}
												],
												"src": "3132:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3413:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3435:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3443:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3431:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3431:14:1"
																	},
																	{
																		"hexValue": "53746172742074696d65206d75737420626520696e2074686520667574757265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3447:34:1",
																		"type": "",
																		"value": "Start time must be in the future"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3424:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3424:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3424:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3503:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3511:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:15:1"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3516:3:1",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3492:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3492:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_10d8fb2eb8acaf21b9be7215663ea4532cb3c6ec89e31c0d947fdb8ed7ca6090",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3405:6:1",
														"type": ""
													}
												],
												"src": "3307:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3679:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3689:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3755:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3760:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3696:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3689:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3861:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_10d8fb2eb8acaf21b9be7215663ea4532cb3c6ec89e31c0d947fdb8ed7ca6090",
																	"nodeType": "YulIdentifier",
																	"src": "3772:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3772:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3772:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3874:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3885:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3890:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3881:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3881:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3874:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_10d8fb2eb8acaf21b9be7215663ea4532cb3c6ec89e31c0d947fdb8ed7ca6090_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3667:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3675:3:1",
														"type": ""
													}
												],
												"src": "3533:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4076:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4086:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4098:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4109:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4094:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4094:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4086:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4133:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4144:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4129:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4152:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4158:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4148:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4148:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4122:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4178:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4312:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_10d8fb2eb8acaf21b9be7215663ea4532cb3c6ec89e31c0d947fdb8ed7ca6090_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4186:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4186:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4178:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_10d8fb2eb8acaf21b9be7215663ea4532cb3c6ec89e31c0d947fdb8ed7ca6090__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4056:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4071:4:1",
														"type": ""
													}
												],
												"src": "3905:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4436:122:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4458:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4466:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4454:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4454:14:1"
																	},
																	{
																		"hexValue": "456e642074696d65206d7573742062652067726561746572207468616e207374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4470:34:1",
																		"type": "",
																		"value": "End time must be greater than st"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4447:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4447:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4447:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4526:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4534:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4522:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4522:15:1"
																	},
																	{
																		"hexValue": "6172742074696d652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4539:11:1",
																		"type": "",
																		"value": "art time."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4515:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4515:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4515:36:1"
														}
													]
												},
												"name": "store_literal_in_memory_a08386fa97c3416be6417fc53bec008ff546259d6e6560af54c4ed621b26f258",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4428:6:1",
														"type": ""
													}
												],
												"src": "4330:228:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4710:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4720:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4786:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4791:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4727:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4720:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4892:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a08386fa97c3416be6417fc53bec008ff546259d6e6560af54c4ed621b26f258",
																	"nodeType": "YulIdentifier",
																	"src": "4803:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4803:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4803:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4905:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4916:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4921:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4912:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4912:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4905:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a08386fa97c3416be6417fc53bec008ff546259d6e6560af54c4ed621b26f258_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4698:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4706:3:1",
														"type": ""
													}
												],
												"src": "4564:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5107:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5117:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5129:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5140:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5125:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5125:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5117:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5164:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5175:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5160:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5160:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5183:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5189:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5179:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5179:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5153:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5153:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5153:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5209:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5343:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a08386fa97c3416be6417fc53bec008ff546259d6e6560af54c4ed621b26f258_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5217:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5217:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5209:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a08386fa97c3416be6417fc53bec008ff546259d6e6560af54c4ed621b26f258__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5087:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5102:4:1",
														"type": ""
													}
												],
												"src": "4936:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5467:121:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5489:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5497:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5485:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5485:14:1"
																	},
																	{
																		"hexValue": "45746865727320746f2072616973652073686f756c6420626520677265617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5501:34:1",
																		"type": "",
																		"value": "Ethers to raise should be greate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5478:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5478:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5478:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5557:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5565:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5553:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5553:15:1"
																	},
																	{
																		"hexValue": "72207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5570:10:1",
																		"type": "",
																		"value": "r than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5546:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5546:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5546:35:1"
														}
													]
												},
												"name": "store_literal_in_memory_7ffb54d5888da07207794d46ba2074909741fd305023c4e6c8a8cfe69aef1393",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5459:6:1",
														"type": ""
													}
												],
												"src": "5361:227:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5740:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5750:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5816:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5821:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5757:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5757:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5750:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5922:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7ffb54d5888da07207794d46ba2074909741fd305023c4e6c8a8cfe69aef1393",
																	"nodeType": "YulIdentifier",
																	"src": "5833:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5833:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5833:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5935:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5946:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5951:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5942:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5942:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5935:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7ffb54d5888da07207794d46ba2074909741fd305023c4e6c8a8cfe69aef1393_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5728:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5736:3:1",
														"type": ""
													}
												],
												"src": "5594:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6137:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6147:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6159:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6170:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6155:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6155:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6147:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6194:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6205:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6190:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6190:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6213:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6219:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6209:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6209:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6183:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6183:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6239:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6373:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7ffb54d5888da07207794d46ba2074909741fd305023c4e6c8a8cfe69aef1393_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6247:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6247:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6239:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7ffb54d5888da07207794d46ba2074909741fd305023c4e6c8a8cfe69aef1393__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6117:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6132:4:1",
														"type": ""
													}
												],
												"src": "5966:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6497:136:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6519:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6527:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6515:14:1"
																	},
																	{
																		"hexValue": "45746865727320746f2072616973652073686f756c6420626520677265617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6531:34:1",
																		"type": "",
																		"value": "Ethers to raise should be greate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6508:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6508:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6508:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6587:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6595:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6583:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6583:15:1"
																	},
																	{
																		"hexValue": "72207468616e20726566756e64207468726573686f6c64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6600:25:1",
																		"type": "",
																		"value": "r than refund threshold"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6576:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6576:50:1"
														}
													]
												},
												"name": "store_literal_in_memory_34eb37593ef37f9aa15266f34da59cd4c6cc420115437aa50285585f1ae9e04e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6489:6:1",
														"type": ""
													}
												],
												"src": "6391:242:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6785:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6795:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6861:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6866:2:1",
																		"type": "",
																		"value": "55"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6802:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6802:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6795:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6967:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_34eb37593ef37f9aa15266f34da59cd4c6cc420115437aa50285585f1ae9e04e",
																	"nodeType": "YulIdentifier",
																	"src": "6878:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6878:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6878:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6980:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6991:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6996:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6987:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6987:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6980:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_34eb37593ef37f9aa15266f34da59cd4c6cc420115437aa50285585f1ae9e04e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6773:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6781:3:1",
														"type": ""
													}
												],
												"src": "6639:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7182:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7192:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7204:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7215:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7200:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7200:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7192:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7239:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7250:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7235:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7258:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7264:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7254:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7254:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7228:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7228:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7284:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7418:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_34eb37593ef37f9aa15266f34da59cd4c6cc420115437aa50285585f1ae9e04e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7292:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7292:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7284:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_34eb37593ef37f9aa15266f34da59cd4c6cc420115437aa50285585f1ae9e04e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7162:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7177:4:1",
														"type": ""
													}
												],
												"src": "7011:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7542:124:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7564:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7572:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7560:14:1"
																	},
																	{
																		"hexValue": "4d696e696d756d20636f6d6d69746d656e742073686f756c6420626520677265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7576:34:1",
																		"type": "",
																		"value": "Minimum commitment should be gre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7553:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7553:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7553:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7632:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7640:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7628:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7628:15:1"
																	},
																	{
																		"hexValue": "61746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7645:13:1",
																		"type": "",
																		"value": "ater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7621:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7621:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7621:38:1"
														}
													]
												},
												"name": "store_literal_in_memory_9c67585b736274cf310f8ecd28f301d1a27386921996d078ffd4f820817ab4cc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7534:6:1",
														"type": ""
													}
												],
												"src": "7436:230:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7818:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7828:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7894:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7899:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7835:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7835:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7828:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8000:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9c67585b736274cf310f8ecd28f301d1a27386921996d078ffd4f820817ab4cc",
																	"nodeType": "YulIdentifier",
																	"src": "7911:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7911:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7911:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8013:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8024:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8029:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8020:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8020:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8013:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9c67585b736274cf310f8ecd28f301d1a27386921996d078ffd4f820817ab4cc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7806:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7814:3:1",
														"type": ""
													}
												],
												"src": "7672:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8215:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8225:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8237:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8248:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8233:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8233:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8225:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8272:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8283:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8268:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8291:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8297:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8287:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8287:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8261:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8261:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8261:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8317:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8451:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9c67585b736274cf310f8ecd28f301d1a27386921996d078ffd4f820817ab4cc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8325:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8325:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8317:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9c67585b736274cf310f8ecd28f301d1a27386921996d078ffd4f820817ab4cc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8195:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8210:4:1",
														"type": ""
													}
												],
												"src": "8044:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8575:185:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8597:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8605:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8593:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8593:14:1"
																	},
																	{
																		"hexValue": "4d6178696d756d20636f6d6d69746d656e742073686f756c6420626520677265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8609:34:1",
																		"type": "",
																		"value": "Maximum commitment should be gre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8586:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8586:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8665:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8673:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8661:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8661:15:1"
																	},
																	{
																		"hexValue": "61746572206f7220657175616c20746f206d696e696d756d20636f6d6d69746d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8678:34:1",
																		"type": "",
																		"value": "ater or equal to minimum commitm"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8654:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8654:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8654:59:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8734:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8742:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8730:15:1"
																	},
																	{
																		"hexValue": "656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8747:5:1",
																		"type": "",
																		"value": "ent"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8723:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8723:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8723:30:1"
														}
													]
												},
												"name": "store_literal_in_memory_bf633b11af979adfb29caed3c8eb8a935f98963ff6db8f3172dc702a514dc404",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8567:6:1",
														"type": ""
													}
												],
												"src": "8469:291:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8912:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8922:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8988:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8993:2:1",
																		"type": "",
																		"value": "67"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8929:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8929:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8922:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9094:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bf633b11af979adfb29caed3c8eb8a935f98963ff6db8f3172dc702a514dc404",
																	"nodeType": "YulIdentifier",
																	"src": "9005:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9005:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9005:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9107:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9118:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9123:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9114:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9114:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9107:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bf633b11af979adfb29caed3c8eb8a935f98963ff6db8f3172dc702a514dc404_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8900:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8908:3:1",
														"type": ""
													}
												],
												"src": "8766:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9309:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9319:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9331:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9342:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9327:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9327:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9319:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9366:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9377:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9362:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9385:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9391:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9381:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9381:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9355:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9355:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9355:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9411:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9545:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bf633b11af979adfb29caed3c8eb8a935f98963ff6db8f3172dc702a514dc404_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9419:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9419:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9411:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf633b11af979adfb29caed3c8eb8a935f98963ff6db8f3172dc702a514dc404__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9289:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9304:4:1",
														"type": ""
													}
												],
												"src": "9138:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10 {\n        if slt(sub(dataEnd, headStart), 352) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 288\n\n            value9 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 320\n\n            value10 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_10d8fb2eb8acaf21b9be7215663ea4532cb3c6ec89e31c0d947fdb8ed7ca6090(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start time must be in the future\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_10d8fb2eb8acaf21b9be7215663ea4532cb3c6ec89e31c0d947fdb8ed7ca6090_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_10d8fb2eb8acaf21b9be7215663ea4532cb3c6ec89e31c0d947fdb8ed7ca6090(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_10d8fb2eb8acaf21b9be7215663ea4532cb3c6ec89e31c0d947fdb8ed7ca6090__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_10d8fb2eb8acaf21b9be7215663ea4532cb3c6ec89e31c0d947fdb8ed7ca6090_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a08386fa97c3416be6417fc53bec008ff546259d6e6560af54c4ed621b26f258(memPtr) {\n\n        mstore(add(memPtr, 0), \"End time must be greater than st\")\n\n        mstore(add(memPtr, 32), \"art time.\")\n\n    }\n\n    function abi_encode_t_stringliteral_a08386fa97c3416be6417fc53bec008ff546259d6e6560af54c4ed621b26f258_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_a08386fa97c3416be6417fc53bec008ff546259d6e6560af54c4ed621b26f258(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a08386fa97c3416be6417fc53bec008ff546259d6e6560af54c4ed621b26f258__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a08386fa97c3416be6417fc53bec008ff546259d6e6560af54c4ed621b26f258_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7ffb54d5888da07207794d46ba2074909741fd305023c4e6c8a8cfe69aef1393(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ethers to raise should be greate\")\n\n        mstore(add(memPtr, 32), \"r than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_7ffb54d5888da07207794d46ba2074909741fd305023c4e6c8a8cfe69aef1393_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_7ffb54d5888da07207794d46ba2074909741fd305023c4e6c8a8cfe69aef1393(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7ffb54d5888da07207794d46ba2074909741fd305023c4e6c8a8cfe69aef1393__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7ffb54d5888da07207794d46ba2074909741fd305023c4e6c8a8cfe69aef1393_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_34eb37593ef37f9aa15266f34da59cd4c6cc420115437aa50285585f1ae9e04e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ethers to raise should be greate\")\n\n        mstore(add(memPtr, 32), \"r than refund threshold\")\n\n    }\n\n    function abi_encode_t_stringliteral_34eb37593ef37f9aa15266f34da59cd4c6cc420115437aa50285585f1ae9e04e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_34eb37593ef37f9aa15266f34da59cd4c6cc420115437aa50285585f1ae9e04e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_34eb37593ef37f9aa15266f34da59cd4c6cc420115437aa50285585f1ae9e04e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_34eb37593ef37f9aa15266f34da59cd4c6cc420115437aa50285585f1ae9e04e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9c67585b736274cf310f8ecd28f301d1a27386921996d078ffd4f820817ab4cc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minimum commitment should be gre\")\n\n        mstore(add(memPtr, 32), \"ater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_9c67585b736274cf310f8ecd28f301d1a27386921996d078ffd4f820817ab4cc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_9c67585b736274cf310f8ecd28f301d1a27386921996d078ffd4f820817ab4cc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9c67585b736274cf310f8ecd28f301d1a27386921996d078ffd4f820817ab4cc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9c67585b736274cf310f8ecd28f301d1a27386921996d078ffd4f820817ab4cc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bf633b11af979adfb29caed3c8eb8a935f98963ff6db8f3172dc702a514dc404(memPtr) {\n\n        mstore(add(memPtr, 0), \"Maximum commitment should be gre\")\n\n        mstore(add(memPtr, 32), \"ater or equal to minimum commitm\")\n\n        mstore(add(memPtr, 64), \"ent\")\n\n    }\n\n    function abi_encode_t_stringliteral_bf633b11af979adfb29caed3c8eb8a935f98963ff6db8f3172dc702a514dc404_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 67)\n        store_literal_in_memory_bf633b11af979adfb29caed3c8eb8a935f98963ff6db8f3172dc702a514dc404(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bf633b11af979adfb29caed3c8eb8a935f98963ff6db8f3172dc702a514dc404__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bf633b11af979adfb29caed3c8eb8a935f98963ff6db8f3172dc702a514dc404_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6102206040523480156200001257600080fd5b5060405162004d0538038062004d058339818101604052810190620000389190620004a0565b620000586200004c6200032f60201b60201c565b6200033760201b60201c565b6001808190555042881015620000a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200009c9062000634565b60405180910390fd5b878711620000ea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e190620006cc565b60405180910390fd5b60008a1162000130576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001279062000764565b60405180910390fd5b888a1162000175576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016c90620007fc565b60405180910390fd5b60008511620001bb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001b29062000894565b60405180910390fd5b8484101562000201576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001f89062000952565b60405180910390fd5b7341d962ed9a2af1b68844ef588e182a628a5fa6f373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508a60c081815250508960e08181525050886101008181525050876101408181525050866101608181525050856101808181525050846101e0818152505083610200818152505073e9f04e418f93ae73387576e9ab0f8fdb7c88545d73ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508261012081815250508173ffffffffffffffffffffffffffffffffffffffff166101a08173ffffffffffffffffffffffffffffffffffffffff1681525050806101c08181525050505050505050505050505062000974565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b620004158162000400565b81146200042157600080fd5b50565b60008151905062000435816200040a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000468826200043b565b9050919050565b6200047a816200045b565b81146200048657600080fd5b50565b6000815190506200049a816200046f565b92915050565b60008060008060008060008060008060006101608c8e031215620004c957620004c8620003fb565b5b6000620004d98e828f0162000424565b9b50506020620004ec8e828f0162000424565b9a50506040620004ff8e828f0162000424565b9950506060620005128e828f0162000424565b9850506080620005258e828f0162000424565b97505060a0620005388e828f0162000424565b96505060c06200054b8e828f0162000424565b95505060e06200055e8e828f0162000424565b945050610100620005728e828f0162000424565b935050610120620005868e828f0162000489565b9250506101406200059a8e828f0162000424565b9150509295989b509295989b9093969950565b600082825260208201905092915050565b7f53746172742074696d65206d75737420626520696e207468652066757475726560008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006200061c602183620005ad565b91506200062982620005be565b604082019050919050565b600060208201905081810360008301526200064f816200060d565b9050919050565b7f456e642074696d65206d7573742062652067726561746572207468616e20737460008201527f6172742074696d652e0000000000000000000000000000000000000000000000602082015250565b6000620006b4602983620005ad565b9150620006c18262000656565b604082019050919050565b60006020820190508181036000830152620006e781620006a5565b9050919050565b7f45746865727320746f2072616973652073686f756c642062652067726561746560008201527f72207468616e2030000000000000000000000000000000000000000000000000602082015250565b60006200074c602883620005ad565b91506200075982620006ee565b604082019050919050565b600060208201905081810360008301526200077f816200073d565b9050919050565b7f45746865727320746f2072616973652073686f756c642062652067726561746560008201527f72207468616e20726566756e64207468726573686f6c64000000000000000000602082015250565b6000620007e4603783620005ad565b9150620007f18262000786565b604082019050919050565b600060208201905081810360008301526200081781620007d5565b9050919050565b7f4d696e696d756d20636f6d6d69746d656e742073686f756c642062652067726560008201527f61746572207468616e2030000000000000000000000000000000000000000000602082015250565b60006200087c602b83620005ad565b915062000889826200081e565b604082019050919050565b60006020820190508181036000830152620008af816200086d565b9050919050565b7f4d6178696d756d20636f6d6d69746d656e742073686f756c642062652067726560008201527f61746572206f7220657175616c20746f206d696e696d756d20636f6d6d69746d60208201527f656e740000000000000000000000000000000000000000000000000000000000604082015250565b60006200093a604383620005ad565b91506200094782620008b6565b606082019050919050565b600060208201905081810360008301526200096d816200092b565b9050919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e0516102005161415762000bae600039600081816110b001526112a7015260008181610ec301526110860152600081816120900152818161219901528181612498015261271e015260008181611abf015281816124d2015281816125c501526126300152600081816107c50152611c1b015260008181610ee701528181610fd80152818161130401528181612249015281816129c901528181612a1901528181612a6e01528181612cec01528181612d3c0152612d91015260008181610fac01528181611b2101528181612950015281816129ef01528181612a4d01528181612d120152612d700152600081816112cb015281816121ba0152818161273f01528181612a9a0152612dbd015260008181610bdb01528181610e8c015281816113e801528181611dc20152612316015260008181610c4c01528181610d1901528181610f0b015281816114590152818161152601528181611e3301528181611f000152818161236201528181612420015281816124490152818161246d0152818161253c0152612560015260008181610d3b015281816112830152818161154801528181611f220152818161212c0152818161258b01526126ac0152600081816109e5015281816121e5015281816124f4015281816125e70152818161276a01526127b301526000818161098f01528181611af70152818161214d0152818161265201526126cd01526141576000f3fe6080604052600436106101fd5760003560e01c806370d5ae051161010d57806394ef7e62116100a0578063bef4876b1161006f578063bef4876b146106e8578063d56b288914610713578063e20994381461072a578063e8fcf72314610755578063f2fde38b1461079257610204565b806394ef7e621461063b5780639b19251a14610669578063a8ea6f4c146106a6578063be9a6555146106d157610204565b806378e97925116100dc57806378e97925146105915780637f649783146105bc5780638da5cb5b146105e55780638e05fb741461061057610204565b806370d5ae05146104f9578063715018a61461052457806372da776e1461053b57806378bb86d31461056657610204565b80633a3ab672116101905780634d4123571161015f5780634d412357146103fe5780634e71d92d146104295780634ec0177414610456578063548db17414610493578063599e10ce146104bc57610204565b80633a3ab672146103615780633c7a3aff1461039e5780633d956691146103a8578063483383c8146103d357610204565b80631f2698ab116101cc5780631f2698ab146102b55780632bcbf7cd146102e05780633197cbb61461030b57806332acd3551461033657610204565b806301eaaec4146102095780631048ab281461022057806312adecda1461025d57806316fc48691461028a57610204565b3661020457005b600080fd5b34801561021557600080fd5b5061021e6107bb565b005b34801561022c57600080fd5b50610247600480360381019061024291906131f3565b610a88565b6040516102549190613239565b60405180910390f35b34801561026957600080fd5b50610272610aa0565b60405161028193929190613254565b60405180910390f35b34801561029657600080fd5b5061029f610e8a565b6040516102ac9190613239565b60405180910390f35b3480156102c157600080fd5b506102ca610eae565b6040516102d791906132a6565b60405180910390f35b3480156102ec57600080fd5b506102f5610ec1565b6040516103029190613239565b60405180910390f35b34801561031757600080fd5b50610320610ee5565b60405161032d9190613239565b60405180910390f35b34801561034257600080fd5b5061034b610f09565b6040516103589190613239565b60405180910390f35b34801561036d57600080fd5b50610388600480360381019061038391906131f3565b610f2d565b60405161039591906132a6565b60405180910390f35b6103a6610f83565b005b3480156103b457600080fd5b506103bd611281565b6040516103ca9190613239565b60405180910390f35b3480156103df57600080fd5b506103e86112a5565b6040516103f59190613239565b60405180910390f35b34801561040a57600080fd5b506104136112c9565b6040516104209190613239565b60405180910390f35b34801561043557600080fd5b5061043e6112ed565b60405161044d93929190613254565b60405180910390f35b34801561046257600080fd5b5061047d600480360381019061047891906131f3565b6119e9565b60405161048a9190613239565b60405180910390f35b34801561049f57600080fd5b506104ba60048036038101906104b59190613326565b611a01565b005b3480156104c857600080fd5b506104e360048036038101906104de91906131f3565b611aa5565b6040516104f09190613239565b60405180910390f35b34801561050557600080fd5b5061050e611abd565b60405161051b9190613382565b60405180910390f35b34801561053057600080fd5b50610539611ae1565b005b34801561054757600080fd5b50610550611af5565b60405161055d91906133fc565b60405180910390f35b34801561057257600080fd5b5061057b611b19565b6040516105889190613239565b60405180910390f35b34801561059d57600080fd5b506105a6611b1f565b6040516105b39190613239565b60405180910390f35b3480156105c857600080fd5b506105e360048036038101906105de9190613326565b611b43565b005b3480156105f157600080fd5b506105fa611bf0565b6040516106079190613382565b60405180910390f35b34801561061c57600080fd5b50610625611c19565b6040516106329190613239565b60405180910390f35b34801561064757600080fd5b50610650611c3d565b6040516106609493929190613417565b60405180910390f35b34801561067557600080fd5b50610690600480360381019061068b91906131f3565b61206e565b60405161069d91906132a6565b60405180910390f35b3480156106b257600080fd5b506106bb61208e565b6040516106c89190613239565b60405180910390f35b3480156106dd57600080fd5b506106e66120b2565b005b3480156106f457600080fd5b506106fd61222c565b60405161070a91906132a6565b60405180910390f35b34801561071f57600080fd5b5061072861223f565b005b34801561073657600080fd5b5061073f6127b1565b60405161074c91906133fc565b60405180910390f35b34801561076157600080fd5b5061077c600480360381019061077791906131f3565b6127d5565b6040516107899190613239565b60405180910390f35b34801561079e57600080fd5b506107b960048036038101906107b491906131f3565b6127ed565b005b6107c3612870565b7f0000000000000000000000000000000000000000000000000000000000000000421015610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081d906134b9565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006003600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108fc9190613537565b90506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109d333847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166128bf9092919063ffffffff16565b610a293382846109e39190613568565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166128bf9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f98658f77a1c9013bc3a00213385d7b07de0435b7b3b3023a43c66b91e05566c2848484604051610a7393929190613254565b60405180910390a2505050610a86612945565b565b60086020528060005260406000206000915090505481565b6000806000610aad61294e565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610b82576000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054925092509250610e85565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610bd9576000806000925092509250610e85565b7f000000000000000000000000000000000000000000000000000000000000000060055410610e35576000610cc4600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546005547f0000000000000000000000000000000000000000000000000000000000000000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cb591906135be565b610cbf9190613537565b612b14565b9050600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d139190613618565b905060007f0000000000000000000000000000000000000000000000000000000000000000837f0000000000000000000000000000000000000000000000000000000000000000610d6491906135be565b610d6e9190613537565b90506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dfa600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612b2d565b610e049190613618565b90506000600383610e159190613537565b9050838184610e249190613568565b839750975097505050505050610e85565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080600080935093509350505b909192565b7f000000000000000000000000000000000000000000000000000000000000000081565b600260009054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b610f8b612870565b610f9361294e565b600260009054906101000a900460ff168015610fcf57507f00000000000000000000000000000000000000000000000000000000000000004210155b8015610ffa57507f000000000000000000000000000000000000000000000000000000000000000042105b611039576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611030906136be565b60405180910390fd5b34600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110849190613568565b7f00000000000000000000000000000000000000000000000000000000000000001115801561111d57507f000000000000000000000000000000000000000000000000000000000000000034600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461111a9190613568565b11155b61115c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115390613750565b60405180910390fd5b34600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111ab9190613568565b9250508190555034600560008282546111c49190613568565b925050819055506111d434612b2d565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112229190613568565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f5e1dd8c4451717d5ca4ffbefdada35e22e0871220b9ed9dd03a351f0938c5ed73460405161126f9190613239565b60405180910390a261127f612945565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060006112fa612870565b61130261294e565b7f00000000000000000000000000000000000000000000000000000000000000004211611364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135b906137e2565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116113e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113dd90613874565b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600554106118475760006114d1600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546005547f0000000000000000000000000000000000000000000000000000000000000000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114c291906135be565b6114cc9190613537565b612b14565b9050600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115209190613618565b905060007f0000000000000000000000000000000000000000000000000000000000000000837f000000000000000000000000000000000000000000000000000000000000000061157191906135be565b61157b9190613537565b90506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611607600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612b2d565b6116119190613618565b905080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116629190613568565b925050819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff168460405161175c906138c5565b60006040518083038185875af1925050503d8060008114611799576040519150601f19603f3d011682016040523d82523d6000602084013e61179e565b606091505b50509050806117e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d990613926565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f45c072aa05b9853b5a993de7a28bc332ee01404a628cec1a23ce0f659f842ef185858560405161182c93929190613254565b60405180910390a283838397509750975050505050506119dc565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516118f6906138c5565b60006040518083038185875af1925050503d8060008114611933576040519150601f19603f3d011682016040523d82523d6000602084013e611938565b606091505b505090508061197c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197390613926565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f45c072aa05b9853b5a993de7a28bc332ee01404a628cec1a23ce0f659f842ef1836000806040516119c793929190613981565b60405180910390a28160008094509450945050505b6119e4612945565b909192565b60096020528060005260406000206000915090505481565b611a09612b57565b60005b82829050811015611aa057600a6000848484818110611a2e57611a2d6139b8565b5b9050602002016020810190611a4391906131f3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690558080611a98906139e7565b915050611a0c565b505050565b60076020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b611ae9612b57565b611af36000612bd5565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055481565b7f000000000000000000000000000000000000000000000000000000000000000081565b611b4b612b57565b60005b82829050811015611beb576001600a6000858585818110611b7257611b716139b8565b5b9050602002016020810190611b8791906131f3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080611be3906139e7565b915050611b4e565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000806000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115611d66576000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546003600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d199190613537565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549350935093509350612068565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403611dc0576000806000809350935093509350612068565b7f000000000000000000000000000000000000000000000000000000000000000060055410612014576000611eab600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546005547f0000000000000000000000000000000000000000000000000000000000000000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e9c91906135be565b611ea69190613537565b612b14565b9050600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611efa9190613618565b905060007f0000000000000000000000000000000000000000000000000000000000000000837f0000000000000000000000000000000000000000000000000000000000000000611f4b91906135be565b611f559190613537565b90506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fe1600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c99565b611feb9190613618565b90506000600383611ffc9190613537565b90508383828498509850985098505050505050612068565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508060008060009450945094509450505b90919293565b600a6020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6120ba612b57565b600260009054906101000a900460ff161561210a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161210190613a7b565b60405180910390fd5b6001600260006101000a81548160ff02191690831515021790555061219233307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16612e4d909392919063ffffffff16565b61222a33307f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006121e39190613568565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16612e4d909392919063ffffffff16565b565b600260019054906101000a900460ff1681565b612247612b57565b7f000000000000000000000000000000000000000000000000000000000000000042116122a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122a090613b0d565b60405180910390fd5b600260019054906101000a900460ff16156122f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122f090613b79565b60405180910390fd5b6001600260016101000a81548160ff0219169083151502179055507f00000000000000000000000000000000000000000000000000000000000000006005541061269f576000612347611bf0565b73ffffffffffffffffffffffffffffffffffffffff166123897f0000000000000000000000000000000000000000000000000000000000000000600554612b14565b604051612395906138c5565b60006040518083038185875af1925050503d80600081146123d2576040519150601f19603f3d011682016040523d82523d6000602084013e6123d7565b606091505b505090508061241b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161241290613926565b60405180910390fd5b6005547f000000000000000000000000000000000000000000000000000000000000000011156126995760007f00000000000000000000000000000000000000000000000000000000000000006005547f00000000000000000000000000000000000000000000000000000000000000006124969190613618565b7f00000000000000000000000000000000000000000000000000000000000000006124c191906135be565b6124cb9190613537565b90506125387f0000000000000000000000000000000000000000000000000000000000000000827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166128bf9092919063ffffffff16565b60007f00000000000000000000000000000000000000000000000000000000000000006005547f00000000000000000000000000000000000000000000000000000000000000006125899190613618565b7f00000000000000000000000000000000000000000000000000000000000000006125b491906135be565b6125be9190613537565b905061262b7f0000000000000000000000000000000000000000000000000000000000000000837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166128bf9092919063ffffffff16565b6126967f0000000000000000000000000000000000000000000000000000000000000000827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166128bf9092919063ffffffff16565b50505b506127af565b6127116126aa611bf0565b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166128bf9092919063ffffffff16565b6127ae61271c611bf0565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006127689190613568565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166128bf9092919063ffffffff16565b5b565b7f000000000000000000000000000000000000000000000000000000000000000081565b60066020528060005260406000206000915090505481565b6127f5612b57565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161285b90613c0b565b60405180910390fd5b61286d81612bd5565b50565b6002600154036128b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128ac90613c77565b60405180910390fd5b6002600181905550565b6129408363a9059cbb60e01b84846040516024016128de929190613c97565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612ed6565b505050565b60018081905550565b7f00000000000000000000000000000000000000000000000000000000000000004210156129b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129a890613d0c565b60405180910390fd5b60006005541115612b0b576000612a136129ed6004547f0000000000000000000000000000000000000000000000000000000000000000612b14565b7f0000000000000000000000000000000000000000000000000000000000000000612f9d565b612a3d427f0000000000000000000000000000000000000000000000000000000000000000612b14565b612a479190613618565b905060007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612a979190613618565b827f0000000000000000000000000000000000000000000000000000000000000000612ac391906135be565b612acd9190613537565b9050600554670de0b6b3a764000082612ae691906135be565b612af09190613537565b60036000828254612b019190613568565b9250508190555050505b42600481905550565b6000818310612b235781612b25565b825b905092915050565b6000670de0b6b3a764000060035483612b4691906135be565b612b509190613537565b9050919050565b612b5f612fb6565b73ffffffffffffffffffffffffffffffffffffffff16612b7d611bf0565b73ffffffffffffffffffffffffffffffffffffffff1614612bd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bca90613d78565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060055411612cdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cd690613de4565b60405180910390fd5b6000612d36612d106004547f0000000000000000000000000000000000000000000000000000000000000000612b14565b7f0000000000000000000000000000000000000000000000000000000000000000612f9d565b612d60427f0000000000000000000000000000000000000000000000000000000000000000612b14565b612d6a9190613618565b905060007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612dba9190613618565b827f0000000000000000000000000000000000000000000000000000000000000000612de691906135be565b612df09190613537565b90506000600554670de0b6b3a764000083612e0b91906135be565b612e159190613537565b600354612e229190613568565b9050670de0b6b3a76400008186612e3991906135be565b612e439190613537565b9350505050919050565b612ed0846323b872dd60e01b858585604051602401612e6e93929190613e04565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612ed6565b50505050565b6000612f38826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612fbe9092919063ffffffff16565b9050600081511115612f985780806020019051810190612f589190613e67565b612f97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f8e90613f06565b60405180910390fd5b5b505050565b6000818311612fac5781612fae565b825b905092915050565b600033905090565b6060612fcd8484600085612fd6565b90509392505050565b60608247101561301b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161301290613f98565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516130449190614027565b60006040518083038185875af1925050503d8060008114613081576040519150601f19603f3d011682016040523d82523d6000602084013e613086565b606091505b5091509150613097878383876130a3565b92505050949350505050565b606083156131055760008351036130fd576130bd85613118565b6130fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130f39061408a565b60405180910390fd5b5b829050613110565b61310f838361313b565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561314e5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161318291906140ff565b60405180910390fd5b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006131c082613195565b9050919050565b6131d0816131b5565b81146131db57600080fd5b50565b6000813590506131ed816131c7565b92915050565b6000602082840312156132095761320861318b565b5b6000613217848285016131de565b91505092915050565b6000819050919050565b61323381613220565b82525050565b600060208201905061324e600083018461322a565b92915050565b6000606082019050613269600083018661322a565b613276602083018561322a565b613283604083018461322a565b949350505050565b60008115159050919050565b6132a08161328b565b82525050565b60006020820190506132bb6000830184613297565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126132e6576132e56132c1565b5b8235905067ffffffffffffffff811115613303576133026132c6565b5b60208301915083602082028301111561331f5761331e6132cb565b5b9250929050565b6000806020838503121561333d5761333c61318b565b5b600083013567ffffffffffffffff81111561335b5761335a613190565b5b613367858286016132d0565b92509250509250929050565b61337c816131b5565b82525050565b60006020820190506133976000830184613373565b92915050565b6000819050919050565b60006133c26133bd6133b884613195565b61339d565b613195565b9050919050565b60006133d4826133a7565b9050919050565b60006133e6826133c9565b9050919050565b6133f6816133db565b82525050565b600060208201905061341160008301846133ed565b92915050565b600060808201905061342c600083018761322a565b613439602083018661322a565b613446604083018561322a565b613453606083018461322a565b95945050505050565b600082825260208201905092915050565b7f6e6f7420636c61696d61626c6520796574000000000000000000000000000000600082015250565b60006134a360118361345c565b91506134ae8261346d565b602082019050919050565b600060208201905081810360008301526134d281613496565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061354282613220565b915061354d83613220565b92508261355d5761355c6134d9565b5b828204905092915050565b600061357382613220565b915061357e83613220565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156135b3576135b2613508565b5b828201905092915050565b60006135c982613220565b91506135d483613220565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561360d5761360c613508565b5b828202905092915050565b600061362382613220565b915061362e83613220565b92508282101561364157613640613508565b5b828203905092915050565b7f43616e206f6e6c79206465706f73697420457468657220647572696e6720746860008201527f652073616c6520706572696f642e000000000000000000000000000000000000602082015250565b60006136a8602e8361345c565b91506136b38261364c565b604082019050919050565b600060208201905081810360008301526136d78161369b565b9050919050565b7f436f6d6d69746d656e7420616d6f756e74206973206f7574736964652074686560008201527f20616c6c6f7765642072616e67652e0000000000000000000000000000000000602082015250565b600061373a602f8361345c565b9150613745826136de565b604082019050919050565b600060208201905081810360008301526137698161372d565b9050919050565b7f43616e206f6e6c7920636c61696d20746f6b656e73206166746572207468652060008201527f73616c652068617320656e6465642e0000000000000000000000000000000000602082015250565b60006137cc602f8361345c565b91506137d782613770565b604082019050919050565b600060208201905081810360008301526137fb816137bf565b9050919050565b7f596f752068617665206e6f74206465706f736974656420616e7920457468657260008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061385e60218361345c565b915061386982613802565b604082019050919050565b6000602082019050818103600083015261388d81613851565b9050919050565b600081905092915050565b50565b60006138af600083613894565b91506138ba8261389f565b600082019050919050565b60006138d0826138a2565b9150819050919050565b7f4661696c656420746f207472616e736665722065746865720000000000000000600082015250565b600061391060188361345c565b915061391b826138da565b602082019050919050565b6000602082019050818103600083015261393f81613903565b9050919050565b6000819050919050565b600061396b61396661396184613946565b61339d565b613220565b9050919050565b61397b81613950565b82525050565b6000606082019050613996600083018661322a565b6139a36020830185613972565b6139b06040830184613972565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006139f282613220565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613a2457613a23613508565b5b600182019050919050565b7f416c726561647920737461727465642e00000000000000000000000000000000600082015250565b6000613a6560108361345c565b9150613a7082613a2f565b602082019050919050565b60006020820190508181036000830152613a9481613a58565b9050919050565b7f43616e206f6e6c792066696e697368206166746572207468652073616c65206860008201527f617320656e6465642e0000000000000000000000000000000000000000000000602082015250565b6000613af760298361345c565b9150613b0282613a9b565b604082019050919050565b60006020820190508181036000830152613b2681613aea565b9050919050565b7f416c72656164792066696e69736865642e000000000000000000000000000000600082015250565b6000613b6360118361345c565b9150613b6e82613b2d565b602082019050919050565b60006020820190508181036000830152613b9281613b56565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613bf560268361345c565b9150613c0082613b99565b604082019050919050565b60006020820190508181036000830152613c2481613be8565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000613c61601f8361345c565b9150613c6c82613c2b565b602082019050919050565b60006020820190508181036000830152613c9081613c54565b9050919050565b6000604082019050613cac6000830185613373565b613cb9602083018461322a565b9392505050565b7f6e6f742073746172746564000000000000000000000000000000000000000000600082015250565b6000613cf6600b8361345c565b9150613d0182613cc0565b602082019050919050565b60006020820190508181036000830152613d2581613ce9565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613d6260208361345c565b9150613d6d82613d2c565b602082019050919050565b60006020820190508181036000830152613d9181613d55565b9050919050565b7f6e6f20636f6d6d69746d656e7473000000000000000000000000000000000000600082015250565b6000613dce600e8361345c565b9150613dd982613d98565b602082019050919050565b60006020820190508181036000830152613dfd81613dc1565b9050919050565b6000606082019050613e196000830186613373565b613e266020830185613373565b613e33604083018461322a565b949350505050565b613e448161328b565b8114613e4f57600080fd5b50565b600081519050613e6181613e3b565b92915050565b600060208284031215613e7d57613e7c61318b565b5b6000613e8b84828501613e52565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000613ef0602a8361345c565b9150613efb82613e94565b604082019050919050565b60006020820190508181036000830152613f1f81613ee3565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000613f8260268361345c565b9150613f8d82613f26565b604082019050919050565b60006020820190508181036000830152613fb181613f75565b9050919050565b600081519050919050565b60005b83811015613fe1578082015181840152602081019050613fc6565b83811115613ff0576000848401525b50505050565b600061400182613fb8565b61400b8185613894565b935061401b818560208601613fc3565b80840191505092915050565b60006140338284613ff6565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000614074601d8361345c565b915061407f8261403e565b602082019050919050565b600060208201905081810360008301526140a381614067565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b60006140d1826140aa565b6140db818561345c565b93506140eb818560208601613fc3565b6140f4816140b5565b840191505092915050565b6000602082019050818103600083015261411981846140c6565b90509291505056fea264697066735822122028ba7bc4e5d385f317a39de86fc00cd208b5ef212d3b8c0fca43bc80b75c91f664736f6c634300080d0033",
							"opcodes": "PUSH2 0x220 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4D05 CODESIZE SUB DUP1 PUSH3 0x4D05 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x4A0 JUMP JUMPDEST PUSH3 0x58 PUSH3 0x4C PUSH3 0x32F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x337 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP TIMESTAMP DUP9 LT ISZERO PUSH3 0xA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9C SWAP1 PUSH3 0x634 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP8 GT PUSH3 0xEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE1 SWAP1 PUSH3 0x6CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 GT PUSH3 0x130 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x127 SWAP1 PUSH3 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 DUP11 GT PUSH3 0x175 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x16C SWAP1 PUSH3 0x7FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 GT PUSH3 0x1BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1B2 SWAP1 PUSH3 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP5 LT ISZERO PUSH3 0x201 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1F8 SWAP1 PUSH3 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0x41D962ED9A2AF1B68844EF588E182A628A5FA6F3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP11 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP DUP10 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP9 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP DUP8 PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP7 PUSH2 0x160 DUP2 DUP2 MSTORE POP POP DUP6 PUSH2 0x180 DUP2 DUP2 MSTORE POP POP DUP5 PUSH2 0x1E0 DUP2 DUP2 MSTORE POP POP DUP4 PUSH2 0x200 DUP2 DUP2 MSTORE POP POP PUSH20 0xE9F04E418F93AE73387576E9AB0F8FDB7C88545D PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH2 0x1C0 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x974 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x415 DUP2 PUSH3 0x400 JUMP JUMPDEST DUP2 EQ PUSH3 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x435 DUP2 PUSH3 0x40A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x468 DUP3 PUSH3 0x43B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x47A DUP2 PUSH3 0x45B JUMP JUMPDEST DUP2 EQ PUSH3 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x49A DUP2 PUSH3 0x46F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH3 0x4C9 JUMPI PUSH3 0x4C8 PUSH3 0x3FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x4D9 DUP15 DUP3 DUP16 ADD PUSH3 0x424 JUMP JUMPDEST SWAP12 POP POP PUSH1 0x20 PUSH3 0x4EC DUP15 DUP3 DUP16 ADD PUSH3 0x424 JUMP JUMPDEST SWAP11 POP POP PUSH1 0x40 PUSH3 0x4FF DUP15 DUP3 DUP16 ADD PUSH3 0x424 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 PUSH3 0x512 DUP15 DUP3 DUP16 ADD PUSH3 0x424 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x80 PUSH3 0x525 DUP15 DUP3 DUP16 ADD PUSH3 0x424 JUMP JUMPDEST SWAP8 POP POP PUSH1 0xA0 PUSH3 0x538 DUP15 DUP3 DUP16 ADD PUSH3 0x424 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xC0 PUSH3 0x54B DUP15 DUP3 DUP16 ADD PUSH3 0x424 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xE0 PUSH3 0x55E DUP15 DUP3 DUP16 ADD PUSH3 0x424 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x100 PUSH3 0x572 DUP15 DUP3 DUP16 ADD PUSH3 0x424 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x120 PUSH3 0x586 DUP15 DUP3 DUP16 ADD PUSH3 0x489 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x140 PUSH3 0x59A DUP15 DUP3 DUP16 ADD PUSH3 0x424 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D75737420626520696E2074686520667574757265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x61C PUSH1 0x21 DUP4 PUSH3 0x5AD JUMP JUMPDEST SWAP2 POP PUSH3 0x629 DUP3 PUSH3 0x5BE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x64F DUP2 PUSH3 0x60D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456E642074696D65206D7573742062652067726561746572207468616E207374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6172742074696D652E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6B4 PUSH1 0x29 DUP4 PUSH3 0x5AD JUMP JUMPDEST SWAP2 POP PUSH3 0x6C1 DUP3 PUSH3 0x656 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x6E7 DUP2 PUSH3 0x6A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45746865727320746F2072616973652073686F756C6420626520677265617465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207468616E2030000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x74C PUSH1 0x28 DUP4 PUSH3 0x5AD JUMP JUMPDEST SWAP2 POP PUSH3 0x759 DUP3 PUSH3 0x6EE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x77F DUP2 PUSH3 0x73D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45746865727320746F2072616973652073686F756C6420626520677265617465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207468616E20726566756E64207468726573686F6C64000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7E4 PUSH1 0x37 DUP4 PUSH3 0x5AD JUMP JUMPDEST SWAP2 POP PUSH3 0x7F1 DUP3 PUSH3 0x786 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x817 DUP2 PUSH3 0x7D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E696D756D20636F6D6D69746D656E742073686F756C6420626520677265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61746572207468616E2030000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x87C PUSH1 0x2B DUP4 PUSH3 0x5AD JUMP JUMPDEST SWAP2 POP PUSH3 0x889 DUP3 PUSH3 0x81E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x8AF DUP2 PUSH3 0x86D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6178696D756D20636F6D6D69746D656E742073686F756C6420626520677265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61746572206F7220657175616C20746F206D696E696D756D20636F6D6D69746D PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x656E740000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A PUSH1 0x43 DUP4 PUSH3 0x5AD JUMP JUMPDEST SWAP2 POP PUSH3 0x947 DUP3 PUSH3 0x8B6 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x96D DUP2 PUSH3 0x92B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x200 MLOAD PUSH2 0x4157 PUSH3 0xBAE PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x10B0 ADD MSTORE PUSH2 0x12A7 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xEC3 ADD MSTORE PUSH2 0x1086 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2090 ADD MSTORE DUP2 DUP2 PUSH2 0x2199 ADD MSTORE DUP2 DUP2 PUSH2 0x2498 ADD MSTORE PUSH2 0x271E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1ABF ADD MSTORE DUP2 DUP2 PUSH2 0x24D2 ADD MSTORE DUP2 DUP2 PUSH2 0x25C5 ADD MSTORE PUSH2 0x2630 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x7C5 ADD MSTORE PUSH2 0x1C1B ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xEE7 ADD MSTORE DUP2 DUP2 PUSH2 0xFD8 ADD MSTORE DUP2 DUP2 PUSH2 0x1304 ADD MSTORE DUP2 DUP2 PUSH2 0x2249 ADD MSTORE DUP2 DUP2 PUSH2 0x29C9 ADD MSTORE DUP2 DUP2 PUSH2 0x2A19 ADD MSTORE DUP2 DUP2 PUSH2 0x2A6E ADD MSTORE DUP2 DUP2 PUSH2 0x2CEC ADD MSTORE DUP2 DUP2 PUSH2 0x2D3C ADD MSTORE PUSH2 0x2D91 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xFAC ADD MSTORE DUP2 DUP2 PUSH2 0x1B21 ADD MSTORE DUP2 DUP2 PUSH2 0x2950 ADD MSTORE DUP2 DUP2 PUSH2 0x29EF ADD MSTORE DUP2 DUP2 PUSH2 0x2A4D ADD MSTORE DUP2 DUP2 PUSH2 0x2D12 ADD MSTORE PUSH2 0x2D70 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x12CB ADD MSTORE DUP2 DUP2 PUSH2 0x21BA ADD MSTORE DUP2 DUP2 PUSH2 0x273F ADD MSTORE DUP2 DUP2 PUSH2 0x2A9A ADD MSTORE PUSH2 0x2DBD ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xBDB ADD MSTORE DUP2 DUP2 PUSH2 0xE8C ADD MSTORE DUP2 DUP2 PUSH2 0x13E8 ADD MSTORE DUP2 DUP2 PUSH2 0x1DC2 ADD MSTORE PUSH2 0x2316 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xC4C ADD MSTORE DUP2 DUP2 PUSH2 0xD19 ADD MSTORE DUP2 DUP2 PUSH2 0xF0B ADD MSTORE DUP2 DUP2 PUSH2 0x1459 ADD MSTORE DUP2 DUP2 PUSH2 0x1526 ADD MSTORE DUP2 DUP2 PUSH2 0x1E33 ADD MSTORE DUP2 DUP2 PUSH2 0x1F00 ADD MSTORE DUP2 DUP2 PUSH2 0x2362 ADD MSTORE DUP2 DUP2 PUSH2 0x2420 ADD MSTORE DUP2 DUP2 PUSH2 0x2449 ADD MSTORE DUP2 DUP2 PUSH2 0x246D ADD MSTORE DUP2 DUP2 PUSH2 0x253C ADD MSTORE PUSH2 0x2560 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xD3B ADD MSTORE DUP2 DUP2 PUSH2 0x1283 ADD MSTORE DUP2 DUP2 PUSH2 0x1548 ADD MSTORE DUP2 DUP2 PUSH2 0x1F22 ADD MSTORE DUP2 DUP2 PUSH2 0x212C ADD MSTORE DUP2 DUP2 PUSH2 0x258B ADD MSTORE PUSH2 0x26AC ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x9E5 ADD MSTORE DUP2 DUP2 PUSH2 0x21E5 ADD MSTORE DUP2 DUP2 PUSH2 0x24F4 ADD MSTORE DUP2 DUP2 PUSH2 0x25E7 ADD MSTORE DUP2 DUP2 PUSH2 0x276A ADD MSTORE PUSH2 0x27B3 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x98F ADD MSTORE DUP2 DUP2 PUSH2 0x1AF7 ADD MSTORE DUP2 DUP2 PUSH2 0x214D ADD MSTORE DUP2 DUP2 PUSH2 0x2652 ADD MSTORE PUSH2 0x26CD ADD MSTORE PUSH2 0x4157 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70D5AE05 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0x94EF7E62 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xBEF4876B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBEF4876B EQ PUSH2 0x6E8 JUMPI DUP1 PUSH4 0xD56B2889 EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0xE2099438 EQ PUSH2 0x72A JUMPI DUP1 PUSH4 0xE8FCF723 EQ PUSH2 0x755 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x792 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x94EF7E62 EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x669 JUMPI DUP1 PUSH4 0xA8EA6F4C EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x6D1 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x78E97925 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0x7F649783 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0x8E05FB74 EQ PUSH2 0x610 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x70D5AE05 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x524 JUMPI DUP1 PUSH4 0x72DA776E EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0x78BB86D3 EQ PUSH2 0x566 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x3A3AB672 GT PUSH2 0x190 JUMPI DUP1 PUSH4 0x4D412357 GT PUSH2 0x15F JUMPI DUP1 PUSH4 0x4D412357 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x4EC01774 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x548DB174 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x599E10CE EQ PUSH2 0x4BC JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x3A3AB672 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x3C7A3AFF EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x3D956691 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x483383C8 EQ PUSH2 0x3D3 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1F2698AB GT PUSH2 0x1CC JUMPI DUP1 PUSH4 0x1F2698AB EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x2BCBF7CD EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x32ACD355 EQ PUSH2 0x336 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1EAAEC4 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x1048AB28 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x12ADECDA EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x16FC4869 EQ PUSH2 0x28A JUMPI PUSH2 0x204 JUMP JUMPDEST CALLDATASIZE PUSH2 0x204 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x7BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29F PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x32A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x32A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A6 PUSH2 0xF83 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BD PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E8 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43E PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x3326 JUMP JUMPDEST PUSH2 0x1A01 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50E PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51B SWAP2 SWAP1 PUSH2 0x3382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x539 PUSH2 0x1AE1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x550 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x33FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57B PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x588 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A6 PUSH2 0x1B1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0x3326 JUMP JUMPDEST PUSH2 0x1B43 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FA PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x3382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x625 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x632 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x650 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x660 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x690 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68B SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH2 0x206E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x32A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BB PUSH2 0x208E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C8 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E6 PUSH2 0x20B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FD PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70A SWAP2 SWAP1 PUSH2 0x32A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x728 PUSH2 0x223F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x73F PUSH2 0x27B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x33FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH2 0x27D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x789 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH2 0x27ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C3 PUSH2 0x2870 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81D SWAP1 PUSH2 0x34B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9D3 CALLER DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA29 CALLER DUP3 DUP5 PUSH2 0x9E3 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x98658F77A1C9013BC3A00213385D7B07DE0435B7B3B3023A43C66B91E05566C2 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA73 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0xA86 PUSH2 0x2945 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xAAD PUSH2 0x294E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xB82 JUMPI PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0xBD9 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE85 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x5 SLOAD LT PUSH2 0xE35 JUMPI PUSH1 0x0 PUSH2 0xCC4 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH32 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0xCBF SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST PUSH2 0x2B14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 DUP4 PUSH32 0x0 PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0xD6E SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDFA PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2B2D JUMP JUMPDEST PUSH2 0xE04 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP4 PUSH2 0xE15 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 DUP5 PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST DUP4 SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x0 DUP1 SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8B PUSH2 0x2870 JUMP JUMPDEST PUSH2 0xF93 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xFCF JUMPI POP PUSH32 0x0 TIMESTAMP LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xFFA JUMPI POP PUSH32 0x0 TIMESTAMP LT JUMPDEST PUSH2 0x1039 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1030 SWAP1 PUSH2 0x36BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1084 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST PUSH32 0x0 GT ISZERO DUP1 ISZERO PUSH2 0x111D JUMPI POP PUSH32 0x0 CALLVALUE PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x111A SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST GT ISZERO JUMPDEST PUSH2 0x115C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1153 SWAP1 PUSH2 0x3750 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11AB SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11C4 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11D4 CALLVALUE PUSH2 0x2B2D JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1222 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5E1DD8C4451717D5CA4FFBEFDADA35E22E0871220B9ED9DD03A351F0938C5ED7 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x126F SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x127F PUSH2 0x2945 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x12FA PUSH2 0x2870 JUMP JUMPDEST PUSH2 0x1302 PUSH2 0x294E JUMP JUMPDEST PUSH32 0x0 TIMESTAMP GT PUSH2 0x1364 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135B SWAP1 PUSH2 0x37E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x13E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DD SWAP1 PUSH2 0x3874 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x5 SLOAD LT PUSH2 0x1847 JUMPI PUSH1 0x0 PUSH2 0x14D1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH32 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14C2 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x14CC SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST PUSH2 0x2B14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1520 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 DUP4 PUSH32 0x0 PUSH2 0x1571 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x157B SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1607 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2B2D JUMP JUMPDEST PUSH2 0x1611 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1662 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x175C SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1799 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x179E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x17E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D9 SWAP1 PUSH2 0x3926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x45C072AA05B9853B5A993DE7A28BC332EE01404A628CEC1A23CE0F659F842EF1 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x182C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 DUP4 DUP4 SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x18F6 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1933 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1938 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x197C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1973 SWAP1 PUSH2 0x3926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x45C072AA05B9853B5A993DE7A28BC332EE01404A628CEC1A23CE0F659F842EF1 DUP4 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH2 0x19C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH1 0x0 DUP1 SWAP5 POP SWAP5 POP SWAP5 POP POP POP JUMPDEST PUSH2 0x19E4 PUSH2 0x2945 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A09 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1AA0 JUMPI PUSH1 0xA PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x1A2E JUMPI PUSH2 0x1A2D PUSH2 0x39B8 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1A43 SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE DUP1 DUP1 PUSH2 0x1A98 SWAP1 PUSH2 0x39E7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A0C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1AE9 PUSH2 0x2B57 JUMP JUMPDEST PUSH2 0x1AF3 PUSH1 0x0 PUSH2 0x2BD5 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1B4B PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1BEB JUMPI PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0x39B8 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1B87 SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x1BE3 SWAP1 PUSH2 0x39E7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B4E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x1D66 JUMPI PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x3 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D19 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x1DC0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2068 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x5 SLOAD LT PUSH2 0x2014 JUMPI PUSH1 0x0 PUSH2 0x1EAB PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH32 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1E9C SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x1EA6 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST PUSH2 0x2B14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1EFA SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 DUP4 PUSH32 0x0 PUSH2 0x1F4B SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x1F55 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FE1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2C99 JUMP JUMPDEST PUSH2 0x1FEB SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP4 PUSH2 0x1FFC SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP DUP4 DUP4 DUP3 DUP5 SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x20BA PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x210A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2101 SWAP1 PUSH2 0x3A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2192 CALLER ADDRESS PUSH32 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E4D SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x222A CALLER ADDRESS PUSH32 0x0 PUSH32 0x0 PUSH2 0x21E3 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E4D SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2247 PUSH2 0x2B57 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP GT PUSH2 0x22A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A0 SWAP1 PUSH2 0x3B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x22F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22F0 SWAP1 PUSH2 0x3B79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH1 0x5 SLOAD LT PUSH2 0x269F JUMPI PUSH1 0x0 PUSH2 0x2347 PUSH2 0x1BF0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2389 PUSH32 0x0 PUSH1 0x5 SLOAD PUSH2 0x2B14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2395 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23D2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x241B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2412 SWAP1 PUSH2 0x3926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH32 0x0 GT ISZERO PUSH2 0x2699 JUMPI PUSH1 0x0 PUSH32 0x0 PUSH1 0x5 SLOAD PUSH32 0x0 PUSH2 0x2496 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x24C1 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x24CB SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH2 0x2538 PUSH32 0x0 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x5 SLOAD PUSH32 0x0 PUSH2 0x2589 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x25B4 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x25BE SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH2 0x262B PUSH32 0x0 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2696 PUSH32 0x0 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x27AF JUMP JUMPDEST PUSH2 0x2711 PUSH2 0x26AA PUSH2 0x1BF0 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27AE PUSH2 0x271C PUSH2 0x1BF0 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH2 0x2768 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27F5 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2864 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285B SWAP1 PUSH2 0x3C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x286D DUP2 PUSH2 0x2BD5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x28B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28AC SWAP1 PUSH2 0x3C77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2940 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x28DE SWAP3 SWAP2 SWAP1 PUSH2 0x3C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2ED6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x29B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A8 SWAP1 PUSH2 0x3D0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x2B0B JUMPI PUSH1 0x0 PUSH2 0x2A13 PUSH2 0x29ED PUSH1 0x4 SLOAD PUSH32 0x0 PUSH2 0x2B14 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x2A3D TIMESTAMP PUSH32 0x0 PUSH2 0x2B14 JUMP JUMPDEST PUSH2 0x2A47 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x2A97 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH2 0x2AC3 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x2ACD SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x2AE6 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x2AF0 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2B01 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2B23 JUMPI DUP2 PUSH2 0x2B25 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD DUP4 PUSH2 0x2B46 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x2B50 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B5F PUSH2 0x2FB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B7D PUSH2 0x1BF0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2BD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BCA SWAP1 PUSH2 0x3D78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0x2CDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD6 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D36 PUSH2 0x2D10 PUSH1 0x4 SLOAD PUSH32 0x0 PUSH2 0x2B14 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x2D60 TIMESTAMP PUSH32 0x0 PUSH2 0x2B14 JUMP JUMPDEST PUSH2 0x2D6A SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x2DBA SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH2 0x2DE6 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x2DF0 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x2E0B SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x2E15 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2E22 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP7 PUSH2 0x2E39 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x2E43 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2ED0 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2E6E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2ED6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F38 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FBE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2F98 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2F58 SWAP2 SWAP1 PUSH2 0x3E67 JUMP JUMPDEST PUSH2 0x2F97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8E SWAP1 PUSH2 0x3F06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x2FAC JUMPI DUP2 PUSH2 0x2FAE JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2FCD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2FD6 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x301B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3012 SWAP1 PUSH2 0x3F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3044 SWAP2 SWAP1 PUSH2 0x4027 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3081 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3086 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3097 DUP8 DUP4 DUP4 DUP8 PUSH2 0x30A3 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3105 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x30FD JUMPI PUSH2 0x30BD DUP6 PUSH2 0x3118 JUMP JUMPDEST PUSH2 0x30FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F3 SWAP1 PUSH2 0x408A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x3110 JUMP JUMPDEST PUSH2 0x310F DUP4 DUP4 PUSH2 0x313B JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x314E JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3182 SWAP2 SWAP1 PUSH2 0x40FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C0 DUP3 PUSH2 0x3195 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31D0 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x31DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x31ED DUP2 PUSH2 0x31C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3209 JUMPI PUSH2 0x3208 PUSH2 0x318B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3217 DUP5 DUP3 DUP6 ADD PUSH2 0x31DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3233 DUP2 PUSH2 0x3220 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x324E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x322A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3269 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x3276 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x3283 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x322A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32A0 DUP2 PUSH2 0x328B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3297 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x32E6 JUMPI PUSH2 0x32E5 PUSH2 0x32C1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3303 JUMPI PUSH2 0x3302 PUSH2 0x32C6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x331F JUMPI PUSH2 0x331E PUSH2 0x32CB JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x333D JUMPI PUSH2 0x333C PUSH2 0x318B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x335B JUMPI PUSH2 0x335A PUSH2 0x3190 JUMP JUMPDEST JUMPDEST PUSH2 0x3367 DUP6 DUP3 DUP7 ADD PUSH2 0x32D0 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x337C DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3397 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3373 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C2 PUSH2 0x33BD PUSH2 0x33B8 DUP5 PUSH2 0x3195 JUMP JUMPDEST PUSH2 0x339D JUMP JUMPDEST PUSH2 0x3195 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D4 DUP3 PUSH2 0x33A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E6 DUP3 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33F6 DUP2 PUSH2 0x33DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3411 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x342C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x3439 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x3446 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x3453 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x322A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420636C61696D61626C6520796574000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A3 PUSH1 0x11 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x34AE DUP3 PUSH2 0x346D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34D2 DUP2 PUSH2 0x3496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3542 DUP3 PUSH2 0x3220 JUMP JUMPDEST SWAP2 POP PUSH2 0x354D DUP4 PUSH2 0x3220 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x355D JUMPI PUSH2 0x355C PUSH2 0x34D9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3573 DUP3 PUSH2 0x3220 JUMP JUMPDEST SWAP2 POP PUSH2 0x357E DUP4 PUSH2 0x3220 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x35B3 JUMPI PUSH2 0x35B2 PUSH2 0x3508 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C9 DUP3 PUSH2 0x3220 JUMP JUMPDEST SWAP2 POP PUSH2 0x35D4 DUP4 PUSH2 0x3220 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x360D JUMPI PUSH2 0x360C PUSH2 0x3508 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3623 DUP3 PUSH2 0x3220 JUMP JUMPDEST SWAP2 POP PUSH2 0x362E DUP4 PUSH2 0x3220 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3641 JUMPI PUSH2 0x3640 PUSH2 0x3508 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E206F6E6C79206465706F73697420457468657220647572696E67207468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x652073616C6520706572696F642E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A8 PUSH1 0x2E DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x36B3 DUP3 PUSH2 0x364C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36D7 DUP2 PUSH2 0x369B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6D6D69746D656E7420616D6F756E74206973206F75747369646520746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20616C6C6F7765642072616E67652E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x373A PUSH1 0x2F DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3745 DUP3 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3769 DUP2 PUSH2 0x372D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E206F6E6C7920636C61696D20746F6B656E732061667465722074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x73616C652068617320656E6465642E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37CC PUSH1 0x2F DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x37D7 DUP3 PUSH2 0x3770 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37FB DUP2 PUSH2 0x37BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F74206465706F736974656420616E79204574686572 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x385E PUSH1 0x21 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3869 DUP3 PUSH2 0x3802 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x388D DUP2 PUSH2 0x3851 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38AF PUSH1 0x0 DUP4 PUSH2 0x3894 JUMP JUMPDEST SWAP2 POP PUSH2 0x38BA DUP3 PUSH2 0x389F JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38D0 DUP3 PUSH2 0x38A2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E736665722065746865720000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3910 PUSH1 0x18 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x391B DUP3 PUSH2 0x38DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x393F DUP2 PUSH2 0x3903 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396B PUSH2 0x3966 PUSH2 0x3961 DUP5 PUSH2 0x3946 JUMP JUMPDEST PUSH2 0x339D JUMP JUMPDEST PUSH2 0x3220 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x397B DUP2 PUSH2 0x3950 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3996 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x39A3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3972 JUMP JUMPDEST PUSH2 0x39B0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3972 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x39F2 DUP3 PUSH2 0x3220 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3A24 JUMPI PUSH2 0x3A23 PUSH2 0x3508 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465642E00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A65 PUSH1 0x10 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3A70 DUP3 PUSH2 0x3A2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A94 DUP2 PUSH2 0x3A58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E206F6E6C792066696E697368206166746572207468652073616C652068 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x617320656E6465642E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF7 PUSH1 0x29 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3B02 DUP3 PUSH2 0x3A9B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B26 DUP2 PUSH2 0x3AEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C72656164792066696E69736865642E000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B63 PUSH1 0x11 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3B6E DUP3 PUSH2 0x3B2D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B92 DUP2 PUSH2 0x3B56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BF5 PUSH1 0x26 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3C00 DUP3 PUSH2 0x3B99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C24 DUP2 PUSH2 0x3BE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C61 PUSH1 0x1F DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3C6C DUP3 PUSH2 0x3C2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C90 DUP2 PUSH2 0x3C54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CAC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3373 JUMP JUMPDEST PUSH2 0x3CB9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x322A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E6F742073746172746564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CF6 PUSH1 0xB DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3D01 DUP3 PUSH2 0x3CC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D25 DUP2 PUSH2 0x3CE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D62 PUSH1 0x20 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3D6D DUP3 PUSH2 0x3D2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D91 DUP2 PUSH2 0x3D55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F20636F6D6D69746D656E7473000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DCE PUSH1 0xE DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3DD9 DUP3 PUSH2 0x3D98 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DFD DUP2 PUSH2 0x3DC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3E19 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3373 JUMP JUMPDEST PUSH2 0x3E26 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3373 JUMP JUMPDEST PUSH2 0x3E33 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x322A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3E44 DUP2 PUSH2 0x328B JUMP JUMPDEST DUP2 EQ PUSH2 0x3E4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3E61 DUP2 PUSH2 0x3E3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E7D JUMPI PUSH2 0x3E7C PUSH2 0x318B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E8B DUP5 DUP3 DUP6 ADD PUSH2 0x3E52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EF0 PUSH1 0x2A DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3EFB DUP3 PUSH2 0x3E94 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F1F DUP2 PUSH2 0x3EE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F82 PUSH1 0x26 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3F8D DUP3 PUSH2 0x3F26 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FB1 DUP2 PUSH2 0x3F75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3FE1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3FC6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3FF0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4001 DUP3 PUSH2 0x3FB8 JUMP JUMPDEST PUSH2 0x400B DUP2 DUP6 PUSH2 0x3894 JUMP JUMPDEST SWAP4 POP PUSH2 0x401B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3FC3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4033 DUP3 DUP5 PUSH2 0x3FF6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4074 PUSH1 0x1D DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x407F DUP3 PUSH2 0x403E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40A3 DUP2 PUSH2 0x4067 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D1 DUP3 PUSH2 0x40AA JUMP JUMPDEST PUSH2 0x40DB DUP2 DUP6 PUSH2 0x345C JUMP JUMPDEST SWAP4 POP PUSH2 0x40EB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3FC3 JUMP JUMPDEST PUSH2 0x40F4 DUP2 PUSH2 0x40B5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4119 DUP2 DUP5 PUSH2 0x40C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xBA PUSH28 0xC4E5D385F317A39DE86FC00CD208B5EF212D3B8C0FCA43BC80B75C91 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "48771:12026:0:-:0;;;51515:1671;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23339:32;23358:12;:10;;;:12;;:::i;:::-;23339:18;;;:32;;:::i;:::-;20500:1;20611:7;:22;;;;51933:15;51919:10;:29;;51897:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;52053:10;52042:8;:21;52020:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;52168:1;52151:14;:18;52143:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;52264:16;52247:14;:33;52225:138;;;;;;;;;;;;:::i;:::-;;;;;;;;;52395:1;52382:10;:14;52374:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;52491:10;52477;:24;;52455:141;;;;;;;;;;;;:::i;:::-;;;;;;;;;52629:42;52609:63;;;;;;;;;;52698:13;52683:28;;;;;;52738:14;52722:30;;;;;;52781:16;52763:34;;;;;;52820:10;52808:22;;;;;;52851:8;52841:18;;;;;;52884:12;52870:26;;;;;;52919:10;52907:22;;;;;;52952:10;52940:22;;;;;;52996:42;52973:66;;;;;;;;;;53066:14;53050:30;;;;;;53105:12;53091:26;;;;;;;;;;53154:24;53128:50;;;;;;51515:1671;;;;;;;;;;;48771:12026;;22257:98;22310:7;22337:10;22330:17;;22257:98;:::o;24885:191::-;24959:16;24978:6;;;;;;;;;;;24959:25;;25004:8;24995:6;;:17;;;;;;;;;;;;;;;;;;25059:8;25028:40;;25049:8;25028:40;;;;;;;;;;;;24948:128;24885:191;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:1921::-;1365:6;1373;1381;1389;1397;1405;1413;1421;1429;1437;1445:7;1495:3;1483:9;1474:7;1470:23;1466:33;1463:120;;;1502:79;;:::i;:::-;1463:120;1622:1;1647:64;1703:7;1694:6;1683:9;1679:22;1647:64;:::i;:::-;1637:74;;1593:128;1760:2;1786:64;1842:7;1833:6;1822:9;1818:22;1786:64;:::i;:::-;1776:74;;1731:129;1899:2;1925:64;1981:7;1972:6;1961:9;1957:22;1925:64;:::i;:::-;1915:74;;1870:129;2038:2;2064:64;2120:7;2111:6;2100:9;2096:22;2064:64;:::i;:::-;2054:74;;2009:129;2177:3;2204:64;2260:7;2251:6;2240:9;2236:22;2204:64;:::i;:::-;2194:74;;2148:130;2317:3;2344:64;2400:7;2391:6;2380:9;2376:22;2344:64;:::i;:::-;2334:74;;2288:130;2457:3;2484:64;2540:7;2531:6;2520:9;2516:22;2484:64;:::i;:::-;2474:74;;2428:130;2597:3;2624:64;2680:7;2671:6;2660:9;2656:22;2624:64;:::i;:::-;2614:74;;2568:130;2737:3;2764:64;2820:7;2811:6;2800:9;2796:22;2764:64;:::i;:::-;2754:74;;2708:130;2877:3;2904:64;2960:7;2951:6;2940:9;2936:22;2904:64;:::i;:::-;2894:74;;2848:130;3017:3;3045:64;3101:7;3092:6;3081:9;3077:22;3045:64;:::i;:::-;3034:75;;2988:131;1205:1921;;;;;;;;;;;;;;:::o;3132:169::-;3216:11;3250:6;3245:3;3238:19;3290:4;3285:3;3281:14;3266:29;;3132:169;;;;:::o;3307:220::-;3447:34;3443:1;3435:6;3431:14;3424:58;3516:3;3511:2;3503:6;3499:15;3492:28;3307:220;:::o;3533:366::-;3675:3;3696:67;3760:2;3755:3;3696:67;:::i;:::-;3689:74;;3772:93;3861:3;3772:93;:::i;:::-;3890:2;3885:3;3881:12;3874:19;;3533:366;;;:::o;3905:419::-;4071:4;4109:2;4098:9;4094:18;4086:26;;4158:9;4152:4;4148:20;4144:1;4133:9;4129:17;4122:47;4186:131;4312:4;4186:131;:::i;:::-;4178:139;;3905:419;;;:::o;4330:228::-;4470:34;4466:1;4458:6;4454:14;4447:58;4539:11;4534:2;4526:6;4522:15;4515:36;4330:228;:::o;4564:366::-;4706:3;4727:67;4791:2;4786:3;4727:67;:::i;:::-;4720:74;;4803:93;4892:3;4803:93;:::i;:::-;4921:2;4916:3;4912:12;4905:19;;4564:366;;;:::o;4936:419::-;5102:4;5140:2;5129:9;5125:18;5117:26;;5189:9;5183:4;5179:20;5175:1;5164:9;5160:17;5153:47;5217:131;5343:4;5217:131;:::i;:::-;5209:139;;4936:419;;;:::o;5361:227::-;5501:34;5497:1;5489:6;5485:14;5478:58;5570:10;5565:2;5557:6;5553:15;5546:35;5361:227;:::o;5594:366::-;5736:3;5757:67;5821:2;5816:3;5757:67;:::i;:::-;5750:74;;5833:93;5922:3;5833:93;:::i;:::-;5951:2;5946:3;5942:12;5935:19;;5594:366;;;:::o;5966:419::-;6132:4;6170:2;6159:9;6155:18;6147:26;;6219:9;6213:4;6209:20;6205:1;6194:9;6190:17;6183:47;6247:131;6373:4;6247:131;:::i;:::-;6239:139;;5966:419;;;:::o;6391:242::-;6531:34;6527:1;6519:6;6515:14;6508:58;6600:25;6595:2;6587:6;6583:15;6576:50;6391:242;:::o;6639:366::-;6781:3;6802:67;6866:2;6861:3;6802:67;:::i;:::-;6795:74;;6878:93;6967:3;6878:93;:::i;:::-;6996:2;6991:3;6987:12;6980:19;;6639:366;;;:::o;7011:419::-;7177:4;7215:2;7204:9;7200:18;7192:26;;7264:9;7258:4;7254:20;7250:1;7239:9;7235:17;7228:47;7292:131;7418:4;7292:131;:::i;:::-;7284:139;;7011:419;;;:::o;7436:230::-;7576:34;7572:1;7564:6;7560:14;7553:58;7645:13;7640:2;7632:6;7628:15;7621:38;7436:230;:::o;7672:366::-;7814:3;7835:67;7899:2;7894:3;7835:67;:::i;:::-;7828:74;;7911:93;8000:3;7911:93;:::i;:::-;8029:2;8024:3;8020:12;8013:19;;7672:366;;;:::o;8044:419::-;8210:4;8248:2;8237:9;8233:18;8225:26;;8297:9;8291:4;8287:20;8283:1;8272:9;8268:17;8261:47;8325:131;8451:4;8325:131;:::i;:::-;8317:139;;8044:419;;;:::o;8469:291::-;8609:34;8605:1;8597:6;8593:14;8586:58;8678:34;8673:2;8665:6;8661:15;8654:59;8747:5;8742:2;8734:6;8730:15;8723:30;8469:291;:::o;8766:366::-;8908:3;8929:67;8993:2;8988:3;8929:67;:::i;:::-;8922:74;;9005:93;9094:3;9005:93;:::i;:::-;9123:2;9118:3;9114:12;9107:19;;8766:366;;;:::o;9138:419::-;9304:4;9342:2;9331:9;9327:18;9319:26;;9391:9;9385:4;9381:20;9377:1;9366:9;9362:17;9355:47;9419:131;9545:4;9419:131;:::i;:::-;9411:139;;9138:419;;;:::o;48771:12026:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_3505": {
									"entryPoint": null,
									"id": 3505,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_calculateEmission_2482": {
									"entryPoint": 11417,
									"id": 2482,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_callOptionalReturn_714": {
									"entryPoint": 11990,
									"id": 714,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_839": {
									"entryPoint": 11095,
									"id": 839,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_777": {
									"entryPoint": 12214,
									"id": 777,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_766": {
									"entryPoint": 10565,
									"id": 766,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_758": {
									"entryPoint": 10352,
									"id": 758,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_438": {
									"entryPoint": 12603,
									"id": 438,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_896": {
									"entryPoint": 11221,
									"id": 896,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateEmission_2546": {
									"entryPoint": 10574,
									"id": 2546,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addToWhitelist_3459": {
									"entryPoint": 6979,
									"id": 3459,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burnAddress_2323": {
									"entryPoint": 6845,
									"id": 2323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateEmission_2414": {
									"entryPoint": 11053,
									"id": 2414,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claim2_3311": {
									"entryPoint": 1979,
									"id": 3311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_3234": {
									"entryPoint": 4845,
									"id": 3234,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@commit_2790": {
									"entryPoint": 3971,
									"id": 2790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@commitments_2343": {
									"entryPoint": 10197,
									"id": 2343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@emissionTokenSaleAmount_2325": {
									"entryPoint": 8334,
									"id": 2325,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@emissionToken_2307": {
									"entryPoint": 10161,
									"id": 2307,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endTime_2319": {
									"entryPoint": 3813,
									"id": 2319,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ethersToRaise_2311": {
									"entryPoint": 3849,
									"id": 2311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@finalEmissions_2351": {
									"entryPoint": 2696,
									"id": 2351,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@finalTokens_2355": {
									"entryPoint": 6633,
									"id": 2355,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@finish_3428": {
									"entryPoint": 8767,
									"id": 3428,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@finished_2333": {
									"entryPoint": 8748,
									"id": 2333,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_263": {
									"entryPoint": 12246,
									"id": 263,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_199": {
									"entryPoint": 12222,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_127": {
									"entryPoint": 12568,
									"id": 127,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isOnWhitelist_3501": {
									"entryPoint": 3885,
									"id": 3501,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxCommit_2329": {
									"entryPoint": 4773,
									"id": 2329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@max_920": {
									"entryPoint": 12189,
									"id": 920,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@minCommit_2327": {
									"entryPoint": 3777,
									"id": 2327,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_938": {
									"entryPoint": 11028,
									"id": 938,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@missedEmissions_2347": {
									"entryPoint": 6821,
									"id": 2347,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_825": {
									"entryPoint": 7152,
									"id": 825,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@receiveTime_2321": {
									"entryPoint": 7193,
									"id": 2321,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@refundThreshold_2313": {
									"entryPoint": 3722,
									"id": 2313,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeFromWhitelist_3489": {
									"entryPoint": 6657,
									"id": 3489,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_853": {
									"entryPoint": 6881,
									"id": 853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_492": {
									"entryPoint": 11853,
									"id": 492,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_466": {
									"entryPoint": 10431,
									"id": 466,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@salesToken_2304": {
									"entryPoint": 6901,
									"id": 2304,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@simulateClaimNoUpdate_3046": {
									"entryPoint": 7229,
									"id": 3046,
									"parameterSlots": 0,
									"returnSlots": 4
								},
								"@simulateClaim_2915": {
									"entryPoint": 2720,
									"id": 2915,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@startTime_2317": {
									"entryPoint": 6943,
									"id": 2317,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@start_2713": {
									"entryPoint": 8370,
									"id": 2713,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@started_2331": {
									"entryPoint": 3758,
									"id": 2331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokensToSell_2309": {
									"entryPoint": 4737,
									"id": 2309,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalCommitments_2339": {
									"entryPoint": 6937,
									"id": 2339,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalEmission_2315": {
									"entryPoint": 4809,
									"id": 2315,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_876": {
									"entryPoint": 10221,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_394": {
									"entryPoint": 12451,
									"id": 394,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@whitelist_2385": {
									"entryPoint": 8302,
									"id": 2385,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 12766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 13008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 15954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 12787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 13094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 15975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 13171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 12951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 16374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 13293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 14706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 16582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_214d642b53df775d4b33d366c6f9372cc2ec5014c3ae9d7e74d205687b92a939_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4bbdc6a3b88188c6333049541b61be1ba3041903473deadb5788ff0a8b023c24_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_54aebf7faa81b3fce9d385aee7f1c287e158dfd1024f7a846b75a4168e5d5d2e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 16245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_743c7eb8da68c5549428905a6d7f94eb1a9d7382444d14a96e31c22b32429672_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9349edeb6937a4137e4f8d14f88ddb95976f830013510388532c7cb44635b9be_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9df3668a93dc1ed2c74ab1007ca935ed6ab477236d8ea005670aae5d150690a3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aee1dddcfe1778195162fed17118452d5e06c02c78bab9a311a88b9491d70474_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 14498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c83009c7e36eac9b22add549c0f57add8236aaf712d791400e8f73301b7d27d8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 16487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 16099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fa7e2e8e92c81e3e258566a14d09938bec93fd21b9be5e37228bf6cd9bbafc6d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 12842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 16423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 14533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 13186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 15876,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 15511,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 12966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 13308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_214d642b53df775d4b33d366c6f9372cc2ec5014c3ae9d7e74d205687b92a939__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4bbdc6a3b88188c6333049541b61be1ba3041903473deadb5788ff0a8b023c24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_54aebf7faa81b3fce9d385aee7f1c287e158dfd1024f7a846b75a4168e5d5d2e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_743c7eb8da68c5549428905a6d7f94eb1a9d7382444d14a96e31c22b32429672__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9349edeb6937a4137e4f8d14f88ddb95976f830013510388532c7cb44635b9be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9df3668a93dc1ed2c74ab1007ca935ed6ab477236d8ea005670aae5d150690a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aee1dddcfe1778195162fed17118452d5e06c02c78bab9a311a88b9491d70474__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c83009c7e36eac9b22add549c0f57add8236aaf712d791400e8f73301b7d27d8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa7e2e8e92c81e3e258566a14d09938bec93fd21b9be5e37228bf6cd9bbafc6d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 12857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 14721,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 12884,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13335,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 16312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 16554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 14484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 13404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 13672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 13623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 13758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 13848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 12725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 12939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 14662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 12693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 12832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 13275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 14672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 13257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 13223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 16323,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 13213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 14823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 13576,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 13529,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 14776,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 12998,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 12993,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 13003,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 12688,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 12683,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 16565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_214d642b53df775d4b33d366c6f9372cc2ec5014c3ae9d7e74d205687b92a939": {
									"entryPoint": 13421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 15257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4bbdc6a3b88188c6333049541b61be1ba3041903473deadb5788ff0a8b023c24": {
									"entryPoint": 15768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_54aebf7faa81b3fce9d385aee7f1c287e158dfd1024f7a846b75a4168e5d5d2e": {
									"entryPoint": 14338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 16166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_743c7eb8da68c5549428905a6d7f94eb1a9d7382444d14a96e31c22b32429672": {
									"entryPoint": 15149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9349edeb6937a4137e4f8d14f88ddb95976f830013510388532c7cb44635b9be": {
									"entryPoint": 15003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 15660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9df3668a93dc1ed2c74ab1007ca935ed6ab477236d8ea005670aae5d150690a3": {
									"entryPoint": 13900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aee1dddcfe1778195162fed17118452d5e06c02c78bab9a311a88b9491d70474": {
									"entryPoint": 14895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 14495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c83009c7e36eac9b22add549c0f57add8236aaf712d791400e8f73301b7d27d8": {
									"entryPoint": 14046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 16446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 16020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694": {
									"entryPoint": 15552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 15403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fa7e2e8e92c81e3e258566a14d09938bec93fd21b9be5e37228bf6cd9bbafc6d": {
									"entryPoint": 14192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6": {
									"entryPoint": 14554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 12743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 15931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:30199:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:1",
														"type": ""
													}
												],
												"src": "1176:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:1",
														"type": ""
													}
												],
												"src": "1259:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:1",
														"type": ""
													}
												],
												"src": "1383:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1765:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1775:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1787:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1783:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1783:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1775:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1855:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1868:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1879:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1864:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1864:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1811:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1811:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1811:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1936:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1949:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1960:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1945:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1945:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1892:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1892:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1892:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2018:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2042:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2027:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2027:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1974:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1974:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1974:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1721:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1733:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1741:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1749:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1760:4:1",
														"type": ""
													}
												],
												"src": "1611:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2101:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2111:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2136:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2129:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2129:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2122:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2111:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2083:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2093:7:1",
														"type": ""
													}
												],
												"src": "2059:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2214:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2231:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2251:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2236:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2236:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2224:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2224:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2224:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2202:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2209:3:1",
														"type": ""
													}
												],
												"src": "2155:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2362:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2372:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2384:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2395:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2380:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2372:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2446:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2470:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2455:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2408:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2408:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2334:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2346:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2357:4:1",
														"type": ""
													}
												],
												"src": "2270:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2575:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2595:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2585:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2585:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2486:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2698:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2715:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2718:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2708:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2708:12:1"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "2609:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2821:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2838:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2841:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2831:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "2732:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2962:478:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3011:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3013:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3013:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3013:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2990:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2998:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2986:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2986:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3005:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2982:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2982:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2975:35:1"
															},
															"nodeType": "YulIf",
															"src": "2972:122:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3103:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3126:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3113:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3113:20:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3103:6:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3176:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "3178:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3178:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3178:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3148:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3156:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3145:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:30:1"
															},
															"nodeType": "YulIf",
															"src": "3142:117:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3268:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3284:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3292:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3280:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3280:17:1"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "3268:8:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3351:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "3353:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3353:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3353:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "3316:8:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3330:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3338:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3326:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3326:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3312:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:32:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3346:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3309:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3309:41:1"
															},
															"nodeType": "YulIf",
															"src": "3306:128:1"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2929:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2937:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "2945:8:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2955:6:1",
														"type": ""
													}
												],
												"src": "2872:568:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3547:458:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3593:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3595:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3595:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3595:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3577:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3564:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3564:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3589:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3560:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3560:32:1"
															},
															"nodeType": "YulIf",
															"src": "3557:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3686:312:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3701:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3732:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3743:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3728:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3728:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3715:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3715:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3705:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3793:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3795:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3795:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3795:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3765:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3773:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3762:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "3759:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3890:98:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3960:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3971:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3956:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3956:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3980:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3908:47:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3908:80:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3890:6:1"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3898:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3509:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3520:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3532:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3540:6:1",
														"type": ""
													}
												],
												"src": "3446:559:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4076:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4093:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4116:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4098:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4098:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4086:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4064:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4071:3:1",
														"type": ""
													}
												],
												"src": "4011:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4233:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4243:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4255:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4266:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4251:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4251:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4243:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4323:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4336:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4347:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4332:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4279:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4279:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4279:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4205:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4217:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4228:4:1",
														"type": ""
													}
												],
												"src": "4135:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4395:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4405:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4412:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4405:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4381:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4391:3:1",
														"type": ""
													}
												],
												"src": "4363:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4489:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4499:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4557:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "4539:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4539:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4530:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4530:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4512:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4512:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4499:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4469:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4479:9:1",
														"type": ""
													}
												],
												"src": "4429:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4637:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4647:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4691:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4660:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4660:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4647:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4617:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4627:9:1",
														"type": ""
													}
												],
												"src": "4577:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4782:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4792:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4836:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4805:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4805:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4792:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4762:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4772:9:1",
														"type": ""
													}
												],
												"src": "4709:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4932:79:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4949:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4998:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4954:43:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4954:50:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4942:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4942:63:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4920:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4927:3:1",
														"type": ""
													}
												],
												"src": "4854:157:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5128:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5138:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5150:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5161:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5146:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5146:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5138:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5231:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5244:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5255:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5240:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5240:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5174:56:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5174:84:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5174:84:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5100:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5112:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5123:4:1",
														"type": ""
													}
												],
												"src": "5017:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5453:371:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5463:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5475:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5486:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5471:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5471:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5463:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5544:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5557:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5568:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5553:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5553:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5500:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5625:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5638:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5649:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5634:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5581:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5581:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5581:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5707:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5720:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5731:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5716:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5663:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5663:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5663:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5789:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5802:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5813:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5798:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5798:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5745:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5745:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5745:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5401:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5413:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5421:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5429:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5437:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5448:4:1",
														"type": ""
													}
												],
												"src": "5271:553:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5926:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5943:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5948:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5936:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5936:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5936:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5964:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5983:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5988:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5979:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5964:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5898:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5903:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5914:11:1",
														"type": ""
													}
												],
												"src": "5830:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6111:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6133:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6141:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6129:14:1"
																	},
																	{
																		"hexValue": "6e6f7420636c61696d61626c6520796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6145:19:1",
																		"type": "",
																		"value": "not claimable yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6122:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6122:43:1"
														}
													]
												},
												"name": "store_literal_in_memory_214d642b53df775d4b33d366c6f9372cc2ec5014c3ae9d7e74d205687b92a939",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6103:6:1",
														"type": ""
													}
												],
												"src": "6005:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6324:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6334:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6400:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6405:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6341:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6341:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6334:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6506:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_214d642b53df775d4b33d366c6f9372cc2ec5014c3ae9d7e74d205687b92a939",
																	"nodeType": "YulIdentifier",
																	"src": "6417:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6417:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6417:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6519:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6530:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6535:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6526:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6526:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6519:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_214d642b53df775d4b33d366c6f9372cc2ec5014c3ae9d7e74d205687b92a939_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6312:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6320:3:1",
														"type": ""
													}
												],
												"src": "6178:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6721:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6731:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6743:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6754:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6739:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6739:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6731:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6778:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6789:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6774:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6774:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6797:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6803:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6793:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6793:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6767:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6767:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6767:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6823:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6957:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_214d642b53df775d4b33d366c6f9372cc2ec5014c3ae9d7e74d205687b92a939_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6831:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6831:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6823:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_214d642b53df775d4b33d366c6f9372cc2ec5014c3ae9d7e74d205687b92a939__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6701:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6716:4:1",
														"type": ""
													}
												],
												"src": "6550:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7003:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7020:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7023:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7013:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7013:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7013:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7117:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7120:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7110:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7110:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7110:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7141:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7144:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7134:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7134:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7134:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6975:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7189:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7206:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7209:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7199:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7199:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7199:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7303:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7306:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7296:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7296:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7296:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7327:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7330:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7320:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7320:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7320:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7161:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7389:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7399:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7422:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7404:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7404:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7399:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7433:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7456:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7438:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7438:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7433:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7480:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7482:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7482:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7482:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7477:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7470:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7470:9:1"
															},
															"nodeType": "YulIf",
															"src": "7467:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7512:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7521:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7524:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7517:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7517:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7512:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7378:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7381:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7387:1:1",
														"type": ""
													}
												],
												"src": "7347:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7582:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7592:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7615:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7597:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7597:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7592:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7626:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7649:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7631:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7631:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7626:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7789:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7791:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7791:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7791:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7710:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7717:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7785:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7713:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7713:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7707:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7707:81:1"
															},
															"nodeType": "YulIf",
															"src": "7704:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7821:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7832:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7835:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7828:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7828:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7821:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7569:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7572:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7578:3:1",
														"type": ""
													}
												],
												"src": "7538:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7897:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7907:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7930:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7912:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7912:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7907:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7941:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7964:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7946:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7946:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7941:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8139:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8141:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8141:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8141:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8051:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8044:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8044:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8037:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8037:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8059:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8066:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8134:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "8062:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8062:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8056:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8056:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8033:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8033:105:1"
															},
															"nodeType": "YulIf",
															"src": "8030:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8171:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8186:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8189:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8182:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8182:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8171:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7880:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7883:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7889:7:1",
														"type": ""
													}
												],
												"src": "7849:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8248:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8258:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8281:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8263:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8263:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8258:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8292:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8315:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8297:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8297:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8292:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8339:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8341:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8341:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8341:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8333:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8336:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8330:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8330:8:1"
															},
															"nodeType": "YulIf",
															"src": "8327:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8371:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8383:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8386:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8379:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8379:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8371:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8234:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8237:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8243:4:1",
														"type": ""
													}
												],
												"src": "8203:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8506:127:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8528:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8536:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8524:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8524:14:1"
																	},
																	{
																		"hexValue": "43616e206f6e6c79206465706f73697420457468657220647572696e67207468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8540:34:1",
																		"type": "",
																		"value": "Can only deposit Ether during th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8517:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8517:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8517:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8596:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8604:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8592:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8592:15:1"
																	},
																	{
																		"hexValue": "652073616c6520706572696f642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8609:16:1",
																		"type": "",
																		"value": "e sale period."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8585:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8585:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8585:41:1"
														}
													]
												},
												"name": "store_literal_in_memory_9df3668a93dc1ed2c74ab1007ca935ed6ab477236d8ea005670aae5d150690a3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8498:6:1",
														"type": ""
													}
												],
												"src": "8400:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8785:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8795:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8861:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8866:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8802:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8802:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8795:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8967:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9df3668a93dc1ed2c74ab1007ca935ed6ab477236d8ea005670aae5d150690a3",
																	"nodeType": "YulIdentifier",
																	"src": "8878:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8878:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8878:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8980:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8991:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8996:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8987:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8987:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8980:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9df3668a93dc1ed2c74ab1007ca935ed6ab477236d8ea005670aae5d150690a3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8773:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8781:3:1",
														"type": ""
													}
												],
												"src": "8639:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9182:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9192:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9204:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9215:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9200:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9200:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9192:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9239:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9250:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9235:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9258:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9264:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9254:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9254:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9228:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9228:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9284:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9418:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9df3668a93dc1ed2c74ab1007ca935ed6ab477236d8ea005670aae5d150690a3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9292:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9292:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9284:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9df3668a93dc1ed2c74ab1007ca935ed6ab477236d8ea005670aae5d150690a3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9162:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9177:4:1",
														"type": ""
													}
												],
												"src": "9011:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9542:128:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9564:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9572:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9560:14:1"
																	},
																	{
																		"hexValue": "436f6d6d69746d656e7420616d6f756e74206973206f75747369646520746865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9576:34:1",
																		"type": "",
																		"value": "Commitment amount is outside the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9553:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9553:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9553:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9632:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9640:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9628:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9628:15:1"
																	},
																	{
																		"hexValue": "20616c6c6f7765642072616e67652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9645:17:1",
																		"type": "",
																		"value": " allowed range."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9621:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9621:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9621:42:1"
														}
													]
												},
												"name": "store_literal_in_memory_c83009c7e36eac9b22add549c0f57add8236aaf712d791400e8f73301b7d27d8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9534:6:1",
														"type": ""
													}
												],
												"src": "9436:234:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9822:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9832:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9898:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9903:2:1",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9839:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9839:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9832:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10004:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c83009c7e36eac9b22add549c0f57add8236aaf712d791400e8f73301b7d27d8",
																	"nodeType": "YulIdentifier",
																	"src": "9915:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9915:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9915:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10017:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10028:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10033:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10024:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10024:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10017:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c83009c7e36eac9b22add549c0f57add8236aaf712d791400e8f73301b7d27d8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9810:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9818:3:1",
														"type": ""
													}
												],
												"src": "9676:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10219:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10229:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10241:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10252:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10237:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10229:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10276:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10287:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10272:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10272:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10295:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10301:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10291:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10291:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10265:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10265:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10321:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10455:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c83009c7e36eac9b22add549c0f57add8236aaf712d791400e8f73301b7d27d8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10329:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10329:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10321:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c83009c7e36eac9b22add549c0f57add8236aaf712d791400e8f73301b7d27d8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10199:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10214:4:1",
														"type": ""
													}
												],
												"src": "10048:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10579:128:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10601:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10609:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10597:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10597:14:1"
																	},
																	{
																		"hexValue": "43616e206f6e6c7920636c61696d20746f6b656e732061667465722074686520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10613:34:1",
																		"type": "",
																		"value": "Can only claim tokens after the "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10590:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10590:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10590:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10669:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10677:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10665:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10665:15:1"
																	},
																	{
																		"hexValue": "73616c652068617320656e6465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10682:17:1",
																		"type": "",
																		"value": "sale has ended."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10658:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10658:42:1"
														}
													]
												},
												"name": "store_literal_in_memory_fa7e2e8e92c81e3e258566a14d09938bec93fd21b9be5e37228bf6cd9bbafc6d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10571:6:1",
														"type": ""
													}
												],
												"src": "10473:234:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10859:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10869:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10935:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10940:2:1",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10876:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10876:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10869:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11041:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fa7e2e8e92c81e3e258566a14d09938bec93fd21b9be5e37228bf6cd9bbafc6d",
																	"nodeType": "YulIdentifier",
																	"src": "10952:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10952:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10952:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11054:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11065:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11070:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11061:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11061:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11054:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fa7e2e8e92c81e3e258566a14d09938bec93fd21b9be5e37228bf6cd9bbafc6d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10847:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10855:3:1",
														"type": ""
													}
												],
												"src": "10713:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11256:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11266:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11278:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11289:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11274:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11274:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11266:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11313:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11324:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11309:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11332:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11338:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11328:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11302:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11302:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11302:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11358:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11492:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fa7e2e8e92c81e3e258566a14d09938bec93fd21b9be5e37228bf6cd9bbafc6d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11366:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11366:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11358:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa7e2e8e92c81e3e258566a14d09938bec93fd21b9be5e37228bf6cd9bbafc6d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11236:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11251:4:1",
														"type": ""
													}
												],
												"src": "11085:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11616:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11638:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11646:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11634:14:1"
																	},
																	{
																		"hexValue": "596f752068617665206e6f74206465706f736974656420616e79204574686572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11650:34:1",
																		"type": "",
																		"value": "You have not deposited any Ether"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11627:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11627:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11706:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11714:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11702:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11702:15:1"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11719:3:1",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11695:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11695:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11695:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_54aebf7faa81b3fce9d385aee7f1c287e158dfd1024f7a846b75a4168e5d5d2e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11608:6:1",
														"type": ""
													}
												],
												"src": "11510:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11882:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11892:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11958:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11963:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11899:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11899:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11892:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12064:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_54aebf7faa81b3fce9d385aee7f1c287e158dfd1024f7a846b75a4168e5d5d2e",
																	"nodeType": "YulIdentifier",
																	"src": "11975:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11975:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11975:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12077:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12088:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12093:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12084:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12084:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12077:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_54aebf7faa81b3fce9d385aee7f1c287e158dfd1024f7a846b75a4168e5d5d2e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11870:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11878:3:1",
														"type": ""
													}
												],
												"src": "11736:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12279:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12289:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12301:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12312:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12297:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12297:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12289:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12336:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12347:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12332:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12332:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12355:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12361:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12351:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12325:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12325:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12325:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12381:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12515:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_54aebf7faa81b3fce9d385aee7f1c287e158dfd1024f7a846b75a4168e5d5d2e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12389:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12389:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12381:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_54aebf7faa81b3fce9d385aee7f1c287e158dfd1024f7a846b75a4168e5d5d2e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12259:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12274:4:1",
														"type": ""
													}
												],
												"src": "12108:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12646:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12656:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12671:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12656:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12618:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12623:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12634:11:1",
														"type": ""
													}
												],
												"src": "12533:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12792:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12784:6:1",
														"type": ""
													}
												],
												"src": "12686:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12969:235:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12979:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13062:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13067:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12986:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12986:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12979:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13167:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "13078:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13078:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13078:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13180:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13191:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13196:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13187:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13187:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13180:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12957:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12965:3:1",
														"type": ""
													}
												],
												"src": "12806:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13398:191:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13409:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13559:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13416:141:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13416:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13409:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13573:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13580:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13573:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13385:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13394:3:1",
														"type": ""
													}
												],
												"src": "13210:379:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13701:68:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13723:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13731:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13719:14:1"
																	},
																	{
																		"hexValue": "4661696c656420746f207472616e73666572206574686572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13735:26:1",
																		"type": "",
																		"value": "Failed to transfer ether"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13712:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13712:50:1"
														}
													]
												},
												"name": "store_literal_in_memory_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13693:6:1",
														"type": ""
													}
												],
												"src": "13595:174:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13921:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13931:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13997:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14002:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13938:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13938:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13931:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14103:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6",
																	"nodeType": "YulIdentifier",
																	"src": "14014:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14014:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14014:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14116:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14127:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14123:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14123:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14116:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13909:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13917:3:1",
														"type": ""
													}
												],
												"src": "13775:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14318:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14328:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14340:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14351:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14336:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14336:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14328:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14375:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14386:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14371:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14371:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14394:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14400:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14390:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14390:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14364:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14364:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14364:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14420:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14554:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14428:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14428:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14420:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14298:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14313:4:1",
														"type": ""
													}
												],
												"src": "14147:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14625:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14635:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14646:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14635:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14607:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14617:7:1",
														"type": ""
													}
												],
												"src": "14572:85:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14731:90:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14741:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14807:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "14781:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14781:32:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "14772:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14772:42:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14754:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14754:61:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14741:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14711:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14721:9:1",
														"type": ""
													}
												],
												"src": "14663:158:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14900:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14917:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14961:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "14922:38:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14922:45:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14910:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14910:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14910:58:1"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14888:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14895:3:1",
														"type": ""
													}
												],
												"src": "14827:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15150:304:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15160:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15172:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15183:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15168:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15168:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15160:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15240:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15253:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15264:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15249:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15249:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15196:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15196:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15196:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15329:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15342:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15353:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15338:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15277:51:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15277:80:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15277:80:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15419:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15432:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15443:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15428:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15428:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15367:51:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15367:80:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15367:80:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15106:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15118:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15126:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15134:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15145:4:1",
														"type": ""
													}
												],
												"src": "14980:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15488:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15505:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15508:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15498:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15498:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15498:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15602:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15605:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15595:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15595:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15595:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15626:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15629:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15619:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15619:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15619:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15460:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15689:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15699:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15726:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15708:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15708:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15699:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15822:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15824:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15824:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15824:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15747:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15754:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15744:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15744:77:1"
															},
															"nodeType": "YulIf",
															"src": "15741:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15853:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15864:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15871:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15860:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15860:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15853:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15675:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15685:3:1",
														"type": ""
													}
												],
												"src": "15646:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15991:60:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16013:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16021:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16009:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16009:14:1"
																	},
																	{
																		"hexValue": "416c726561647920737461727465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16025:18:1",
																		"type": "",
																		"value": "Already started."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16002:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16002:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16002:42:1"
														}
													]
												},
												"name": "store_literal_in_memory_aee1dddcfe1778195162fed17118452d5e06c02c78bab9a311a88b9491d70474",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15983:6:1",
														"type": ""
													}
												],
												"src": "15885:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16203:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16213:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16279:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16284:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16220:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16220:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16213:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16385:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aee1dddcfe1778195162fed17118452d5e06c02c78bab9a311a88b9491d70474",
																	"nodeType": "YulIdentifier",
																	"src": "16296:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16296:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16296:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16398:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16409:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16414:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16405:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16405:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16398:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aee1dddcfe1778195162fed17118452d5e06c02c78bab9a311a88b9491d70474_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16191:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16199:3:1",
														"type": ""
													}
												],
												"src": "16057:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16600:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16610:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16622:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16633:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16618:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16618:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16610:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16657:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16668:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16653:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16653:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16676:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16682:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16672:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16646:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16646:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16702:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16836:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aee1dddcfe1778195162fed17118452d5e06c02c78bab9a311a88b9491d70474_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16710:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16710:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16702:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aee1dddcfe1778195162fed17118452d5e06c02c78bab9a311a88b9491d70474__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16580:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16595:4:1",
														"type": ""
													}
												],
												"src": "16429:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16960:122:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16982:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16990:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16978:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16978:14:1"
																	},
																	{
																		"hexValue": "43616e206f6e6c792066696e697368206166746572207468652073616c652068",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16994:34:1",
																		"type": "",
																		"value": "Can only finish after the sale h"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16971:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16971:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16971:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17050:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17058:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17046:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17046:15:1"
																	},
																	{
																		"hexValue": "617320656e6465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17063:11:1",
																		"type": "",
																		"value": "as ended."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17039:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17039:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17039:36:1"
														}
													]
												},
												"name": "store_literal_in_memory_9349edeb6937a4137e4f8d14f88ddb95976f830013510388532c7cb44635b9be",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16952:6:1",
														"type": ""
													}
												],
												"src": "16854:228:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17234:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17244:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17310:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17315:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17251:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17251:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17244:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17416:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9349edeb6937a4137e4f8d14f88ddb95976f830013510388532c7cb44635b9be",
																	"nodeType": "YulIdentifier",
																	"src": "17327:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17327:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17327:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17429:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17440:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17445:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17436:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17436:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17429:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9349edeb6937a4137e4f8d14f88ddb95976f830013510388532c7cb44635b9be_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17222:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17230:3:1",
														"type": ""
													}
												],
												"src": "17088:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17631:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17641:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17653:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17664:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17649:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17649:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17641:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17688:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17699:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17684:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17684:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17707:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17713:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17703:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17703:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17677:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17677:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17677:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17733:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17867:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9349edeb6937a4137e4f8d14f88ddb95976f830013510388532c7cb44635b9be_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17741:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17741:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17733:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9349edeb6937a4137e4f8d14f88ddb95976f830013510388532c7cb44635b9be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17611:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17626:4:1",
														"type": ""
													}
												],
												"src": "17460:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17991:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18013:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18021:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18009:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18009:14:1"
																	},
																	{
																		"hexValue": "416c72656164792066696e69736865642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18025:19:1",
																		"type": "",
																		"value": "Already finished."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18002:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18002:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18002:43:1"
														}
													]
												},
												"name": "store_literal_in_memory_743c7eb8da68c5549428905a6d7f94eb1a9d7382444d14a96e31c22b32429672",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17983:6:1",
														"type": ""
													}
												],
												"src": "17885:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18204:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18214:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18280:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18285:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18221:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18221:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18214:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18386:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_743c7eb8da68c5549428905a6d7f94eb1a9d7382444d14a96e31c22b32429672",
																	"nodeType": "YulIdentifier",
																	"src": "18297:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18297:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18297:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18399:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18410:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18415:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18406:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18406:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18399:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_743c7eb8da68c5549428905a6d7f94eb1a9d7382444d14a96e31c22b32429672_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18200:3:1",
														"type": ""
													}
												],
												"src": "18058:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18601:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18611:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18623:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18634:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18619:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18619:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18611:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18658:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18669:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18654:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18677:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18683:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18673:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18673:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18647:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18647:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18703:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18837:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_743c7eb8da68c5549428905a6d7f94eb1a9d7382444d14a96e31c22b32429672_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18711:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18711:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18703:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_743c7eb8da68c5549428905a6d7f94eb1a9d7382444d14a96e31c22b32429672__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18581:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18596:4:1",
														"type": ""
													}
												],
												"src": "18430:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18961:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18983:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18991:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18979:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18979:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18995:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18972:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18972:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18972:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19051:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19059:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19047:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19047:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19064:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19040:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19040:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19040:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18953:6:1",
														"type": ""
													}
												],
												"src": "18855:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19232:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19242:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19308:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19313:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19249:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19249:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19242:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19414:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "19325:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19325:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19325:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19427:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19438:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19443:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19434:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19434:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19427:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19220:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19228:3:1",
														"type": ""
													}
												],
												"src": "19086:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19629:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19639:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19651:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19662:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19647:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19647:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19639:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19686:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19697:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19682:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19682:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19705:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19711:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19701:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19701:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19675:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19675:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19675:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19731:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19865:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19739:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19739:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19731:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19609:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19624:4:1",
														"type": ""
													}
												],
												"src": "19458:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19989:75:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20011:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20019:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20007:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20007:14:1"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20023:33:1",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20000:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20000:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20000:57:1"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19981:6:1",
														"type": ""
													}
												],
												"src": "19883:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20216:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20226:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20292:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20297:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20233:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20233:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20226:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20398:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "20309:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20309:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20309:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20411:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20422:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20418:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20418:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20411:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20204:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20212:3:1",
														"type": ""
													}
												],
												"src": "20070:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20613:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20623:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20635:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20646:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20631:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20631:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20623:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20670:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20681:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20666:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20666:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20689:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20695:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20685:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20685:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20659:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20659:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20659:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20715:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20849:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20723:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20723:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20715:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20593:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20608:4:1",
														"type": ""
													}
												],
												"src": "20442:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20993:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21003:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21015:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21026:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21011:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21011:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21003:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21083:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21096:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21107:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21092:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21039:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21039:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21039:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21164:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21177:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21188:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21173:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21173:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21120:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21120:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21120:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20957:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20969:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20977:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20988:4:1",
														"type": ""
													}
												],
												"src": "20867:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21311:55:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21333:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21341:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21329:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21329:14:1"
																	},
																	{
																		"hexValue": "6e6f742073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21345:13:1",
																		"type": "",
																		"value": "not started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21322:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21322:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21303:6:1",
														"type": ""
													}
												],
												"src": "21205:161:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21518:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21528:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21594:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21599:2:1",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21535:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21535:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21528:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21700:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694",
																	"nodeType": "YulIdentifier",
																	"src": "21611:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21611:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21611:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21713:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21724:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21729:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21720:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21720:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21713:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21506:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21514:3:1",
														"type": ""
													}
												],
												"src": "21372:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21915:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21925:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21937:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21948:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21933:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21933:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21925:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21972:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21983:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21968:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21968:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21991:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21997:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21987:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21987:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21961:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21961:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21961:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22017:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22151:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22025:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22025:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22017:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21895:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21910:4:1",
														"type": ""
													}
												],
												"src": "21744:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22275:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22297:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22305:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22293:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22293:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22309:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22286:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22286:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22267:6:1",
														"type": ""
													}
												],
												"src": "22169:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22503:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22513:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22579:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22584:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22520:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22520:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22513:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22685:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "22596:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22596:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22596:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22698:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22709:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22714:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22705:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22705:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22698:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22491:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22499:3:1",
														"type": ""
													}
												],
												"src": "22357:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22900:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22910:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22922:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22933:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22918:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22918:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22910:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22957:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22968:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22953:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22953:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22976:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22982:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22972:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22972:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22946:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22946:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23002:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23136:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23010:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23010:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23002:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22880:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22895:4:1",
														"type": ""
													}
												],
												"src": "22729:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23260:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23282:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23290:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23278:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23278:14:1"
																	},
																	{
																		"hexValue": "6e6f20636f6d6d69746d656e7473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23294:16:1",
																		"type": "",
																		"value": "no commitments"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23271:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23271:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23271:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_4bbdc6a3b88188c6333049541b61be1ba3041903473deadb5788ff0a8b023c24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23252:6:1",
														"type": ""
													}
												],
												"src": "23154:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23470:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23480:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23546:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23551:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23487:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23487:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23480:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23652:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4bbdc6a3b88188c6333049541b61be1ba3041903473deadb5788ff0a8b023c24",
																	"nodeType": "YulIdentifier",
																	"src": "23563:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23563:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23563:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23665:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23676:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23681:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23672:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23672:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23665:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4bbdc6a3b88188c6333049541b61be1ba3041903473deadb5788ff0a8b023c24_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23458:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23466:3:1",
														"type": ""
													}
												],
												"src": "23324:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23867:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23877:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23889:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23900:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23885:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23885:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23877:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23924:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23935:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23920:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23943:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23949:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23939:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23913:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23913:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23913:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23969:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24103:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4bbdc6a3b88188c6333049541b61be1ba3041903473deadb5788ff0a8b023c24_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23977:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23977:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23969:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4bbdc6a3b88188c6333049541b61be1ba3041903473deadb5788ff0a8b023c24__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23847:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23862:4:1",
														"type": ""
													}
												],
												"src": "23696:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24275:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24285:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24297:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24308:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24293:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24293:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24285:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24365:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24378:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24389:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24374:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24374:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24321:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24321:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24321:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24446:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24470:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24455:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24402:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24402:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24402:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "24528:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24541:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24552:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24537:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24537:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24484:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24484:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24484:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24231:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "24243:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24251:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24259:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24270:4:1",
														"type": ""
													}
												],
												"src": "24121:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24609:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24663:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24672:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24675:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24665:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24665:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24665:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24632:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24654:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "24639:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24639:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "24629:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24629:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24622:40:1"
															},
															"nodeType": "YulIf",
															"src": "24619:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24602:5:1",
														"type": ""
													}
												],
												"src": "24569:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24751:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24761:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "24776:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24770:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24770:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "24761:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24816:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "24792:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24792:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24792:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "24729:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24737:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24745:5:1",
														"type": ""
													}
												],
												"src": "24691:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24908:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24954:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "24956:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24956:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24956:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "24929:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24938:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24925:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24925:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24950:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "24921:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24921:32:1"
															},
															"nodeType": "YulIf",
															"src": "24918:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "25047:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "25062:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25076:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "25066:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "25091:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "25134:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "25145:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "25130:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25130:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "25154:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "25101:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25101:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "25091:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24878:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "24889:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24901:6:1",
														"type": ""
													}
												],
												"src": "24834:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25291:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25313:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25321:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25309:14:1"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25325:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25302:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25302:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25302:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25381:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25389:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25377:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25377:15:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25394:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25370:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25370:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25370:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25283:6:1",
														"type": ""
													}
												],
												"src": "25185:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25566:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25576:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25642:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25647:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25583:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25583:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25576:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25748:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "25659:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25659:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25659:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25761:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25772:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25777:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25768:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25768:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25761:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25554:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25562:3:1",
														"type": ""
													}
												],
												"src": "25420:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25963:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25973:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25985:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25996:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25981:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25981:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25973:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26020:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26031:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26016:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26016:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26039:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26045:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26035:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26035:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26009:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26009:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26065:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26199:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26073:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26073:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26065:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25943:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25958:4:1",
														"type": ""
													}
												],
												"src": "25792:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26323:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26345:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26353:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26341:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26341:14:1"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26357:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26334:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26334:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26334:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26413:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26421:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26409:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26409:15:1"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26426:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26402:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26402:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26315:6:1",
														"type": ""
													}
												],
												"src": "26217:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26594:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26604:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26670:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26675:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26611:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26611:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26604:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26776:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "26687:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26687:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26687:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26789:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26800:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26805:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26796:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26796:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26789:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26582:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26590:3:1",
														"type": ""
													}
												],
												"src": "26448:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26991:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27001:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27013:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27024:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27009:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27009:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27001:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27048:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27059:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27044:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27044:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27067:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27073:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27063:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27063:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27037:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27037:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27037:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27093:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27227:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27101:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27101:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27093:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26971:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26986:4:1",
														"type": ""
													}
												],
												"src": "26820:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27303:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27314:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27330:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27324:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27324:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27314:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27286:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27296:6:1",
														"type": ""
													}
												],
												"src": "27245:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27398:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27408:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "27417:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "27412:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27477:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "27502:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "27507:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "27498:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27498:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "27521:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "27526:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "27517:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27517:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "27511:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27511:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "27491:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27491:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27491:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "27438:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27441:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "27435:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27435:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "27449:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "27451:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "27460:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27463:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "27456:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27456:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "27451:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "27431:3:1",
																"statements": []
															},
															"src": "27427:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27574:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "27624:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "27629:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "27620:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27620:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27638:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "27613:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27613:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27613:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "27555:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27558:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "27552:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27552:13:1"
															},
															"nodeType": "YulIf",
															"src": "27549:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "27380:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "27385:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27390:6:1",
														"type": ""
													}
												],
												"src": "27349:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27770:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27780:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27826:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "27794:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27794:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "27784:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27841:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27924:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27929:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27848:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27848:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27841:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27971:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27978:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27967:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27967:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27985:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27990:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "27945:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27945:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27945:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28006:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28017:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28022:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28013:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28013:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28006:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27751:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27758:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27766:3:1",
														"type": ""
													}
												],
												"src": "27662:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28175:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28186:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28273:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28282:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28193:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28193:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28186:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28296:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "28303:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28296:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28154:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28160:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28171:3:1",
														"type": ""
													}
												],
												"src": "28041:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28424:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28446:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28454:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28442:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28442:14:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28458:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28435:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28435:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28435:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28416:6:1",
														"type": ""
													}
												],
												"src": "28318:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28649:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28659:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28725:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28730:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28666:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28666:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28659:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28831:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "28742:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28742:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28742:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28844:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28855:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28860:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28851:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28851:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28844:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28637:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28645:3:1",
														"type": ""
													}
												],
												"src": "28503:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29046:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29056:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29068:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29079:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29064:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29064:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29056:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29103:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29114:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29099:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29099:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29122:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29128:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29118:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29118:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29092:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29092:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29092:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29148:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29282:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29156:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29156:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29148:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29026:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29041:4:1",
														"type": ""
													}
												],
												"src": "28875:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29359:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29370:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29386:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29380:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29380:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "29370:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29342:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "29352:6:1",
														"type": ""
													}
												],
												"src": "29300:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29453:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29463:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29481:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29488:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29477:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29477:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29497:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "29493:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29493:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "29473:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29473:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "29463:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29436:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "29446:6:1",
														"type": ""
													}
												],
												"src": "29405:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29605:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29615:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29662:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "29629:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29629:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "29619:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29677:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29743:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29748:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29684:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29684:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "29677:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29790:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29797:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29786:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29786:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29804:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29809:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "29764:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29764:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29764:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29825:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29836:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "29863:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "29841:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29841:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29832:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29832:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "29825:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29586:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29593:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29601:3:1",
														"type": ""
													}
												],
												"src": "29513:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30001:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30011:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30023:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30034:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30019:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30019:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30011:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30058:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30069:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30054:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30054:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30077:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30083:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30073:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30073:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30047:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30047:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30103:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "30175:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30184:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30111:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30111:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30103:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29973:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29985:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29996:4:1",
														"type": ""
													}
												],
												"src": "29883:313:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_214d642b53df775d4b33d366c6f9372cc2ec5014c3ae9d7e74d205687b92a939(memPtr) {\n\n        mstore(add(memPtr, 0), \"not claimable yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_214d642b53df775d4b33d366c6f9372cc2ec5014c3ae9d7e74d205687b92a939_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_214d642b53df775d4b33d366c6f9372cc2ec5014c3ae9d7e74d205687b92a939(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_214d642b53df775d4b33d366c6f9372cc2ec5014c3ae9d7e74d205687b92a939__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_214d642b53df775d4b33d366c6f9372cc2ec5014c3ae9d7e74d205687b92a939_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_9df3668a93dc1ed2c74ab1007ca935ed6ab477236d8ea005670aae5d150690a3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can only deposit Ether during th\")\n\n        mstore(add(memPtr, 32), \"e sale period.\")\n\n    }\n\n    function abi_encode_t_stringliteral_9df3668a93dc1ed2c74ab1007ca935ed6ab477236d8ea005670aae5d150690a3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_9df3668a93dc1ed2c74ab1007ca935ed6ab477236d8ea005670aae5d150690a3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9df3668a93dc1ed2c74ab1007ca935ed6ab477236d8ea005670aae5d150690a3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9df3668a93dc1ed2c74ab1007ca935ed6ab477236d8ea005670aae5d150690a3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c83009c7e36eac9b22add549c0f57add8236aaf712d791400e8f73301b7d27d8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Commitment amount is outside the\")\n\n        mstore(add(memPtr, 32), \" allowed range.\")\n\n    }\n\n    function abi_encode_t_stringliteral_c83009c7e36eac9b22add549c0f57add8236aaf712d791400e8f73301b7d27d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_c83009c7e36eac9b22add549c0f57add8236aaf712d791400e8f73301b7d27d8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c83009c7e36eac9b22add549c0f57add8236aaf712d791400e8f73301b7d27d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c83009c7e36eac9b22add549c0f57add8236aaf712d791400e8f73301b7d27d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fa7e2e8e92c81e3e258566a14d09938bec93fd21b9be5e37228bf6cd9bbafc6d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can only claim tokens after the \")\n\n        mstore(add(memPtr, 32), \"sale has ended.\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa7e2e8e92c81e3e258566a14d09938bec93fd21b9be5e37228bf6cd9bbafc6d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fa7e2e8e92c81e3e258566a14d09938bec93fd21b9be5e37228bf6cd9bbafc6d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa7e2e8e92c81e3e258566a14d09938bec93fd21b9be5e37228bf6cd9bbafc6d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa7e2e8e92c81e3e258566a14d09938bec93fd21b9be5e37228bf6cd9bbafc6d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_54aebf7faa81b3fce9d385aee7f1c287e158dfd1024f7a846b75a4168e5d5d2e(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have not deposited any Ether\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_54aebf7faa81b3fce9d385aee7f1c287e158dfd1024f7a846b75a4168e5d5d2e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_54aebf7faa81b3fce9d385aee7f1c287e158dfd1024f7a846b75a4168e5d5d2e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_54aebf7faa81b3fce9d385aee7f1c287e158dfd1024f7a846b75a4168e5d5d2e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_54aebf7faa81b3fce9d385aee7f1c287e158dfd1024f7a846b75a4168e5d5d2e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to transfer ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_aee1dddcfe1778195162fed17118452d5e06c02c78bab9a311a88b9491d70474(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already started.\")\n\n    }\n\n    function abi_encode_t_stringliteral_aee1dddcfe1778195162fed17118452d5e06c02c78bab9a311a88b9491d70474_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_aee1dddcfe1778195162fed17118452d5e06c02c78bab9a311a88b9491d70474(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aee1dddcfe1778195162fed17118452d5e06c02c78bab9a311a88b9491d70474__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aee1dddcfe1778195162fed17118452d5e06c02c78bab9a311a88b9491d70474_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9349edeb6937a4137e4f8d14f88ddb95976f830013510388532c7cb44635b9be(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can only finish after the sale h\")\n\n        mstore(add(memPtr, 32), \"as ended.\")\n\n    }\n\n    function abi_encode_t_stringliteral_9349edeb6937a4137e4f8d14f88ddb95976f830013510388532c7cb44635b9be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_9349edeb6937a4137e4f8d14f88ddb95976f830013510388532c7cb44635b9be(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9349edeb6937a4137e4f8d14f88ddb95976f830013510388532c7cb44635b9be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9349edeb6937a4137e4f8d14f88ddb95976f830013510388532c7cb44635b9be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_743c7eb8da68c5549428905a6d7f94eb1a9d7382444d14a96e31c22b32429672(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already finished.\")\n\n    }\n\n    function abi_encode_t_stringliteral_743c7eb8da68c5549428905a6d7f94eb1a9d7382444d14a96e31c22b32429672_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_743c7eb8da68c5549428905a6d7f94eb1a9d7382444d14a96e31c22b32429672(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_743c7eb8da68c5549428905a6d7f94eb1a9d7382444d14a96e31c22b32429672__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_743c7eb8da68c5549428905a6d7f94eb1a9d7382444d14a96e31c22b32429672_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694(memPtr) {\n\n        mstore(add(memPtr, 0), \"not started\")\n\n    }\n\n    function abi_encode_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4bbdc6a3b88188c6333049541b61be1ba3041903473deadb5788ff0a8b023c24(memPtr) {\n\n        mstore(add(memPtr, 0), \"no commitments\")\n\n    }\n\n    function abi_encode_t_stringliteral_4bbdc6a3b88188c6333049541b61be1ba3041903473deadb5788ff0a8b023c24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_4bbdc6a3b88188c6333049541b61be1ba3041903473deadb5788ff0a8b023c24(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4bbdc6a3b88188c6333049541b61be1ba3041903473deadb5788ff0a8b023c24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4bbdc6a3b88188c6333049541b61be1ba3041903473deadb5788ff0a8b023c24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2304": [
									{
										"length": 32,
										"start": 2447
									},
									{
										"length": 32,
										"start": 6903
									},
									{
										"length": 32,
										"start": 8525
									},
									{
										"length": 32,
										"start": 9810
									},
									{
										"length": 32,
										"start": 9933
									}
								],
								"2307": [
									{
										"length": 32,
										"start": 2533
									},
									{
										"length": 32,
										"start": 8677
									},
									{
										"length": 32,
										"start": 9460
									},
									{
										"length": 32,
										"start": 9703
									},
									{
										"length": 32,
										"start": 10090
									},
									{
										"length": 32,
										"start": 10163
									}
								],
								"2309": [
									{
										"length": 32,
										"start": 3387
									},
									{
										"length": 32,
										"start": 4739
									},
									{
										"length": 32,
										"start": 5448
									},
									{
										"length": 32,
										"start": 7970
									},
									{
										"length": 32,
										"start": 8492
									},
									{
										"length": 32,
										"start": 9611
									},
									{
										"length": 32,
										"start": 9900
									}
								],
								"2311": [
									{
										"length": 32,
										"start": 3148
									},
									{
										"length": 32,
										"start": 3353
									},
									{
										"length": 32,
										"start": 3851
									},
									{
										"length": 32,
										"start": 5209
									},
									{
										"length": 32,
										"start": 5414
									},
									{
										"length": 32,
										"start": 7731
									},
									{
										"length": 32,
										"start": 7936
									},
									{
										"length": 32,
										"start": 9058
									},
									{
										"length": 32,
										"start": 9248
									},
									{
										"length": 32,
										"start": 9289
									},
									{
										"length": 32,
										"start": 9325
									},
									{
										"length": 32,
										"start": 9532
									},
									{
										"length": 32,
										"start": 9568
									}
								],
								"2313": [
									{
										"length": 32,
										"start": 3035
									},
									{
										"length": 32,
										"start": 3724
									},
									{
										"length": 32,
										"start": 5096
									},
									{
										"length": 32,
										"start": 7618
									},
									{
										"length": 32,
										"start": 8982
									}
								],
								"2315": [
									{
										"length": 32,
										"start": 4811
									},
									{
										"length": 32,
										"start": 8634
									},
									{
										"length": 32,
										"start": 10047
									},
									{
										"length": 32,
										"start": 10906
									},
									{
										"length": 32,
										"start": 11709
									}
								],
								"2317": [
									{
										"length": 32,
										"start": 4012
									},
									{
										"length": 32,
										"start": 6945
									},
									{
										"length": 32,
										"start": 10576
									},
									{
										"length": 32,
										"start": 10735
									},
									{
										"length": 32,
										"start": 10829
									},
									{
										"length": 32,
										"start": 11538
									},
									{
										"length": 32,
										"start": 11632
									}
								],
								"2319": [
									{
										"length": 32,
										"start": 3815
									},
									{
										"length": 32,
										"start": 4056
									},
									{
										"length": 32,
										"start": 4868
									},
									{
										"length": 32,
										"start": 8777
									},
									{
										"length": 32,
										"start": 10697
									},
									{
										"length": 32,
										"start": 10777
									},
									{
										"length": 32,
										"start": 10862
									},
									{
										"length": 32,
										"start": 11500
									},
									{
										"length": 32,
										"start": 11580
									},
									{
										"length": 32,
										"start": 11665
									}
								],
								"2321": [
									{
										"length": 32,
										"start": 1989
									},
									{
										"length": 32,
										"start": 7195
									}
								],
								"2323": [
									{
										"length": 32,
										"start": 6847
									},
									{
										"length": 32,
										"start": 9426
									},
									{
										"length": 32,
										"start": 9669
									},
									{
										"length": 32,
										"start": 9776
									}
								],
								"2325": [
									{
										"length": 32,
										"start": 8336
									},
									{
										"length": 32,
										"start": 8601
									},
									{
										"length": 32,
										"start": 9368
									},
									{
										"length": 32,
										"start": 10014
									}
								],
								"2327": [
									{
										"length": 32,
										"start": 3779
									},
									{
										"length": 32,
										"start": 4230
									}
								],
								"2329": [
									{
										"length": 32,
										"start": 4272
									},
									{
										"length": 32,
										"start": 4775
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101fd5760003560e01c806370d5ae051161010d57806394ef7e62116100a0578063bef4876b1161006f578063bef4876b146106e8578063d56b288914610713578063e20994381461072a578063e8fcf72314610755578063f2fde38b1461079257610204565b806394ef7e621461063b5780639b19251a14610669578063a8ea6f4c146106a6578063be9a6555146106d157610204565b806378e97925116100dc57806378e97925146105915780637f649783146105bc5780638da5cb5b146105e55780638e05fb741461061057610204565b806370d5ae05146104f9578063715018a61461052457806372da776e1461053b57806378bb86d31461056657610204565b80633a3ab672116101905780634d4123571161015f5780634d412357146103fe5780634e71d92d146104295780634ec0177414610456578063548db17414610493578063599e10ce146104bc57610204565b80633a3ab672146103615780633c7a3aff1461039e5780633d956691146103a8578063483383c8146103d357610204565b80631f2698ab116101cc5780631f2698ab146102b55780632bcbf7cd146102e05780633197cbb61461030b57806332acd3551461033657610204565b806301eaaec4146102095780631048ab281461022057806312adecda1461025d57806316fc48691461028a57610204565b3661020457005b600080fd5b34801561021557600080fd5b5061021e6107bb565b005b34801561022c57600080fd5b50610247600480360381019061024291906131f3565b610a88565b6040516102549190613239565b60405180910390f35b34801561026957600080fd5b50610272610aa0565b60405161028193929190613254565b60405180910390f35b34801561029657600080fd5b5061029f610e8a565b6040516102ac9190613239565b60405180910390f35b3480156102c157600080fd5b506102ca610eae565b6040516102d791906132a6565b60405180910390f35b3480156102ec57600080fd5b506102f5610ec1565b6040516103029190613239565b60405180910390f35b34801561031757600080fd5b50610320610ee5565b60405161032d9190613239565b60405180910390f35b34801561034257600080fd5b5061034b610f09565b6040516103589190613239565b60405180910390f35b34801561036d57600080fd5b50610388600480360381019061038391906131f3565b610f2d565b60405161039591906132a6565b60405180910390f35b6103a6610f83565b005b3480156103b457600080fd5b506103bd611281565b6040516103ca9190613239565b60405180910390f35b3480156103df57600080fd5b506103e86112a5565b6040516103f59190613239565b60405180910390f35b34801561040a57600080fd5b506104136112c9565b6040516104209190613239565b60405180910390f35b34801561043557600080fd5b5061043e6112ed565b60405161044d93929190613254565b60405180910390f35b34801561046257600080fd5b5061047d600480360381019061047891906131f3565b6119e9565b60405161048a9190613239565b60405180910390f35b34801561049f57600080fd5b506104ba60048036038101906104b59190613326565b611a01565b005b3480156104c857600080fd5b506104e360048036038101906104de91906131f3565b611aa5565b6040516104f09190613239565b60405180910390f35b34801561050557600080fd5b5061050e611abd565b60405161051b9190613382565b60405180910390f35b34801561053057600080fd5b50610539611ae1565b005b34801561054757600080fd5b50610550611af5565b60405161055d91906133fc565b60405180910390f35b34801561057257600080fd5b5061057b611b19565b6040516105889190613239565b60405180910390f35b34801561059d57600080fd5b506105a6611b1f565b6040516105b39190613239565b60405180910390f35b3480156105c857600080fd5b506105e360048036038101906105de9190613326565b611b43565b005b3480156105f157600080fd5b506105fa611bf0565b6040516106079190613382565b60405180910390f35b34801561061c57600080fd5b50610625611c19565b6040516106329190613239565b60405180910390f35b34801561064757600080fd5b50610650611c3d565b6040516106609493929190613417565b60405180910390f35b34801561067557600080fd5b50610690600480360381019061068b91906131f3565b61206e565b60405161069d91906132a6565b60405180910390f35b3480156106b257600080fd5b506106bb61208e565b6040516106c89190613239565b60405180910390f35b3480156106dd57600080fd5b506106e66120b2565b005b3480156106f457600080fd5b506106fd61222c565b60405161070a91906132a6565b60405180910390f35b34801561071f57600080fd5b5061072861223f565b005b34801561073657600080fd5b5061073f6127b1565b60405161074c91906133fc565b60405180910390f35b34801561076157600080fd5b5061077c600480360381019061077791906131f3565b6127d5565b6040516107899190613239565b60405180910390f35b34801561079e57600080fd5b506107b960048036038101906107b491906131f3565b6127ed565b005b6107c3612870565b7f0000000000000000000000000000000000000000000000000000000000000000421015610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081d906134b9565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006003600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108fc9190613537565b90506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109d333847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166128bf9092919063ffffffff16565b610a293382846109e39190613568565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166128bf9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f98658f77a1c9013bc3a00213385d7b07de0435b7b3b3023a43c66b91e05566c2848484604051610a7393929190613254565b60405180910390a2505050610a86612945565b565b60086020528060005260406000206000915090505481565b6000806000610aad61294e565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610b82576000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054925092509250610e85565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610bd9576000806000925092509250610e85565b7f000000000000000000000000000000000000000000000000000000000000000060055410610e35576000610cc4600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546005547f0000000000000000000000000000000000000000000000000000000000000000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cb591906135be565b610cbf9190613537565b612b14565b9050600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d139190613618565b905060007f0000000000000000000000000000000000000000000000000000000000000000837f0000000000000000000000000000000000000000000000000000000000000000610d6491906135be565b610d6e9190613537565b90506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dfa600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612b2d565b610e049190613618565b90506000600383610e159190613537565b9050838184610e249190613568565b839750975097505050505050610e85565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080600080935093509350505b909192565b7f000000000000000000000000000000000000000000000000000000000000000081565b600260009054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b610f8b612870565b610f9361294e565b600260009054906101000a900460ff168015610fcf57507f00000000000000000000000000000000000000000000000000000000000000004210155b8015610ffa57507f000000000000000000000000000000000000000000000000000000000000000042105b611039576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611030906136be565b60405180910390fd5b34600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110849190613568565b7f00000000000000000000000000000000000000000000000000000000000000001115801561111d57507f000000000000000000000000000000000000000000000000000000000000000034600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461111a9190613568565b11155b61115c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115390613750565b60405180910390fd5b34600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111ab9190613568565b9250508190555034600560008282546111c49190613568565b925050819055506111d434612b2d565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112229190613568565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f5e1dd8c4451717d5ca4ffbefdada35e22e0871220b9ed9dd03a351f0938c5ed73460405161126f9190613239565b60405180910390a261127f612945565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060006112fa612870565b61130261294e565b7f00000000000000000000000000000000000000000000000000000000000000004211611364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135b906137e2565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116113e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113dd90613874565b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600554106118475760006114d1600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546005547f0000000000000000000000000000000000000000000000000000000000000000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114c291906135be565b6114cc9190613537565b612b14565b9050600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115209190613618565b905060007f0000000000000000000000000000000000000000000000000000000000000000837f000000000000000000000000000000000000000000000000000000000000000061157191906135be565b61157b9190613537565b90506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611607600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612b2d565b6116119190613618565b905080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116629190613568565b925050819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff168460405161175c906138c5565b60006040518083038185875af1925050503d8060008114611799576040519150601f19603f3d011682016040523d82523d6000602084013e61179e565b606091505b50509050806117e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d990613926565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f45c072aa05b9853b5a993de7a28bc332ee01404a628cec1a23ce0f659f842ef185858560405161182c93929190613254565b60405180910390a283838397509750975050505050506119dc565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516118f6906138c5565b60006040518083038185875af1925050503d8060008114611933576040519150601f19603f3d011682016040523d82523d6000602084013e611938565b606091505b505090508061197c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197390613926565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f45c072aa05b9853b5a993de7a28bc332ee01404a628cec1a23ce0f659f842ef1836000806040516119c793929190613981565b60405180910390a28160008094509450945050505b6119e4612945565b909192565b60096020528060005260406000206000915090505481565b611a09612b57565b60005b82829050811015611aa057600a6000848484818110611a2e57611a2d6139b8565b5b9050602002016020810190611a4391906131f3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690558080611a98906139e7565b915050611a0c565b505050565b60076020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b611ae9612b57565b611af36000612bd5565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055481565b7f000000000000000000000000000000000000000000000000000000000000000081565b611b4b612b57565b60005b82829050811015611beb576001600a6000858585818110611b7257611b716139b8565b5b9050602002016020810190611b8791906131f3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080611be3906139e7565b915050611b4e565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000806000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115611d66576000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546003600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d199190613537565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549350935093509350612068565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403611dc0576000806000809350935093509350612068565b7f000000000000000000000000000000000000000000000000000000000000000060055410612014576000611eab600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546005547f0000000000000000000000000000000000000000000000000000000000000000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e9c91906135be565b611ea69190613537565b612b14565b9050600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611efa9190613618565b905060007f0000000000000000000000000000000000000000000000000000000000000000837f0000000000000000000000000000000000000000000000000000000000000000611f4b91906135be565b611f559190613537565b90506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fe1600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c99565b611feb9190613618565b90506000600383611ffc9190613537565b90508383828498509850985098505050505050612068565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508060008060009450945094509450505b90919293565b600a6020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6120ba612b57565b600260009054906101000a900460ff161561210a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161210190613a7b565b60405180910390fd5b6001600260006101000a81548160ff02191690831515021790555061219233307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16612e4d909392919063ffffffff16565b61222a33307f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006121e39190613568565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16612e4d909392919063ffffffff16565b565b600260019054906101000a900460ff1681565b612247612b57565b7f000000000000000000000000000000000000000000000000000000000000000042116122a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122a090613b0d565b60405180910390fd5b600260019054906101000a900460ff16156122f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122f090613b79565b60405180910390fd5b6001600260016101000a81548160ff0219169083151502179055507f00000000000000000000000000000000000000000000000000000000000000006005541061269f576000612347611bf0565b73ffffffffffffffffffffffffffffffffffffffff166123897f0000000000000000000000000000000000000000000000000000000000000000600554612b14565b604051612395906138c5565b60006040518083038185875af1925050503d80600081146123d2576040519150601f19603f3d011682016040523d82523d6000602084013e6123d7565b606091505b505090508061241b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161241290613926565b60405180910390fd5b6005547f000000000000000000000000000000000000000000000000000000000000000011156126995760007f00000000000000000000000000000000000000000000000000000000000000006005547f00000000000000000000000000000000000000000000000000000000000000006124969190613618565b7f00000000000000000000000000000000000000000000000000000000000000006124c191906135be565b6124cb9190613537565b90506125387f0000000000000000000000000000000000000000000000000000000000000000827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166128bf9092919063ffffffff16565b60007f00000000000000000000000000000000000000000000000000000000000000006005547f00000000000000000000000000000000000000000000000000000000000000006125899190613618565b7f00000000000000000000000000000000000000000000000000000000000000006125b491906135be565b6125be9190613537565b905061262b7f0000000000000000000000000000000000000000000000000000000000000000837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166128bf9092919063ffffffff16565b6126967f0000000000000000000000000000000000000000000000000000000000000000827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166128bf9092919063ffffffff16565b50505b506127af565b6127116126aa611bf0565b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166128bf9092919063ffffffff16565b6127ae61271c611bf0565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006127689190613568565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166128bf9092919063ffffffff16565b5b565b7f000000000000000000000000000000000000000000000000000000000000000081565b60066020528060005260406000206000915090505481565b6127f5612b57565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161285b90613c0b565b60405180910390fd5b61286d81612bd5565b50565b6002600154036128b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128ac90613c77565b60405180910390fd5b6002600181905550565b6129408363a9059cbb60e01b84846040516024016128de929190613c97565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612ed6565b505050565b60018081905550565b7f00000000000000000000000000000000000000000000000000000000000000004210156129b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129a890613d0c565b60405180910390fd5b60006005541115612b0b576000612a136129ed6004547f0000000000000000000000000000000000000000000000000000000000000000612b14565b7f0000000000000000000000000000000000000000000000000000000000000000612f9d565b612a3d427f0000000000000000000000000000000000000000000000000000000000000000612b14565b612a479190613618565b905060007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612a979190613618565b827f0000000000000000000000000000000000000000000000000000000000000000612ac391906135be565b612acd9190613537565b9050600554670de0b6b3a764000082612ae691906135be565b612af09190613537565b60036000828254612b019190613568565b9250508190555050505b42600481905550565b6000818310612b235781612b25565b825b905092915050565b6000670de0b6b3a764000060035483612b4691906135be565b612b509190613537565b9050919050565b612b5f612fb6565b73ffffffffffffffffffffffffffffffffffffffff16612b7d611bf0565b73ffffffffffffffffffffffffffffffffffffffff1614612bd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bca90613d78565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060055411612cdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cd690613de4565b60405180910390fd5b6000612d36612d106004547f0000000000000000000000000000000000000000000000000000000000000000612b14565b7f0000000000000000000000000000000000000000000000000000000000000000612f9d565b612d60427f0000000000000000000000000000000000000000000000000000000000000000612b14565b612d6a9190613618565b905060007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612dba9190613618565b827f0000000000000000000000000000000000000000000000000000000000000000612de691906135be565b612df09190613537565b90506000600554670de0b6b3a764000083612e0b91906135be565b612e159190613537565b600354612e229190613568565b9050670de0b6b3a76400008186612e3991906135be565b612e439190613537565b9350505050919050565b612ed0846323b872dd60e01b858585604051602401612e6e93929190613e04565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612ed6565b50505050565b6000612f38826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612fbe9092919063ffffffff16565b9050600081511115612f985780806020019051810190612f589190613e67565b612f97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f8e90613f06565b60405180910390fd5b5b505050565b6000818311612fac5781612fae565b825b905092915050565b600033905090565b6060612fcd8484600085612fd6565b90509392505050565b60608247101561301b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161301290613f98565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516130449190614027565b60006040518083038185875af1925050503d8060008114613081576040519150601f19603f3d011682016040523d82523d6000602084013e613086565b606091505b5091509150613097878383876130a3565b92505050949350505050565b606083156131055760008351036130fd576130bd85613118565b6130fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130f39061408a565b60405180910390fd5b5b829050613110565b61310f838361313b565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561314e5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161318291906140ff565b60405180910390fd5b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006131c082613195565b9050919050565b6131d0816131b5565b81146131db57600080fd5b50565b6000813590506131ed816131c7565b92915050565b6000602082840312156132095761320861318b565b5b6000613217848285016131de565b91505092915050565b6000819050919050565b61323381613220565b82525050565b600060208201905061324e600083018461322a565b92915050565b6000606082019050613269600083018661322a565b613276602083018561322a565b613283604083018461322a565b949350505050565b60008115159050919050565b6132a08161328b565b82525050565b60006020820190506132bb6000830184613297565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126132e6576132e56132c1565b5b8235905067ffffffffffffffff811115613303576133026132c6565b5b60208301915083602082028301111561331f5761331e6132cb565b5b9250929050565b6000806020838503121561333d5761333c61318b565b5b600083013567ffffffffffffffff81111561335b5761335a613190565b5b613367858286016132d0565b92509250509250929050565b61337c816131b5565b82525050565b60006020820190506133976000830184613373565b92915050565b6000819050919050565b60006133c26133bd6133b884613195565b61339d565b613195565b9050919050565b60006133d4826133a7565b9050919050565b60006133e6826133c9565b9050919050565b6133f6816133db565b82525050565b600060208201905061341160008301846133ed565b92915050565b600060808201905061342c600083018761322a565b613439602083018661322a565b613446604083018561322a565b613453606083018461322a565b95945050505050565b600082825260208201905092915050565b7f6e6f7420636c61696d61626c6520796574000000000000000000000000000000600082015250565b60006134a360118361345c565b91506134ae8261346d565b602082019050919050565b600060208201905081810360008301526134d281613496565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061354282613220565b915061354d83613220565b92508261355d5761355c6134d9565b5b828204905092915050565b600061357382613220565b915061357e83613220565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156135b3576135b2613508565b5b828201905092915050565b60006135c982613220565b91506135d483613220565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561360d5761360c613508565b5b828202905092915050565b600061362382613220565b915061362e83613220565b92508282101561364157613640613508565b5b828203905092915050565b7f43616e206f6e6c79206465706f73697420457468657220647572696e6720746860008201527f652073616c6520706572696f642e000000000000000000000000000000000000602082015250565b60006136a8602e8361345c565b91506136b38261364c565b604082019050919050565b600060208201905081810360008301526136d78161369b565b9050919050565b7f436f6d6d69746d656e7420616d6f756e74206973206f7574736964652074686560008201527f20616c6c6f7765642072616e67652e0000000000000000000000000000000000602082015250565b600061373a602f8361345c565b9150613745826136de565b604082019050919050565b600060208201905081810360008301526137698161372d565b9050919050565b7f43616e206f6e6c7920636c61696d20746f6b656e73206166746572207468652060008201527f73616c652068617320656e6465642e0000000000000000000000000000000000602082015250565b60006137cc602f8361345c565b91506137d782613770565b604082019050919050565b600060208201905081810360008301526137fb816137bf565b9050919050565b7f596f752068617665206e6f74206465706f736974656420616e7920457468657260008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061385e60218361345c565b915061386982613802565b604082019050919050565b6000602082019050818103600083015261388d81613851565b9050919050565b600081905092915050565b50565b60006138af600083613894565b91506138ba8261389f565b600082019050919050565b60006138d0826138a2565b9150819050919050565b7f4661696c656420746f207472616e736665722065746865720000000000000000600082015250565b600061391060188361345c565b915061391b826138da565b602082019050919050565b6000602082019050818103600083015261393f81613903565b9050919050565b6000819050919050565b600061396b61396661396184613946565b61339d565b613220565b9050919050565b61397b81613950565b82525050565b6000606082019050613996600083018661322a565b6139a36020830185613972565b6139b06040830184613972565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006139f282613220565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613a2457613a23613508565b5b600182019050919050565b7f416c726561647920737461727465642e00000000000000000000000000000000600082015250565b6000613a6560108361345c565b9150613a7082613a2f565b602082019050919050565b60006020820190508181036000830152613a9481613a58565b9050919050565b7f43616e206f6e6c792066696e697368206166746572207468652073616c65206860008201527f617320656e6465642e0000000000000000000000000000000000000000000000602082015250565b6000613af760298361345c565b9150613b0282613a9b565b604082019050919050565b60006020820190508181036000830152613b2681613aea565b9050919050565b7f416c72656164792066696e69736865642e000000000000000000000000000000600082015250565b6000613b6360118361345c565b9150613b6e82613b2d565b602082019050919050565b60006020820190508181036000830152613b9281613b56565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613bf560268361345c565b9150613c0082613b99565b604082019050919050565b60006020820190508181036000830152613c2481613be8565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000613c61601f8361345c565b9150613c6c82613c2b565b602082019050919050565b60006020820190508181036000830152613c9081613c54565b9050919050565b6000604082019050613cac6000830185613373565b613cb9602083018461322a565b9392505050565b7f6e6f742073746172746564000000000000000000000000000000000000000000600082015250565b6000613cf6600b8361345c565b9150613d0182613cc0565b602082019050919050565b60006020820190508181036000830152613d2581613ce9565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613d6260208361345c565b9150613d6d82613d2c565b602082019050919050565b60006020820190508181036000830152613d9181613d55565b9050919050565b7f6e6f20636f6d6d69746d656e7473000000000000000000000000000000000000600082015250565b6000613dce600e8361345c565b9150613dd982613d98565b602082019050919050565b60006020820190508181036000830152613dfd81613dc1565b9050919050565b6000606082019050613e196000830186613373565b613e266020830185613373565b613e33604083018461322a565b949350505050565b613e448161328b565b8114613e4f57600080fd5b50565b600081519050613e6181613e3b565b92915050565b600060208284031215613e7d57613e7c61318b565b5b6000613e8b84828501613e52565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000613ef0602a8361345c565b9150613efb82613e94565b604082019050919050565b60006020820190508181036000830152613f1f81613ee3565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000613f8260268361345c565b9150613f8d82613f26565b604082019050919050565b60006020820190508181036000830152613fb181613f75565b9050919050565b600081519050919050565b60005b83811015613fe1578082015181840152602081019050613fc6565b83811115613ff0576000848401525b50505050565b600061400182613fb8565b61400b8185613894565b935061401b818560208601613fc3565b80840191505092915050565b60006140338284613ff6565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000614074601d8361345c565b915061407f8261403e565b602082019050919050565b600060208201905081810360008301526140a381614067565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b60006140d1826140aa565b6140db818561345c565b93506140eb818560208601613fc3565b6140f4816140b5565b840191505092915050565b6000602082019050818103600083015261411981846140c6565b90509291505056fea264697066735822122028ba7bc4e5d385f317a39de86fc00cd208b5ef212d3b8c0fca43bc80b75c91f664736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70D5AE05 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0x94EF7E62 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xBEF4876B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBEF4876B EQ PUSH2 0x6E8 JUMPI DUP1 PUSH4 0xD56B2889 EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0xE2099438 EQ PUSH2 0x72A JUMPI DUP1 PUSH4 0xE8FCF723 EQ PUSH2 0x755 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x792 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x94EF7E62 EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x669 JUMPI DUP1 PUSH4 0xA8EA6F4C EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x6D1 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x78E97925 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0x7F649783 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0x8E05FB74 EQ PUSH2 0x610 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x70D5AE05 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x524 JUMPI DUP1 PUSH4 0x72DA776E EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0x78BB86D3 EQ PUSH2 0x566 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x3A3AB672 GT PUSH2 0x190 JUMPI DUP1 PUSH4 0x4D412357 GT PUSH2 0x15F JUMPI DUP1 PUSH4 0x4D412357 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x4EC01774 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x548DB174 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x599E10CE EQ PUSH2 0x4BC JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x3A3AB672 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x3C7A3AFF EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x3D956691 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x483383C8 EQ PUSH2 0x3D3 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1F2698AB GT PUSH2 0x1CC JUMPI DUP1 PUSH4 0x1F2698AB EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x2BCBF7CD EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x32ACD355 EQ PUSH2 0x336 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1EAAEC4 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x1048AB28 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x12ADECDA EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x16FC4869 EQ PUSH2 0x28A JUMPI PUSH2 0x204 JUMP JUMPDEST CALLDATASIZE PUSH2 0x204 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x7BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29F PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x32A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x32A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A6 PUSH2 0xF83 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BD PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E8 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43E PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x3326 JUMP JUMPDEST PUSH2 0x1A01 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50E PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51B SWAP2 SWAP1 PUSH2 0x3382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x539 PUSH2 0x1AE1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x550 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x33FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57B PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x588 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A6 PUSH2 0x1B1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0x3326 JUMP JUMPDEST PUSH2 0x1B43 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FA PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x3382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x625 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x632 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x650 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x660 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x690 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68B SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH2 0x206E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x32A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BB PUSH2 0x208E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C8 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E6 PUSH2 0x20B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FD PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70A SWAP2 SWAP1 PUSH2 0x32A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x728 PUSH2 0x223F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x73F PUSH2 0x27B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x33FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH2 0x27D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x789 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH2 0x27ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C3 PUSH2 0x2870 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81D SWAP1 PUSH2 0x34B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9D3 CALLER DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA29 CALLER DUP3 DUP5 PUSH2 0x9E3 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x98658F77A1C9013BC3A00213385D7B07DE0435B7B3B3023A43C66B91E05566C2 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA73 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0xA86 PUSH2 0x2945 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xAAD PUSH2 0x294E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xB82 JUMPI PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0xBD9 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE85 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x5 SLOAD LT PUSH2 0xE35 JUMPI PUSH1 0x0 PUSH2 0xCC4 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH32 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0xCBF SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST PUSH2 0x2B14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 DUP4 PUSH32 0x0 PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0xD6E SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDFA PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2B2D JUMP JUMPDEST PUSH2 0xE04 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP4 PUSH2 0xE15 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 DUP5 PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST DUP4 SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x0 DUP1 SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8B PUSH2 0x2870 JUMP JUMPDEST PUSH2 0xF93 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xFCF JUMPI POP PUSH32 0x0 TIMESTAMP LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xFFA JUMPI POP PUSH32 0x0 TIMESTAMP LT JUMPDEST PUSH2 0x1039 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1030 SWAP1 PUSH2 0x36BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1084 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST PUSH32 0x0 GT ISZERO DUP1 ISZERO PUSH2 0x111D JUMPI POP PUSH32 0x0 CALLVALUE PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x111A SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST GT ISZERO JUMPDEST PUSH2 0x115C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1153 SWAP1 PUSH2 0x3750 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11AB SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11C4 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11D4 CALLVALUE PUSH2 0x2B2D JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1222 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5E1DD8C4451717D5CA4FFBEFDADA35E22E0871220B9ED9DD03A351F0938C5ED7 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x126F SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x127F PUSH2 0x2945 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x12FA PUSH2 0x2870 JUMP JUMPDEST PUSH2 0x1302 PUSH2 0x294E JUMP JUMPDEST PUSH32 0x0 TIMESTAMP GT PUSH2 0x1364 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135B SWAP1 PUSH2 0x37E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x13E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DD SWAP1 PUSH2 0x3874 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x5 SLOAD LT PUSH2 0x1847 JUMPI PUSH1 0x0 PUSH2 0x14D1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH32 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14C2 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x14CC SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST PUSH2 0x2B14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1520 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 DUP4 PUSH32 0x0 PUSH2 0x1571 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x157B SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1607 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2B2D JUMP JUMPDEST PUSH2 0x1611 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1662 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x175C SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1799 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x179E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x17E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D9 SWAP1 PUSH2 0x3926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x45C072AA05B9853B5A993DE7A28BC332EE01404A628CEC1A23CE0F659F842EF1 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x182C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 DUP4 DUP4 SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x18F6 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1933 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1938 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x197C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1973 SWAP1 PUSH2 0x3926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x45C072AA05B9853B5A993DE7A28BC332EE01404A628CEC1A23CE0F659F842EF1 DUP4 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH2 0x19C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH1 0x0 DUP1 SWAP5 POP SWAP5 POP SWAP5 POP POP POP JUMPDEST PUSH2 0x19E4 PUSH2 0x2945 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A09 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1AA0 JUMPI PUSH1 0xA PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x1A2E JUMPI PUSH2 0x1A2D PUSH2 0x39B8 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1A43 SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE DUP1 DUP1 PUSH2 0x1A98 SWAP1 PUSH2 0x39E7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A0C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1AE9 PUSH2 0x2B57 JUMP JUMPDEST PUSH2 0x1AF3 PUSH1 0x0 PUSH2 0x2BD5 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1B4B PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1BEB JUMPI PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0x39B8 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1B87 SWAP2 SWAP1 PUSH2 0x31F3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x1BE3 SWAP1 PUSH2 0x39E7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B4E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x1D66 JUMPI PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x3 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D19 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x1DC0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2068 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x5 SLOAD LT PUSH2 0x2014 JUMPI PUSH1 0x0 PUSH2 0x1EAB PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH32 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1E9C SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x1EA6 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST PUSH2 0x2B14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1EFA SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 DUP4 PUSH32 0x0 PUSH2 0x1F4B SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x1F55 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FE1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2C99 JUMP JUMPDEST PUSH2 0x1FEB SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP4 PUSH2 0x1FFC SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP DUP4 DUP4 DUP3 DUP5 SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x20BA PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x210A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2101 SWAP1 PUSH2 0x3A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2192 CALLER ADDRESS PUSH32 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E4D SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x222A CALLER ADDRESS PUSH32 0x0 PUSH32 0x0 PUSH2 0x21E3 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E4D SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2247 PUSH2 0x2B57 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP GT PUSH2 0x22A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A0 SWAP1 PUSH2 0x3B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x22F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22F0 SWAP1 PUSH2 0x3B79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH1 0x5 SLOAD LT PUSH2 0x269F JUMPI PUSH1 0x0 PUSH2 0x2347 PUSH2 0x1BF0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2389 PUSH32 0x0 PUSH1 0x5 SLOAD PUSH2 0x2B14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2395 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23D2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x241B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2412 SWAP1 PUSH2 0x3926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH32 0x0 GT ISZERO PUSH2 0x2699 JUMPI PUSH1 0x0 PUSH32 0x0 PUSH1 0x5 SLOAD PUSH32 0x0 PUSH2 0x2496 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x24C1 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x24CB SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH2 0x2538 PUSH32 0x0 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x5 SLOAD PUSH32 0x0 PUSH2 0x2589 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x25B4 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x25BE SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH2 0x262B PUSH32 0x0 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2696 PUSH32 0x0 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x27AF JUMP JUMPDEST PUSH2 0x2711 PUSH2 0x26AA PUSH2 0x1BF0 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27AE PUSH2 0x271C PUSH2 0x1BF0 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH2 0x2768 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27F5 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2864 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285B SWAP1 PUSH2 0x3C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x286D DUP2 PUSH2 0x2BD5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x28B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28AC SWAP1 PUSH2 0x3C77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2940 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x28DE SWAP3 SWAP2 SWAP1 PUSH2 0x3C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2ED6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x29B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A8 SWAP1 PUSH2 0x3D0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x2B0B JUMPI PUSH1 0x0 PUSH2 0x2A13 PUSH2 0x29ED PUSH1 0x4 SLOAD PUSH32 0x0 PUSH2 0x2B14 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x2A3D TIMESTAMP PUSH32 0x0 PUSH2 0x2B14 JUMP JUMPDEST PUSH2 0x2A47 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x2A97 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH2 0x2AC3 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x2ACD SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x2AE6 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x2AF0 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2B01 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2B23 JUMPI DUP2 PUSH2 0x2B25 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD DUP4 PUSH2 0x2B46 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x2B50 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B5F PUSH2 0x2FB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B7D PUSH2 0x1BF0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2BD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BCA SWAP1 PUSH2 0x3D78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0x2CDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD6 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D36 PUSH2 0x2D10 PUSH1 0x4 SLOAD PUSH32 0x0 PUSH2 0x2B14 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x2D60 TIMESTAMP PUSH32 0x0 PUSH2 0x2B14 JUMP JUMPDEST PUSH2 0x2D6A SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x2DBA SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH2 0x2DE6 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x2DF0 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x2E0B SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x2E15 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2E22 SWAP2 SWAP1 PUSH2 0x3568 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP7 PUSH2 0x2E39 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH2 0x2E43 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2ED0 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2E6E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2ED6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F38 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FBE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2F98 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2F58 SWAP2 SWAP1 PUSH2 0x3E67 JUMP JUMPDEST PUSH2 0x2F97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8E SWAP1 PUSH2 0x3F06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x2FAC JUMPI DUP2 PUSH2 0x2FAE JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2FCD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2FD6 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x301B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3012 SWAP1 PUSH2 0x3F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3044 SWAP2 SWAP1 PUSH2 0x4027 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3081 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3086 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3097 DUP8 DUP4 DUP4 DUP8 PUSH2 0x30A3 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3105 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x30FD JUMPI PUSH2 0x30BD DUP6 PUSH2 0x3118 JUMP JUMPDEST PUSH2 0x30FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F3 SWAP1 PUSH2 0x408A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x3110 JUMP JUMPDEST PUSH2 0x310F DUP4 DUP4 PUSH2 0x313B JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x314E JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3182 SWAP2 SWAP1 PUSH2 0x40FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C0 DUP3 PUSH2 0x3195 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31D0 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x31DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x31ED DUP2 PUSH2 0x31C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3209 JUMPI PUSH2 0x3208 PUSH2 0x318B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3217 DUP5 DUP3 DUP6 ADD PUSH2 0x31DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3233 DUP2 PUSH2 0x3220 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x324E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x322A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3269 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x3276 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x3283 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x322A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32A0 DUP2 PUSH2 0x328B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3297 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x32E6 JUMPI PUSH2 0x32E5 PUSH2 0x32C1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3303 JUMPI PUSH2 0x3302 PUSH2 0x32C6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x331F JUMPI PUSH2 0x331E PUSH2 0x32CB JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x333D JUMPI PUSH2 0x333C PUSH2 0x318B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x335B JUMPI PUSH2 0x335A PUSH2 0x3190 JUMP JUMPDEST JUMPDEST PUSH2 0x3367 DUP6 DUP3 DUP7 ADD PUSH2 0x32D0 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x337C DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3397 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3373 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C2 PUSH2 0x33BD PUSH2 0x33B8 DUP5 PUSH2 0x3195 JUMP JUMPDEST PUSH2 0x339D JUMP JUMPDEST PUSH2 0x3195 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D4 DUP3 PUSH2 0x33A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E6 DUP3 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33F6 DUP2 PUSH2 0x33DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3411 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x342C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x3439 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x3446 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x3453 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x322A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420636C61696D61626C6520796574000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A3 PUSH1 0x11 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x34AE DUP3 PUSH2 0x346D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34D2 DUP2 PUSH2 0x3496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3542 DUP3 PUSH2 0x3220 JUMP JUMPDEST SWAP2 POP PUSH2 0x354D DUP4 PUSH2 0x3220 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x355D JUMPI PUSH2 0x355C PUSH2 0x34D9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3573 DUP3 PUSH2 0x3220 JUMP JUMPDEST SWAP2 POP PUSH2 0x357E DUP4 PUSH2 0x3220 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x35B3 JUMPI PUSH2 0x35B2 PUSH2 0x3508 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C9 DUP3 PUSH2 0x3220 JUMP JUMPDEST SWAP2 POP PUSH2 0x35D4 DUP4 PUSH2 0x3220 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x360D JUMPI PUSH2 0x360C PUSH2 0x3508 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3623 DUP3 PUSH2 0x3220 JUMP JUMPDEST SWAP2 POP PUSH2 0x362E DUP4 PUSH2 0x3220 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3641 JUMPI PUSH2 0x3640 PUSH2 0x3508 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E206F6E6C79206465706F73697420457468657220647572696E67207468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x652073616C6520706572696F642E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A8 PUSH1 0x2E DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x36B3 DUP3 PUSH2 0x364C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36D7 DUP2 PUSH2 0x369B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6D6D69746D656E7420616D6F756E74206973206F75747369646520746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20616C6C6F7765642072616E67652E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x373A PUSH1 0x2F DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3745 DUP3 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3769 DUP2 PUSH2 0x372D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E206F6E6C7920636C61696D20746F6B656E732061667465722074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x73616C652068617320656E6465642E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37CC PUSH1 0x2F DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x37D7 DUP3 PUSH2 0x3770 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37FB DUP2 PUSH2 0x37BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F74206465706F736974656420616E79204574686572 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x385E PUSH1 0x21 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3869 DUP3 PUSH2 0x3802 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x388D DUP2 PUSH2 0x3851 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38AF PUSH1 0x0 DUP4 PUSH2 0x3894 JUMP JUMPDEST SWAP2 POP PUSH2 0x38BA DUP3 PUSH2 0x389F JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38D0 DUP3 PUSH2 0x38A2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E736665722065746865720000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3910 PUSH1 0x18 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x391B DUP3 PUSH2 0x38DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x393F DUP2 PUSH2 0x3903 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396B PUSH2 0x3966 PUSH2 0x3961 DUP5 PUSH2 0x3946 JUMP JUMPDEST PUSH2 0x339D JUMP JUMPDEST PUSH2 0x3220 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x397B DUP2 PUSH2 0x3950 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3996 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x39A3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3972 JUMP JUMPDEST PUSH2 0x39B0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3972 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x39F2 DUP3 PUSH2 0x3220 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3A24 JUMPI PUSH2 0x3A23 PUSH2 0x3508 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465642E00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A65 PUSH1 0x10 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3A70 DUP3 PUSH2 0x3A2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A94 DUP2 PUSH2 0x3A58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E206F6E6C792066696E697368206166746572207468652073616C652068 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x617320656E6465642E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF7 PUSH1 0x29 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3B02 DUP3 PUSH2 0x3A9B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B26 DUP2 PUSH2 0x3AEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C72656164792066696E69736865642E000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B63 PUSH1 0x11 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3B6E DUP3 PUSH2 0x3B2D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B92 DUP2 PUSH2 0x3B56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BF5 PUSH1 0x26 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3C00 DUP3 PUSH2 0x3B99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C24 DUP2 PUSH2 0x3BE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C61 PUSH1 0x1F DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3C6C DUP3 PUSH2 0x3C2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C90 DUP2 PUSH2 0x3C54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CAC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3373 JUMP JUMPDEST PUSH2 0x3CB9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x322A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E6F742073746172746564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CF6 PUSH1 0xB DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3D01 DUP3 PUSH2 0x3CC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D25 DUP2 PUSH2 0x3CE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D62 PUSH1 0x20 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3D6D DUP3 PUSH2 0x3D2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D91 DUP2 PUSH2 0x3D55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F20636F6D6D69746D656E7473000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DCE PUSH1 0xE DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3DD9 DUP3 PUSH2 0x3D98 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DFD DUP2 PUSH2 0x3DC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3E19 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3373 JUMP JUMPDEST PUSH2 0x3E26 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3373 JUMP JUMPDEST PUSH2 0x3E33 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x322A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3E44 DUP2 PUSH2 0x328B JUMP JUMPDEST DUP2 EQ PUSH2 0x3E4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3E61 DUP2 PUSH2 0x3E3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E7D JUMPI PUSH2 0x3E7C PUSH2 0x318B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E8B DUP5 DUP3 DUP6 ADD PUSH2 0x3E52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EF0 PUSH1 0x2A DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3EFB DUP3 PUSH2 0x3E94 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F1F DUP2 PUSH2 0x3EE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F82 PUSH1 0x26 DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x3F8D DUP3 PUSH2 0x3F26 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FB1 DUP2 PUSH2 0x3F75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3FE1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3FC6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3FF0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4001 DUP3 PUSH2 0x3FB8 JUMP JUMPDEST PUSH2 0x400B DUP2 DUP6 PUSH2 0x3894 JUMP JUMPDEST SWAP4 POP PUSH2 0x401B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3FC3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4033 DUP3 DUP5 PUSH2 0x3FF6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4074 PUSH1 0x1D DUP4 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP PUSH2 0x407F DUP3 PUSH2 0x403E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40A3 DUP2 PUSH2 0x4067 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D1 DUP3 PUSH2 0x40AA JUMP JUMPDEST PUSH2 0x40DB DUP2 DUP6 PUSH2 0x345C JUMP JUMPDEST SWAP4 POP PUSH2 0x40EB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3FC3 JUMP JUMPDEST PUSH2 0x40F4 DUP2 PUSH2 0x40B5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4119 DUP2 DUP5 PUSH2 0x40C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xBA PUSH28 0xC4E5D385F317A39DE86FC00CD208B5EF212D3B8C0FCA43BC80B75C91 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "48771:12026:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58292:504;;;;;;;;;;;;;:::i;:::-;;49722:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;54285:1109;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;49064:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49463:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49379:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49197:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49019:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;60653:104;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;53557:720;;;:::i;:::-;;48975:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49420:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49111:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;56558:1726;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;49778:46;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;60414:231;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;49665:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49279:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24266:103;;;;;;;;;;;;;:::i;:::-;;48890:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49574:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49156:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;60132:218;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23618:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49236:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;55402:1146;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;50125:41;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49322:48;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;53194:355;;;;;;;;;;;;;:::i;:::-;;49489:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;58804:1269;;;;;;;;;;;;;:::i;:::-;;48931:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49612:46;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24524:201;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;58292:504;21062:21;:19;:21::i;:::-;58370:11:::1;58351:15;:30;;58343:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;58414:10;58427:11;:23;58439:10;58427:23;;;;;;;;;;;;;;;;58414:36;;58461:10;58474:14;:26;58489:10;58474:26;;;;;;;;;;;;;;;;58461:39;;58511:10;58550:1;58524:11;:23;58536:10;58524:23;;;;;;;;;;;;;;;;:27;;;;:::i;:::-;58511:40;;58590:1;58564:11;:23;58576:10;58564:23;;;;;;;;;;;;;;;:27;;;;58631:1;58602:14;:26;58617:10;58602:26;;;;;;;;;;;;;;;:30;;;;58645:39;58669:10;58681:2;58645:10;:23;;;;:39;;;;;:::i;:::-;58695:47;58722:10;58739:2;58734;:7;;;;:::i;:::-;58695:13;:26;;;;:47;;;;;:::i;:::-;58765:10;58758:30;;;58777:2;58781;58785;58758:30;;;;;;;;:::i;:::-;;;;;;;;58332:464;;;21106:20:::0;:18;:20::i;:::-;58292:504::o;49722:49::-;;;;;;;;;;;;;;;;;:::o;54285:1109::-;54328:7;54337;54346;54366:17;:15;:17::i;:::-;54424:1;54398:11;:23;54410:10;54398:23;;;;;;;;;;;;;;;;:27;54394:109;;;54448:1;54451:11;:23;54463:10;54451:23;;;;;;;;;;;;;;;;54476:14;:26;54491:10;54476:26;;;;;;;;;;;;;;;;54440:63;;;;;;;;54394:109;54547:1;54520:11;:23;54532:10;54520:23;;;;;;;;;;;;;;;;:28;54516:50;;54558:1;54561;54564;54550:16;;;;;;;;54516:50;54603:15;54583:16;;:35;54579:808;;54635:21;54659:144;54686:11;:23;54698:10;54686:23;;;;;;;;;;;;;;;;54772:16;;54755:13;54729:11;:23;54741:10;54729:23;;;;;;;;;;;;;;;;:39;;;;:::i;:::-;54728:60;;;;:::i;:::-;54659:8;:144::i;:::-;54635:168;;54818:22;54869:13;54843:11;:23;54855:10;54843:23;;;;;;;;;;;;;;;;:39;;;;:::i;:::-;54818:64;;54897:23;54973:13;54939;54924:12;:28;;;;:::i;:::-;54923:63;;;;:::i;:::-;54897:89;;55001:16;55082:15;:27;55098:10;55082:27;;;;;;;;;;;;;;;;55020:42;55038:11;:23;55050:10;55038:23;;;;;;;;;;;;;;;;55020:17;:42::i;:::-;:89;;;;:::i;:::-;55001:108;;55126:31;55178:1;55160:15;:19;;;;:::i;:::-;55126:53;;55204:14;55238:23;55220:15;:41;;;;:::i;:::-;55263:8;55196:76;;;;;;;;;;;;;54579:808;55305:11;55319;:23;55331:10;55319:23;;;;;;;;;;;;;;;;55305:37;;55365:3;55370:1;55373;55357:18;;;;;;;54285:1109;;;;:::o;49064:40::-;;;:::o;49463:19::-;;;;;;;;;;;;;:::o;49379:34::-;;;:::o;49197:32::-;;;:::o;49019:38::-;;;:::o;60653:104::-;60710:4;60734:9;:15;60744:4;60734:15;;;;;;;;;;;;;;;;;;;;;;;;;60727:22;;60653:104;;;:::o;53557:720::-;21062:21;:19;:21::i;:::-;53616:17:::1;:15;:17::i;:::-;53666:7;;;;;;;;;;;:56;;;;;53713:9;53694:15;:28;;53666:56;:102;;;;;53761:7;53743:15;:25;53666:102;53644:198;;;;;;;;;;;;:::i;:::-;;;;;;;;;53914:9;53888:11;:23;53900:10;53888:23;;;;;;;;;;;;;;;;:35;;;;:::i;:::-;53875:9;:48;;:117;;;;;53983:9;53970;53944:11;:23;53956:10;53944:23;;;;;;;;;;;;;;;;:35;;;;:::i;:::-;:48;;53875:117;53853:214;;;;;;;;;;;;:::i;:::-;;;;;;;;;54105:9;54078:11;:23;54090:10;54078:23;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;54145:9;54125:16;;:29;;;;;;;:::i;:::-;;;;;;;;54196:28;54214:9;54196:17;:28::i;:::-;54165:15;:27;54181:10;54165:27;;;;;;;;;;;;;;;;:59;;;;;;;:::i;:::-;;;;;;;;54247:10;54240:29;;;54259:9;54240:29;;;;;;:::i;:::-;;;;;;;;21106:20:::0;:18;:20::i;:::-;53557:720::o;48975:37::-;;;:::o;49420:34::-;;;:::o;49111:38::-;;;:::o;56558:1726::-;56606:7;56615;56624;21062:21;:19;:21::i;:::-;56644:17:::1;:15;:17::i;:::-;56712:7;56694:15;:25;56672:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;56853:1;56827:11;:23;56839:10;56827:23;;;;;;;;;;;;;;;;:27;56805:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;56952:15;56932:16;;:35;56928:1349;;56984:21;57008:144;57035:11;:23;57047:10;57035:23;;;;;;;;;;;;;;;;57121:16;;57104:13;57078:11;:23;57090:10;57078:23;;;;;;;;;;;;;;;;:39;;;;:::i;:::-;57077:60;;;;:::i;:::-;57008:8;:144::i;:::-;56984:168;;57167:22;57218:13;57192:11;:23;57204:10;57192:23;;;;;;;;;;;;;;;;:39;;;;:::i;:::-;57167:64;;57246:23;57322:13;57288;57273:12;:28;;;;:::i;:::-;57272:63;;;;:::i;:::-;57246:89;;57350:16;57431:15;:27;57447:10;57431:27;;;;;;;;;;;;;;;;57369:42;57387:11;:23;57399:10;57387:23;;;;;;;;;;;;;;;;57369:17;:42::i;:::-;:89;;;;:::i;:::-;57350:108;;57504:8;57473:15;:27;57489:10;57473:27;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;57555:1;57529:11;:23;57541:10;57529:23;;;;;;;;;;;;;;;:27;;;;57602:8;57573:14;:26;57588:10;57573:26;;;;;;;;;;;;;;;:37;;;;57651:15;57625:11;:23;57637:10;57625:23;;;;;;;;;;;;;;;:41;;;;57684:12;57702:10;:15;;57725:14;57702:42;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;57683:61;;;57767:7;57759:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;57829:10;57823:60;;;57841:14;57857:15;57874:8;57823:60;;;;;;;;:::i;:::-;;;;;;;;57906:14;57922:15;57939:8;57898:50;;;;;;;;;;;;;56928:1349;57981:11;57995;:23;58007:10;57995:23;;;;;;;;;;;;;;;;57981:37;;58059:1;58033:11;:23;58045:10;58033:23;;;;;;;;;;;;;;;:27;;;;58076:12;58094:10;:15;;58117:3;58094:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58075:50;;;58148:7;58140:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;58210:10;58204:28;;;58222:3;58227:1;58230::::0;58204:28:::1;;;;;;;;:::i;:::-;;;;;;;;58255:3;58260:1;58263::::0;58247:18:::1;;;;;;;;21094:1;21106:20:::0;:18;:20::i;:::-;56558:1726;;;:::o;49778:46::-;;;;;;;;;;;;;;;;;:::o;60414:231::-;23504:13;:11;:13::i;:::-;60526:6:::1;60521:117;60542:17;;:24;;60538:1;:28;60521:117;;;60595:9;:31;60605:17;;60623:1;60605:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;60595:31;;;;;;;;;;;;;;;;60588:38;;;;;;;;;;;60568:3;;;;;:::i;:::-;;;;60521:117;;;;60414:231:::0;;:::o;49665:50::-;;;;;;;;;;;;;;;;;:::o;49279:36::-;;;:::o;24266:103::-;23504:13;:11;:13::i;:::-;24331:30:::1;24358:1;24331:18;:30::i;:::-;24266:103::o:0;48890:34::-;;;:::o;49574:31::-;;;;:::o;49156:34::-;;;:::o;60132:218::-;23504:13;:11;:13::i;:::-;60237:6:::1;60232:111;60253:14;;:21;;60249:1;:25;60232:111;;;60327:4;60296:9;:28;60306:14;;60321:1;60306:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;60296:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;60276:3;;;;;:::i;:::-;;;;60232:111;;;;60132:218:::0;;:::o;23618:87::-;23664:7;23691:6;;;;;;;;;;;23684:13;;23618:87;:::o;49236:36::-;;;:::o;55402:1146::-;55458:7;55467;55476;55485;55545:1;55519:11;:23;55531:10;55519:23;;;;;;;;;;;;;;;;:27;55515:136;;;55569:1;55572:11;:23;55584:10;55572:23;;;;;;;;;;;;;;;;55621:1;55597:11;:23;55609:10;55597:23;;;;;;;;;;;;;;;;:25;;;;:::i;:::-;55624:14;:26;55639:10;55624:26;;;;;;;;;;;;;;;;55561:90;;;;;;;;;;55515:136;55695:1;55668:11;:23;55680:10;55668:23;;;;;;;;;;;;;;;;:28;55664:53;;55706:1;55709;55712;55715;55698:19;;;;;;;;;;55664:53;55754:15;55734:16;;:35;55730:811;;55786:21;55810:144;55837:11;:23;55849:10;55837:23;;;;;;;;;;;;;;;;55923:16;;55906:13;55880:11;:23;55892:10;55880:23;;;;;;;;;;;;;;;;:39;;;;:::i;:::-;55879:60;;;;:::i;:::-;55810:8;:144::i;:::-;55786:168;;55969:22;56020:13;55994:11;:23;56006:10;55994:23;;;;;;;;;;;;;;;;:39;;;;:::i;:::-;55969:64;;56048:23;56124:13;56090;56075:12;:28;;;;:::i;:::-;56074:63;;;;:::i;:::-;56048:89;;56152:16;56234:15;:27;56250:10;56234:27;;;;;;;;;;;;;;;;56171:43;56190:11;:23;56202:10;56190:23;;;;;;;;;;;;;;;;56171:18;:43::i;:::-;:90;;;;:::i;:::-;56152:109;;56278:31;56330:1;56312:15;:19;;;;:::i;:::-;56278:53;;56356:14;56372:15;56389:23;56414:8;56348:75;;;;;;;;;;;;;;;55730:811;56456:11;56470;:23;56482:10;56470:23;;;;;;;;;;;;;;;;56456:37;;56516:3;56521:1;56524;56527;56508:21;;;;;;;;;55402:1146;;;;;:::o;50125:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;49322:48::-;;;:::o;53194:355::-;23504:13;:11;:13::i;:::-;53250:7:::1;;;;;;;;;;;53249:8;53241:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;53299:4;53289:7;;:14;;;;;;;;;;;;;;;;;;53314:68;53342:10;53362:4;53369:12;53314:10;:27;;;;:68;;;;;;:::i;:::-;53393:148;53438:10;53471:4;53507:23;53491:13;:39;;;;:::i;:::-;53393:13;:30;;;;:148;;;;;;:::i;:::-;53194:355::o:0;49489:20::-;;;;;;;;;;;;;:::o;58804:1269::-;23504:13;:11;:13::i;:::-;58892:7:::1;58874:15;:25;58852:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;58988:8;;;;;;;;;;;58987:9;58979:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;59040:4;59029:8;;:15;;;;;;;;;;;;;;;;;;59081;59061:16;;:35;59057:1009;;59114:12;59132:7;:5;:7::i;:::-;:12;;59170:41;59179:13;59194:16;;59170:8;:41::i;:::-;59132:98;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59113:117;;;59253:7;59245:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;59324:16;;59308:13;:32;59304:581;;;59361:28;59457:13;59436:16;;59420:13;:32;;;;:::i;:::-;59393:23;:60;;;;:::i;:::-;59392:78;;;;:::i;:::-;59361:109;;59493:61;59520:11;59533:20;59493:13;:26;;;;:61;;;;;:::i;:::-;59591:20;59689:13;59668:16;;59652:13;:32;;;;:::i;:::-;59615:12;:70;;;;:::i;:::-;59614:88;;;;:::i;:::-;59591:111;;59739:61;59766:11;59779:20;59739:13;:26;;;;:61;;;;;:::i;:::-;59819:50;59843:11;59856:12;59819:10;:23;;;;:50;;;;;:::i;:::-;59342:543;;59304:581;59098:798;59057:1009;;;59917:46;59941:7;:5;:7::i;:::-;59950:12;59917:10;:23;;;;:46;;;;;:::i;:::-;59978:76;60005:7;:5;:7::i;:::-;60030:23;60014:13;:39;;;;:::i;:::-;59978:13;:26;;;;:76;;;;;:::i;:::-;59057:1009;58804:1269::o:0;48931:37::-;;;:::o;49612:46::-;;;;;;;;;;;;;;;;;:::o;24524:201::-;23504:13;:11;:13::i;:::-;24633:1:::1;24613:22;;:8;:22;;::::0;24605:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;24689:28;24708:8;24689:18;:28::i;:::-;24524:201:::0;:::o;21142:293::-;20544:1;21276:7;;:19;21268:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;20544:1;21409:7;:18;;;;21142:293::o;15023:211::-;15140:86;15160:5;15190:23;;;15215:2;15219:5;15167:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15140:19;:86::i;:::-;15023:211;;;:::o;21443:213::-;20500:1;21626:7;:22;;;;21443:213::o;51001:506::-;51075:9;51056:15;:28;;51048:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;51134:1;51115:16;;:20;51111:350;;;51152:15;51224:50;51233:29;51242:10;;51254:7;51233:8;:29::i;:::-;51264:9;51224:8;:50::i;:::-;51170:34;51179:15;51196:7;51170:8;:34::i;:::-;:104;;;;:::i;:::-;51152:122;;51289:16;51364:9;51354:7;:19;;;;:::i;:::-;51325:7;51309:13;:23;;;;:::i;:::-;51308:66;;;;:::i;:::-;51289:85;;51433:16;;51421:8;51410;:19;;;;:::i;:::-;51409:40;;;;:::i;:::-;51389:16;;:60;;;;;;;:::i;:::-;;;;;;;;51137:324;;51111:350;51484:15;51471:10;:28;;;;51001:506::o;25634:106::-;25692:7;25723:1;25719;:5;:13;;25731:1;25719:13;;;25727:1;25719:13;25712:20;;25634:106;;;;:::o;50318:137::-;50383:7;50439:8;50419:16;;50411:5;:24;;;;:::i;:::-;50410:37;;;;:::i;:::-;50403:44;;50318:137;;;:::o;23783:132::-;23858:12;:10;:12::i;:::-;23847:23;;:7;:5;:7::i;:::-;:23;;;23839:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;23783:132::o;24885:191::-;24959:16;24978:6;;;;;;;;;;;24959:25;;25004:8;24995:6;;:17;;;;;;;;;;;;;;;;;;25059:8;25028:40;;25049:8;25028:40;;;;;;;;;;;;24948:128;24885:191;:::o;50463:528::-;50529:7;50576:1;50557:16;;:20;50549:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;50609:15;50677:50;50686:29;50695:10;;50707:7;50686:8;:29::i;:::-;50717:9;50677:8;:50::i;:::-;50627:34;50636:15;50653:7;50627:8;:34::i;:::-;:100;;;;:::i;:::-;50609:118;;50738:16;50809:9;50799:7;:19;;;;:::i;:::-;50774:7;50758:13;:23;;;;:::i;:::-;50757:62;;;;:::i;:::-;50738:81;;50830:25;50901:16;;50889:8;50878;:19;;;;:::i;:::-;50877:40;;;;:::i;:::-;50858:16;;:59;;;;:::i;:::-;50830:87;;50975:8;50954:17;50946:5;:25;;;;:::i;:::-;50945:38;;;;:::i;:::-;50938:45;;;;;50463:528;;;:::o;15242:248::-;15386:96;15406:5;15436:27;;;15465:4;15471:2;15475:5;15413:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15386:19;:96::i;:::-;15242:248;;;;:::o;18090:716::-;18514:23;18540:69;18568:4;18540:69;;;;;;;;;;;;;;;;;18548:5;18540:27;;;;:69;;;;;:::i;:::-;18514:95;;18644:1;18624:10;:17;:21;18620:179;;;18721:10;18710:30;;;;;;;;;;;;:::i;:::-;18702:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;18620:179;18160:646;18090:716;;:::o;25452:106::-;25510:7;25541:1;25537;:5;:13;;25549:1;25537:13;;;25545:1;25537:13;25530:20;;25452:106;;;;:::o;22257:98::-;22310:7;22337:10;22330:17;;22257:98;:::o;8976:229::-;9113:12;9145:52;9167:6;9175:4;9181:1;9184:12;9145:21;:52::i;:::-;9138:59;;8976:229;;;;;:::o;10096:455::-;10266:12;10324:5;10299:21;:30;;10291:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10384:12;10398:23;10425:6;:11;;10444:5;10451:4;10425:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10383:73;;;;10474:69;10501:6;10509:7;10518:10;10530:12;10474:26;:69::i;:::-;10467:76;;;;10096:455;;;;;;:::o;12669:644::-;12854:12;12883:7;12879:427;;;12932:1;12911:10;:17;:22;12907:290;;13129:18;13140:6;13129:10;:18::i;:::-;13121:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;12907:290;13218:10;13211:17;;;;12879:427;13261:33;13269:10;13281:12;13261:7;:33::i;:::-;12669:644;;;;;;;:::o;6219:326::-;6279:4;6536:1;6514:7;:19;;;:23;6507:30;;6219:326;;;:::o;13855:552::-;14036:1;14016:10;:17;:21;14012:388;;;14248:10;14242:17;14305:15;14292:10;14288:2;14284:19;14277:44;14012:388;14375:12;14368:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:1;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:442::-;1760:4;1798:2;1787:9;1783:18;1775:26;;1811:71;1879:1;1868:9;1864:17;1855:6;1811:71;:::i;:::-;1892:72;1960:2;1949:9;1945:18;1936:6;1892:72;:::i;:::-;1974;2042:2;2031:9;2027:18;2018:6;1974:72;:::i;:::-;1611:442;;;;;;:::o;2059:90::-;2093:7;2136:5;2129:13;2122:21;2111:32;;2059:90;;;:::o;2155:109::-;2236:21;2251:5;2236:21;:::i;:::-;2231:3;2224:34;2155:109;;:::o;2270:210::-;2357:4;2395:2;2384:9;2380:18;2372:26;;2408:65;2470:1;2459:9;2455:17;2446:6;2408:65;:::i;:::-;2270:210;;;;:::o;2486:117::-;2595:1;2592;2585:12;2609:117;2718:1;2715;2708:12;2732:117;2841:1;2838;2831:12;2872:568;2945:8;2955:6;3005:3;2998:4;2990:6;2986:17;2982:27;2972:122;;3013:79;;:::i;:::-;2972:122;3126:6;3113:20;3103:30;;3156:18;3148:6;3145:30;3142:117;;;3178:79;;:::i;:::-;3142:117;3292:4;3284:6;3280:17;3268:29;;3346:3;3338:4;3330:6;3326:17;3316:8;3312:32;3309:41;3306:128;;;3353:79;;:::i;:::-;3306:128;2872:568;;;;;:::o;3446:559::-;3532:6;3540;3589:2;3577:9;3568:7;3564:23;3560:32;3557:119;;;3595:79;;:::i;:::-;3557:119;3743:1;3732:9;3728:17;3715:31;3773:18;3765:6;3762:30;3759:117;;;3795:79;;:::i;:::-;3759:117;3908:80;3980:7;3971:6;3960:9;3956:22;3908:80;:::i;:::-;3890:98;;;;3686:312;3446:559;;;;;:::o;4011:118::-;4098:24;4116:5;4098:24;:::i;:::-;4093:3;4086:37;4011:118;;:::o;4135:222::-;4228:4;4266:2;4255:9;4251:18;4243:26;;4279:71;4347:1;4336:9;4332:17;4323:6;4279:71;:::i;:::-;4135:222;;;;:::o;4363:60::-;4391:3;4412:5;4405:12;;4363:60;;;:::o;4429:142::-;4479:9;4512:53;4530:34;4539:24;4557:5;4539:24;:::i;:::-;4530:34;:::i;:::-;4512:53;:::i;:::-;4499:66;;4429:142;;;:::o;4577:126::-;4627:9;4660:37;4691:5;4660:37;:::i;:::-;4647:50;;4577:126;;;:::o;4709:139::-;4772:9;4805:37;4836:5;4805:37;:::i;:::-;4792:50;;4709:139;;;:::o;4854:157::-;4954:50;4998:5;4954:50;:::i;:::-;4949:3;4942:63;4854:157;;:::o;5017:248::-;5123:4;5161:2;5150:9;5146:18;5138:26;;5174:84;5255:1;5244:9;5240:17;5231:6;5174:84;:::i;:::-;5017:248;;;;:::o;5271:553::-;5448:4;5486:3;5475:9;5471:19;5463:27;;5500:71;5568:1;5557:9;5553:17;5544:6;5500:71;:::i;:::-;5581:72;5649:2;5638:9;5634:18;5625:6;5581:72;:::i;:::-;5663;5731:2;5720:9;5716:18;5707:6;5663:72;:::i;:::-;5745;5813:2;5802:9;5798:18;5789:6;5745:72;:::i;:::-;5271:553;;;;;;;:::o;5830:169::-;5914:11;5948:6;5943:3;5936:19;5988:4;5983:3;5979:14;5964:29;;5830:169;;;;:::o;6005:167::-;6145:19;6141:1;6133:6;6129:14;6122:43;6005:167;:::o;6178:366::-;6320:3;6341:67;6405:2;6400:3;6341:67;:::i;:::-;6334:74;;6417:93;6506:3;6417:93;:::i;:::-;6535:2;6530:3;6526:12;6519:19;;6178:366;;;:::o;6550:419::-;6716:4;6754:2;6743:9;6739:18;6731:26;;6803:9;6797:4;6793:20;6789:1;6778:9;6774:17;6767:47;6831:131;6957:4;6831:131;:::i;:::-;6823:139;;6550:419;;;:::o;6975:180::-;7023:77;7020:1;7013:88;7120:4;7117:1;7110:15;7144:4;7141:1;7134:15;7161:180;7209:77;7206:1;7199:88;7306:4;7303:1;7296:15;7330:4;7327:1;7320:15;7347:185;7387:1;7404:20;7422:1;7404:20;:::i;:::-;7399:25;;7438:20;7456:1;7438:20;:::i;:::-;7433:25;;7477:1;7467:35;;7482:18;;:::i;:::-;7467:35;7524:1;7521;7517:9;7512:14;;7347:185;;;;:::o;7538:305::-;7578:3;7597:20;7615:1;7597:20;:::i;:::-;7592:25;;7631:20;7649:1;7631:20;:::i;:::-;7626:25;;7785:1;7717:66;7713:74;7710:1;7707:81;7704:107;;;7791:18;;:::i;:::-;7704:107;7835:1;7832;7828:9;7821:16;;7538:305;;;;:::o;7849:348::-;7889:7;7912:20;7930:1;7912:20;:::i;:::-;7907:25;;7946:20;7964:1;7946:20;:::i;:::-;7941:25;;8134:1;8066:66;8062:74;8059:1;8056:81;8051:1;8044:9;8037:17;8033:105;8030:131;;;8141:18;;:::i;:::-;8030:131;8189:1;8186;8182:9;8171:20;;7849:348;;;;:::o;8203:191::-;8243:4;8263:20;8281:1;8263:20;:::i;:::-;8258:25;;8297:20;8315:1;8297:20;:::i;:::-;8292:25;;8336:1;8333;8330:8;8327:34;;;8341:18;;:::i;:::-;8327:34;8386:1;8383;8379:9;8371:17;;8203:191;;;;:::o;8400:233::-;8540:34;8536:1;8528:6;8524:14;8517:58;8609:16;8604:2;8596:6;8592:15;8585:41;8400:233;:::o;8639:366::-;8781:3;8802:67;8866:2;8861:3;8802:67;:::i;:::-;8795:74;;8878:93;8967:3;8878:93;:::i;:::-;8996:2;8991:3;8987:12;8980:19;;8639:366;;;:::o;9011:419::-;9177:4;9215:2;9204:9;9200:18;9192:26;;9264:9;9258:4;9254:20;9250:1;9239:9;9235:17;9228:47;9292:131;9418:4;9292:131;:::i;:::-;9284:139;;9011:419;;;:::o;9436:234::-;9576:34;9572:1;9564:6;9560:14;9553:58;9645:17;9640:2;9632:6;9628:15;9621:42;9436:234;:::o;9676:366::-;9818:3;9839:67;9903:2;9898:3;9839:67;:::i;:::-;9832:74;;9915:93;10004:3;9915:93;:::i;:::-;10033:2;10028:3;10024:12;10017:19;;9676:366;;;:::o;10048:419::-;10214:4;10252:2;10241:9;10237:18;10229:26;;10301:9;10295:4;10291:20;10287:1;10276:9;10272:17;10265:47;10329:131;10455:4;10329:131;:::i;:::-;10321:139;;10048:419;;;:::o;10473:234::-;10613:34;10609:1;10601:6;10597:14;10590:58;10682:17;10677:2;10669:6;10665:15;10658:42;10473:234;:::o;10713:366::-;10855:3;10876:67;10940:2;10935:3;10876:67;:::i;:::-;10869:74;;10952:93;11041:3;10952:93;:::i;:::-;11070:2;11065:3;11061:12;11054:19;;10713:366;;;:::o;11085:419::-;11251:4;11289:2;11278:9;11274:18;11266:26;;11338:9;11332:4;11328:20;11324:1;11313:9;11309:17;11302:47;11366:131;11492:4;11366:131;:::i;:::-;11358:139;;11085:419;;;:::o;11510:220::-;11650:34;11646:1;11638:6;11634:14;11627:58;11719:3;11714:2;11706:6;11702:15;11695:28;11510:220;:::o;11736:366::-;11878:3;11899:67;11963:2;11958:3;11899:67;:::i;:::-;11892:74;;11975:93;12064:3;11975:93;:::i;:::-;12093:2;12088:3;12084:12;12077:19;;11736:366;;;:::o;12108:419::-;12274:4;12312:2;12301:9;12297:18;12289:26;;12361:9;12355:4;12351:20;12347:1;12336:9;12332:17;12325:47;12389:131;12515:4;12389:131;:::i;:::-;12381:139;;12108:419;;;:::o;12533:147::-;12634:11;12671:3;12656:18;;12533:147;;;;:::o;12686:114::-;;:::o;12806:398::-;12965:3;12986:83;13067:1;13062:3;12986:83;:::i;:::-;12979:90;;13078:93;13167:3;13078:93;:::i;:::-;13196:1;13191:3;13187:11;13180:18;;12806:398;;;:::o;13210:379::-;13394:3;13416:147;13559:3;13416:147;:::i;:::-;13409:154;;13580:3;13573:10;;13210:379;;;:::o;13595:174::-;13735:26;13731:1;13723:6;13719:14;13712:50;13595:174;:::o;13775:366::-;13917:3;13938:67;14002:2;13997:3;13938:67;:::i;:::-;13931:74;;14014:93;14103:3;14014:93;:::i;:::-;14132:2;14127:3;14123:12;14116:19;;13775:366;;;:::o;14147:419::-;14313:4;14351:2;14340:9;14336:18;14328:26;;14400:9;14394:4;14390:20;14386:1;14375:9;14371:17;14364:47;14428:131;14554:4;14428:131;:::i;:::-;14420:139;;14147:419;;;:::o;14572:85::-;14617:7;14646:5;14635:16;;14572:85;;;:::o;14663:158::-;14721:9;14754:61;14772:42;14781:32;14807:5;14781:32;:::i;:::-;14772:42;:::i;:::-;14754:61;:::i;:::-;14741:74;;14663:158;;;:::o;14827:147::-;14922:45;14961:5;14922:45;:::i;:::-;14917:3;14910:58;14827:147;;:::o;14980:474::-;15145:4;15183:2;15172:9;15168:18;15160:26;;15196:71;15264:1;15253:9;15249:17;15240:6;15196:71;:::i;:::-;15277:80;15353:2;15342:9;15338:18;15329:6;15277:80;:::i;:::-;15367;15443:2;15432:9;15428:18;15419:6;15367:80;:::i;:::-;14980:474;;;;;;:::o;15460:180::-;15508:77;15505:1;15498:88;15605:4;15602:1;15595:15;15629:4;15626:1;15619:15;15646:233;15685:3;15708:24;15726:5;15708:24;:::i;:::-;15699:33;;15754:66;15747:5;15744:77;15741:103;;15824:18;;:::i;:::-;15741:103;15871:1;15864:5;15860:13;15853:20;;15646:233;;;:::o;15885:166::-;16025:18;16021:1;16013:6;16009:14;16002:42;15885:166;:::o;16057:366::-;16199:3;16220:67;16284:2;16279:3;16220:67;:::i;:::-;16213:74;;16296:93;16385:3;16296:93;:::i;:::-;16414:2;16409:3;16405:12;16398:19;;16057:366;;;:::o;16429:419::-;16595:4;16633:2;16622:9;16618:18;16610:26;;16682:9;16676:4;16672:20;16668:1;16657:9;16653:17;16646:47;16710:131;16836:4;16710:131;:::i;:::-;16702:139;;16429:419;;;:::o;16854:228::-;16994:34;16990:1;16982:6;16978:14;16971:58;17063:11;17058:2;17050:6;17046:15;17039:36;16854:228;:::o;17088:366::-;17230:3;17251:67;17315:2;17310:3;17251:67;:::i;:::-;17244:74;;17327:93;17416:3;17327:93;:::i;:::-;17445:2;17440:3;17436:12;17429:19;;17088:366;;;:::o;17460:419::-;17626:4;17664:2;17653:9;17649:18;17641:26;;17713:9;17707:4;17703:20;17699:1;17688:9;17684:17;17677:47;17741:131;17867:4;17741:131;:::i;:::-;17733:139;;17460:419;;;:::o;17885:167::-;18025:19;18021:1;18013:6;18009:14;18002:43;17885:167;:::o;18058:366::-;18200:3;18221:67;18285:2;18280:3;18221:67;:::i;:::-;18214:74;;18297:93;18386:3;18297:93;:::i;:::-;18415:2;18410:3;18406:12;18399:19;;18058:366;;;:::o;18430:419::-;18596:4;18634:2;18623:9;18619:18;18611:26;;18683:9;18677:4;18673:20;18669:1;18658:9;18654:17;18647:47;18711:131;18837:4;18711:131;:::i;:::-;18703:139;;18430:419;;;:::o;18855:225::-;18995:34;18991:1;18983:6;18979:14;18972:58;19064:8;19059:2;19051:6;19047:15;19040:33;18855:225;:::o;19086:366::-;19228:3;19249:67;19313:2;19308:3;19249:67;:::i;:::-;19242:74;;19325:93;19414:3;19325:93;:::i;:::-;19443:2;19438:3;19434:12;19427:19;;19086:366;;;:::o;19458:419::-;19624:4;19662:2;19651:9;19647:18;19639:26;;19711:9;19705:4;19701:20;19697:1;19686:9;19682:17;19675:47;19739:131;19865:4;19739:131;:::i;:::-;19731:139;;19458:419;;;:::o;19883:181::-;20023:33;20019:1;20011:6;20007:14;20000:57;19883:181;:::o;20070:366::-;20212:3;20233:67;20297:2;20292:3;20233:67;:::i;:::-;20226:74;;20309:93;20398:3;20309:93;:::i;:::-;20427:2;20422:3;20418:12;20411:19;;20070:366;;;:::o;20442:419::-;20608:4;20646:2;20635:9;20631:18;20623:26;;20695:9;20689:4;20685:20;20681:1;20670:9;20666:17;20659:47;20723:131;20849:4;20723:131;:::i;:::-;20715:139;;20442:419;;;:::o;20867:332::-;20988:4;21026:2;21015:9;21011:18;21003:26;;21039:71;21107:1;21096:9;21092:17;21083:6;21039:71;:::i;:::-;21120:72;21188:2;21177:9;21173:18;21164:6;21120:72;:::i;:::-;20867:332;;;;;:::o;21205:161::-;21345:13;21341:1;21333:6;21329:14;21322:37;21205:161;:::o;21372:366::-;21514:3;21535:67;21599:2;21594:3;21535:67;:::i;:::-;21528:74;;21611:93;21700:3;21611:93;:::i;:::-;21729:2;21724:3;21720:12;21713:19;;21372:366;;;:::o;21744:419::-;21910:4;21948:2;21937:9;21933:18;21925:26;;21997:9;21991:4;21987:20;21983:1;21972:9;21968:17;21961:47;22025:131;22151:4;22025:131;:::i;:::-;22017:139;;21744:419;;;:::o;22169:182::-;22309:34;22305:1;22297:6;22293:14;22286:58;22169:182;:::o;22357:366::-;22499:3;22520:67;22584:2;22579:3;22520:67;:::i;:::-;22513:74;;22596:93;22685:3;22596:93;:::i;:::-;22714:2;22709:3;22705:12;22698:19;;22357:366;;;:::o;22729:419::-;22895:4;22933:2;22922:9;22918:18;22910:26;;22982:9;22976:4;22972:20;22968:1;22957:9;22953:17;22946:47;23010:131;23136:4;23010:131;:::i;:::-;23002:139;;22729:419;;;:::o;23154:164::-;23294:16;23290:1;23282:6;23278:14;23271:40;23154:164;:::o;23324:366::-;23466:3;23487:67;23551:2;23546:3;23487:67;:::i;:::-;23480:74;;23563:93;23652:3;23563:93;:::i;:::-;23681:2;23676:3;23672:12;23665:19;;23324:366;;;:::o;23696:419::-;23862:4;23900:2;23889:9;23885:18;23877:26;;23949:9;23943:4;23939:20;23935:1;23924:9;23920:17;23913:47;23977:131;24103:4;23977:131;:::i;:::-;23969:139;;23696:419;;;:::o;24121:442::-;24270:4;24308:2;24297:9;24293:18;24285:26;;24321:71;24389:1;24378:9;24374:17;24365:6;24321:71;:::i;:::-;24402:72;24470:2;24459:9;24455:18;24446:6;24402:72;:::i;:::-;24484;24552:2;24541:9;24537:18;24528:6;24484:72;:::i;:::-;24121:442;;;;;;:::o;24569:116::-;24639:21;24654:5;24639:21;:::i;:::-;24632:5;24629:32;24619:60;;24675:1;24672;24665:12;24619:60;24569:116;:::o;24691:137::-;24745:5;24776:6;24770:13;24761:22;;24792:30;24816:5;24792:30;:::i;:::-;24691:137;;;;:::o;24834:345::-;24901:6;24950:2;24938:9;24929:7;24925:23;24921:32;24918:119;;;24956:79;;:::i;:::-;24918:119;25076:1;25101:61;25154:7;25145:6;25134:9;25130:22;25101:61;:::i;:::-;25091:71;;25047:125;24834:345;;;;:::o;25185:229::-;25325:34;25321:1;25313:6;25309:14;25302:58;25394:12;25389:2;25381:6;25377:15;25370:37;25185:229;:::o;25420:366::-;25562:3;25583:67;25647:2;25642:3;25583:67;:::i;:::-;25576:74;;25659:93;25748:3;25659:93;:::i;:::-;25777:2;25772:3;25768:12;25761:19;;25420:366;;;:::o;25792:419::-;25958:4;25996:2;25985:9;25981:18;25973:26;;26045:9;26039:4;26035:20;26031:1;26020:9;26016:17;26009:47;26073:131;26199:4;26073:131;:::i;:::-;26065:139;;25792:419;;;:::o;26217:225::-;26357:34;26353:1;26345:6;26341:14;26334:58;26426:8;26421:2;26413:6;26409:15;26402:33;26217:225;:::o;26448:366::-;26590:3;26611:67;26675:2;26670:3;26611:67;:::i;:::-;26604:74;;26687:93;26776:3;26687:93;:::i;:::-;26805:2;26800:3;26796:12;26789:19;;26448:366;;;:::o;26820:419::-;26986:4;27024:2;27013:9;27009:18;27001:26;;27073:9;27067:4;27063:20;27059:1;27048:9;27044:17;27037:47;27101:131;27227:4;27101:131;:::i;:::-;27093:139;;26820:419;;;:::o;27245:98::-;27296:6;27330:5;27324:12;27314:22;;27245:98;;;:::o;27349:307::-;27417:1;27427:113;27441:6;27438:1;27435:13;27427:113;;;27526:1;27521:3;27517:11;27511:18;27507:1;27502:3;27498:11;27491:39;27463:2;27460:1;27456:10;27451:15;;27427:113;;;27558:6;27555:1;27552:13;27549:101;;;27638:1;27629:6;27624:3;27620:16;27613:27;27549:101;27398:258;27349:307;;;:::o;27662:373::-;27766:3;27794:38;27826:5;27794:38;:::i;:::-;27848:88;27929:6;27924:3;27848:88;:::i;:::-;27841:95;;27945:52;27990:6;27985:3;27978:4;27971:5;27967:16;27945:52;:::i;:::-;28022:6;28017:3;28013:16;28006:23;;27770:265;27662:373;;;;:::o;28041:271::-;28171:3;28193:93;28282:3;28273:6;28193:93;:::i;:::-;28186:100;;28303:3;28296:10;;28041:271;;;;:::o;28318:179::-;28458:31;28454:1;28446:6;28442:14;28435:55;28318:179;:::o;28503:366::-;28645:3;28666:67;28730:2;28725:3;28666:67;:::i;:::-;28659:74;;28742:93;28831:3;28742:93;:::i;:::-;28860:2;28855:3;28851:12;28844:19;;28503:366;;;:::o;28875:419::-;29041:4;29079:2;29068:9;29064:18;29056:26;;29128:9;29122:4;29118:20;29114:1;29103:9;29099:17;29092:47;29156:131;29282:4;29156:131;:::i;:::-;29148:139;;28875:419;;;:::o;29300:99::-;29352:6;29386:5;29380:12;29370:22;;29300:99;;;:::o;29405:102::-;29446:6;29497:2;29493:7;29488:2;29481:5;29477:14;29473:28;29463:38;;29405:102;;;:::o;29513:364::-;29601:3;29629:39;29662:5;29629:39;:::i;:::-;29684:71;29748:6;29743:3;29684:71;:::i;:::-;29677:78;;29764:52;29809:6;29804:3;29797:4;29790:5;29786:16;29764:52;:::i;:::-;29841:29;29863:6;29841:29;:::i;:::-;29836:3;29832:39;29825:46;;29605:272;29513:364;;;;:::o;29883:313::-;29996:4;30034:2;30023:9;30019:18;30011:26;;30083:9;30077:4;30073:20;30069:1;30058:9;30054:17;30047:47;30111:78;30184:4;30175:6;30111:78;:::i;:::-;30103:86;;29883:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3345400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addToWhitelist(address[])": "infinite",
								"burnAddress()": "infinite",
								"claim()": "infinite",
								"claim2()": "infinite",
								"commit()": "infinite",
								"commitments(address)": "2924",
								"emissionToken()": "infinite",
								"emissionTokenSaleAmount()": "infinite",
								"endTime()": "infinite",
								"ethersToRaise()": "infinite",
								"finalEmissions(address)": "2883",
								"finalTokens(address)": "2903",
								"finish()": "infinite",
								"finished()": "2565",
								"isOnWhitelist(address)": "2929",
								"maxCommit()": "infinite",
								"minCommit()": "infinite",
								"missedEmissions(address)": "2947",
								"owner()": "2611",
								"receiveTime()": "infinite",
								"refundThreshold()": "infinite",
								"removeFromWhitelist(address[])": "infinite",
								"renounceOwnership()": "30466",
								"salesToken()": "infinite",
								"simulateClaim()": "infinite",
								"simulateClaimNoUpdate()": "infinite",
								"start()": "infinite",
								"startTime()": "infinite",
								"started()": "2517",
								"tokensToSell()": "infinite",
								"totalCommitments()": "2541",
								"totalEmission()": "infinite",
								"transferOwnership(address)": "30876",
								"whitelist(address)": "2912"
							},
							"internal": {
								"_calculateEmission(uint256)": "infinite",
								"_updateEmission()": "infinite",
								"calculateEmission(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "220"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23339,
									"end": 23371,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 23358,
									"end": 23370,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 23358,
									"end": 23368,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 23358,
									"end": 23368,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23358,
									"end": 23368,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 23358,
									"end": 23370,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23358,
									"end": 23370,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23358,
									"end": 23370,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 23358,
									"end": 23370,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 23358,
									"end": 23370,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23339,
									"end": 23357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 23339,
									"end": 23357,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23339,
									"end": 23357,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 23339,
									"end": 23371,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23339,
									"end": 23371,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23339,
									"end": 23371,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 23339,
									"end": 23371,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 23339,
									"end": 23371,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20500,
									"end": 20501,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20611,
									"end": 20618,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20611,
									"end": 20633,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20611,
									"end": 20633,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20611,
									"end": 20633,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20611,
									"end": 20633,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51933,
									"end": 51948,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 51919,
									"end": 51929,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 51919,
									"end": 51948,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 51919,
									"end": 51948,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 51897,
									"end": 52009,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52053,
									"end": 52063,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 52042,
									"end": 52050,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 52042,
									"end": 52063,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 52020,
									"end": 52132,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52168,
									"end": 52169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52151,
									"end": 52165,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 52151,
									"end": 52169,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 52143,
									"end": 52214,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52264,
									"end": 52280,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 52247,
									"end": 52261,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 52247,
									"end": 52280,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 52225,
									"end": 52363,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52395,
									"end": 52396,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52382,
									"end": 52392,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 52382,
									"end": 52396,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 52374,
									"end": 52444,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52491,
									"end": 52501,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 52477,
									"end": 52487,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 52477,
									"end": 52501,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 52477,
									"end": 52501,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 52455,
									"end": 52596,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52629,
									"end": 52671,
									"name": "PUSH",
									"source": 0,
									"value": "41D962ED9A2AF1B68844EF588E182A628A5FA6F3"
								},
								{
									"begin": 52609,
									"end": 52672,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 52609,
									"end": 52672,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 52609,
									"end": 52672,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 52609,
									"end": 52672,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52609,
									"end": 52672,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 52609,
									"end": 52672,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 52609,
									"end": 52672,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52609,
									"end": 52672,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52609,
									"end": 52672,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52609,
									"end": 52672,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52698,
									"end": 52711,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 52683,
									"end": 52711,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 52683,
									"end": 52711,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52683,
									"end": 52711,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52683,
									"end": 52711,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52683,
									"end": 52711,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52683,
									"end": 52711,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52738,
									"end": 52752,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 52722,
									"end": 52752,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 52722,
									"end": 52752,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52722,
									"end": 52752,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52722,
									"end": 52752,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52722,
									"end": 52752,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52722,
									"end": 52752,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52781,
									"end": 52797,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 52763,
									"end": 52797,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 52763,
									"end": 52797,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52763,
									"end": 52797,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52763,
									"end": 52797,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52763,
									"end": 52797,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52763,
									"end": 52797,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52820,
									"end": 52830,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 52808,
									"end": 52830,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 52808,
									"end": 52830,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52808,
									"end": 52830,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52808,
									"end": 52830,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52808,
									"end": 52830,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52808,
									"end": 52830,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52851,
									"end": 52859,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 52841,
									"end": 52859,
									"name": "PUSH",
									"source": 0,
									"value": "160"
								},
								{
									"begin": 52841,
									"end": 52859,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52841,
									"end": 52859,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52841,
									"end": 52859,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52841,
									"end": 52859,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52841,
									"end": 52859,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52884,
									"end": 52896,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 52870,
									"end": 52896,
									"name": "PUSH",
									"source": 0,
									"value": "180"
								},
								{
									"begin": 52870,
									"end": 52896,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52870,
									"end": 52896,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52870,
									"end": 52896,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52870,
									"end": 52896,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52870,
									"end": 52896,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52919,
									"end": 52929,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 52907,
									"end": 52929,
									"name": "PUSH",
									"source": 0,
									"value": "1E0"
								},
								{
									"begin": 52907,
									"end": 52929,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52907,
									"end": 52929,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52907,
									"end": 52929,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52907,
									"end": 52929,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52907,
									"end": 52929,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52952,
									"end": 52962,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 52940,
									"end": 52962,
									"name": "PUSH",
									"source": 0,
									"value": "200"
								},
								{
									"begin": 52940,
									"end": 52962,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52940,
									"end": 52962,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52940,
									"end": 52962,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52940,
									"end": 52962,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52940,
									"end": 52962,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52996,
									"end": 53038,
									"name": "PUSH",
									"source": 0,
									"value": "E9F04E418F93AE73387576E9AB0F8FDB7C88545D"
								},
								{
									"begin": 52973,
									"end": 53039,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 52973,
									"end": 53039,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 52973,
									"end": 53039,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 52973,
									"end": 53039,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52973,
									"end": 53039,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 52973,
									"end": 53039,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 52973,
									"end": 53039,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52973,
									"end": 53039,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52973,
									"end": 53039,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52973,
									"end": 53039,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 53066,
									"end": 53080,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 53050,
									"end": 53080,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 53050,
									"end": 53080,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53050,
									"end": 53080,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53050,
									"end": 53080,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 53050,
									"end": 53080,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 53050,
									"end": 53080,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 53105,
									"end": 53117,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53091,
									"end": 53117,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 53091,
									"end": 53117,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 53091,
									"end": 53117,
									"name": "PUSH",
									"source": 0,
									"value": "1A0"
								},
								{
									"begin": 53091,
									"end": 53117,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53091,
									"end": 53117,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 53091,
									"end": 53117,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 53091,
									"end": 53117,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53091,
									"end": 53117,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 53091,
									"end": 53117,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 53091,
									"end": 53117,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 53154,
									"end": 53178,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 53128,
									"end": 53178,
									"name": "PUSH",
									"source": 0,
									"value": "1C0"
								},
								{
									"begin": 53128,
									"end": 53178,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53128,
									"end": 53178,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53128,
									"end": 53178,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 53128,
									"end": 53178,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 53128,
									"end": 53178,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51515,
									"end": 53186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22257,
									"end": 22355,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 22257,
									"end": 22355,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22310,
									"end": 22317,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22337,
									"end": 22347,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 22330,
									"end": 22347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22330,
									"end": 22347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22257,
									"end": 22355,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22257,
									"end": 22355,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 24885,
									"end": 25076,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 24885,
									"end": 25076,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24959,
									"end": 24975,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24978,
									"end": 24984,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 24984,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24978,
									"end": 24984,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 24984,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 24984,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 24984,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24978,
									"end": 24984,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 24984,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 24984,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 24978,
									"end": 24984,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24978,
									"end": 24984,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24959,
									"end": 24984,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24959,
									"end": 24984,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25004,
									"end": 25012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24995,
									"end": 25001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24995,
									"end": 25012,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25059,
									"end": 25067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25028,
									"end": 25068,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25028,
									"end": 25068,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25049,
									"end": 25057,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25028,
									"end": 25068,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25028,
									"end": 25068,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25028,
									"end": 25068,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 25028,
									"end": 25068,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25028,
									"end": 25068,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25028,
									"end": 25068,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25028,
									"end": 25068,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25028,
									"end": 25068,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25028,
									"end": 25068,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25028,
									"end": 25068,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25028,
									"end": 25068,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25028,
									"end": 25068,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 24948,
									"end": 25076,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24885,
									"end": 25076,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24885,
									"end": 25076,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1365,
									"end": 1371,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1373,
									"end": 1379,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1387,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1389,
									"end": 1395,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1403,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1405,
									"end": 1411,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1419,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1421,
									"end": 1427,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1435,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1437,
									"end": 1443,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1445,
									"end": 1452,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1495,
									"end": 1498,
									"name": "PUSH",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 1483,
									"end": 1492,
									"name": "DUP13",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1481,
									"name": "DUP15",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1493,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1466,
									"end": 1499,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1463,
									"end": 1583,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1463,
									"end": 1583,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 1463,
									"end": 1583,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1502,
									"end": 1581,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1502,
									"end": 1581,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1502,
									"end": 1581,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1502,
									"end": 1581,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1502,
									"end": 1581,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1463,
									"end": 1583,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 1463,
									"end": 1583,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1622,
									"end": 1623,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1647,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1703,
									"end": 1710,
									"name": "DUP15",
									"source": 1
								},
								{
									"begin": 1694,
									"end": 1700,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP16",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1701,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1647,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1647,
									"end": 1711,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1647,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1647,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1711,
									"name": "SWAP12",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1721,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1760,
									"end": 1762,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1786,
									"end": 1850,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1842,
									"end": 1849,
									"name": "DUP15",
									"source": 1
								},
								{
									"begin": 1833,
									"end": 1839,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1822,
									"end": 1831,
									"name": "DUP16",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1840,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1786,
									"end": 1850,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1786,
									"end": 1850,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1786,
									"end": 1850,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1786,
									"end": 1850,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 1850,
									"name": "SWAP11",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 1850,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1731,
									"end": 1860,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1899,
									"end": 1901,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1925,
									"end": 1989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1981,
									"end": 1988,
									"name": "DUP15",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1978,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1961,
									"end": 1970,
									"name": "DUP16",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 1979,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1925,
									"end": 1989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1925,
									"end": 1989,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1925,
									"end": 1989,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1925,
									"end": 1989,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1915,
									"end": 1989,
									"name": "SWAP10",
									"source": 1
								},
								{
									"begin": 1915,
									"end": 1989,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2038,
									"end": 2040,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2064,
									"end": 2128,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2120,
									"end": 2127,
									"name": "DUP15",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2109,
									"name": "DUP16",
									"source": 1
								},
								{
									"begin": 2096,
									"end": 2118,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2064,
									"end": 2128,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2064,
									"end": 2128,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2064,
									"end": 2128,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2064,
									"end": 2128,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2128,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2128,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2138,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2177,
									"end": 2180,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2204,
									"end": 2268,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 2260,
									"end": 2267,
									"name": "DUP15",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2257,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2240,
									"end": 2249,
									"name": "DUP16",
									"source": 1
								},
								{
									"begin": 2236,
									"end": 2258,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2204,
									"end": 2268,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2204,
									"end": 2268,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2204,
									"end": 2268,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 2204,
									"end": 2268,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2194,
									"end": 2268,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": 2194,
									"end": 2268,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2278,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2317,
									"end": 2320,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 2344,
									"end": 2408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 2400,
									"end": 2407,
									"name": "DUP15",
									"source": 1
								},
								{
									"begin": 2391,
									"end": 2397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2380,
									"end": 2389,
									"name": "DUP16",
									"source": 1
								},
								{
									"begin": 2376,
									"end": 2398,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2344,
									"end": 2408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2344,
									"end": 2408,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2344,
									"end": 2408,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 2344,
									"end": 2408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2408,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2408,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2288,
									"end": 2418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2457,
									"end": 2460,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 2484,
									"end": 2548,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 2540,
									"end": 2547,
									"name": "DUP15",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2529,
									"name": "DUP16",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2538,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2484,
									"end": 2548,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2484,
									"end": 2548,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2484,
									"end": 2548,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 2484,
									"end": 2548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2474,
									"end": 2548,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2474,
									"end": 2548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2428,
									"end": 2558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2597,
									"end": 2600,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2624,
									"end": 2688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2680,
									"end": 2687,
									"name": "DUP15",
									"source": 1
								},
								{
									"begin": 2671,
									"end": 2677,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2660,
									"end": 2669,
									"name": "DUP16",
									"source": 1
								},
								{
									"begin": 2656,
									"end": 2678,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2624,
									"end": 2688,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2624,
									"end": 2688,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2624,
									"end": 2688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2614,
									"end": 2688,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2614,
									"end": 2688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2568,
									"end": 2698,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2737,
									"end": 2740,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2764,
									"end": 2828,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 2820,
									"end": 2827,
									"name": "DUP15",
									"source": 1
								},
								{
									"begin": 2811,
									"end": 2817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2800,
									"end": 2809,
									"name": "DUP16",
									"source": 1
								},
								{
									"begin": 2796,
									"end": 2818,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2764,
									"end": 2828,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2764,
									"end": 2828,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2764,
									"end": 2828,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 2764,
									"end": 2828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2754,
									"end": 2828,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2754,
									"end": 2828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2708,
									"end": 2838,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2877,
									"end": 2880,
									"name": "PUSH",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 2904,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2960,
									"end": 2967,
									"name": "DUP15",
									"source": 1
								},
								{
									"begin": 2951,
									"end": 2957,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2940,
									"end": 2949,
									"name": "DUP16",
									"source": 1
								},
								{
									"begin": 2936,
									"end": 2958,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2904,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2904,
									"end": 2968,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2904,
									"end": 2968,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2904,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2894,
									"end": 2968,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2894,
									"end": 2968,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2848,
									"end": 2978,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3020,
									"name": "PUSH",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 3045,
									"end": 3109,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 3101,
									"end": 3108,
									"name": "DUP15",
									"source": 1
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3081,
									"end": 3090,
									"name": "DUP16",
									"source": 1
								},
								{
									"begin": 3077,
									"end": 3099,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3045,
									"end": 3109,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3045,
									"end": 3109,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3045,
									"end": 3109,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 3045,
									"end": 3109,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3034,
									"end": 3109,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3034,
									"end": 3109,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2988,
									"end": 3119,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "SWAP12",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "SWAP12",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "SWAP10",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 3126,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 3132,
									"end": 3301,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 3132,
									"end": 3301,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3216,
									"end": 3227,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3250,
									"end": 3256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3245,
									"end": 3248,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3238,
									"end": 3257,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3294,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3285,
									"end": 3288,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3281,
									"end": 3295,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3266,
									"end": 3295,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3266,
									"end": 3295,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3132,
									"end": 3301,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3132,
									"end": 3301,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3132,
									"end": 3301,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3132,
									"end": 3301,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3132,
									"end": 3301,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 3307,
									"end": 3527,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 3307,
									"end": 3527,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3447,
									"end": 3481,
									"name": "PUSH",
									"source": 1,
									"value": "53746172742074696D65206D75737420626520696E2074686520667574757265"
								},
								{
									"begin": 3443,
									"end": 3444,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3435,
									"end": 3441,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3431,
									"end": 3445,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3424,
									"end": 3482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3519,
									"name": "PUSH",
									"source": 1,
									"value": "2E00000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3511,
									"end": 3513,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3503,
									"end": 3509,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3499,
									"end": 3514,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3492,
									"end": 3520,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3307,
									"end": 3527,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3307,
									"end": 3527,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 3533,
									"end": 3899,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 3533,
									"end": 3899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3675,
									"end": 3678,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3696,
									"end": 3763,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3760,
									"end": 3762,
									"name": "PUSH",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 3755,
									"end": 3758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3696,
									"end": 3763,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 3696,
									"end": 3763,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3696,
									"end": 3763,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3696,
									"end": 3763,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3689,
									"end": 3763,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3689,
									"end": 3763,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3772,
									"end": 3865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 3861,
									"end": 3864,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3772,
									"end": 3865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 3772,
									"end": 3865,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3772,
									"end": 3865,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 3772,
									"end": 3865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3890,
									"end": 3892,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3885,
									"end": 3888,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3881,
									"end": 3893,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3874,
									"end": 3893,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3874,
									"end": 3893,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3899,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3899,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3899,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3899,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 3905,
									"end": 4324,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 3905,
									"end": 4324,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4071,
									"end": 4075,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4109,
									"end": 4111,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4098,
									"end": 4107,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4094,
									"end": 4112,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4086,
									"end": 4112,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4086,
									"end": 4112,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4158,
									"end": 4167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4152,
									"end": 4156,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4148,
									"end": 4168,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4145,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4133,
									"end": 4142,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4129,
									"end": 4146,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4122,
									"end": 4169,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4186,
									"end": 4317,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 4312,
									"end": 4316,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4186,
									"end": 4317,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 4186,
									"end": 4317,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 4186,
									"end": 4317,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 4186,
									"end": 4317,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4178,
									"end": 4317,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4178,
									"end": 4317,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3905,
									"end": 4324,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3905,
									"end": 4324,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3905,
									"end": 4324,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3905,
									"end": 4324,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 4330,
									"end": 4558,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 4330,
									"end": 4558,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4470,
									"end": 4504,
									"name": "PUSH",
									"source": 1,
									"value": "456E642074696D65206D7573742062652067726561746572207468616E207374"
								},
								{
									"begin": 4466,
									"end": 4467,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4458,
									"end": 4464,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4454,
									"end": 4468,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4447,
									"end": 4505,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4539,
									"end": 4550,
									"name": "PUSH",
									"source": 1,
									"value": "6172742074696D652E0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4534,
									"end": 4536,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4526,
									"end": 4532,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4522,
									"end": 4537,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4515,
									"end": 4551,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4330,
									"end": 4558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4330,
									"end": 4558,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 4564,
									"end": 4930,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 4564,
									"end": 4930,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4706,
									"end": 4709,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4727,
									"end": 4794,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4791,
									"end": 4793,
									"name": "PUSH",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 4786,
									"end": 4789,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4727,
									"end": 4794,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 4727,
									"end": 4794,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 4727,
									"end": 4794,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4727,
									"end": 4794,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4720,
									"end": 4794,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4720,
									"end": 4794,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4892,
									"end": 4895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 4803,
									"end": 4896,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 4803,
									"end": 4896,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4803,
									"end": 4896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4921,
									"end": 4923,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4916,
									"end": 4919,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4912,
									"end": 4924,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4905,
									"end": 4924,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4905,
									"end": 4924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4564,
									"end": 4930,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4564,
									"end": 4930,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4564,
									"end": 4930,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4564,
									"end": 4930,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 4936,
									"end": 5355,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 4936,
									"end": 5355,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5102,
									"end": 5106,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5140,
									"end": 5142,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5129,
									"end": 5138,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5125,
									"end": 5143,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5117,
									"end": 5143,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5117,
									"end": 5143,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5189,
									"end": 5198,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5183,
									"end": 5187,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5179,
									"end": 5199,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 5175,
									"end": 5176,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5164,
									"end": 5173,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5160,
									"end": 5177,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5153,
									"end": 5200,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5217,
									"end": 5348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 5343,
									"end": 5347,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5217,
									"end": 5348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 5217,
									"end": 5348,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 5217,
									"end": 5348,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 5217,
									"end": 5348,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5209,
									"end": 5348,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5209,
									"end": 5348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4936,
									"end": 5355,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4936,
									"end": 5355,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4936,
									"end": 5355,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4936,
									"end": 5355,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 5361,
									"end": 5588,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 5361,
									"end": 5588,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5501,
									"end": 5535,
									"name": "PUSH",
									"source": 1,
									"value": "45746865727320746F2072616973652073686F756C6420626520677265617465"
								},
								{
									"begin": 5497,
									"end": 5498,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5489,
									"end": 5495,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5499,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5478,
									"end": 5536,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5570,
									"end": 5580,
									"name": "PUSH",
									"source": 1,
									"value": "72207468616E2030000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5565,
									"end": 5567,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5557,
									"end": 5563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5568,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5546,
									"end": 5581,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5361,
									"end": 5588,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5361,
									"end": 5588,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 5594,
									"end": 5960,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 5594,
									"end": 5960,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5739,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5757,
									"end": 5824,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 5821,
									"end": 5823,
									"name": "PUSH",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 5816,
									"end": 5819,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5757,
									"end": 5824,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 5757,
									"end": 5824,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 5757,
									"end": 5824,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 5757,
									"end": 5824,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5750,
									"end": 5824,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5750,
									"end": 5824,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5833,
									"end": 5926,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 5922,
									"end": 5925,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5833,
									"end": 5926,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 5833,
									"end": 5926,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 5833,
									"end": 5926,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 5833,
									"end": 5926,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5951,
									"end": 5953,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5946,
									"end": 5949,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5954,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5935,
									"end": 5954,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5935,
									"end": 5954,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5594,
									"end": 5960,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5594,
									"end": 5960,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5594,
									"end": 5960,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5594,
									"end": 5960,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 5966,
									"end": 6385,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 5966,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6132,
									"end": 6136,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6170,
									"end": 6172,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6159,
									"end": 6168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6173,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6147,
									"end": 6173,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6147,
									"end": 6173,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6219,
									"end": 6228,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6213,
									"end": 6217,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6209,
									"end": 6229,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6205,
									"end": 6206,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6194,
									"end": 6203,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6190,
									"end": 6207,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6183,
									"end": 6230,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6247,
									"end": 6378,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 6373,
									"end": 6377,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6247,
									"end": 6378,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 6247,
									"end": 6378,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 6247,
									"end": 6378,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 6247,
									"end": 6378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6239,
									"end": 6378,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6239,
									"end": 6378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5966,
									"end": 6385,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5966,
									"end": 6385,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5966,
									"end": 6385,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5966,
									"end": 6385,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 6391,
									"end": 6633,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 6391,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6531,
									"end": 6565,
									"name": "PUSH",
									"source": 1,
									"value": "45746865727320746F2072616973652073686F756C6420626520677265617465"
								},
								{
									"begin": 6527,
									"end": 6528,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6519,
									"end": 6525,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6515,
									"end": 6529,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6508,
									"end": 6566,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6600,
									"end": 6625,
									"name": "PUSH",
									"source": 1,
									"value": "72207468616E20726566756E64207468726573686F6C64000000000000000000"
								},
								{
									"begin": 6595,
									"end": 6597,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6587,
									"end": 6593,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6583,
									"end": 6598,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6576,
									"end": 6626,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6391,
									"end": 6633,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6391,
									"end": 6633,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 6639,
									"end": 7005,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 6639,
									"end": 7005,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6781,
									"end": 6784,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6802,
									"end": 6869,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 6866,
									"end": 6868,
									"name": "PUSH",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6861,
									"end": 6864,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6802,
									"end": 6869,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 6802,
									"end": 6869,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 6802,
									"end": 6869,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 6802,
									"end": 6869,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6795,
									"end": 6869,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6795,
									"end": 6869,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6878,
									"end": 6971,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 6967,
									"end": 6970,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6878,
									"end": 6971,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 6878,
									"end": 6971,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 6878,
									"end": 6971,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 6878,
									"end": 6971,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6996,
									"end": 6998,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6991,
									"end": 6994,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 6999,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6980,
									"end": 6999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6980,
									"end": 6999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6639,
									"end": 7005,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6639,
									"end": 7005,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6639,
									"end": 7005,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6639,
									"end": 7005,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7011,
									"end": 7430,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7011,
									"end": 7430,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7177,
									"end": 7181,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7215,
									"end": 7217,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7204,
									"end": 7213,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7200,
									"end": 7218,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7192,
									"end": 7218,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7192,
									"end": 7218,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7264,
									"end": 7273,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7258,
									"end": 7262,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7254,
									"end": 7274,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7250,
									"end": 7251,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7239,
									"end": 7248,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7235,
									"end": 7252,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7228,
									"end": 7275,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7292,
									"end": 7423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 7418,
									"end": 7422,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7292,
									"end": 7423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 7292,
									"end": 7423,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 7292,
									"end": 7423,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 7292,
									"end": 7423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7423,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7011,
									"end": 7430,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7011,
									"end": 7430,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7011,
									"end": 7430,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7011,
									"end": 7430,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7436,
									"end": 7666,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 7436,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7576,
									"end": 7610,
									"name": "PUSH",
									"source": 1,
									"value": "4D696E696D756D20636F6D6D69746D656E742073686F756C6420626520677265"
								},
								{
									"begin": 7572,
									"end": 7573,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7564,
									"end": 7570,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7560,
									"end": 7574,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7645,
									"end": 7658,
									"name": "PUSH",
									"source": 1,
									"value": "61746572207468616E2030000000000000000000000000000000000000000000"
								},
								{
									"begin": 7640,
									"end": 7642,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7632,
									"end": 7638,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7628,
									"end": 7643,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7621,
									"end": 7659,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7436,
									"end": 7666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7436,
									"end": 7666,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7672,
									"end": 8038,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 7672,
									"end": 8038,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7814,
									"end": 7817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7902,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 7899,
									"end": 7901,
									"name": "PUSH",
									"source": 1,
									"value": "2B"
								},
								{
									"begin": 7894,
									"end": 7897,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7902,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 7835,
									"end": 7902,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 7835,
									"end": 7902,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 7835,
									"end": 7902,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7828,
									"end": 7902,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7828,
									"end": 7902,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7911,
									"end": 8004,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 8000,
									"end": 8003,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7911,
									"end": 8004,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 7911,
									"end": 8004,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 7911,
									"end": 8004,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 7911,
									"end": 8004,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8029,
									"end": 8031,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8024,
									"end": 8027,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8020,
									"end": 8032,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8013,
									"end": 8032,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8013,
									"end": 8032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7672,
									"end": 8038,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7672,
									"end": 8038,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7672,
									"end": 8038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7672,
									"end": 8038,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 8044,
									"end": 8463,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 8044,
									"end": 8463,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8210,
									"end": 8214,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8248,
									"end": 8250,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8237,
									"end": 8246,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8233,
									"end": 8251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8225,
									"end": 8251,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8225,
									"end": 8251,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8297,
									"end": 8306,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8291,
									"end": 8295,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8287,
									"end": 8307,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8283,
									"end": 8284,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8272,
									"end": 8281,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8268,
									"end": 8285,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8261,
									"end": 8308,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8325,
									"end": 8456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 8451,
									"end": 8455,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8325,
									"end": 8456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 8325,
									"end": 8456,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8325,
									"end": 8456,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 8325,
									"end": 8456,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8317,
									"end": 8456,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8317,
									"end": 8456,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8044,
									"end": 8463,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8044,
									"end": 8463,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8044,
									"end": 8463,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8044,
									"end": 8463,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 8469,
									"end": 8760,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 8469,
									"end": 8760,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8609,
									"end": 8643,
									"name": "PUSH",
									"source": 1,
									"value": "4D6178696D756D20636F6D6D69746D656E742073686F756C6420626520677265"
								},
								{
									"begin": 8605,
									"end": 8606,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8597,
									"end": 8603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8593,
									"end": 8607,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8586,
									"end": 8644,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8678,
									"end": 8712,
									"name": "PUSH",
									"source": 1,
									"value": "61746572206F7220657175616C20746F206D696E696D756D20636F6D6D69746D"
								},
								{
									"begin": 8673,
									"end": 8675,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8665,
									"end": 8671,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8661,
									"end": 8676,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8654,
									"end": 8713,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8747,
									"end": 8752,
									"name": "PUSH",
									"source": 1,
									"value": "656E740000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8742,
									"end": 8744,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8734,
									"end": 8740,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8730,
									"end": 8745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8723,
									"end": 8753,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8469,
									"end": 8760,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8469,
									"end": 8760,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 8766,
									"end": 9132,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 8766,
									"end": 9132,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8908,
									"end": 8911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8929,
									"end": 8996,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 8993,
									"end": 8995,
									"name": "PUSH",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 8988,
									"end": 8991,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8929,
									"end": 8996,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 8929,
									"end": 8996,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8929,
									"end": 8996,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 8929,
									"end": 8996,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8922,
									"end": 8996,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8922,
									"end": 8996,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9005,
									"end": 9098,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 9094,
									"end": 9097,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9005,
									"end": 9098,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 9005,
									"end": 9098,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 9005,
									"end": 9098,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 9005,
									"end": 9098,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9123,
									"end": 9125,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 9118,
									"end": 9121,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9114,
									"end": 9126,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9107,
									"end": 9126,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9107,
									"end": 9126,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 9132,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 9132,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 9132,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 9132,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 9138,
									"end": 9557,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 9138,
									"end": 9557,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9304,
									"end": 9308,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9342,
									"end": 9344,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9331,
									"end": 9340,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9327,
									"end": 9345,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9319,
									"end": 9345,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9319,
									"end": 9345,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9391,
									"end": 9400,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9385,
									"end": 9389,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9381,
									"end": 9401,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 9377,
									"end": 9378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9366,
									"end": 9375,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9362,
									"end": 9379,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9355,
									"end": 9402,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9419,
									"end": 9550,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 9545,
									"end": 9549,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9419,
									"end": 9550,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 9419,
									"end": 9550,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 9419,
									"end": 9550,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 9419,
									"end": 9550,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9411,
									"end": 9550,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9411,
									"end": 9550,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9138,
									"end": 9557,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9138,
									"end": 9557,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9138,
									"end": 9557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9138,
									"end": 9557,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "160"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "180"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "1A0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "1C0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "1E0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "200"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2329"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2327"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2325"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2323"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2321"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2319"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2317"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2315"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2313"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2311"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2309"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2307"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2304"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48771,
									"end": 60797,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122028ba7bc4e5d385f317a39de86fc00cd208b5ef212d3b8c0fca43bc80b75c91f664736f6c634300080d0033",
									".code": [
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "70D5AE05"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "94EF7E62"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "BEF4876B"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "BEF4876B"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "D56B2889"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "E2099438"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "E8FCF723"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "94EF7E62"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "9B19251A"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "A8EA6F4C"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "BE9A6555"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "78E97925"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "78E97925"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "7F649783"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "8E05FB74"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "70D5AE05"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "72DA776E"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "78BB86D3"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "3A3AB672"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "4D412357"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "4D412357"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "4E71D92D"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "4EC01774"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "548DB174"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "599E10CE"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "3A3AB672"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "3C7A3AFF"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "3D956691"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "483383C8"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "1F2698AB"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "1F2698AB"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "2BCBF7CD"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "3197CBB6"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "32ACD355"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "1EAAEC4"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "1048AB28"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "12ADECDA"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "16FC4869"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48771,
											"end": 60797,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 53557,
											"end": 54277,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 53557,
											"end": 54277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53557,
											"end": 54277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 53557,
											"end": 54277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 53557,
											"end": 54277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53557,
											"end": 54277,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 53557,
											"end": 54277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53557,
											"end": 54277,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 21062,
											"end": 21083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21062,
											"end": 21083,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 21062,
											"end": 21083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58370,
											"end": 58381,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2321"
										},
										{
											"begin": 58351,
											"end": 58366,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 58351,
											"end": 58381,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58351,
											"end": 58381,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 58343,
											"end": 58403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58414,
											"end": 58424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58427,
											"end": 58438,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58439,
											"end": 58449,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58427,
											"end": 58450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58414,
											"end": 58450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58414,
											"end": 58450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58474,
											"end": 58488,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58489,
											"end": 58499,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58474,
											"end": 58500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58511,
											"end": 58521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58550,
											"end": 58551,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58524,
											"end": 58535,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58536,
											"end": 58546,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 58524,
											"end": 58551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 58524,
											"end": 58551,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58524,
											"end": 58551,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 58524,
											"end": 58551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58511,
											"end": 58551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58511,
											"end": 58551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58590,
											"end": 58591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58564,
											"end": 58575,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58576,
											"end": 58586,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58564,
											"end": 58587,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58564,
											"end": 58591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58564,
											"end": 58591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58564,
											"end": 58591,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 58564,
											"end": 58591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58631,
											"end": 58632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58602,
											"end": 58616,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58617,
											"end": 58627,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58602,
											"end": 58628,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58632,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58645,
											"end": 58684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 58669,
											"end": 58679,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58681,
											"end": 58683,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58645,
											"end": 58655,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2304"
										},
										{
											"begin": 58645,
											"end": 58668,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58645,
											"end": 58668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58645,
											"end": 58668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 58645,
											"end": 58668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58645,
											"end": 58684,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58645,
											"end": 58684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58645,
											"end": 58684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58645,
											"end": 58684,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 58645,
											"end": 58684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58645,
											"end": 58684,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58645,
											"end": 58684,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 58645,
											"end": 58684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58695,
											"end": 58742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 58722,
											"end": 58732,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58741,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58734,
											"end": 58736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58734,
											"end": 58741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 58734,
											"end": 58741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58734,
											"end": 58741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58734,
											"end": 58741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 58734,
											"end": 58741,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58734,
											"end": 58741,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 58734,
											"end": 58741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58695,
											"end": 58708,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2307"
										},
										{
											"begin": 58695,
											"end": 58721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58695,
											"end": 58721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58695,
											"end": 58721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 58695,
											"end": 58721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58695,
											"end": 58742,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58695,
											"end": 58742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58695,
											"end": 58742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58695,
											"end": 58742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 58695,
											"end": 58742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58695,
											"end": 58742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58695,
											"end": 58742,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 58695,
											"end": 58742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58765,
											"end": 58775,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "PUSH",
											"source": 0,
											"value": "98658F77A1C9013BC3A00213385D7B07DE0435B7B3B3023A43C66B91E05566C2"
										},
										{
											"begin": 58777,
											"end": 58779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58781,
											"end": 58783,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58787,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58758,
											"end": 58788,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 58332,
											"end": 58796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58332,
											"end": 58796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58332,
											"end": 58796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21106,
											"end": 21126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 21106,
											"end": 21124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 21106,
											"end": 21126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21106,
											"end": 21126,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 21106,
											"end": 21126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58292,
											"end": 58796,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49771,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54328,
											"end": 54335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54337,
											"end": 54344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54346,
											"end": 54353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54366,
											"end": 54383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 54366,
											"end": 54381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 54366,
											"end": 54383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54366,
											"end": 54383,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 54366,
											"end": 54383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54424,
											"end": 54425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54398,
											"end": 54409,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54410,
											"end": 54420,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54425,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54394,
											"end": 54503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54394,
											"end": 54503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 54394,
											"end": 54503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54448,
											"end": 54449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54451,
											"end": 54462,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54463,
											"end": 54473,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54451,
											"end": 54474,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 54490,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54491,
											"end": 54501,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 54502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54440,
											"end": 54503,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54440,
											"end": 54503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54440,
											"end": 54503,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54440,
											"end": 54503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54440,
											"end": 54503,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54440,
											"end": 54503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54440,
											"end": 54503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 54440,
											"end": 54503,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54394,
											"end": 54503,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 54394,
											"end": 54503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54547,
											"end": 54548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54520,
											"end": 54531,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54532,
											"end": 54542,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54520,
											"end": 54543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54520,
											"end": 54548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54516,
											"end": 54566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 54516,
											"end": 54566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54558,
											"end": 54559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54561,
											"end": 54562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54564,
											"end": 54565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54550,
											"end": 54566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54550,
											"end": 54566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54550,
											"end": 54566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54550,
											"end": 54566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54550,
											"end": 54566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54550,
											"end": 54566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54550,
											"end": 54566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 54550,
											"end": 54566,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54516,
											"end": 54566,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 54516,
											"end": 54566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54603,
											"end": 54618,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2313"
										},
										{
											"begin": 54583,
											"end": 54599,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54583,
											"end": 54599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54583,
											"end": 54618,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54579,
											"end": 55387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 54579,
											"end": 55387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54635,
											"end": 54656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54659,
											"end": 54803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 54686,
											"end": 54697,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54698,
											"end": 54708,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54686,
											"end": 54709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54772,
											"end": 54788,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54772,
											"end": 54788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 54768,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2311"
										},
										{
											"begin": 54729,
											"end": 54740,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54741,
											"end": 54751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54729,
											"end": 54752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54729,
											"end": 54768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 54729,
											"end": 54768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54729,
											"end": 54768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54729,
											"end": 54768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 54729,
											"end": 54768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54729,
											"end": 54768,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 54729,
											"end": 54768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 54728,
											"end": 54788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 54728,
											"end": 54788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54728,
											"end": 54788,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 54728,
											"end": 54788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54659,
											"end": 54667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 54659,
											"end": 54803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54659,
											"end": 54803,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 54659,
											"end": 54803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54635,
											"end": 54803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54635,
											"end": 54803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54869,
											"end": 54882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54854,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54855,
											"end": 54865,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54866,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 54843,
											"end": 54882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 54843,
											"end": 54882,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54843,
											"end": 54882,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 54843,
											"end": 54882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54897,
											"end": 54920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54973,
											"end": 54986,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2311"
										},
										{
											"begin": 54939,
											"end": 54952,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54924,
											"end": 54936,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2309"
										},
										{
											"begin": 54924,
											"end": 54952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 54924,
											"end": 54952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54924,
											"end": 54952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54924,
											"end": 54952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 54924,
											"end": 54952,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54924,
											"end": 54952,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 54924,
											"end": 54952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54923,
											"end": 54986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 54923,
											"end": 54986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54923,
											"end": 54986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54923,
											"end": 54986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 54923,
											"end": 54986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54923,
											"end": 54986,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 54923,
											"end": 54986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54897,
											"end": 54986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54897,
											"end": 54986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55001,
											"end": 55017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55082,
											"end": 55097,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55098,
											"end": 55108,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55109,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55020,
											"end": 55062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 55038,
											"end": 55049,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55050,
											"end": 55060,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55038,
											"end": 55061,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55020,
											"end": 55037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 55020,
											"end": 55062,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55020,
											"end": 55062,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 55020,
											"end": 55062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55020,
											"end": 55109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 55020,
											"end": 55109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55020,
											"end": 55109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55020,
											"end": 55109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 55020,
											"end": 55109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55020,
											"end": 55109,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 55020,
											"end": 55109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55001,
											"end": 55109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55001,
											"end": 55109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55126,
											"end": 55157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55178,
											"end": 55179,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55160,
											"end": 55175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 55160,
											"end": 55179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 55160,
											"end": 55179,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55160,
											"end": 55179,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 55160,
											"end": 55179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55126,
											"end": 55179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55126,
											"end": 55179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55204,
											"end": 55218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55238,
											"end": 55261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55220,
											"end": 55235,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55220,
											"end": 55261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 55220,
											"end": 55261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55220,
											"end": 55261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55220,
											"end": 55261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 55220,
											"end": 55261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55220,
											"end": 55261,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 55220,
											"end": 55261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55263,
											"end": 55271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55196,
											"end": 55272,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 55196,
											"end": 55272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55196,
											"end": 55272,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 55196,
											"end": 55272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55196,
											"end": 55272,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 55196,
											"end": 55272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55196,
											"end": 55272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55196,
											"end": 55272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55196,
											"end": 55272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55196,
											"end": 55272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55196,
											"end": 55272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55196,
											"end": 55272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 55196,
											"end": 55272,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54579,
											"end": 55387,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 54579,
											"end": 55387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55305,
											"end": 55316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55319,
											"end": 55330,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55331,
											"end": 55341,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55319,
											"end": 55342,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55305,
											"end": 55342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55305,
											"end": 55342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55365,
											"end": 55368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55373,
											"end": 55374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55357,
											"end": 55375,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55357,
											"end": 55375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55357,
											"end": 55375,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55357,
											"end": 55375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55357,
											"end": 55375,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55357,
											"end": 55375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55357,
											"end": 55375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 55394,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2313"
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49104,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49482,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2327"
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49379,
											"end": 49413,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2319"
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49229,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2311"
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49019,
											"end": 49057,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60710,
											"end": 60714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60734,
											"end": 60743,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60744,
											"end": 60748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60734,
											"end": 60749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60727,
											"end": 60749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60727,
											"end": 60749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60757,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 53557,
											"end": 54277,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 53557,
											"end": 54277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 21062,
											"end": 21083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21062,
											"end": 21083,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 21062,
											"end": 21083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53616,
											"end": 53633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 53616,
											"end": 53631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 53616,
											"end": 53633,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53616,
											"end": 53633,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 53616,
											"end": 53633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53673,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53666,
											"end": 53673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53666,
											"end": 53673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53673,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53673,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 53666,
											"end": 53673,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53673,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53673,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 53666,
											"end": 53673,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53722,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 53666,
											"end": 53722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53713,
											"end": 53722,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2317"
										},
										{
											"begin": 53694,
											"end": 53709,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 53694,
											"end": 53722,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53694,
											"end": 53722,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53722,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 53666,
											"end": 53722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53768,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 53666,
											"end": 53768,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53761,
											"end": 53768,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2319"
										},
										{
											"begin": 53743,
											"end": 53758,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 53743,
											"end": 53768,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53768,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 53666,
											"end": 53768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 53644,
											"end": 53842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53914,
											"end": 53923,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53888,
											"end": 53899,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53900,
											"end": 53910,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53888,
											"end": 53911,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53888,
											"end": 53923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 53888,
											"end": 53923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53888,
											"end": 53923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53888,
											"end": 53923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 53888,
											"end": 53923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53888,
											"end": 53923,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 53888,
											"end": 53923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53875,
											"end": 53884,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2327"
										},
										{
											"begin": 53875,
											"end": 53923,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 53875,
											"end": 53923,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53875,
											"end": 53992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53875,
											"end": 53992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53875,
											"end": 53992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 53875,
											"end": 53992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53875,
											"end": 53992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53983,
											"end": 53992,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2329"
										},
										{
											"begin": 53970,
											"end": 53979,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53955,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53956,
											"end": 53966,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 53944,
											"end": 53979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 53944,
											"end": 53979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53944,
											"end": 53979,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 53944,
											"end": 53979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53992,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 53944,
											"end": 53992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53875,
											"end": 53992,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 53875,
											"end": 53992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 53853,
											"end": 54067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54105,
											"end": 54114,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54089,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54090,
											"end": 54100,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54078,
											"end": 54114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54145,
											"end": 54154,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54125,
											"end": 54141,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54125,
											"end": 54141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54125,
											"end": 54154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54196,
											"end": 54224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 54214,
											"end": 54223,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54196,
											"end": 54213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 54196,
											"end": 54224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54196,
											"end": 54224,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 54196,
											"end": 54224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54180,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54181,
											"end": 54191,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54165,
											"end": 54224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54247,
											"end": 54257,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "PUSH",
											"source": 0,
											"value": "5E1DD8C4451717D5CA4FFBEFDADA35E22E0871220B9ED9DD03A351F0938C5ED7"
										},
										{
											"begin": 54259,
											"end": 54268,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54240,
											"end": 54269,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 21106,
											"end": 21126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 21106,
											"end": 21124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 21106,
											"end": 21126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21106,
											"end": 21126,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 21106,
											"end": 21126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53557,
											"end": 54277,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2309"
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48975,
											"end": 49012,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2329"
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49420,
											"end": 49454,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2315"
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49111,
											"end": 49149,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56606,
											"end": 56613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56615,
											"end": 56622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56624,
											"end": 56631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21062,
											"end": 21083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 21062,
											"end": 21083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21062,
											"end": 21083,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 21062,
											"end": 21083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56644,
											"end": 56661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 56644,
											"end": 56659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 56644,
											"end": 56661,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56644,
											"end": 56661,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 56644,
											"end": 56661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56712,
											"end": 56719,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2319"
										},
										{
											"begin": 56694,
											"end": 56709,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 56694,
											"end": 56719,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 56672,
											"end": 56794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56853,
											"end": 56854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56827,
											"end": 56838,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56839,
											"end": 56849,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56827,
											"end": 56850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56827,
											"end": 56854,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 56805,
											"end": 56915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56952,
											"end": 56967,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2313"
										},
										{
											"begin": 56932,
											"end": 56948,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56932,
											"end": 56948,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56932,
											"end": 56967,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56928,
											"end": 58277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 56928,
											"end": 58277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56984,
											"end": 57005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57008,
											"end": 57152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 57035,
											"end": 57046,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57047,
											"end": 57057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57035,
											"end": 57058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57121,
											"end": 57137,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57121,
											"end": 57137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57104,
											"end": 57117,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2311"
										},
										{
											"begin": 57078,
											"end": 57089,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57090,
											"end": 57100,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57101,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 57078,
											"end": 57117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 57078,
											"end": 57117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57078,
											"end": 57117,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 57078,
											"end": 57117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57077,
											"end": 57137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 57077,
											"end": 57137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57077,
											"end": 57137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57077,
											"end": 57137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 57077,
											"end": 57137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57077,
											"end": 57137,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 57077,
											"end": 57137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57008,
											"end": 57016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 57008,
											"end": 57152,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57008,
											"end": 57152,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 57008,
											"end": 57152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56984,
											"end": 57152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56984,
											"end": 57152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57167,
											"end": 57189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57218,
											"end": 57231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57192,
											"end": 57203,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57204,
											"end": 57214,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57192,
											"end": 57215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57192,
											"end": 57231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 57192,
											"end": 57231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57192,
											"end": 57231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57192,
											"end": 57231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 57192,
											"end": 57231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57192,
											"end": 57231,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 57192,
											"end": 57231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57167,
											"end": 57231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57167,
											"end": 57231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57246,
											"end": 57269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57322,
											"end": 57335,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2311"
										},
										{
											"begin": 57288,
											"end": 57301,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57273,
											"end": 57285,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2309"
										},
										{
											"begin": 57273,
											"end": 57301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 57273,
											"end": 57301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57273,
											"end": 57301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57273,
											"end": 57301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 57273,
											"end": 57301,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57273,
											"end": 57301,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 57273,
											"end": 57301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57272,
											"end": 57335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 57272,
											"end": 57335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57272,
											"end": 57335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57272,
											"end": 57335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 57272,
											"end": 57335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57272,
											"end": 57335,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 57272,
											"end": 57335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57246,
											"end": 57335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57246,
											"end": 57335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57350,
											"end": 57366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57431,
											"end": 57446,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57447,
											"end": 57457,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57431,
											"end": 57458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57369,
											"end": 57411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 57387,
											"end": 57398,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57399,
											"end": 57409,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57387,
											"end": 57410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57369,
											"end": 57386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 57369,
											"end": 57411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57369,
											"end": 57411,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 57369,
											"end": 57411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57369,
											"end": 57458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 57369,
											"end": 57458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57369,
											"end": 57458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57369,
											"end": 57458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 57369,
											"end": 57458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57369,
											"end": 57458,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 57369,
											"end": 57458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57350,
											"end": 57458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57350,
											"end": 57458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57504,
											"end": 57512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57488,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57489,
											"end": 57499,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 57473,
											"end": 57512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57555,
											"end": 57556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57529,
											"end": 57540,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57541,
											"end": 57551,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57529,
											"end": 57552,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57529,
											"end": 57556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57529,
											"end": 57556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57529,
											"end": 57556,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 57529,
											"end": 57556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57602,
											"end": 57610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57573,
											"end": 57587,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57588,
											"end": 57598,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57573,
											"end": 57599,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57573,
											"end": 57610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57573,
											"end": 57610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57573,
											"end": 57610,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 57573,
											"end": 57610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57651,
											"end": 57666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57625,
											"end": 57636,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57637,
											"end": 57647,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57625,
											"end": 57648,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57625,
											"end": 57666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57625,
											"end": 57666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57625,
											"end": 57666,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 57625,
											"end": 57666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57702,
											"end": 57712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57717,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57702,
											"end": 57717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57725,
											"end": 57739,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57683,
											"end": 57744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57683,
											"end": 57744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57683,
											"end": 57744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57767,
											"end": 57774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 57759,
											"end": 57803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57829,
											"end": 57839,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "PUSH",
											"source": 0,
											"value": "45C072AA05B9853B5A993DE7A28BC332EE01404A628CEC1A23CE0F659F842EF1"
										},
										{
											"begin": 57841,
											"end": 57855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57857,
											"end": 57872,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57874,
											"end": 57882,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57823,
											"end": 57883,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 57906,
											"end": 57920,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57922,
											"end": 57937,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57939,
											"end": 57947,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57898,
											"end": 57948,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 57898,
											"end": 57948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57898,
											"end": 57948,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 57898,
											"end": 57948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57898,
											"end": 57948,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 57898,
											"end": 57948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57898,
											"end": 57948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57898,
											"end": 57948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57898,
											"end": 57948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57898,
											"end": 57948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57898,
											"end": 57948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57898,
											"end": 57948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 57898,
											"end": 57948,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56928,
											"end": 58277,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 56928,
											"end": 58277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57981,
											"end": 57992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57995,
											"end": 58006,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58007,
											"end": 58017,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57995,
											"end": 58018,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57981,
											"end": 58018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57981,
											"end": 58018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58059,
											"end": 58060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58033,
											"end": 58044,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58045,
											"end": 58055,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58033,
											"end": 58056,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58033,
											"end": 58060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58033,
											"end": 58060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58033,
											"end": 58060,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 58033,
											"end": 58060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58076,
											"end": 58088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58094,
											"end": 58104,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58094,
											"end": 58109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58117,
											"end": 58120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58094,
											"end": 58125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58075,
											"end": 58125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58148,
											"end": 58155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 58140,
											"end": 58184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58210,
											"end": 58220,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "PUSH",
											"source": 0,
											"value": "45C072AA05B9853B5A993DE7A28BC332EE01404A628CEC1A23CE0F659F842EF1"
										},
										{
											"begin": 58222,
											"end": 58225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58227,
											"end": 58228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58230,
											"end": 58231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58204,
											"end": 58232,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 58255,
											"end": 58258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58260,
											"end": 58261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58263,
											"end": 58264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58265,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58265,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58265,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21094,
											"end": 21095,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 21094,
											"end": 21095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21106,
											"end": 21126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 21106,
											"end": 21124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 21106,
											"end": 21126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21106,
											"end": 21126,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 21106,
											"end": 21126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 58284,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49778,
											"end": 49824,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 23504,
											"end": 23515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60526,
											"end": 60532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60521,
											"end": 60638,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 60521,
											"end": 60638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60542,
											"end": 60559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60542,
											"end": 60559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60542,
											"end": 60566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60542,
											"end": 60566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60538,
											"end": 60539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60538,
											"end": 60566,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60521,
											"end": 60638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60521,
											"end": 60638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 60521,
											"end": 60638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60595,
											"end": 60604,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60605,
											"end": 60622,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60622,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60623,
											"end": 60624,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 60605,
											"end": 60625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60595,
											"end": 60626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60588,
											"end": 60626,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60588,
											"end": 60626,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 60588,
											"end": 60626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60588,
											"end": 60626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60588,
											"end": 60626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60588,
											"end": 60626,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60588,
											"end": 60626,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60588,
											"end": 60626,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60588,
											"end": 60626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60588,
											"end": 60626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60588,
											"end": 60626,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60568,
											"end": 60571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60568,
											"end": 60571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60568,
											"end": 60571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 60568,
											"end": 60571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60568,
											"end": 60571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 60568,
											"end": 60571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60568,
											"end": 60571,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 60568,
											"end": 60571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60568,
											"end": 60571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60568,
											"end": 60571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60568,
											"end": 60571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60521,
											"end": 60638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 60521,
											"end": 60638,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60521,
											"end": 60638,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 60521,
											"end": 60638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60521,
											"end": 60638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60414,
											"end": 60645,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49715,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2323"
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49279,
											"end": 49315,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 23504,
											"end": 23515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24331,
											"end": 24361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 24358,
											"end": 24359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24331,
											"end": 24349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 24331,
											"end": 24361,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24331,
											"end": 24361,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 24331,
											"end": 24361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24369,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2304"
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48890,
											"end": 48924,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49574,
											"end": 49605,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2317"
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49156,
											"end": 49190,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 23504,
											"end": 23515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60237,
											"end": 60243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60232,
											"end": 60343,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 60232,
											"end": 60343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60253,
											"end": 60267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60253,
											"end": 60267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60253,
											"end": 60274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60253,
											"end": 60274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60249,
											"end": 60250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60249,
											"end": 60274,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60232,
											"end": 60343,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60232,
											"end": 60343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 60232,
											"end": 60343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60327,
											"end": 60331,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60296,
											"end": 60305,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60306,
											"end": 60320,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60320,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60321,
											"end": 60322,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 60306,
											"end": 60323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60296,
											"end": 60331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60276,
											"end": 60279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60276,
											"end": 60279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60276,
											"end": 60279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 60276,
											"end": 60279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60276,
											"end": 60279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 60276,
											"end": 60279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60276,
											"end": 60279,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 60276,
											"end": 60279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60276,
											"end": 60279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60276,
											"end": 60279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60276,
											"end": 60279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60232,
											"end": 60343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 60232,
											"end": 60343,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60232,
											"end": 60343,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 60232,
											"end": 60343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60232,
											"end": 60343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60132,
											"end": 60350,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23664,
											"end": 23671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23618,
											"end": 23705,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2321"
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49236,
											"end": 49272,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55458,
											"end": 55465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55467,
											"end": 55474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55476,
											"end": 55483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55485,
											"end": 55492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55545,
											"end": 55546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55519,
											"end": 55530,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55531,
											"end": 55541,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55519,
											"end": 55542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55519,
											"end": 55546,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55515,
											"end": 55651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55515,
											"end": 55651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 55515,
											"end": 55651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55569,
											"end": 55570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55572,
											"end": 55583,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55584,
											"end": 55594,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55572,
											"end": 55595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55621,
											"end": 55622,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55597,
											"end": 55608,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55609,
											"end": 55619,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 55597,
											"end": 55622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 55597,
											"end": 55622,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55597,
											"end": 55622,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 55597,
											"end": 55622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55624,
											"end": 55638,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55639,
											"end": 55649,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55624,
											"end": 55650,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55561,
											"end": 55651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55561,
											"end": 55651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55561,
											"end": 55651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55561,
											"end": 55651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55561,
											"end": 55651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55561,
											"end": 55651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55561,
											"end": 55651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55561,
											"end": 55651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55561,
											"end": 55651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 55561,
											"end": 55651,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55515,
											"end": 55651,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 55515,
											"end": 55651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55695,
											"end": 55696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55668,
											"end": 55679,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55680,
											"end": 55690,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55696,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55664,
											"end": 55717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 55664,
											"end": 55717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55706,
											"end": 55707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55709,
											"end": 55710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55712,
											"end": 55713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55715,
											"end": 55716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55698,
											"end": 55717,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55698,
											"end": 55717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55698,
											"end": 55717,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55698,
											"end": 55717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55698,
											"end": 55717,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55698,
											"end": 55717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55698,
											"end": 55717,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55698,
											"end": 55717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55698,
											"end": 55717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 55698,
											"end": 55717,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55664,
											"end": 55717,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 55664,
											"end": 55717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55754,
											"end": 55769,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2313"
										},
										{
											"begin": 55734,
											"end": 55750,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55734,
											"end": 55750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55734,
											"end": 55769,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55730,
											"end": 56541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 55730,
											"end": 56541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55786,
											"end": 55807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55810,
											"end": 55954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 55837,
											"end": 55848,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55849,
											"end": 55859,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55860,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55923,
											"end": 55939,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55923,
											"end": 55939,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55906,
											"end": 55919,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2311"
										},
										{
											"begin": 55880,
											"end": 55891,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55892,
											"end": 55902,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 55880,
											"end": 55919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 55880,
											"end": 55919,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55880,
											"end": 55919,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 55880,
											"end": 55919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55879,
											"end": 55939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 55879,
											"end": 55939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55879,
											"end": 55939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55879,
											"end": 55939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 55879,
											"end": 55939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55879,
											"end": 55939,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 55879,
											"end": 55939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55810,
											"end": 55818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 55810,
											"end": 55954,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55810,
											"end": 55954,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 55810,
											"end": 55954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55786,
											"end": 55954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55786,
											"end": 55954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55969,
											"end": 55991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56020,
											"end": 56033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55994,
											"end": 56005,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56006,
											"end": 56016,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55994,
											"end": 56017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55994,
											"end": 56033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 55994,
											"end": 56033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55994,
											"end": 56033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55994,
											"end": 56033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 55994,
											"end": 56033,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55994,
											"end": 56033,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 55994,
											"end": 56033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55969,
											"end": 56033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55969,
											"end": 56033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56048,
											"end": 56071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56124,
											"end": 56137,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2311"
										},
										{
											"begin": 56090,
											"end": 56103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56087,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2309"
										},
										{
											"begin": 56075,
											"end": 56103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 56075,
											"end": 56103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 56075,
											"end": 56103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56075,
											"end": 56103,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 56075,
											"end": 56103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56074,
											"end": 56137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 56074,
											"end": 56137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56074,
											"end": 56137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56074,
											"end": 56137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 56074,
											"end": 56137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56074,
											"end": 56137,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 56074,
											"end": 56137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56048,
											"end": 56137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56048,
											"end": 56137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56152,
											"end": 56168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56234,
											"end": 56249,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56250,
											"end": 56260,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56171,
											"end": 56214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 56190,
											"end": 56201,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56202,
											"end": 56212,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56190,
											"end": 56213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56171,
											"end": 56189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 56171,
											"end": 56214,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56171,
											"end": 56214,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 56171,
											"end": 56214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56171,
											"end": 56261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 56171,
											"end": 56261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56171,
											"end": 56261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56171,
											"end": 56261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 56171,
											"end": 56261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56171,
											"end": 56261,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 56171,
											"end": 56261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56152,
											"end": 56261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56152,
											"end": 56261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56278,
											"end": 56309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56330,
											"end": 56331,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56312,
											"end": 56327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56312,
											"end": 56331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 56312,
											"end": 56331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56312,
											"end": 56331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56312,
											"end": 56331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 56312,
											"end": 56331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56312,
											"end": 56331,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 56312,
											"end": 56331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56278,
											"end": 56331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56278,
											"end": 56331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56356,
											"end": 56370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56372,
											"end": 56387,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56389,
											"end": 56412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56414,
											"end": 56422,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56348,
											"end": 56423,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 56348,
											"end": 56423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56348,
											"end": 56423,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 56348,
											"end": 56423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56348,
											"end": 56423,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 56348,
											"end": 56423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56348,
											"end": 56423,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 56348,
											"end": 56423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56348,
											"end": 56423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56348,
											"end": 56423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56348,
											"end": 56423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56348,
											"end": 56423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56348,
											"end": 56423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56348,
											"end": 56423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 56348,
											"end": 56423,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55730,
											"end": 56541,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 55730,
											"end": 56541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56456,
											"end": 56467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56470,
											"end": 56481,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56482,
											"end": 56492,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56470,
											"end": 56493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56456,
											"end": 56493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56456,
											"end": 56493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56516,
											"end": 56519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56521,
											"end": 56522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56524,
											"end": 56525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56527,
											"end": 56528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56508,
											"end": 56529,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56508,
											"end": 56529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56508,
											"end": 56529,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56508,
											"end": 56529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56508,
											"end": 56529,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56508,
											"end": 56529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56508,
											"end": 56529,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56508,
											"end": 56529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56508,
											"end": 56529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 56548,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50125,
											"end": 50166,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2325"
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49322,
											"end": 49370,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 23504,
											"end": 23515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53250,
											"end": 53257,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53250,
											"end": 53257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53250,
											"end": 53257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53250,
											"end": 53257,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53250,
											"end": 53257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53250,
											"end": 53257,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 53250,
											"end": 53257,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 53250,
											"end": 53257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53250,
											"end": 53257,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 53250,
											"end": 53257,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 53250,
											"end": 53257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53249,
											"end": 53257,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 53241,
											"end": 53278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53299,
											"end": 53303,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53289,
											"end": 53296,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53289,
											"end": 53296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53289,
											"end": 53303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53314,
											"end": 53382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 53342,
											"end": 53352,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 53362,
											"end": 53366,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 53369,
											"end": 53381,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2309"
										},
										{
											"begin": 53314,
											"end": 53324,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2304"
										},
										{
											"begin": 53314,
											"end": 53341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53314,
											"end": 53341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53314,
											"end": 53341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 53314,
											"end": 53341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53314,
											"end": 53382,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53314,
											"end": 53382,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53314,
											"end": 53382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53314,
											"end": 53382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53314,
											"end": 53382,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 53314,
											"end": 53382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53314,
											"end": 53382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53314,
											"end": 53382,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 53314,
											"end": 53382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53393,
											"end": 53541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 53438,
											"end": 53448,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 53471,
											"end": 53475,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 53507,
											"end": 53530,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2325"
										},
										{
											"begin": 53491,
											"end": 53504,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2315"
										},
										{
											"begin": 53491,
											"end": 53530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 53491,
											"end": 53530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53491,
											"end": 53530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53491,
											"end": 53530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 53491,
											"end": 53530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53491,
											"end": 53530,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 53491,
											"end": 53530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53393,
											"end": 53406,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2307"
										},
										{
											"begin": 53393,
											"end": 53423,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53393,
											"end": 53423,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53393,
											"end": 53423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 53393,
											"end": 53423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53393,
											"end": 53541,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53393,
											"end": 53541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53393,
											"end": 53541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53393,
											"end": 53541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53393,
											"end": 53541,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 53393,
											"end": 53541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53393,
											"end": 53541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53393,
											"end": 53541,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 53393,
											"end": 53541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53194,
											"end": 53549,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49489,
											"end": 49509,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 23504,
											"end": 23515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58892,
											"end": 58899,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2319"
										},
										{
											"begin": 58874,
											"end": 58889,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 58874,
											"end": 58899,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 58852,
											"end": 58968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58988,
											"end": 58996,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58988,
											"end": 58996,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58988,
											"end": 58996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58988,
											"end": 58996,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58988,
											"end": 58996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58988,
											"end": 58996,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 58988,
											"end": 58996,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 58988,
											"end": 58996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58988,
											"end": 58996,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 58988,
											"end": 58996,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 58988,
											"end": 58996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 58996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 58979,
											"end": 59018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59040,
											"end": 59044,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59029,
											"end": 59037,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59029,
											"end": 59037,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 59029,
											"end": 59044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59096,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2313"
										},
										{
											"begin": 59061,
											"end": 59077,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59061,
											"end": 59077,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59061,
											"end": 59096,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59057,
											"end": 60066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 59057,
											"end": 60066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59114,
											"end": 59126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59132,
											"end": 59139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 59132,
											"end": 59137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 59132,
											"end": 59139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59132,
											"end": 59139,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 59132,
											"end": 59139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59144,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59132,
											"end": 59144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 59179,
											"end": 59192,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2311"
										},
										{
											"begin": 59194,
											"end": 59210,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59194,
											"end": 59210,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 59170,
											"end": 59211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59170,
											"end": 59211,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 59170,
											"end": 59211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59132,
											"end": 59230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59113,
											"end": 59230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59113,
											"end": 59230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59113,
											"end": 59230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59253,
											"end": 59260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 59245,
											"end": 59289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59340,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59324,
											"end": 59340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59308,
											"end": 59321,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2311"
										},
										{
											"begin": 59308,
											"end": 59340,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59304,
											"end": 59885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59304,
											"end": 59885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 59304,
											"end": 59885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59361,
											"end": 59389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59457,
											"end": 59470,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2311"
										},
										{
											"begin": 59436,
											"end": 59452,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59436,
											"end": 59452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59420,
											"end": 59433,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2311"
										},
										{
											"begin": 59420,
											"end": 59452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 59420,
											"end": 59452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59420,
											"end": 59452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59420,
											"end": 59452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 59420,
											"end": 59452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59420,
											"end": 59452,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 59420,
											"end": 59452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59393,
											"end": 59416,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2325"
										},
										{
											"begin": 59393,
											"end": 59453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 59393,
											"end": 59453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59393,
											"end": 59453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59393,
											"end": 59453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 59393,
											"end": 59453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59393,
											"end": 59453,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 59393,
											"end": 59453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59392,
											"end": 59470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 59392,
											"end": 59470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59392,
											"end": 59470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59392,
											"end": 59470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 59392,
											"end": 59470,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59392,
											"end": 59470,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 59392,
											"end": 59470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59361,
											"end": 59470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59361,
											"end": 59470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59493,
											"end": 59554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 59520,
											"end": 59531,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2323"
										},
										{
											"begin": 59533,
											"end": 59553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59493,
											"end": 59506,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2307"
										},
										{
											"begin": 59493,
											"end": 59519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59493,
											"end": 59519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59493,
											"end": 59519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 59493,
											"end": 59519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59493,
											"end": 59554,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59493,
											"end": 59554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59493,
											"end": 59554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59493,
											"end": 59554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 59493,
											"end": 59554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59493,
											"end": 59554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59493,
											"end": 59554,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 59493,
											"end": 59554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59591,
											"end": 59611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59689,
											"end": 59702,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2311"
										},
										{
											"begin": 59668,
											"end": 59684,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59668,
											"end": 59684,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 59665,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2311"
										},
										{
											"begin": 59652,
											"end": 59684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 59652,
											"end": 59684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 59684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 59684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 59652,
											"end": 59684,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59652,
											"end": 59684,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 59652,
											"end": 59684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59615,
											"end": 59627,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2309"
										},
										{
											"begin": 59615,
											"end": 59685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 59615,
											"end": 59685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59615,
											"end": 59685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59615,
											"end": 59685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 59615,
											"end": 59685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59615,
											"end": 59685,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 59615,
											"end": 59685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59614,
											"end": 59702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 59614,
											"end": 59702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59614,
											"end": 59702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59614,
											"end": 59702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 59614,
											"end": 59702,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59614,
											"end": 59702,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 59614,
											"end": 59702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59591,
											"end": 59702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59591,
											"end": 59702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59739,
											"end": 59800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 59766,
											"end": 59777,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2323"
										},
										{
											"begin": 59779,
											"end": 59799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59739,
											"end": 59752,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2307"
										},
										{
											"begin": 59739,
											"end": 59765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59739,
											"end": 59765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59739,
											"end": 59765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 59739,
											"end": 59765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59739,
											"end": 59800,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59739,
											"end": 59800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59739,
											"end": 59800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59739,
											"end": 59800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 59739,
											"end": 59800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59739,
											"end": 59800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59739,
											"end": 59800,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 59739,
											"end": 59800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59819,
											"end": 59869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 59843,
											"end": 59854,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2323"
										},
										{
											"begin": 59856,
											"end": 59868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59819,
											"end": 59829,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2304"
										},
										{
											"begin": 59819,
											"end": 59842,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59819,
											"end": 59842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59819,
											"end": 59842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 59819,
											"end": 59842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59819,
											"end": 59869,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59819,
											"end": 59869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59819,
											"end": 59869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59819,
											"end": 59869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 59819,
											"end": 59869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59819,
											"end": 59869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59819,
											"end": 59869,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 59819,
											"end": 59869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59342,
											"end": 59885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59342,
											"end": 59885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59304,
											"end": 59885,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 59304,
											"end": 59885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59098,
											"end": 59896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59057,
											"end": 60066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 59057,
											"end": 60066,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59057,
											"end": 60066,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 59057,
											"end": 60066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59917,
											"end": 59963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 59941,
											"end": 59948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 59941,
											"end": 59946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 59941,
											"end": 59948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59941,
											"end": 59948,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 59941,
											"end": 59948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59950,
											"end": 59962,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2309"
										},
										{
											"begin": 59917,
											"end": 59927,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2304"
										},
										{
											"begin": 59917,
											"end": 59940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59917,
											"end": 59940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59917,
											"end": 59940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 59917,
											"end": 59940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59917,
											"end": 59963,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59917,
											"end": 59963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59917,
											"end": 59963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59917,
											"end": 59963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 59917,
											"end": 59963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59917,
											"end": 59963,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59917,
											"end": 59963,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 59917,
											"end": 59963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59978,
											"end": 60054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 60005,
											"end": 60012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 60005,
											"end": 60010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 60005,
											"end": 60012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60005,
											"end": 60012,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 60005,
											"end": 60012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60030,
											"end": 60053,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2325"
										},
										{
											"begin": 60014,
											"end": 60027,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2315"
										},
										{
											"begin": 60014,
											"end": 60053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 60014,
											"end": 60053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60014,
											"end": 60053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60014,
											"end": 60053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 60014,
											"end": 60053,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60014,
											"end": 60053,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 60014,
											"end": 60053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59978,
											"end": 59991,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2307"
										},
										{
											"begin": 59978,
											"end": 60004,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59978,
											"end": 60004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59978,
											"end": 60004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 59978,
											"end": 60004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59978,
											"end": 60054,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59978,
											"end": 60054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59978,
											"end": 60054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59978,
											"end": 60054,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 59978,
											"end": 60054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59978,
											"end": 60054,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59978,
											"end": 60054,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 59978,
											"end": 60054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59057,
											"end": 60066,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 59057,
											"end": 60066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 60073,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2307"
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48968,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49612,
											"end": 49658,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 23504,
											"end": 23515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 23504,
											"end": 23517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24633,
											"end": 24634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24613,
											"end": 24635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24613,
											"end": 24635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24613,
											"end": 24621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24613,
											"end": 24635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24613,
											"end": 24635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24613,
											"end": 24635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 24605,
											"end": 24678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24689,
											"end": 24717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 24708,
											"end": 24716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24689,
											"end": 24707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 24689,
											"end": 24717,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24689,
											"end": 24717,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 24689,
											"end": 24717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24725,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21142,
											"end": 21435,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 21142,
											"end": 21435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20544,
											"end": 20545,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21276,
											"end": 21283,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21276,
											"end": 21283,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21276,
											"end": 21295,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 21268,
											"end": 21331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20544,
											"end": 20545,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21409,
											"end": 21416,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21409,
											"end": 21427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21409,
											"end": 21427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21409,
											"end": 21427,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21409,
											"end": 21427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21142,
											"end": 21435,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15023,
											"end": 15234,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 15023,
											"end": 15234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15140,
											"end": 15226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 15160,
											"end": 15165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15190,
											"end": 15213,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 15190,
											"end": 15213,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15190,
											"end": 15213,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15215,
											"end": 15217,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15224,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15167,
											"end": 15225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15140,
											"end": 15159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 15140,
											"end": 15226,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15140,
											"end": 15226,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 15140,
											"end": 15226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15023,
											"end": 15234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15023,
											"end": 15234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15023,
											"end": 15234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15023,
											"end": 15234,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21443,
											"end": 21656,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 21443,
											"end": 21656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20500,
											"end": 20501,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21626,
											"end": 21633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21626,
											"end": 21648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21626,
											"end": 21648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21626,
											"end": 21648,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21626,
											"end": 21648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21443,
											"end": 21656,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 51001,
											"end": 51507,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 51001,
											"end": 51507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51075,
											"end": 51084,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2317"
										},
										{
											"begin": 51056,
											"end": 51071,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 51056,
											"end": 51084,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51056,
											"end": 51084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 51048,
											"end": 51100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51134,
											"end": 51135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51115,
											"end": 51131,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 51115,
											"end": 51131,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51115,
											"end": 51135,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51111,
											"end": 51461,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51111,
											"end": 51461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 51111,
											"end": 51461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51152,
											"end": 51167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51224,
											"end": 51274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 51233,
											"end": 51262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 51242,
											"end": 51252,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51242,
											"end": 51252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51254,
											"end": 51261,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2319"
										},
										{
											"begin": 51233,
											"end": 51241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 51233,
											"end": 51262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51233,
											"end": 51262,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 51233,
											"end": 51262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51264,
											"end": 51273,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2317"
										},
										{
											"begin": 51224,
											"end": 51232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 51224,
											"end": 51274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51224,
											"end": 51274,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 51224,
											"end": 51274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51170,
											"end": 51204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 51179,
											"end": 51194,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 51196,
											"end": 51203,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2319"
										},
										{
											"begin": 51170,
											"end": 51178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 51170,
											"end": 51204,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51170,
											"end": 51204,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 51170,
											"end": 51204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51170,
											"end": 51274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 51170,
											"end": 51274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51170,
											"end": 51274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51170,
											"end": 51274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 51170,
											"end": 51274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51170,
											"end": 51274,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 51170,
											"end": 51274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51152,
											"end": 51274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51152,
											"end": 51274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51289,
											"end": 51305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51364,
											"end": 51373,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2317"
										},
										{
											"begin": 51354,
											"end": 51361,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2319"
										},
										{
											"begin": 51354,
											"end": 51373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 51354,
											"end": 51373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51354,
											"end": 51373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51354,
											"end": 51373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 51354,
											"end": 51373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51354,
											"end": 51373,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 51354,
											"end": 51373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51325,
											"end": 51332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51309,
											"end": 51322,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2315"
										},
										{
											"begin": 51309,
											"end": 51332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 51309,
											"end": 51332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51309,
											"end": 51332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51309,
											"end": 51332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 51309,
											"end": 51332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51309,
											"end": 51332,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 51309,
											"end": 51332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51308,
											"end": 51374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 51308,
											"end": 51374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51308,
											"end": 51374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51308,
											"end": 51374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 51308,
											"end": 51374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51308,
											"end": 51374,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 51308,
											"end": 51374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51289,
											"end": 51374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51289,
											"end": 51374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51433,
											"end": 51449,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 51433,
											"end": 51449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51421,
											"end": 51429,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 51410,
											"end": 51418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51410,
											"end": 51429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 51410,
											"end": 51429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51410,
											"end": 51429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51410,
											"end": 51429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 51410,
											"end": 51429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51410,
											"end": 51429,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 51410,
											"end": 51429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51409,
											"end": 51449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 51409,
											"end": 51449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51409,
											"end": 51449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51409,
											"end": 51449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 51409,
											"end": 51449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51409,
											"end": 51449,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 51409,
											"end": 51449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51389,
											"end": 51405,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 51389,
											"end": 51405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51389,
											"end": 51449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51137,
											"end": 51461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51137,
											"end": 51461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51111,
											"end": 51461,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 51111,
											"end": 51461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51484,
											"end": 51499,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 51471,
											"end": 51481,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51471,
											"end": 51499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51471,
											"end": 51499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51471,
											"end": 51499,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51471,
											"end": 51499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51001,
											"end": 51507,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25634,
											"end": 25740,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 25634,
											"end": 25740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25692,
											"end": 25699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25723,
											"end": 25724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25724,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 25719,
											"end": 25732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25731,
											"end": 25732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 25719,
											"end": 25732,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25732,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 25719,
											"end": 25732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25727,
											"end": 25728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25732,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 25719,
											"end": 25732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25712,
											"end": 25732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25712,
											"end": 25732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 25740,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 25740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 25740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 25740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 25740,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50318,
											"end": 50455,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 50318,
											"end": 50455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50383,
											"end": 50390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50439,
											"end": 50447,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 50419,
											"end": 50435,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 50419,
											"end": 50435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50411,
											"end": 50416,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50411,
											"end": 50435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 50411,
											"end": 50435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50411,
											"end": 50435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50411,
											"end": 50435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 50411,
											"end": 50435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50411,
											"end": 50435,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 50411,
											"end": 50435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50410,
											"end": 50447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 50410,
											"end": 50447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50410,
											"end": 50447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50410,
											"end": 50447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 50410,
											"end": 50447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50410,
											"end": 50447,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 50410,
											"end": 50447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50403,
											"end": 50447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50403,
											"end": 50447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50318,
											"end": 50455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50318,
											"end": 50455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50318,
											"end": 50455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50318,
											"end": 50455,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23783,
											"end": 23915,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 23783,
											"end": 23915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23858,
											"end": 23870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 23858,
											"end": 23868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 23858,
											"end": 23870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23858,
											"end": 23870,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 23858,
											"end": 23870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23847,
											"end": 23870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23847,
											"end": 23870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23847,
											"end": 23854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 23847,
											"end": 23852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23847,
											"end": 23854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23847,
											"end": 23854,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 23847,
											"end": 23854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23847,
											"end": 23870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23847,
											"end": 23870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23847,
											"end": 23870,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 23839,
											"end": 23907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23783,
											"end": 23915,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24885,
											"end": 25076,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 24885,
											"end": 25076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24959,
											"end": 24975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24978,
											"end": 24984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24978,
											"end": 24984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24978,
											"end": 24984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24978,
											"end": 24984,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24978,
											"end": 24984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24978,
											"end": 24984,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24978,
											"end": 24984,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24978,
											"end": 24984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24978,
											"end": 24984,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24978,
											"end": 24984,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24978,
											"end": 24984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24959,
											"end": 24984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24959,
											"end": 24984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25004,
											"end": 25012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24995,
											"end": 25001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24995,
											"end": 25012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25059,
											"end": 25067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25068,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25028,
											"end": 25068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25068,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25028,
											"end": 25068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25068,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 25028,
											"end": 25068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25028,
											"end": 25068,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25028,
											"end": 25068,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25068,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25028,
											"end": 25068,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 25076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 25076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 25076,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50463,
											"end": 50991,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 50463,
											"end": 50991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50529,
											"end": 50536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50576,
											"end": 50577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50557,
											"end": 50573,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 50557,
											"end": 50573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50557,
											"end": 50577,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 50549,
											"end": 50596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50609,
											"end": 50624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50677,
											"end": 50727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 50686,
											"end": 50715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 50695,
											"end": 50705,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50695,
											"end": 50705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50707,
											"end": 50714,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2319"
										},
										{
											"begin": 50686,
											"end": 50694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 50686,
											"end": 50715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50686,
											"end": 50715,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 50686,
											"end": 50715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50717,
											"end": 50726,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2317"
										},
										{
											"begin": 50677,
											"end": 50685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 50677,
											"end": 50727,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50677,
											"end": 50727,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 50677,
											"end": 50727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50627,
											"end": 50661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 50636,
											"end": 50651,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 50653,
											"end": 50660,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2319"
										},
										{
											"begin": 50627,
											"end": 50635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 50627,
											"end": 50661,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50627,
											"end": 50661,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 50627,
											"end": 50661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50627,
											"end": 50727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 50627,
											"end": 50727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50627,
											"end": 50727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50627,
											"end": 50727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 50627,
											"end": 50727,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50627,
											"end": 50727,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 50627,
											"end": 50727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50609,
											"end": 50727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50609,
											"end": 50727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50738,
											"end": 50754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50809,
											"end": 50818,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2317"
										},
										{
											"begin": 50799,
											"end": 50806,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2319"
										},
										{
											"begin": 50799,
											"end": 50818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 50799,
											"end": 50818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50799,
											"end": 50818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50799,
											"end": 50818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 50799,
											"end": 50818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50799,
											"end": 50818,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 50799,
											"end": 50818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50774,
											"end": 50781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50758,
											"end": 50771,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2315"
										},
										{
											"begin": 50758,
											"end": 50781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 50758,
											"end": 50781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50758,
											"end": 50781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50758,
											"end": 50781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 50758,
											"end": 50781,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50758,
											"end": 50781,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 50758,
											"end": 50781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50757,
											"end": 50819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 50757,
											"end": 50819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50757,
											"end": 50819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50757,
											"end": 50819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 50757,
											"end": 50819,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50757,
											"end": 50819,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 50757,
											"end": 50819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50738,
											"end": 50819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50738,
											"end": 50819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50830,
											"end": 50855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50901,
											"end": 50917,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 50901,
											"end": 50917,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50889,
											"end": 50897,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 50878,
											"end": 50886,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50878,
											"end": 50897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 50878,
											"end": 50897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50878,
											"end": 50897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50878,
											"end": 50897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 50878,
											"end": 50897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50878,
											"end": 50897,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 50878,
											"end": 50897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50877,
											"end": 50917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 50877,
											"end": 50917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50877,
											"end": 50917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50877,
											"end": 50917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 50877,
											"end": 50917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50877,
											"end": 50917,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 50877,
											"end": 50917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50858,
											"end": 50874,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 50858,
											"end": 50874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50858,
											"end": 50917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 50858,
											"end": 50917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50858,
											"end": 50917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50858,
											"end": 50917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 50858,
											"end": 50917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50858,
											"end": 50917,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 50858,
											"end": 50917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50830,
											"end": 50917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50830,
											"end": 50917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50975,
											"end": 50983,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 50954,
											"end": 50971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50946,
											"end": 50951,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50946,
											"end": 50971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 50946,
											"end": 50971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50946,
											"end": 50971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50946,
											"end": 50971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 50946,
											"end": 50971,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50946,
											"end": 50971,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 50946,
											"end": 50971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50945,
											"end": 50983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 50945,
											"end": 50983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50945,
											"end": 50983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50945,
											"end": 50983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 50945,
											"end": 50983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50945,
											"end": 50983,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 50945,
											"end": 50983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50938,
											"end": 50983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 50938,
											"end": 50983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50938,
											"end": 50983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50938,
											"end": 50983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50938,
											"end": 50983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50463,
											"end": 50991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50463,
											"end": 50991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50463,
											"end": 50991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50463,
											"end": 50991,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15242,
											"end": 15490,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 15242,
											"end": 15490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15386,
											"end": 15482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 15406,
											"end": 15411,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15436,
											"end": 15463,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 15436,
											"end": 15463,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15436,
											"end": 15463,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15465,
											"end": 15469,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15471,
											"end": 15473,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15475,
											"end": 15480,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15413,
											"end": 15481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15386,
											"end": 15405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 15386,
											"end": 15482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15386,
											"end": 15482,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 15386,
											"end": 15482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15490,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18090,
											"end": 18806,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 18090,
											"end": 18806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18514,
											"end": 18537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 18568,
											"end": 18572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18548,
											"end": 18553,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18567,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18540,
											"end": 18567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 18540,
											"end": 18567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 18540,
											"end": 18609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18514,
											"end": 18609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18514,
											"end": 18609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18644,
											"end": 18645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18624,
											"end": 18634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18624,
											"end": 18641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18624,
											"end": 18645,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 18620,
											"end": 18799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18710,
											"end": 18740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18710,
											"end": 18740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18710,
											"end": 18740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18710,
											"end": 18740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18710,
											"end": 18740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18710,
											"end": 18740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18710,
											"end": 18740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18710,
											"end": 18740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18710,
											"end": 18740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 18710,
											"end": 18740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18710,
											"end": 18740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18710,
											"end": 18740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 18710,
											"end": 18740,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18710,
											"end": 18740,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 18710,
											"end": 18740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 18702,
											"end": 18787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18799,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 18620,
											"end": 18799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18090,
											"end": 18806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18090,
											"end": 18806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18090,
											"end": 18806,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25452,
											"end": 25558,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 25452,
											"end": 25558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25510,
											"end": 25517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25541,
											"end": 25542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25537,
											"end": 25538,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25537,
											"end": 25542,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25537,
											"end": 25550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 25537,
											"end": 25550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25549,
											"end": 25550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25537,
											"end": 25550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 25537,
											"end": 25550,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25537,
											"end": 25550,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 25537,
											"end": 25550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25545,
											"end": 25546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25537,
											"end": 25550,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 25537,
											"end": 25550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25452,
											"end": 25558,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25452,
											"end": 25558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25452,
											"end": 25558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25452,
											"end": 25558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25452,
											"end": 25558,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22257,
											"end": 22355,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 22257,
											"end": 22355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22310,
											"end": 22317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22337,
											"end": 22347,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22330,
											"end": 22347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22330,
											"end": 22347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22257,
											"end": 22355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22257,
											"end": 22355,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8976,
											"end": 9205,
											"name": "tag",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 8976,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9113,
											"end": 9125,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9145,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 9167,
											"end": 9173,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9175,
											"end": 9179,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9196,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9145,
											"end": 9166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 9145,
											"end": 9197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9145,
											"end": 9197,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 9145,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9138,
											"end": 9197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9138,
											"end": 9197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8976,
											"end": 9205,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8976,
											"end": 9205,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8976,
											"end": 9205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8976,
											"end": 9205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8976,
											"end": 9205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8976,
											"end": 9205,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10096,
											"end": 10551,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 10096,
											"end": 10551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10278,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10324,
											"end": 10329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10299,
											"end": 10320,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 10299,
											"end": 10329,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10299,
											"end": 10329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 10291,
											"end": 10372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10398,
											"end": 10421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10431,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10425,
											"end": 10436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10444,
											"end": 10449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10451,
											"end": 10455,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10383,
											"end": 10456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10383,
											"end": 10456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10383,
											"end": 10456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10383,
											"end": 10456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 10501,
											"end": 10507,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10516,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10530,
											"end": 10542,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 10474,
											"end": 10543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10474,
											"end": 10543,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 10474,
											"end": 10543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10543,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10096,
											"end": 10551,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10096,
											"end": 10551,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10096,
											"end": 10551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10096,
											"end": 10551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10096,
											"end": 10551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10096,
											"end": 10551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10096,
											"end": 10551,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12669,
											"end": 13313,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 12669,
											"end": 13313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12854,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12883,
											"end": 12890,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12879,
											"end": 13306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12879,
											"end": 13306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 12879,
											"end": 13306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12932,
											"end": 12933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12911,
											"end": 12921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12911,
											"end": 12928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12911,
											"end": 12933,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 12907,
											"end": 13197,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13129,
											"end": 13147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 13140,
											"end": 13146,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13129,
											"end": 13139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 13129,
											"end": 13147,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13129,
											"end": 13147,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 13129,
											"end": 13147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 13121,
											"end": 13181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13197,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 12907,
											"end": 13197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13218,
											"end": 13228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 13211,
											"end": 13228,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12879,
											"end": 13306,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 12879,
											"end": 13306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 13269,
											"end": 13279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13281,
											"end": 13293,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 13261,
											"end": 13294,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13261,
											"end": 13294,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 13261,
											"end": 13294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 13313,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 12669,
											"end": 13313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 13313,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 13313,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 13313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 13313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 13313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 13313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 13313,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6219,
											"end": 6545,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 6219,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6279,
											"end": 6283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6514,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6514,
											"end": 6533,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6514,
											"end": 6537,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6545,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13855,
											"end": 14407,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 13855,
											"end": 14407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14016,
											"end": 14026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14016,
											"end": 14033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14016,
											"end": 14037,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14012,
											"end": 14400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14012,
											"end": 14400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 14012,
											"end": 14400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14248,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14242,
											"end": 14259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14292,
											"end": 14302,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14284,
											"end": 14303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14012,
											"end": 14400,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 14012,
											"end": 14400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14388,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1800,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1787,
											"end": 1796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1801,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1877,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1861,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 1811,
											"end": 1882,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1811,
											"end": 1882,
											"name": "tag",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 1811,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 1960,
											"end": 1962,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1949,
											"end": 1958,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 1892,
											"end": 1964,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1892,
											"end": 1964,
											"name": "tag",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 1892,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 2042,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2024,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 1974,
											"end": 2046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2046,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 1974,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 2053,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2059,
											"end": 2149,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 2059,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2142,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2143,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2149,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2155,
											"end": 2264,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 2155,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 2236,
											"end": 2257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2236,
											"end": 2257,
											"name": "tag",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 2236,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2264,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2270,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2397,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2452,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 2408,
											"end": 2473,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2408,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 2408,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2480,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2480,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2480,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2486,
											"end": 2603,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 2486,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2726,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 2609,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2720,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2849,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 2732,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2843,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3440,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 2872,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3008,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3002,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2990,
											"end": 2996,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 3003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 2972,
											"end": 3094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 3013,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 3013,
											"end": 3092,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3013,
											"end": 3092,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 3013,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3094,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 2972,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3133,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3148,
											"end": 3154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3175,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3259,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 3142,
											"end": 3259,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "tag",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3259,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 3142,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3296,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3284,
											"end": 3290,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3349,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3338,
											"end": 3342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3330,
											"end": 3336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3343,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3316,
											"end": 3324,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3350,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 3306,
											"end": 3434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3353,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 3353,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 3353,
											"end": 3432,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3353,
											"end": 3432,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 3353,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3434,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 3306,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3440,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3446,
											"end": 4005,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3446,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3591,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3577,
											"end": 3586,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3592,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3676,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 3557,
											"end": 3676,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 3595,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 3595,
											"end": 3674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3595,
											"end": 3674,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 3595,
											"end": 3674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3676,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 3557,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3746,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3792,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 3876,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 3759,
											"end": 3876,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 3795,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 3795,
											"end": 3874,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3795,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 3795,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 3876,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 3759,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 3980,
											"end": 3987,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 3969,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 3908,
											"end": 3988,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3908,
											"end": 3988,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 3908,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3890,
											"end": 3988,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3890,
											"end": 3988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3890,
											"end": 3988,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3890,
											"end": 3988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 4005,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 4005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 4005,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 4005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 4005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 4005,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4011,
											"end": 4129,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 4011,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 4116,
											"end": 4121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 4098,
											"end": 4122,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4098,
											"end": 4122,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 4098,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4129,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4135,
											"end": 4357,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4135,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4228,
											"end": 4232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4266,
											"end": 4268,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 4347,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4345,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 4279,
											"end": 4350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4279,
											"end": 4350,
											"name": "tag",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 4279,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4357,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4357,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4363,
											"end": 4423,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 4363,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4405,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4423,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4429,
											"end": 4571,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 4429,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4512,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 4539,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 4557,
											"end": 4562,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 4539,
											"end": 4563,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4539,
											"end": 4563,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 4539,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 4530,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 4512,
											"end": 4565,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4512,
											"end": 4565,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 4512,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4429,
											"end": 4571,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4429,
											"end": 4571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4429,
											"end": 4571,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4429,
											"end": 4571,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4577,
											"end": 4703,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 4577,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4660,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 4691,
											"end": 4696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4660,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 4660,
											"end": 4697,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4660,
											"end": 4697,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 4660,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 4697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 4697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4703,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4709,
											"end": 4848,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 4709,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 4836,
											"end": 4841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 4805,
											"end": 4842,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4805,
											"end": 4842,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 4805,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4792,
											"end": 4842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4792,
											"end": 4842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4848,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4854,
											"end": 5011,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 4854,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4954,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 4998,
											"end": 5003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4954,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 4954,
											"end": 5004,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4954,
											"end": 5004,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 4954,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 5005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 5011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 5011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 5011,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5017,
											"end": 5265,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5017,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5150,
											"end": 5159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5174,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 5255,
											"end": 5256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5253,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5231,
											"end": 5237,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5174,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 5174,
											"end": 5258,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5174,
											"end": 5258,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 5174,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5017,
											"end": 5265,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5017,
											"end": 5265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5017,
											"end": 5265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5017,
											"end": 5265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5017,
											"end": 5265,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5271,
											"end": 5824,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5271,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5486,
											"end": 5489,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5475,
											"end": 5484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5500,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 5568,
											"end": 5569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5557,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5570,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5550,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5500,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 5500,
											"end": 5571,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5500,
											"end": 5571,
											"name": "tag",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 5500,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 5649,
											"end": 5651,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5638,
											"end": 5647,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5625,
											"end": 5631,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 5581,
											"end": 5653,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5581,
											"end": 5653,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 5581,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 5731,
											"end": 5733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5729,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5713,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 5663,
											"end": 5735,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5663,
											"end": 5735,
											"name": "tag",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 5663,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 5813,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5802,
											"end": 5811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 5816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5795,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 5745,
											"end": 5817,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5745,
											"end": 5817,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 5745,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5824,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5824,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5824,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5830,
											"end": 5999,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 5830,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5914,
											"end": 5925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5948,
											"end": 5954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 5992,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5983,
											"end": 5986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5979,
											"end": 5993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5999,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5999,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5999,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6005,
											"end": 6172,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 6005,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6145,
											"end": 6164,
											"name": "PUSH",
											"source": 1,
											"value": "6E6F7420636C61696D61626C6520796574000000000000000000000000000000"
										},
										{
											"begin": 6141,
											"end": 6142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6133,
											"end": 6139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6129,
											"end": 6143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6005,
											"end": 6172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6005,
											"end": 6172,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6178,
											"end": 6544,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 6178,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6341,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 6405,
											"end": 6407,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6400,
											"end": 6403,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6341,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 6341,
											"end": 6408,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6341,
											"end": 6408,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 6341,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 6506,
											"end": 6509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 6417,
											"end": 6510,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6417,
											"end": 6510,
											"name": "tag",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 6417,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6530,
											"end": 6533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6519,
											"end": 6538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6519,
											"end": 6538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6544,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6550,
											"end": 6969,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6550,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6716,
											"end": 6720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6754,
											"end": 6756,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6743,
											"end": 6752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6801,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6793,
											"end": 6813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6787,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6767,
											"end": 6814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6831,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 6957,
											"end": 6961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6831,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 6831,
											"end": 6962,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6831,
											"end": 6962,
											"name": "tag",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 6831,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6823,
											"end": 6962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6823,
											"end": 6962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6550,
											"end": 6969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6550,
											"end": 6969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6550,
											"end": 6969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6550,
											"end": 6969,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6975,
											"end": 7155,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 6975,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7023,
											"end": 7100,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7020,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7013,
											"end": 7101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7124,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7110,
											"end": 7125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7148,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7141,
											"end": 7142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7149,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7341,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 7161,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7286,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7206,
											"end": 7207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7199,
											"end": 7287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7306,
											"end": 7310,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7303,
											"end": 7304,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7296,
											"end": 7311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7334,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7327,
											"end": 7328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7320,
											"end": 7335,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7532,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 7347,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7387,
											"end": 7388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7404,
											"end": 7424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 7422,
											"end": 7423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 7404,
											"end": 7424,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7404,
											"end": 7424,
											"name": "tag",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 7404,
											"end": 7424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 7456,
											"end": 7457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 7438,
											"end": 7458,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7438,
											"end": 7458,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 7438,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7433,
											"end": 7458,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7433,
											"end": 7458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 7467,
											"end": 7502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "tag",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7502,
											"name": "tag",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 7467,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7521,
											"end": 7522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7517,
											"end": 7526,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7512,
											"end": 7526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7512,
											"end": 7526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7532,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7532,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7538,
											"end": 7843,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 7538,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7597,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 7615,
											"end": 7616,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7597,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 7597,
											"end": 7617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7597,
											"end": 7617,
											"name": "tag",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 7597,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7592,
											"end": 7617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7592,
											"end": 7617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7631,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 7649,
											"end": 7650,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7631,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 7631,
											"end": 7651,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7631,
											"end": 7651,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 7631,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7651,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 7786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7713,
											"end": 7787,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7788,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 7791,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 7791,
											"end": 7809,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7791,
											"end": 7809,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 7791,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 7704,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7832,
											"end": 7833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7538,
											"end": 7843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7538,
											"end": 7843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7538,
											"end": 7843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7538,
											"end": 7843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7538,
											"end": 7843,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7849,
											"end": 8197,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 7849,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7889,
											"end": 7896,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 7930,
											"end": 7931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7912,
											"end": 7932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 7912,
											"end": 7932,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7912,
											"end": 7932,
											"name": "tag",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 7912,
											"end": 7932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7907,
											"end": 7932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7907,
											"end": 7932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 7964,
											"end": 7965,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 7946,
											"end": 7966,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7946,
											"end": 7966,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 7946,
											"end": 7966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7941,
											"end": 7966,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7941,
											"end": 7966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8134,
											"end": 8135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8066,
											"end": 8132,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8062,
											"end": 8136,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8059,
											"end": 8060,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8056,
											"end": 8137,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8051,
											"end": 8052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8037,
											"end": 8054,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8033,
											"end": 8138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8030,
											"end": 8161,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8030,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 8030,
											"end": 8161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 8141,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 8141,
											"end": 8159,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8141,
											"end": 8159,
											"name": "tag",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 8141,
											"end": 8159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8030,
											"end": 8161,
											"name": "tag",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 8030,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8189,
											"end": 8190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8186,
											"end": 8187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8182,
											"end": 8191,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8171,
											"end": 8191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8171,
											"end": 8191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 8197,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 8197,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 8197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 8197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 8197,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8203,
											"end": 8394,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8203,
											"end": 8394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8263,
											"end": 8283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 8281,
											"end": 8282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8263,
											"end": 8283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 8263,
											"end": 8283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8263,
											"end": 8283,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 8263,
											"end": 8283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8297,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 8315,
											"end": 8316,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8297,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 8297,
											"end": 8317,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8297,
											"end": 8317,
											"name": "tag",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 8297,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8292,
											"end": 8317,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8292,
											"end": 8317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8333,
											"end": 8334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8330,
											"end": 8338,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8341,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 8341,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 8341,
											"end": 8359,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8341,
											"end": 8359,
											"name": "tag",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 8341,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "tag",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 8327,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8379,
											"end": 8388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8203,
											"end": 8394,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8203,
											"end": 8394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8203,
											"end": 8394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8203,
											"end": 8394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8203,
											"end": 8394,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8400,
											"end": 8633,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 8400,
											"end": 8633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8540,
											"end": 8574,
											"name": "PUSH",
											"source": 1,
											"value": "43616E206F6E6C79206465706F73697420457468657220647572696E67207468"
										},
										{
											"begin": 8536,
											"end": 8537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8528,
											"end": 8534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8524,
											"end": 8538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8517,
											"end": 8575,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8609,
											"end": 8625,
											"name": "PUSH",
											"source": 1,
											"value": "652073616C6520706572696F642E000000000000000000000000000000000000"
										},
										{
											"begin": 8604,
											"end": 8606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8596,
											"end": 8602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8592,
											"end": 8607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8400,
											"end": 8633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8400,
											"end": 8633,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8639,
											"end": 9005,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 8639,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8781,
											"end": 8784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 8866,
											"end": 8868,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 8861,
											"end": 8864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 8802,
											"end": 8869,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8802,
											"end": 8869,
											"name": "tag",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 8802,
											"end": 8869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 8967,
											"end": 8970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 8878,
											"end": 8971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8878,
											"end": 8971,
											"name": "tag",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 8878,
											"end": 8971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8996,
											"end": 8998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8991,
											"end": 8994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8987,
											"end": 8999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8980,
											"end": 8999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8980,
											"end": 8999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 9005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 9005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 9005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 9005,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9011,
											"end": 9430,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 9011,
											"end": 9430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9181,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9215,
											"end": 9217,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9204,
											"end": 9213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9192,
											"end": 9218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9192,
											"end": 9218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9264,
											"end": 9273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9258,
											"end": 9262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9254,
											"end": 9274,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9250,
											"end": 9251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9239,
											"end": 9248,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9292,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 9418,
											"end": 9422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9292,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 9292,
											"end": 9423,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9292,
											"end": 9423,
											"name": "tag",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 9292,
											"end": 9423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9284,
											"end": 9423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9284,
											"end": 9423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9011,
											"end": 9430,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9011,
											"end": 9430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9011,
											"end": 9430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9011,
											"end": 9430,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9436,
											"end": 9670,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 9436,
											"end": 9670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9576,
											"end": 9610,
											"name": "PUSH",
											"source": 1,
											"value": "436F6D6D69746D656E7420616D6F756E74206973206F75747369646520746865"
										},
										{
											"begin": 9572,
											"end": 9573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9564,
											"end": 9570,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9553,
											"end": 9611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9645,
											"end": 9662,
											"name": "PUSH",
											"source": 1,
											"value": "20616C6C6F7765642072616E67652E0000000000000000000000000000000000"
										},
										{
											"begin": 9640,
											"end": 9642,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9632,
											"end": 9638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9628,
											"end": 9643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9621,
											"end": 9663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9436,
											"end": 9670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9436,
											"end": 9670,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9676,
											"end": 10042,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 9676,
											"end": 10042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9818,
											"end": 9821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9839,
											"end": 9906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 9903,
											"end": 9905,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 9898,
											"end": 9901,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9839,
											"end": 9906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 9839,
											"end": 9906,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9839,
											"end": 9906,
											"name": "tag",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 9839,
											"end": 9906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9832,
											"end": 9906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9832,
											"end": 9906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9915,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 10004,
											"end": 10007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9915,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 9915,
											"end": 10008,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9915,
											"end": 10008,
											"name": "tag",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 9915,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10033,
											"end": 10035,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10028,
											"end": 10031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10024,
											"end": 10036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10017,
											"end": 10036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10017,
											"end": 10036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 10042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 10042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 10042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 10042,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10048,
											"end": 10467,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 10048,
											"end": 10467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10214,
											"end": 10218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10252,
											"end": 10254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10241,
											"end": 10250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10237,
											"end": 10255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10229,
											"end": 10255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10229,
											"end": 10255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10301,
											"end": 10310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10291,
											"end": 10311,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10287,
											"end": 10288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10276,
											"end": 10285,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10272,
											"end": 10289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10265,
											"end": 10312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 10455,
											"end": 10459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 10329,
											"end": 10460,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10329,
											"end": 10460,
											"name": "tag",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 10329,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10321,
											"end": 10460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10321,
											"end": 10460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10048,
											"end": 10467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10048,
											"end": 10467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10048,
											"end": 10467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10048,
											"end": 10467,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10473,
											"end": 10707,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 10473,
											"end": 10707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10647,
											"name": "PUSH",
											"source": 1,
											"value": "43616E206F6E6C7920636C61696D20746F6B656E732061667465722074686520"
										},
										{
											"begin": 10609,
											"end": 10610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10601,
											"end": 10607,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10590,
											"end": 10648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10682,
											"end": 10699,
											"name": "PUSH",
											"source": 1,
											"value": "73616C652068617320656E6465642E0000000000000000000000000000000000"
										},
										{
											"begin": 10677,
											"end": 10679,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10669,
											"end": 10675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10665,
											"end": 10680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10658,
											"end": 10700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10707,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10713,
											"end": 11079,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 10713,
											"end": 11079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10855,
											"end": 10858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 10940,
											"end": 10942,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 10935,
											"end": 10938,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 10876,
											"end": 10943,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10876,
											"end": 10943,
											"name": "tag",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 10876,
											"end": 10943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10869,
											"end": 10943,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10869,
											"end": 10943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10952,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 11041,
											"end": 11044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10952,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 10952,
											"end": 11045,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10952,
											"end": 11045,
											"name": "tag",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 10952,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11070,
											"end": 11072,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11065,
											"end": 11068,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11061,
											"end": 11073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11054,
											"end": 11073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11054,
											"end": 11073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 11079,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 11079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 11079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 11079,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11085,
											"end": 11504,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 11085,
											"end": 11504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11251,
											"end": 11255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11289,
											"end": 11291,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11274,
											"end": 11292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11266,
											"end": 11292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11266,
											"end": 11292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11338,
											"end": 11347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11332,
											"end": 11336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11324,
											"end": 11325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11313,
											"end": 11322,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11309,
											"end": 11326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11302,
											"end": 11349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11366,
											"end": 11497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 11492,
											"end": 11496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11366,
											"end": 11497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 11366,
											"end": 11497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11366,
											"end": 11497,
											"name": "tag",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 11366,
											"end": 11497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11358,
											"end": 11497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11358,
											"end": 11497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11085,
											"end": 11504,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11085,
											"end": 11504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11085,
											"end": 11504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11085,
											"end": 11504,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11510,
											"end": 11730,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 11510,
											"end": 11730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11684,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F74206465706F736974656420616E79204574686572"
										},
										{
											"begin": 11646,
											"end": 11647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11638,
											"end": 11644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11634,
											"end": 11648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11627,
											"end": 11685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11719,
											"end": 11722,
											"name": "PUSH",
											"source": 1,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11714,
											"end": 11716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11706,
											"end": 11712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11702,
											"end": 11717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11695,
											"end": 11723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11510,
											"end": 11730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11510,
											"end": 11730,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11736,
											"end": 12102,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 11736,
											"end": 12102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 11881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11899,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 11963,
											"end": 11965,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 11958,
											"end": 11961,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11899,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 11899,
											"end": 11966,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11899,
											"end": 11966,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 11899,
											"end": 11966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11892,
											"end": 11966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11892,
											"end": 11966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11975,
											"end": 12068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 12064,
											"end": 12067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11975,
											"end": 12068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 11975,
											"end": 12068,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11975,
											"end": 12068,
											"name": "tag",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 11975,
											"end": 12068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12093,
											"end": 12095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12088,
											"end": 12091,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12077,
											"end": 12096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12077,
											"end": 12096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11736,
											"end": 12102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11736,
											"end": 12102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11736,
											"end": 12102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11736,
											"end": 12102,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12108,
											"end": 12527,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 12108,
											"end": 12527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12274,
											"end": 12278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12312,
											"end": 12314,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12301,
											"end": 12310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12297,
											"end": 12315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12289,
											"end": 12315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12289,
											"end": 12315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12361,
											"end": 12370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12355,
											"end": 12359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12347,
											"end": 12348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12336,
											"end": 12345,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12332,
											"end": 12349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12325,
											"end": 12372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12389,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 12515,
											"end": 12519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12389,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 12389,
											"end": 12520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12389,
											"end": 12520,
											"name": "tag",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 12389,
											"end": 12520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12381,
											"end": 12520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12381,
											"end": 12520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12527,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12533,
											"end": 12680,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 12533,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12634,
											"end": 12645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12671,
											"end": 12674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12680,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12680,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12686,
											"end": 12800,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 12686,
											"end": 12800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12686,
											"end": 12800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12686,
											"end": 12800,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12806,
											"end": 13204,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 12806,
											"end": 13204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12965,
											"end": 12968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12986,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 13067,
											"end": 13068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13062,
											"end": 13065,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12986,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 12986,
											"end": 13069,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12986,
											"end": 13069,
											"name": "tag",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 12986,
											"end": 13069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12979,
											"end": 13069,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12979,
											"end": 13069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13078,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 13167,
											"end": 13170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13078,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 13078,
											"end": 13171,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13078,
											"end": 13171,
											"name": "tag",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 13078,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13196,
											"end": 13197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13191,
											"end": 13194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13187,
											"end": 13198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 13198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 13198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12806,
											"end": 13204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12806,
											"end": 13204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12806,
											"end": 13204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12806,
											"end": 13204,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13210,
											"end": 13589,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 13210,
											"end": 13589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13394,
											"end": 13397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13416,
											"end": 13563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 13559,
											"end": 13562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13416,
											"end": 13563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 13416,
											"end": 13563,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13416,
											"end": 13563,
											"name": "tag",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 13416,
											"end": 13563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13409,
											"end": 13563,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13409,
											"end": 13563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13580,
											"end": 13583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13573,
											"end": 13583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13573,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13589,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13589,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13595,
											"end": 13769,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 13595,
											"end": 13769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13735,
											"end": 13761,
											"name": "PUSH",
											"source": 1,
											"value": "4661696C656420746F207472616E736665722065746865720000000000000000"
										},
										{
											"begin": 13731,
											"end": 13732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13723,
											"end": 13729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13719,
											"end": 13733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13712,
											"end": 13762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13595,
											"end": 13769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13595,
											"end": 13769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13775,
											"end": 14141,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 13775,
											"end": 14141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13917,
											"end": 13920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13938,
											"end": 14005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 14002,
											"end": 14004,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 13997,
											"end": 14000,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13938,
											"end": 14005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 13938,
											"end": 14005,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13938,
											"end": 14005,
											"name": "tag",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 13938,
											"end": 14005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13931,
											"end": 14005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13931,
											"end": 14005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14014,
											"end": 14107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "692"
										},
										{
											"begin": 14103,
											"end": 14106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14014,
											"end": 14107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 14014,
											"end": 14107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14014,
											"end": 14107,
											"name": "tag",
											"source": 1,
											"value": "692"
										},
										{
											"begin": 14014,
											"end": 14107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14132,
											"end": 14134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14127,
											"end": 14130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14123,
											"end": 14135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14116,
											"end": 14135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14116,
											"end": 14135,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13775,
											"end": 14141,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13775,
											"end": 14141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13775,
											"end": 14141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13775,
											"end": 14141,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14147,
											"end": 14566,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 14147,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14313,
											"end": 14317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14351,
											"end": 14353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14340,
											"end": 14349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14336,
											"end": 14354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14328,
											"end": 14354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14328,
											"end": 14354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14400,
											"end": 14409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14394,
											"end": 14398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14390,
											"end": 14410,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14386,
											"end": 14387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14375,
											"end": 14384,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14371,
											"end": 14388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14411,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14428,
											"end": 14559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 14554,
											"end": 14558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14428,
											"end": 14559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 14428,
											"end": 14559,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14428,
											"end": 14559,
											"name": "tag",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 14428,
											"end": 14559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14420,
											"end": 14559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14420,
											"end": 14559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14147,
											"end": 14566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14147,
											"end": 14566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14147,
											"end": 14566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14147,
											"end": 14566,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14572,
											"end": 14657,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 14572,
											"end": 14657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14617,
											"end": 14624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14646,
											"end": 14651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14572,
											"end": 14657,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14572,
											"end": 14657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14572,
											"end": 14657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14572,
											"end": 14657,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14663,
											"end": 14821,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 14663,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14721,
											"end": 14730,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14754,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 14772,
											"end": 14814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 14781,
											"end": 14813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 14807,
											"end": 14812,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14781,
											"end": 14813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 14781,
											"end": 14813,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14781,
											"end": 14813,
											"name": "tag",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 14781,
											"end": 14813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 14772,
											"end": 14814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14772,
											"end": 14814,
											"name": "tag",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 14772,
											"end": 14814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14754,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 14754,
											"end": 14815,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14754,
											"end": 14815,
											"name": "tag",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 14754,
											"end": 14815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 14815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 14815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14663,
											"end": 14821,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14663,
											"end": 14821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14663,
											"end": 14821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14663,
											"end": 14821,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14827,
											"end": 14974,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 14827,
											"end": 14974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14922,
											"end": 14967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 14961,
											"end": 14966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14922,
											"end": 14967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 14922,
											"end": 14967,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14922,
											"end": 14967,
											"name": "tag",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 14922,
											"end": 14967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 14920,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14910,
											"end": 14968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14827,
											"end": 14974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14827,
											"end": 14974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14827,
											"end": 14974,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14980,
											"end": 15454,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 14980,
											"end": 15454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15145,
											"end": 15149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15183,
											"end": 15185,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15172,
											"end": 15181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15168,
											"end": 15186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15160,
											"end": 15186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15160,
											"end": 15186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15196,
											"end": 15267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 15264,
											"end": 15265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15253,
											"end": 15262,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15249,
											"end": 15266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15240,
											"end": 15246,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15196,
											"end": 15267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 15196,
											"end": 15267,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15196,
											"end": 15267,
											"name": "tag",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 15196,
											"end": 15267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15277,
											"end": 15357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 15353,
											"end": 15355,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15342,
											"end": 15351,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15338,
											"end": 15356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15329,
											"end": 15335,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15277,
											"end": 15357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 15277,
											"end": 15357,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15277,
											"end": 15357,
											"name": "tag",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 15277,
											"end": 15357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15367,
											"end": 15447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 15443,
											"end": 15445,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15432,
											"end": 15441,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15428,
											"end": 15446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15419,
											"end": 15425,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15367,
											"end": 15447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 15367,
											"end": 15447,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15367,
											"end": 15447,
											"name": "tag",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 15367,
											"end": 15447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14980,
											"end": 15454,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14980,
											"end": 15454,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14980,
											"end": 15454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14980,
											"end": 15454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14980,
											"end": 15454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14980,
											"end": 15454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14980,
											"end": 15454,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15460,
											"end": 15640,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 15460,
											"end": 15640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15508,
											"end": 15585,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15505,
											"end": 15506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15498,
											"end": 15586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15605,
											"end": 15609,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 15602,
											"end": 15603,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15595,
											"end": 15610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15629,
											"end": 15633,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15626,
											"end": 15627,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15619,
											"end": 15634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15646,
											"end": 15879,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 15646,
											"end": 15879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15685,
											"end": 15688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15708,
											"end": 15732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 15726,
											"end": 15731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15708,
											"end": 15732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 15708,
											"end": 15732,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15708,
											"end": 15732,
											"name": "tag",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 15708,
											"end": 15732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15699,
											"end": 15732,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15699,
											"end": 15732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15754,
											"end": 15820,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15747,
											"end": 15752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15744,
											"end": 15821,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15741,
											"end": 15844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 15741,
											"end": 15844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15824,
											"end": 15842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 15824,
											"end": 15842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 15824,
											"end": 15842,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15824,
											"end": 15842,
											"name": "tag",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 15824,
											"end": 15842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15741,
											"end": 15844,
											"name": "tag",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 15741,
											"end": 15844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15871,
											"end": 15872,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15864,
											"end": 15869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15860,
											"end": 15873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15853,
											"end": 15873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15853,
											"end": 15873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15646,
											"end": 15879,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15646,
											"end": 15879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15646,
											"end": 15879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15646,
											"end": 15879,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15885,
											"end": 16051,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 15885,
											"end": 16051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16025,
											"end": 16043,
											"name": "PUSH",
											"source": 1,
											"value": "416C726561647920737461727465642E00000000000000000000000000000000"
										},
										{
											"begin": 16021,
											"end": 16022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16013,
											"end": 16019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16009,
											"end": 16023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16002,
											"end": 16044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15885,
											"end": 16051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15885,
											"end": 16051,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16057,
											"end": 16423,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 16057,
											"end": 16423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16199,
											"end": 16202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 16284,
											"end": 16286,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 16279,
											"end": 16282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16220,
											"end": 16287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 16220,
											"end": 16287,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16220,
											"end": 16287,
											"name": "tag",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 16220,
											"end": 16287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16213,
											"end": 16287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16213,
											"end": 16287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16296,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 16385,
											"end": 16388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16296,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 16296,
											"end": 16389,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16296,
											"end": 16389,
											"name": "tag",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 16296,
											"end": 16389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16414,
											"end": 16416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16409,
											"end": 16412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16405,
											"end": 16417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16398,
											"end": 16417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16398,
											"end": 16417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16057,
											"end": 16423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16057,
											"end": 16423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16057,
											"end": 16423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16057,
											"end": 16423,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16429,
											"end": 16848,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 16429,
											"end": 16848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16595,
											"end": 16599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16633,
											"end": 16635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16622,
											"end": 16631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16618,
											"end": 16636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16610,
											"end": 16636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16610,
											"end": 16636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16682,
											"end": 16691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16676,
											"end": 16680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16672,
											"end": 16692,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16668,
											"end": 16669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16657,
											"end": 16666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16653,
											"end": 16670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16693,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16710,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 16836,
											"end": 16840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16710,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 16710,
											"end": 16841,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16710,
											"end": 16841,
											"name": "tag",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 16710,
											"end": 16841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16848,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16854,
											"end": 17082,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 16854,
											"end": 17082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16994,
											"end": 17028,
											"name": "PUSH",
											"source": 1,
											"value": "43616E206F6E6C792066696E697368206166746572207468652073616C652068"
										},
										{
											"begin": 16990,
											"end": 16991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16982,
											"end": 16988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16978,
											"end": 16992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16971,
											"end": 17029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17063,
											"end": 17074,
											"name": "PUSH",
											"source": 1,
											"value": "617320656E6465642E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17058,
											"end": 17060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17050,
											"end": 17056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17046,
											"end": 17061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17039,
											"end": 17075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16854,
											"end": 17082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16854,
											"end": 17082,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17088,
											"end": 17454,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 17088,
											"end": 17454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17230,
											"end": 17233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17251,
											"end": 17318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 17315,
											"end": 17317,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 17310,
											"end": 17313,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17251,
											"end": 17318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 17251,
											"end": 17318,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17251,
											"end": 17318,
											"name": "tag",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 17251,
											"end": 17318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17244,
											"end": 17318,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17244,
											"end": 17318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17327,
											"end": 17420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 17416,
											"end": 17419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17327,
											"end": 17420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 17327,
											"end": 17420,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17327,
											"end": 17420,
											"name": "tag",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 17327,
											"end": 17420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17445,
											"end": 17447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17440,
											"end": 17443,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17436,
											"end": 17448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17429,
											"end": 17448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17429,
											"end": 17448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17088,
											"end": 17454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17088,
											"end": 17454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17088,
											"end": 17454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17088,
											"end": 17454,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17460,
											"end": 17879,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 17460,
											"end": 17879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17626,
											"end": 17630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17664,
											"end": 17666,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17653,
											"end": 17662,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17649,
											"end": 17667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17641,
											"end": 17667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17641,
											"end": 17667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17713,
											"end": 17722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17707,
											"end": 17711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17703,
											"end": 17723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17699,
											"end": 17700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17688,
											"end": 17697,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17684,
											"end": 17701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17677,
											"end": 17724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17741,
											"end": 17872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "722"
										},
										{
											"begin": 17867,
											"end": 17871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17741,
											"end": 17872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 17741,
											"end": 17872,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17741,
											"end": 17872,
											"name": "tag",
											"source": 1,
											"value": "722"
										},
										{
											"begin": 17741,
											"end": 17872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17733,
											"end": 17872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17733,
											"end": 17872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17460,
											"end": 17879,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17460,
											"end": 17879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17460,
											"end": 17879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17460,
											"end": 17879,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17885,
											"end": 18052,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 17885,
											"end": 18052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18025,
											"end": 18044,
											"name": "PUSH",
											"source": 1,
											"value": "416C72656164792066696E69736865642E000000000000000000000000000000"
										},
										{
											"begin": 18021,
											"end": 18022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18013,
											"end": 18019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18009,
											"end": 18023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18002,
											"end": 18045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17885,
											"end": 18052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17885,
											"end": 18052,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18058,
											"end": 18424,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 18058,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18200,
											"end": 18203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18221,
											"end": 18288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 18285,
											"end": 18287,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 18280,
											"end": 18283,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18221,
											"end": 18288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 18221,
											"end": 18288,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18221,
											"end": 18288,
											"name": "tag",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 18221,
											"end": 18288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18214,
											"end": 18288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18297,
											"end": 18390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 18386,
											"end": 18389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18297,
											"end": 18390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 18297,
											"end": 18390,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18297,
											"end": 18390,
											"name": "tag",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 18297,
											"end": 18390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18410,
											"end": 18413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18406,
											"end": 18418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18399,
											"end": 18418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18399,
											"end": 18418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18058,
											"end": 18424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18058,
											"end": 18424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18058,
											"end": 18424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18058,
											"end": 18424,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18430,
											"end": 18849,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 18430,
											"end": 18849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18596,
											"end": 18600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18634,
											"end": 18636,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18623,
											"end": 18632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18619,
											"end": 18637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18611,
											"end": 18637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18611,
											"end": 18637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18692,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18677,
											"end": 18681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18673,
											"end": 18693,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18669,
											"end": 18670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18658,
											"end": 18667,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18654,
											"end": 18671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18647,
											"end": 18694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18711,
											"end": 18842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 18837,
											"end": 18841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18711,
											"end": 18842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 18711,
											"end": 18842,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18711,
											"end": 18842,
											"name": "tag",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 18711,
											"end": 18842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18703,
											"end": 18842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18703,
											"end": 18842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18430,
											"end": 18849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18430,
											"end": 18849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18430,
											"end": 18849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18430,
											"end": 18849,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18855,
											"end": 19080,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 18855,
											"end": 19080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18995,
											"end": 19029,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 18991,
											"end": 18992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18983,
											"end": 18989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18979,
											"end": 18993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18972,
											"end": 19030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19064,
											"end": 19072,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19059,
											"end": 19061,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19051,
											"end": 19057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19047,
											"end": 19062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19040,
											"end": 19073,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18855,
											"end": 19080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18855,
											"end": 19080,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19086,
											"end": 19452,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 19086,
											"end": 19452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19228,
											"end": 19231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19249,
											"end": 19316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 19313,
											"end": 19315,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 19308,
											"end": 19311,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19249,
											"end": 19316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 19249,
											"end": 19316,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19249,
											"end": 19316,
											"name": "tag",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 19249,
											"end": 19316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19242,
											"end": 19316,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19242,
											"end": 19316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19325,
											"end": 19418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 19414,
											"end": 19417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19325,
											"end": 19418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 19325,
											"end": 19418,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19325,
											"end": 19418,
											"name": "tag",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 19325,
											"end": 19418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19443,
											"end": 19445,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19438,
											"end": 19441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19434,
											"end": 19446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19427,
											"end": 19446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19427,
											"end": 19446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19086,
											"end": 19452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19086,
											"end": 19452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19086,
											"end": 19452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19086,
											"end": 19452,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19458,
											"end": 19877,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 19458,
											"end": 19877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19624,
											"end": 19628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19662,
											"end": 19664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19651,
											"end": 19660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19647,
											"end": 19665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19639,
											"end": 19665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19639,
											"end": 19665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19711,
											"end": 19720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19705,
											"end": 19709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19701,
											"end": 19721,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19697,
											"end": 19698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19686,
											"end": 19695,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19682,
											"end": 19699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19675,
											"end": 19722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19739,
											"end": 19870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 19865,
											"end": 19869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19739,
											"end": 19870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 19739,
											"end": 19870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19739,
											"end": 19870,
											"name": "tag",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 19739,
											"end": 19870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19731,
											"end": 19870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19731,
											"end": 19870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19458,
											"end": 19877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19458,
											"end": 19877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19458,
											"end": 19877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19458,
											"end": 19877,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19883,
											"end": 20064,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 19883,
											"end": 20064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20023,
											"end": 20056,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 20019,
											"end": 20020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20011,
											"end": 20017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20007,
											"end": 20021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20000,
											"end": 20057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19883,
											"end": 20064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19883,
											"end": 20064,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20070,
											"end": 20436,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 20070,
											"end": 20436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20212,
											"end": 20215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20233,
											"end": 20300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 20297,
											"end": 20299,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 20292,
											"end": 20295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20233,
											"end": 20300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 20233,
											"end": 20300,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20233,
											"end": 20300,
											"name": "tag",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 20233,
											"end": 20300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20226,
											"end": 20300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20226,
											"end": 20300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20309,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "738"
										},
										{
											"begin": 20398,
											"end": 20401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20309,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 20309,
											"end": 20402,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20309,
											"end": 20402,
											"name": "tag",
											"source": 1,
											"value": "738"
										},
										{
											"begin": 20309,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20427,
											"end": 20429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20422,
											"end": 20425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20418,
											"end": 20430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20411,
											"end": 20430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20411,
											"end": 20430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20070,
											"end": 20436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20070,
											"end": 20436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20070,
											"end": 20436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20070,
											"end": 20436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20442,
											"end": 20861,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 20442,
											"end": 20861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20646,
											"end": 20648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20635,
											"end": 20644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20631,
											"end": 20649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20623,
											"end": 20649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20623,
											"end": 20649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20695,
											"end": 20704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20689,
											"end": 20693,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20685,
											"end": 20705,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20681,
											"end": 20682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20670,
											"end": 20679,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20666,
											"end": 20683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20659,
											"end": 20706,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 20849,
											"end": 20853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 20723,
											"end": 20854,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20723,
											"end": 20854,
											"name": "tag",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 20723,
											"end": 20854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20715,
											"end": 20854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20715,
											"end": 20854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 20861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 20861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 20861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 20861,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20867,
											"end": 21199,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 20867,
											"end": 21199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20988,
											"end": 20992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21026,
											"end": 21028,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21015,
											"end": 21024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21011,
											"end": 21029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21003,
											"end": 21029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21003,
											"end": 21029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21039,
											"end": 21110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 21107,
											"end": 21108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21096,
											"end": 21105,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21092,
											"end": 21109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21083,
											"end": 21089,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21039,
											"end": 21110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 21039,
											"end": 21110,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21039,
											"end": 21110,
											"name": "tag",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 21039,
											"end": 21110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21120,
											"end": 21192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 21188,
											"end": 21190,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21177,
											"end": 21186,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21173,
											"end": 21191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21164,
											"end": 21170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21120,
											"end": 21192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 21120,
											"end": 21192,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21120,
											"end": 21192,
											"name": "tag",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 21120,
											"end": 21192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20867,
											"end": 21199,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 20867,
											"end": 21199,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20867,
											"end": 21199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20867,
											"end": 21199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20867,
											"end": 21199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20867,
											"end": 21199,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21205,
											"end": 21366,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 21205,
											"end": 21366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21345,
											"end": 21358,
											"name": "PUSH",
											"source": 1,
											"value": "6E6F742073746172746564000000000000000000000000000000000000000000"
										},
										{
											"begin": 21341,
											"end": 21342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21333,
											"end": 21339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21329,
											"end": 21343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21322,
											"end": 21359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21205,
											"end": 21366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21205,
											"end": 21366,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21372,
											"end": 21738,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 21372,
											"end": 21738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21514,
											"end": 21517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21535,
											"end": 21602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 21599,
											"end": 21601,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 21594,
											"end": 21597,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21535,
											"end": 21602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 21535,
											"end": 21602,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21535,
											"end": 21602,
											"name": "tag",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 21535,
											"end": 21602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21528,
											"end": 21602,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21528,
											"end": 21602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21611,
											"end": 21704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 21700,
											"end": 21703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21611,
											"end": 21704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 21611,
											"end": 21704,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21611,
											"end": 21704,
											"name": "tag",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 21611,
											"end": 21704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21729,
											"end": 21731,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21724,
											"end": 21727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21720,
											"end": 21732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21713,
											"end": 21732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21713,
											"end": 21732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21372,
											"end": 21738,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21372,
											"end": 21738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21372,
											"end": 21738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21372,
											"end": 21738,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21744,
											"end": 22163,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 21744,
											"end": 22163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21910,
											"end": 21914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21948,
											"end": 21950,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21937,
											"end": 21946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21933,
											"end": 21951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21925,
											"end": 21951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21925,
											"end": 21951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21997,
											"end": 22006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21991,
											"end": 21995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21987,
											"end": 22007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21983,
											"end": 21984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21972,
											"end": 21981,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21968,
											"end": 21985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21961,
											"end": 22008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22025,
											"end": 22156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 22151,
											"end": 22155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22025,
											"end": 22156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 22025,
											"end": 22156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22025,
											"end": 22156,
											"name": "tag",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 22025,
											"end": 22156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22017,
											"end": 22156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22017,
											"end": 22156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21744,
											"end": 22163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21744,
											"end": 22163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21744,
											"end": 22163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21744,
											"end": 22163,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22169,
											"end": 22351,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 22169,
											"end": 22351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22309,
											"end": 22343,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 22305,
											"end": 22306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22297,
											"end": 22303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22293,
											"end": 22307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22286,
											"end": 22344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22169,
											"end": 22351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22169,
											"end": 22351,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22357,
											"end": 22723,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 22357,
											"end": 22723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22499,
											"end": 22502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22520,
											"end": 22587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 22584,
											"end": 22586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22579,
											"end": 22582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22520,
											"end": 22587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 22520,
											"end": 22587,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22520,
											"end": 22587,
											"name": "tag",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 22520,
											"end": 22587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22513,
											"end": 22587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22513,
											"end": 22587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22596,
											"end": 22689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 22685,
											"end": 22688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22596,
											"end": 22689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 22596,
											"end": 22689,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22596,
											"end": 22689,
											"name": "tag",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 22596,
											"end": 22689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22709,
											"end": 22712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22705,
											"end": 22717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22698,
											"end": 22717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22698,
											"end": 22717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22357,
											"end": 22723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22357,
											"end": 22723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22357,
											"end": 22723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22357,
											"end": 22723,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22729,
											"end": 23148,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 22729,
											"end": 23148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22895,
											"end": 22899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22933,
											"end": 22935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22922,
											"end": 22931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22918,
											"end": 22936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22910,
											"end": 22936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22910,
											"end": 22936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22982,
											"end": 22991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22976,
											"end": 22980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22972,
											"end": 22992,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22968,
											"end": 22969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22957,
											"end": 22966,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22953,
											"end": 22970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22946,
											"end": 22993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23010,
											"end": 23141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 23136,
											"end": 23140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23010,
											"end": 23141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 23010,
											"end": 23141,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23010,
											"end": 23141,
											"name": "tag",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 23010,
											"end": 23141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23002,
											"end": 23141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23002,
											"end": 23141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22729,
											"end": 23148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22729,
											"end": 23148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22729,
											"end": 23148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22729,
											"end": 23148,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23154,
											"end": 23318,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 23154,
											"end": 23318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23294,
											"end": 23310,
											"name": "PUSH",
											"source": 1,
											"value": "6E6F20636F6D6D69746D656E7473000000000000000000000000000000000000"
										},
										{
											"begin": 23290,
											"end": 23291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23282,
											"end": 23288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23278,
											"end": 23292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23271,
											"end": 23311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23154,
											"end": 23318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23154,
											"end": 23318,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23324,
											"end": 23690,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 23324,
											"end": 23690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23466,
											"end": 23469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23487,
											"end": 23554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 23551,
											"end": 23553,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 23546,
											"end": 23549,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23487,
											"end": 23554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 23487,
											"end": 23554,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23487,
											"end": 23554,
											"name": "tag",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 23487,
											"end": 23554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23480,
											"end": 23554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23480,
											"end": 23554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23563,
											"end": 23656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 23652,
											"end": 23655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23563,
											"end": 23656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 23563,
											"end": 23656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23563,
											"end": 23656,
											"name": "tag",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 23563,
											"end": 23656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23681,
											"end": 23683,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23676,
											"end": 23679,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23672,
											"end": 23684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23665,
											"end": 23684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23665,
											"end": 23684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23324,
											"end": 23690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23324,
											"end": 23690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23324,
											"end": 23690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23324,
											"end": 23690,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23696,
											"end": 24115,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 23696,
											"end": 24115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23862,
											"end": 23866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23900,
											"end": 23902,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23889,
											"end": 23898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23885,
											"end": 23903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23877,
											"end": 23903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23877,
											"end": 23903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23949,
											"end": 23958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23943,
											"end": 23947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23939,
											"end": 23959,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23935,
											"end": 23936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23924,
											"end": 23933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23920,
											"end": 23937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23913,
											"end": 23960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23977,
											"end": 24108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 24103,
											"end": 24107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23977,
											"end": 24108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 23977,
											"end": 24108,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23977,
											"end": 24108,
											"name": "tag",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 23977,
											"end": 24108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23969,
											"end": 24108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23969,
											"end": 24108,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23696,
											"end": 24115,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23696,
											"end": 24115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23696,
											"end": 24115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23696,
											"end": 24115,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24121,
											"end": 24563,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 24121,
											"end": 24563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24270,
											"end": 24274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24308,
											"end": 24310,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 24297,
											"end": 24306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24293,
											"end": 24311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24285,
											"end": 24311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24285,
											"end": 24311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24321,
											"end": 24392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "763"
										},
										{
											"begin": 24389,
											"end": 24390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24378,
											"end": 24387,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24374,
											"end": 24391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24365,
											"end": 24371,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24321,
											"end": 24392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 24321,
											"end": 24392,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24321,
											"end": 24392,
											"name": "tag",
											"source": 1,
											"value": "763"
										},
										{
											"begin": 24321,
											"end": 24392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24402,
											"end": 24474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 24470,
											"end": 24472,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24459,
											"end": 24468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24455,
											"end": 24473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24446,
											"end": 24452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24402,
											"end": 24474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 24402,
											"end": 24474,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24402,
											"end": 24474,
											"name": "tag",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 24402,
											"end": 24474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24484,
											"end": 24556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 24552,
											"end": 24554,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24541,
											"end": 24550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24537,
											"end": 24555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24528,
											"end": 24534,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24484,
											"end": 24556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 24484,
											"end": 24556,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24484,
											"end": 24556,
											"name": "tag",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 24484,
											"end": 24556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24121,
											"end": 24563,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 24121,
											"end": 24563,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24121,
											"end": 24563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24121,
											"end": 24563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24121,
											"end": 24563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24121,
											"end": 24563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24121,
											"end": 24563,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24569,
											"end": 24685,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 24569,
											"end": 24685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24639,
											"end": 24660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 24654,
											"end": 24659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24639,
											"end": 24660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 24639,
											"end": 24660,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24639,
											"end": 24660,
											"name": "tag",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 24639,
											"end": 24660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24632,
											"end": 24637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24629,
											"end": 24661,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24619,
											"end": 24679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 24619,
											"end": 24679,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24675,
											"end": 24676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24672,
											"end": 24673,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24665,
											"end": 24677,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24619,
											"end": 24679,
											"name": "tag",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 24619,
											"end": 24679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24569,
											"end": 24685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24569,
											"end": 24685,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24691,
											"end": 24828,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 24691,
											"end": 24828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24745,
											"end": 24750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24776,
											"end": 24782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24770,
											"end": 24783,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24761,
											"end": 24783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24761,
											"end": 24783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 24816,
											"end": 24821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "tag",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24691,
											"end": 24828,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24691,
											"end": 24828,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24691,
											"end": 24828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24691,
											"end": 24828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24691,
											"end": 24828,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24834,
											"end": 25179,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 24834,
											"end": 25179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24901,
											"end": 24907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24950,
											"end": 24952,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24938,
											"end": 24947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24929,
											"end": 24936,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24925,
											"end": 24948,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24921,
											"end": 24953,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 24918,
											"end": 25037,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24918,
											"end": 25037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 24918,
											"end": 25037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24956,
											"end": 25035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "773"
										},
										{
											"begin": 24956,
											"end": 25035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 24956,
											"end": 25035,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24956,
											"end": 25035,
											"name": "tag",
											"source": 1,
											"value": "773"
										},
										{
											"begin": 24956,
											"end": 25035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24918,
											"end": 25037,
											"name": "tag",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 24918,
											"end": 25037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25076,
											"end": 25077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25101,
											"end": 25162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 25154,
											"end": 25161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25145,
											"end": 25151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25134,
											"end": 25143,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 25130,
											"end": 25152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25101,
											"end": 25162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 25101,
											"end": 25162,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25101,
											"end": 25162,
											"name": "tag",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 25101,
											"end": 25162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25091,
											"end": 25162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25091,
											"end": 25162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25047,
											"end": 25172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24834,
											"end": 25179,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24834,
											"end": 25179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24834,
											"end": 25179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24834,
											"end": 25179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24834,
											"end": 25179,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25185,
											"end": 25414,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 25185,
											"end": 25414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25325,
											"end": 25359,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 25321,
											"end": 25322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25313,
											"end": 25319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25309,
											"end": 25323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25302,
											"end": 25360,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25394,
											"end": 25406,
											"name": "PUSH",
											"source": 1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 25389,
											"end": 25391,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25381,
											"end": 25387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25377,
											"end": 25392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25370,
											"end": 25407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25185,
											"end": 25414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25185,
											"end": 25414,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25420,
											"end": 25786,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 25420,
											"end": 25786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25562,
											"end": 25565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25583,
											"end": 25650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "777"
										},
										{
											"begin": 25647,
											"end": 25649,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 25642,
											"end": 25645,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25583,
											"end": 25650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 25583,
											"end": 25650,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25583,
											"end": 25650,
											"name": "tag",
											"source": 1,
											"value": "777"
										},
										{
											"begin": 25583,
											"end": 25650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25576,
											"end": 25650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25576,
											"end": 25650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25659,
											"end": 25752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 25748,
											"end": 25751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25659,
											"end": 25752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 25659,
											"end": 25752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25659,
											"end": 25752,
											"name": "tag",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 25659,
											"end": 25752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25777,
											"end": 25779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25772,
											"end": 25775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25768,
											"end": 25780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25761,
											"end": 25780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25761,
											"end": 25780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25420,
											"end": 25786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25420,
											"end": 25786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25420,
											"end": 25786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25420,
											"end": 25786,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25792,
											"end": 26211,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 25792,
											"end": 26211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25958,
											"end": 25962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25996,
											"end": 25998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25985,
											"end": 25994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25981,
											"end": 25999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25973,
											"end": 25999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25973,
											"end": 25999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26039,
											"end": 26043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26035,
											"end": 26055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26031,
											"end": 26032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26020,
											"end": 26029,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26016,
											"end": 26033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26009,
											"end": 26056,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26073,
											"end": 26204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "780"
										},
										{
											"begin": 26199,
											"end": 26203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26073,
											"end": 26204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 26073,
											"end": 26204,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26073,
											"end": 26204,
											"name": "tag",
											"source": 1,
											"value": "780"
										},
										{
											"begin": 26073,
											"end": 26204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26065,
											"end": 26204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26065,
											"end": 26204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25792,
											"end": 26211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25792,
											"end": 26211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25792,
											"end": 26211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25792,
											"end": 26211,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26217,
											"end": 26442,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 26217,
											"end": 26442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26357,
											"end": 26391,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 26353,
											"end": 26354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26345,
											"end": 26351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26341,
											"end": 26355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26334,
											"end": 26392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26426,
											"end": 26434,
											"name": "PUSH",
											"source": 1,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26421,
											"end": 26423,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26413,
											"end": 26419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26409,
											"end": 26424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26402,
											"end": 26435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26217,
											"end": 26442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26217,
											"end": 26442,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26448,
											"end": 26814,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 26448,
											"end": 26814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26590,
											"end": 26593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26611,
											"end": 26678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "783"
										},
										{
											"begin": 26675,
											"end": 26677,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 26670,
											"end": 26673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26611,
											"end": 26678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 26611,
											"end": 26678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26611,
											"end": 26678,
											"name": "tag",
											"source": 1,
											"value": "783"
										},
										{
											"begin": 26611,
											"end": 26678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26604,
											"end": 26678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26604,
											"end": 26678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26687,
											"end": 26780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 26776,
											"end": 26779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26687,
											"end": 26780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 26687,
											"end": 26780,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26687,
											"end": 26780,
											"name": "tag",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 26687,
											"end": 26780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26805,
											"end": 26807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26800,
											"end": 26803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26796,
											"end": 26808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26789,
											"end": 26808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26789,
											"end": 26808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26448,
											"end": 26814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26448,
											"end": 26814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26448,
											"end": 26814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26448,
											"end": 26814,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26820,
											"end": 27239,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 26820,
											"end": 27239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26986,
											"end": 26990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27024,
											"end": 27026,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27013,
											"end": 27022,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27009,
											"end": 27027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27001,
											"end": 27027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27001,
											"end": 27027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27073,
											"end": 27082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27067,
											"end": 27071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27063,
											"end": 27083,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27059,
											"end": 27060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27048,
											"end": 27057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27044,
											"end": 27061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27037,
											"end": 27084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27101,
											"end": 27232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "786"
										},
										{
											"begin": 27227,
											"end": 27231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27101,
											"end": 27232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 27101,
											"end": 27232,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27101,
											"end": 27232,
											"name": "tag",
											"source": 1,
											"value": "786"
										},
										{
											"begin": 27101,
											"end": 27232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27093,
											"end": 27232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27093,
											"end": 27232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26820,
											"end": 27239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26820,
											"end": 27239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26820,
											"end": 27239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26820,
											"end": 27239,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27245,
											"end": 27343,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 27245,
											"end": 27343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27296,
											"end": 27302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27330,
											"end": 27335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27324,
											"end": 27336,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27314,
											"end": 27336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27314,
											"end": 27336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27245,
											"end": 27343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27245,
											"end": 27343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27245,
											"end": 27343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27245,
											"end": 27343,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27349,
											"end": 27656,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 27349,
											"end": 27656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27417,
											"end": 27418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27427,
											"end": 27540,
											"name": "tag",
											"source": 1,
											"value": "789"
										},
										{
											"begin": 27427,
											"end": 27540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27441,
											"end": 27447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27438,
											"end": 27439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27435,
											"end": 27448,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 27427,
											"end": 27540,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27427,
											"end": 27540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 27427,
											"end": 27540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27526,
											"end": 27527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27521,
											"end": 27524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27517,
											"end": 27528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27511,
											"end": 27529,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27507,
											"end": 27508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27502,
											"end": 27505,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27498,
											"end": 27509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27491,
											"end": 27530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27463,
											"end": 27465,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27460,
											"end": 27461,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27456,
											"end": 27466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27451,
											"end": 27466,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27451,
											"end": 27466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27427,
											"end": 27540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "789"
										},
										{
											"begin": 27427,
											"end": 27540,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27427,
											"end": 27540,
											"name": "tag",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 27427,
											"end": 27540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27558,
											"end": 27564,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27555,
											"end": 27556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27552,
											"end": 27565,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 27549,
											"end": 27650,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27549,
											"end": 27650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "792"
										},
										{
											"begin": 27549,
											"end": 27650,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27638,
											"end": 27639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27629,
											"end": 27635,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27624,
											"end": 27627,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27620,
											"end": 27636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27613,
											"end": 27640,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27549,
											"end": 27650,
											"name": "tag",
											"source": 1,
											"value": "792"
										},
										{
											"begin": 27549,
											"end": 27650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27398,
											"end": 27656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27349,
											"end": 27656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27349,
											"end": 27656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27349,
											"end": 27656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27349,
											"end": 27656,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27662,
											"end": 28035,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 27662,
											"end": 28035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27766,
											"end": 27769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27794,
											"end": 27832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 27826,
											"end": 27831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27794,
											"end": 27832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 27794,
											"end": 27832,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27794,
											"end": 27832,
											"name": "tag",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 27794,
											"end": 27832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27848,
											"end": 27936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "795"
										},
										{
											"begin": 27929,
											"end": 27935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27924,
											"end": 27927,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 27848,
											"end": 27936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 27848,
											"end": 27936,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27848,
											"end": 27936,
											"name": "tag",
											"source": 1,
											"value": "795"
										},
										{
											"begin": 27848,
											"end": 27936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27936,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27945,
											"end": 27997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "796"
										},
										{
											"begin": 27990,
											"end": 27996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27985,
											"end": 27988,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 27978,
											"end": 27982,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27971,
											"end": 27976,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 27967,
											"end": 27983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27945,
											"end": 27997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 27945,
											"end": 27997,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27945,
											"end": 27997,
											"name": "tag",
											"source": 1,
											"value": "796"
										},
										{
											"begin": 27945,
											"end": 27997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28022,
											"end": 28028,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28017,
											"end": 28020,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28013,
											"end": 28029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28006,
											"end": 28029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28006,
											"end": 28029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27770,
											"end": 28035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27662,
											"end": 28035,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 27662,
											"end": 28035,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27662,
											"end": 28035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27662,
											"end": 28035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27662,
											"end": 28035,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28041,
											"end": 28312,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 28041,
											"end": 28312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28171,
											"end": 28174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28193,
											"end": 28286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "798"
										},
										{
											"begin": 28282,
											"end": 28285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28273,
											"end": 28279,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28193,
											"end": 28286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 28193,
											"end": 28286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28193,
											"end": 28286,
											"name": "tag",
											"source": 1,
											"value": "798"
										},
										{
											"begin": 28193,
											"end": 28286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28303,
											"end": 28306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28296,
											"end": 28306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28296,
											"end": 28306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28041,
											"end": 28312,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28041,
											"end": 28312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28041,
											"end": 28312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28041,
											"end": 28312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28041,
											"end": 28312,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28318,
											"end": 28497,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 28318,
											"end": 28497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28458,
											"end": 28489,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 28454,
											"end": 28455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28446,
											"end": 28452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28442,
											"end": 28456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28435,
											"end": 28490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28318,
											"end": 28497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28318,
											"end": 28497,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28503,
											"end": 28869,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 28503,
											"end": 28869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28645,
											"end": 28648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28666,
											"end": 28733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "801"
										},
										{
											"begin": 28730,
											"end": 28732,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 28725,
											"end": 28728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28666,
											"end": 28733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 28666,
											"end": 28733,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28666,
											"end": 28733,
											"name": "tag",
											"source": 1,
											"value": "801"
										},
										{
											"begin": 28666,
											"end": 28733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28659,
											"end": 28733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28659,
											"end": 28733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28742,
											"end": 28835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "802"
										},
										{
											"begin": 28831,
											"end": 28834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28742,
											"end": 28835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 28742,
											"end": 28835,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28742,
											"end": 28835,
											"name": "tag",
											"source": 1,
											"value": "802"
										},
										{
											"begin": 28742,
											"end": 28835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28860,
											"end": 28862,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28855,
											"end": 28858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28851,
											"end": 28863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28844,
											"end": 28863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28844,
											"end": 28863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28503,
											"end": 28869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28503,
											"end": 28869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28503,
											"end": 28869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28503,
											"end": 28869,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28875,
											"end": 29294,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 28875,
											"end": 29294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29041,
											"end": 29045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29079,
											"end": 29081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29068,
											"end": 29077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29064,
											"end": 29082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29056,
											"end": 29082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29056,
											"end": 29082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29128,
											"end": 29137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29122,
											"end": 29126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29118,
											"end": 29138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29114,
											"end": 29115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29103,
											"end": 29112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29099,
											"end": 29116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29092,
											"end": 29139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29156,
											"end": 29287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "804"
										},
										{
											"begin": 29282,
											"end": 29286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29156,
											"end": 29287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 29156,
											"end": 29287,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 29156,
											"end": 29287,
											"name": "tag",
											"source": 1,
											"value": "804"
										},
										{
											"begin": 29156,
											"end": 29287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29148,
											"end": 29287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29148,
											"end": 29287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28875,
											"end": 29294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28875,
											"end": 29294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28875,
											"end": 29294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28875,
											"end": 29294,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29300,
											"end": 29399,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 29300,
											"end": 29399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29352,
											"end": 29358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29386,
											"end": 29391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29380,
											"end": 29392,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29370,
											"end": 29392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29370,
											"end": 29392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29300,
											"end": 29399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29300,
											"end": 29399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29300,
											"end": 29399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29300,
											"end": 29399,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29405,
											"end": 29507,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 29405,
											"end": 29507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29446,
											"end": 29452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29497,
											"end": 29499,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 29493,
											"end": 29500,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 29488,
											"end": 29490,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 29481,
											"end": 29486,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29477,
											"end": 29491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29473,
											"end": 29501,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 29463,
											"end": 29501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29463,
											"end": 29501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29405,
											"end": 29507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29405,
											"end": 29507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29405,
											"end": 29507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29405,
											"end": 29507,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29513,
											"end": 29877,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 29513,
											"end": 29877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29601,
											"end": 29604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29629,
											"end": 29668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "808"
										},
										{
											"begin": 29662,
											"end": 29667,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29629,
											"end": 29668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 29629,
											"end": 29668,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 29629,
											"end": 29668,
											"name": "tag",
											"source": 1,
											"value": "808"
										},
										{
											"begin": 29629,
											"end": 29668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29684,
											"end": 29755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 29748,
											"end": 29754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29743,
											"end": 29746,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 29684,
											"end": 29755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 29684,
											"end": 29755,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 29684,
											"end": 29755,
											"name": "tag",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 29684,
											"end": 29755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29677,
											"end": 29755,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 29677,
											"end": 29755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29764,
											"end": 29816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "810"
										},
										{
											"begin": 29809,
											"end": 29815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29804,
											"end": 29807,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 29797,
											"end": 29801,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29790,
											"end": 29795,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 29786,
											"end": 29802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29764,
											"end": 29816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 29764,
											"end": 29816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 29764,
											"end": 29816,
											"name": "tag",
											"source": 1,
											"value": "810"
										},
										{
											"begin": 29764,
											"end": 29816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29841,
											"end": 29870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "811"
										},
										{
											"begin": 29863,
											"end": 29869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29841,
											"end": 29870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 29841,
											"end": 29870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 29841,
											"end": 29870,
											"name": "tag",
											"source": 1,
											"value": "811"
										},
										{
											"begin": 29841,
											"end": 29870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29836,
											"end": 29839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 29832,
											"end": 29871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29825,
											"end": 29871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29825,
											"end": 29871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29605,
											"end": 29877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29513,
											"end": 29877,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 29513,
											"end": 29877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29513,
											"end": 29877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29513,
											"end": 29877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29513,
											"end": 29877,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29883,
											"end": 30196,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 29883,
											"end": 30196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29996,
											"end": 30000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30034,
											"end": 30036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30023,
											"end": 30032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30019,
											"end": 30037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30011,
											"end": 30037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30011,
											"end": 30037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30083,
											"end": 30092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30077,
											"end": 30081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30073,
											"end": 30093,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30069,
											"end": 30070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30058,
											"end": 30067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30054,
											"end": 30071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30047,
											"end": 30094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30111,
											"end": 30189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "813"
										},
										{
											"begin": 30184,
											"end": 30188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30175,
											"end": 30181,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 30111,
											"end": 30189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 30111,
											"end": 30189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30111,
											"end": 30189,
											"name": "tag",
											"source": 1,
											"value": "813"
										},
										{
											"begin": 30111,
											"end": 30189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30103,
											"end": 30189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30103,
											"end": 30189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29883,
											"end": 30196,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 29883,
											"end": 30196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29883,
											"end": 30196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29883,
											"end": 30196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29883,
											"end": 30196,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addToWhitelist(address[])": "7f649783",
							"burnAddress()": "70d5ae05",
							"claim()": "4e71d92d",
							"claim2()": "01eaaec4",
							"commit()": "3c7a3aff",
							"commitments(address)": "e8fcf723",
							"emissionToken()": "e2099438",
							"emissionTokenSaleAmount()": "a8ea6f4c",
							"endTime()": "3197cbb6",
							"ethersToRaise()": "32acd355",
							"finalEmissions(address)": "1048ab28",
							"finalTokens(address)": "4ec01774",
							"finish()": "d56b2889",
							"finished()": "bef4876b",
							"isOnWhitelist(address)": "3a3ab672",
							"maxCommit()": "483383c8",
							"minCommit()": "2bcbf7cd",
							"missedEmissions(address)": "599e10ce",
							"owner()": "8da5cb5b",
							"receiveTime()": "8e05fb74",
							"refundThreshold()": "16fc4869",
							"removeFromWhitelist(address[])": "548db174",
							"renounceOwnership()": "715018a6",
							"salesToken()": "72da776e",
							"simulateClaim()": "12adecda",
							"simulateClaimNoUpdate()": "94ef7e62",
							"start()": "be9a6555",
							"startTime()": "78e97925",
							"started()": "1f2698ab",
							"tokensToSell()": "3d956691",
							"totalCommitments()": "78bb86d3",
							"totalEmission()": "4d412357",
							"transferOwnership(address)": "f2fde38b",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensToSell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ethersToRaise\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refundThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_receiveTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minCommit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxCommit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalEmission\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_burnAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_emissionTokenSaleAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emissionBonus\",\"type\":\"uint256\"}],\"name\":\"Claim2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Commit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"toAddAddresses\",\"type\":\"address[]\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emissionToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emissionTokenSaleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethersToRaise\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"finalEmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"finalTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finish\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isOnWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCommit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minCommit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"missedEmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiveTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"toRemoveAddresses\",\"type\":\"address[]\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salesToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"simulateClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"simulateClaimNoUpdate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"started\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensToSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCommitments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalEmission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToWhitelist(address[])\":{\"notice\":\"Add to whitelist\"},\"removeFromWhitelist(address[])\":{\"notice\":\"Remove from whitelist\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/ico.sol\":\"OverflowICO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"launchpad/ico.sol\":{\"keccak256\":\"0x1682971126e3105932579dd1dad27f26dd4224abb0d2d39aeb09f9c3d0fccd8c\",\"urls\":[\"bzz-raw://e0a873f643436e9f1f6512a415f25e74b9ac62ec8160d9928158c85357585093\",\"dweb:/ipfs/QmYohrpuWdBDaFgs3Kr4HkCvrbTeHW5idnQJBgAwNg4VnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 792,
								"contract": "launchpad/ico.sol:OverflowICO",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 724,
								"contract": "launchpad/ico.sol:OverflowICO",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 2331,
								"contract": "launchpad/ico.sol:OverflowICO",
								"label": "started",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 2333,
								"contract": "launchpad/ico.sol:OverflowICO",
								"label": "finished",
								"offset": 1,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 2335,
								"contract": "launchpad/ico.sol:OverflowICO",
								"label": "emissionPerEther",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2337,
								"contract": "launchpad/ico.sol:OverflowICO",
								"label": "lastUpdate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 2339,
								"contract": "launchpad/ico.sol:OverflowICO",
								"label": "totalCommitments",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 2343,
								"contract": "launchpad/ico.sol:OverflowICO",
								"label": "commitments",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2347,
								"contract": "launchpad/ico.sol:OverflowICO",
								"label": "missedEmissions",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2351,
								"contract": "launchpad/ico.sol:OverflowICO",
								"label": "finalEmissions",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2355,
								"contract": "launchpad/ico.sol:OverflowICO",
								"label": "finalTokens",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2385,
								"contract": "launchpad/ico.sol:OverflowICO",
								"label": "whitelist",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addToWhitelist(address[])": {
								"notice": "Add to whitelist"
							},
							"removeFromWhitelist(address[])": {
								"notice": "Remove from whitelist"
							}
						},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/ico.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"launchpad/ico.sol\":{\"keccak256\":\"0x1682971126e3105932579dd1dad27f26dd4224abb0d2d39aeb09f9c3d0fccd8c\",\"urls\":[\"bzz-raw://e0a873f643436e9f1f6512a415f25e74b9ac62ec8160d9928158c85357585093\",\"dweb:/ipfs/QmYohrpuWdBDaFgs3Kr4HkCvrbTeHW5idnQJBgAwNg4VnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 792,
								"contract": "launchpad/ico.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/ico.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"launchpad/ico.sol\":{\"keccak256\":\"0x1682971126e3105932579dd1dad27f26dd4224abb0d2d39aeb09f9c3d0fccd8c\",\"urls\":[\"bzz-raw://e0a873f643436e9f1f6512a415f25e74b9ac62ec8160d9928158c85357585093\",\"dweb:/ipfs/QmYohrpuWdBDaFgs3Kr4HkCvrbTeHW5idnQJBgAwNg4VnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 724,
								"contract": "launchpad/ico.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"launchpad/ico.sol\":14964:18809  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"launchpad/ico.sol\":14964:18809  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122038472c57693870219944dd3e0b66c1a79852b3b8b87a9d442668f8ccd01a01d564736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122038472c57693870219944dd3e0b66c1a79852b3b8b87a9d442668f8ccd01a01d564736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE SELFBALANCE 0x2C JUMPI PUSH10 0x3870219944DD3E0B66C1 0xA7 SWAP9 MSTORE 0xB3 0xB8 0xB8 PUSH27 0x9D442668F8CCD01A01D564736F6C634300080D0033000000000000 ",
							"sourceMap": "14964:3845:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122038472c57693870219944dd3e0b66c1a79852b3b8b87a9d442668f8ccd01a01d564736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE SELFBALANCE 0x2C JUMPI PUSH10 0x3870219944DD3E0B66C1 0xA7 SWAP9 MSTORE 0xB3 0xB8 0xB8 PUSH27 0x9D442668F8CCD01A01D564736F6C634300080D0033000000000000 ",
							"sourceMap": "14964:3845:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 14964,
									"end": 18809,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14964,
									"end": 18809,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122038472c57693870219944dd3e0b66c1a79852b3b8b87a9d442668f8ccd01a01d564736f6c634300080d0033",
									".code": [
										{
											"begin": 14964,
											"end": 18809,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 14964,
											"end": 18809,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 14964,
											"end": 18809,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14964,
											"end": 18809,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14964,
											"end": 18809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14964,
											"end": 18809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14964,
											"end": 18809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14964,
											"end": 18809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14964,
											"end": 18809,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/ico.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"launchpad/ico.sol\":{\"keccak256\":\"0x1682971126e3105932579dd1dad27f26dd4224abb0d2d39aeb09f9c3d0fccd8c\",\"urls\":[\"bzz-raw://e0a873f643436e9f1f6512a415f25e74b9ac62ec8160d9928158c85357585093\",\"dweb:/ipfs/QmYohrpuWdBDaFgs3Kr4HkCvrbTeHW5idnQJBgAwNg4VnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"launchpad/ico.sol\":37980:40104  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"launchpad/ico.sol\":37980:40104  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220188ea241a8c7cfbcfb5ca323edbb98f13f01380649e43119786b42e3a3eef35d64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220188ea241a8c7cfbcfb5ca323edbb98f13f01380649e43119786b42e3a3eef35d64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR DUP15 LOG2 COINBASE 0xA8 0xC7 0xCF 0xBC 0xFB 0x5C LOG3 0x23 0xED 0xBB SWAP9 CALL EXTCODEHASH ADD CODESIZE MOD 0x49 0xE4 BALANCE NOT PUSH25 0x6B42E3A3EEF35D64736F6C634300080D003300000000000000 ",
							"sourceMap": "37980:2124:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220188ea241a8c7cfbcfb5ca323edbb98f13f01380649e43119786b42e3a3eef35d64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR DUP15 LOG2 COINBASE 0xA8 0xC7 0xCF 0xBC 0xFB 0x5C LOG3 0x23 0xED 0xBB SWAP9 CALL EXTCODEHASH ADD CODESIZE MOD 0x49 0xE4 BALANCE NOT PUSH25 0x6B42E3A3EEF35D64736F6C634300080D003300000000000000 ",
							"sourceMap": "37980:2124:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 37980,
									"end": 40104,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37980,
									"end": 40104,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220188ea241a8c7cfbcfb5ca323edbb98f13f01380649e43119786b42e3a3eef35d64736f6c634300080d0033",
									".code": [
										{
											"begin": 37980,
											"end": 40104,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 37980,
											"end": 40104,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 37980,
											"end": 40104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37980,
											"end": 40104,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37980,
											"end": 40104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37980,
											"end": 40104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37980,
											"end": 40104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37980,
											"end": 40104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37980,
											"end": 40104,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/ico.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"launchpad/ico.sol\":{\"keccak256\":\"0x1682971126e3105932579dd1dad27f26dd4224abb0d2d39aeb09f9c3d0fccd8c\",\"urls\":[\"bzz-raw://e0a873f643436e9f1f6512a415f25e74b9ac62ec8160d9928158c85357585093\",\"dweb:/ipfs/QmYohrpuWdBDaFgs3Kr4HkCvrbTeHW5idnQJBgAwNg4VnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> launchpad/ico.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "launchpad/ico.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"launchpad/ico.sol": {
				"ast": {
					"absolutePath": "launchpad/ico.sol",
					"exportedSymbols": {
						"Address": [
							439
						],
						"Context": [
							787
						],
						"ECDSA": [
							2290
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							111
						],
						"Math": [
							1760
						],
						"OverflowICO": [
							3506
						],
						"Ownable": [
							897
						],
						"ReentrancyGuard": [
							767
						],
						"SafeERC20": [
							715
						],
						"Strings": [
							1932
						]
					},
					"id": 3507,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "104:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "188:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "202:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "377:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "402:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "386:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "424:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "408:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "436:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "428:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "385:57:0"
									},
									"src": "371:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "451:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "614:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "639:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "623:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "662:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "646:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "679:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "671:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:63:0"
									},
									"src": "608:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "694:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "777:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "814:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "813:9:0"
									},
									"scope": 77,
									"src": "768:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "831:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "987:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1210:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1227:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1219:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1239:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1231:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1265:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1265:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1264:6:0"
									},
									"scope": 77,
									"src": "1201:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1564:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1582:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1574:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1597:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1589:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1573:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1629:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:9:0"
									},
									"scope": 77,
									"src": "1555:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1646:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2316:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2332:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2324:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2349:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2341:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2307:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2389:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2730:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2722:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2753:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2745:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2774:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2766:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:76:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2806:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2806:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2805:6:0"
									},
									"scope": 77,
									"src": "2690:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3507,
							"src": "178:2637:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 78,
								"nodeType": "StructuredDocumentation",
								"src": "2901:487:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 111,
							"linearizedBaseContracts": [
								111
							],
							"name": "IERC20Permit",
							"nameLocation": "3400:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3420:812:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "4247:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4272:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4264:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4264:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4296:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4288:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4322:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4314:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4346:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4338:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4371:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4365:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 88,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4365:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4391:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4383:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 90,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4411:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4403:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4253:166:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4428:0:0"
									},
									"scope": 111,
									"src": "4238:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "4437:300:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "4752:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4767:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4759:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4758:15:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4797:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4796:9:0"
									},
									"scope": 111,
									"src": "4743:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "4814:130:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "5013:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5029:2:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "5055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 107,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5054:9:0"
									},
									"scope": 111,
									"src": "5004:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3507,
							"src": "3390:1677:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 112,
								"nodeType": "StructuredDocumentation",
								"src": "5140:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 439,
							"linearizedBaseContracts": [
								439
							],
							"name": "Address",
							"nameLocation": "5219:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "6285:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 120,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "6514:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6514:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6514:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6536:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6514:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 119,
												"id": 125,
												"nodeType": "Return",
												"src": "6507:30:0"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "5234:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "6228:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6247:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "6239:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6238:17:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "6279:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 117,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6279:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6278:6:0"
									},
									"scope": 439,
									"src": "6219:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "7551:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 138,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "7578:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$439",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$439",
																				"typeString": "library Address"
																			}
																		],
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7570:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 136,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7570:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7570:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "7570:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 141,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "7595:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7570:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7603:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7562:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7562:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "7562:73:0"
											},
											{
												"assignments": [
													147,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 147,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7654:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 160,
														"src": "7649:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 146,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7649:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 154,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7697:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 148,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "7667:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "7667:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 150,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "7689:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "7667:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7667:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7648:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 156,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "7719:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7728:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7711:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7711:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "7711:78:0"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "6553:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "7489:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7515:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "7499:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7499:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7534:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "7526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7498:43:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7551:0:0"
									},
									"scope": 439,
									"src": "7480:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "8648:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 172,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "8688:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 173,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "8696:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8702:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8705:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 171,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															219,
															263
														],
														"referencedDeclaration": 263,
														"src": "8666:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8666:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 170,
												"id": 177,
												"nodeType": "Return",
												"src": "8659:79:0"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "7805:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "8568:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8589:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "8581:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8610:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "8597:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8597:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8580:35:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "8634:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8634:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8633:14:0"
									},
									"scope": 439,
									"src": "8559:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "9127:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "9167:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "9175:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9181:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 195,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "9184:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 191,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															219,
															263
														],
														"referencedDeclaration": 263,
														"src": "9145:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9145:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 190,
												"id": 197,
												"nodeType": "Return",
												"src": "9138:59:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "8754:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "8985:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9016:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "9008:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9046:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "9033:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9033:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9075:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "9061:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 185,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9061:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8997:97:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "9113:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9113:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9112:14:0"
									},
									"scope": 439,
									"src": "8976:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "9727:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 212,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "9767:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 213,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "9775:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 214,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "9781:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9788:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 211,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															219,
															263
														],
														"referencedDeclaration": 263,
														"src": "9745:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9745:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 210,
												"id": 217,
												"nodeType": "Return",
												"src": "9738:94:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "9213:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "9589:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9629:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "9621:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9659:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "9646:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9646:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9682:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "9674:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9610:84:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "9713:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9713:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9712:14:0"
									},
									"scope": 439,
									"src": "9580:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "10280:271:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 236,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10307:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$439",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$439",
																				"typeString": "library Address"
																			}
																		],
																		"id": 235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10299:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 234,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10299:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10299:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "10299:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 239,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "10324:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10299:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10331:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10291:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10291:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "10291:81:0"
											},
											{
												"assignments": [
													245,
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 245,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10389:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "10384:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 244,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10384:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "10411:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "10398:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 246,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10398:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"arguments": [
														{
															"id": 252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "10451:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 248,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "10425:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10425:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 250,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "10444:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10425:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10425:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10383:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "10501:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 257,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "10509:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 258,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "10518:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 259,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "10530:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 255,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "10474:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10474:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 232,
												"id": 261,
												"nodeType": "Return",
												"src": "10467:76:0"
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9848:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "10105:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10145:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "10137:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "10162:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10162:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10198:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "10190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10228:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "10214:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 227,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10214:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10126:121:0"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "10266:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10266:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10265:14:0"
									},
									"scope": 439,
									"src": "10096:455:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "10836:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "10873:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 275,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "10881:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10887:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 273,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															280,
															309
														],
														"referencedDeclaration": 309,
														"src": "10854:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10854:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 272,
												"id": 278,
												"nodeType": "Return",
												"src": "10847:80:0"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "10559:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "10745:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10772:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "10764:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10793:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "10780:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10780:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10763:35:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "10822:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10822:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10821:14:0"
									},
									"scope": 439,
									"src": "10736:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "11289:171:0",
										"statements": [
											{
												"assignments": [
													293,
													295
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "11306:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "11301:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 292,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11301:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "11328:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "11315:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 294,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11315:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 300,
												"initialValue": {
													"arguments": [
														{
															"id": 298,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "11360:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 296,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "11342:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "11342:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11342:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11300:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 302,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "11410:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "11418:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 304,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "11427:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 305,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "11439:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 301,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "11383:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11383:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 291,
												"id": 307,
												"nodeType": "Return",
												"src": "11376:76:0"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "10943:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "11136:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11173:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "11165:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "11190:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11190:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11232:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "11218:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 286,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11218:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11154:97:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "11275:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11275:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11274:14:0"
									},
									"scope": 439,
									"src": "11127:333:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "11744:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "11783:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "11791:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11797:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 319,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															326,
															355
														],
														"referencedDeclaration": 355,
														"src": "11762:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11762:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 318,
												"id": 324,
												"nodeType": "Return",
												"src": "11755:84:0"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "11468:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "11656:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11685:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "11677:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11706:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "11693:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11693:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11676:35:0"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "11730:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11730:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11729:14:0"
									},
									"scope": 439,
									"src": "11647:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "12200:173:0",
										"statements": [
											{
												"assignments": [
													339,
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12217:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "12212:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 338,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12212:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "12239:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "12226:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 340,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "12226:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"arguments": [
														{
															"id": 344,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "12273:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 342,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "12253:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "12253:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12253:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12211:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "12323:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 349,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "12331:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 350,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "12340:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 351,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "12352:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 347,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "12296:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12296:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 337,
												"id": 353,
												"nodeType": "Return",
												"src": "12289:76:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "11855:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "12050:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12089:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "12081:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12119:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "12106:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12106:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12148:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "12134:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12134:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12070:97:0"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "12186:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12186:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12185:14:0"
									},
									"scope": 439,
									"src": "12041:332:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "12868:445:0",
										"statements": [
											{
												"condition": {
													"id": 369,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 360,
													"src": "12883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 391,
													"nodeType": "Block",
													"src": "13246:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 387,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "13269:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 388,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "13281:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 386,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "13261:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13261:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 390,
															"nodeType": "ExpressionStatement",
															"src": "13261:33:0"
														}
													]
												},
												"id": 392,
												"nodeType": "IfStatement",
												"src": "12879:427:0",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "12892:348:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 370,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "12911:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "12911:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12932:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12911:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 382,
															"nodeType": "IfStatement",
															"src": "12907:290:0",
															"trueBody": {
																"id": 381,
																"nodeType": "Block",
																"src": "12935:262:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 376,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 358,
																							"src": "13140:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 375,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 127,
																						"src": "13129:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 377,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13129:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 378,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13149:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 374,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "13121:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13121:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 380,
																		"nodeType": "ExpressionStatement",
																		"src": "13121:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 383,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "13218:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 368,
															"id": 384,
															"nodeType": "Return",
															"src": "13211:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "12381:282:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "12678:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12723:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "12715:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "12745:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "12740:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12740:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "12776:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "12763:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12763:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12811:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "12797:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12797:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12704:126:0"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "12854:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12854:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12853:14:0"
									},
									"scope": 439,
									"src": "12669:644:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "13706:141:0",
										"statements": [
											{
												"condition": {
													"id": 406,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "13721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 415,
													"nodeType": "Block",
													"src": "13780:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 411,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "13803:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 412,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 401,
																		"src": "13815:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 410,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "13795:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13795:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 414,
															"nodeType": "ExpressionStatement",
															"src": "13795:33:0"
														}
													]
												},
												"id": 416,
												"nodeType": "IfStatement",
												"src": "13717:123:0",
												"trueBody": {
													"id": 409,
													"nodeType": "Block",
													"src": "13730:44:0",
													"statements": [
														{
															"expression": {
																"id": 407,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "13752:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 405,
															"id": 408,
															"nodeType": "Return",
															"src": "13745:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "13321:215:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "13551:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "13583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "13578:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13578:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "13614:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "13601:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13601:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13649:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "13635:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13635:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13567:101:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "13692:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13692:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13691:14:0"
									},
									"scope": 439,
									"src": "13542:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "13938:469:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 425,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "14016:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14016:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14036:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14016:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 435,
													"nodeType": "Block",
													"src": "14353:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 432,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "14375:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 431,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "14368:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14368:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 434,
															"nodeType": "ExpressionStatement",
															"src": "14368:20:0"
														}
													]
												},
												"id": 436,
												"nodeType": "IfStatement",
												"src": "14012:388:0",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "14039:308:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "14200:136:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14219:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "14248:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "14242:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14242:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "14223:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14288:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "14292:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14284:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14284:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "14305:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14277:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14277:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14277:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 420,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "14248:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 420,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "14292:10:0",
																	"valueSize": 1
																}
															],
															"id": 429,
															"nodeType": "InlineAssembly",
															"src": "14191:145:0"
														}
													]
												}
											}
										]
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "13864:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "13885:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "13872:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13872:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13911:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "13897:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13897:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13871:53:0"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13938:0:0"
									},
									"scope": 439,
									"src": "13855:552:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3507,
							"src": "5211:9199:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 440,
								"nodeType": "StructuredDocumentation",
								"src": "14497:465:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 715,
							"linearizedBaseContracts": [
								715
							],
							"name": "SafeERC20",
							"nameLocation": "14972:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 443,
									"libraryName": {
										"id": 441,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 439,
										"src": "14995:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "14989:26:0",
									"typeName": {
										"id": 442,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "15007:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "15129:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "15160:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 457,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 446,
																			"src": "15190:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "15190:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "15190:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 460,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "15215:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 461,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "15219:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 455,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "15167:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "15167:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15167:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 453,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "15140:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15140:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "15140:86:0"
											}
										]
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "15032:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "15062:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "15055:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 444,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "15055:6:0"
													},
													"referencedDeclaration": 77,
													"src": "15055:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15086:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "15078:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15107:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "15099:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15044:75:0"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15129:0:0"
									},
									"scope": 715,
									"src": "15023:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "15375:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 479,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "15406:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 482,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 469,
																			"src": "15436:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "15436:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "15436:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 485,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "15465:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 486,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 473,
																	"src": "15471:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 487,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "15475:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 480,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "15413:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "15413:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15413:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 478,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "15386:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15386:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "15386:96:0"
											}
										]
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "15251:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "15285:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "15278:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 468,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 467,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "15278:6:0"
													},
													"referencedDeclaration": 77,
													"src": "15278:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15309:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "15301:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15332:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "15324:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15353:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "15345:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15267:98:0"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15375:0:0"
									},
									"scope": 715,
									"src": "15242:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "15869:506:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 504,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 500,
																			"src": "16123:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16132:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "16123:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 507,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16122:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 512,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "16163:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$715",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$715",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 511,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "16155:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 510,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "16155:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 513,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16155:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 514,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 498,
																					"src": "16170:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 508,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 496,
																					"src": "16139:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 54,
																				"src": "16139:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16139:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16182:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "16139:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 518,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16138:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "16122:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16199:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 503,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16100:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16100:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "16100:166:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 524,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "16297:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 527,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 496,
																			"src": "16327:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "16327:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16327:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 530,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "16351:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 531,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "16360:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 525,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16304:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16304:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16304:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 523,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "16277:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16277:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "16277:90:0"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "15498:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "15768:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "15797:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "15790:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 495,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 494,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "15790:6:0"
													},
													"referencedDeclaration": 77,
													"src": "15790:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15821:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "15813:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15847:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "15839:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15779:80:0"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15869:0:0"
									},
									"scope": 715,
									"src": "15759:616:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "16503:197:0",
										"statements": [
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "16522:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "16514:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16514:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 558,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 552,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "16561:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$715",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$715",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16553:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16553:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16553:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 554,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "16568:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 548,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "16537:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 54,
															"src": "16537:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16537:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 556,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "16579:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16537:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16514:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 560,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "16615:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 563,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "16645:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "16645:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16645:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 566,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "16669:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 567,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "16678:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 561,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16622:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16622:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16622:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 559,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "16595:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16595:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "16595:97:0"
											}
										]
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "16392:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16431:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "16424:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 538,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 537,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "16424:6:0"
													},
													"referencedDeclaration": 77,
													"src": "16424:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16455:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "16447:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16481:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "16473:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16413:80:0"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16503:0:0"
									},
									"scope": 715,
									"src": "16383:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "16828:377:0",
										"statements": [
											{
												"id": 618,
												"nodeType": "UncheckedBlock",
												"src": "16839:359:0",
												"statements": [
													{
														"assignments": [
															583
														],
														"declarations": [
															{
																"constant": false,
																"id": 583,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "16872:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 618,
																"src": "16864:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16864:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 592,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 588,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "16911:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$715",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$715",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16903:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 586,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16903:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16903:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 590,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "16918:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 584,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "16887:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "16887:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16887:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "16864:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 594,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "16949:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 595,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "16965:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16949:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16972:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 593,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "16941:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16941:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 599,
														"nodeType": "ExpressionStatement",
														"src": "16941:75:0"
													},
													{
														"assignments": [
															601
														],
														"declarations": [
															{
																"constant": false,
																"id": 601,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "17039:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 618,
																"src": "17031:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 600,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17031:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 605,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 602,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "17054:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 603,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "17069:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17054:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17031:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 607,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "17109:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 610,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 575,
																					"src": "17139:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 611,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "17139:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "17139:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 613,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 577,
																			"src": "17163:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 614,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "17172:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 608,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "17116:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "17116:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17116:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 606,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "17089:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17089:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 617,
														"nodeType": "ExpressionStatement",
														"src": "17089:97:0"
													}
												]
											}
										]
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "16717:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16756:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "16749:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 574,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 573,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "16749:6:0"
													},
													"referencedDeclaration": 77,
													"src": "16749:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16780:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "16772:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16772:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16806:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "16798:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16738:80:0"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16828:0:0"
									},
									"scope": 715,
									"src": "16708:497:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "17437:262:0",
										"statements": [
											{
												"assignments": [
													641
												],
												"declarations": [
													{
														"constant": false,
														"id": 641,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "17456:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "17448:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 640,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17448:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 646,
												"initialValue": {
													"arguments": [
														{
															"id": 644,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "17483:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 642,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "17470:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$111",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "17470:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17470:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17448:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 650,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "17513:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 651,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "17520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "17529:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 653,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "17536:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 654,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "17546:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 655,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "17549:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 656,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "17552:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 647,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "17500:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$111",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 96,
														"src": "17500:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17500:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "17500:54:0"
											},
											{
												"assignments": [
													660
												],
												"declarations": [
													{
														"constant": false,
														"id": 660,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "17573:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "17565:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 659,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 665,
												"initialValue": {
													"arguments": [
														{
															"id": 663,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "17599:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 661,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "17586:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$111",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "17586:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17586:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17565:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 667,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "17624:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 668,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "17638:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17652:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17638:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17624:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17655:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 666,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17616:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17616:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "17616:75:0"
											}
										]
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "17222:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17256:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "17243:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$111",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 622,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 621,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 111,
														"src": "17243:12:0"
													},
													"referencedDeclaration": 111,
													"src": "17243:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$111",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17280:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "17272:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17304:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "17296:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17296:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17330:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "17322:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "17354:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "17346:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "17379:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "17373:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 632,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "17373:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "17399:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "17391:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 634,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "17419:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "17411:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 636,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17232:195:0"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17437:0:0"
									},
									"scope": 715,
									"src": "17213:486:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "18160:646:0",
										"statements": [
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "18527:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "18514:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 685,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18514:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"arguments": [
														{
															"id": 692,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "18568:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18574:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 689,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "18548:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18540:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 687,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18540:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18540:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 199,
														"src": "18540:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18540:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18514:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 696,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "18624:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "18624:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18644:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18624:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 712,
												"nodeType": "IfStatement",
												"src": "18620:179:0",
												"trueBody": {
													"id": 711,
													"nodeType": "Block",
													"src": "18647:152:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 703,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "18721:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 705,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "18734:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 704,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "18734:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 706,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "18733:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 701,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "18710:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "18710:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18710:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18742:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 700,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "18702:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18702:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 710,
															"nodeType": "ExpressionStatement",
															"src": "18702:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "17707:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "18099:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18126:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "18119:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 679,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 678,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "18119:6:0"
													},
													"referencedDeclaration": 77,
													"src": "18119:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18146:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "18133:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 681,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18133:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18118:33:0"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18160:0:0"
									},
									"scope": 715,
									"src": "18090:716:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3507,
							"src": "14964:3845:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 716,
								"nodeType": "StructuredDocumentation",
								"src": "18893:765:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 767,
							"linearizedBaseContracts": [
								767
							],
							"name": "ReentrancyGuard",
							"nameLocation": "19678:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 719,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "20485:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "20460:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 717,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "20460:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 718,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "20500:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 722,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "20533:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "20508:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 720,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "20508:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 721,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "20544:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 724,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "20570:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "20554:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 723,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "20554:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "20600:41:0",
										"statements": [
											{
												"expression": {
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 727,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "20611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 728,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "20621:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20611:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "20611:22:0"
											}
										]
									},
									"id": 732,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20597:2:0"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20600:0:0"
									},
									"scope": 767,
									"src": "20586:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "21051:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 735,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "21062:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21062:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "21062:21:0"
											},
											{
												"id": 738,
												"nodeType": "PlaceholderStatement",
												"src": "21094:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 739,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "21106:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21106:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "21106:20:0"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "20649:372:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 743,
									"name": "nonReentrant",
									"nameLocation": "21036:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21048:2:0"
									},
									"src": "21027:107:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "21181:254:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 747,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "21276:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 748,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "21287:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21276:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21297:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 746,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21268:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21268:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "21268:63:0"
											},
											{
												"expression": {
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 753,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "21409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 754,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "21419:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21409:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "21409:18:0"
											}
										]
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "21151:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21170:2:0"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21181:0:0"
									},
									"scope": 767,
									"src": "21142:293:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "21481:175:0",
										"statements": [
											{
												"expression": {
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 761,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "21626:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 762,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "21636:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21626:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "21626:22:0"
											}
										]
									},
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "21452:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21470:2:0"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21481:0:0"
									},
									"scope": 767,
									"src": "21443:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3507,
							"src": "19660:1999:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 768,
								"nodeType": "StructuredDocumentation",
								"src": "21717:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 787,
							"linearizedBaseContracts": [
								787
							],
							"name": "Context",
							"nameLocation": "22242:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "22319:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 773,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "22337:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "22337:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 772,
												"id": 775,
												"nodeType": "Return",
												"src": "22330:17:0"
											}
										]
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "22266:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22276:2:0"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "22310:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22309:9:0"
									},
									"scope": 787,
									"src": "22257:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "22430:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 782,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "22448:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "22448:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 781,
												"id": 784,
												"nodeType": "Return",
												"src": "22441:15:0"
											}
										]
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "22372:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22380:2:0"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "22414:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 779,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22414:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22413:16:0"
									},
									"scope": 787,
									"src": "22363:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3507,
							"src": "22224:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 789,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 787,
										"src": "23077:7:0"
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "23077:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 788,
								"nodeType": "StructuredDocumentation",
								"src": "22541:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 897,
							"linearizedBaseContracts": [
								897,
								787
							],
							"name": "Ownable",
							"nameLocation": "23066:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 792,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "23108:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 897,
									"src": "23092:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 791,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23092:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 798,
									"name": "OwnershipTransferred",
									"nameLocation": "23129:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "23166:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "23150:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "23197:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "23181:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23149:57:0"
									},
									"src": "23123:84:0"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "23328:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 803,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "23358:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23358:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 802,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "23339:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23339:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "23339:32:0"
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "23215:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 808,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23325:2:0"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23328:0:0"
									},
									"scope": 897,
									"src": "23314:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "23493:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 811,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "23504:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23504:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "23504:13:0"
											},
											{
												"id": 814,
												"nodeType": "PlaceholderStatement",
												"src": "23528:1:0"
											}
										]
									},
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "23387:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 816,
									"name": "onlyOwner",
									"nameLocation": "23481:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23490:2:0"
									},
									"src": "23472:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "23673:32:0",
										"statements": [
											{
												"expression": {
													"id": 822,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 792,
													"src": "23691:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 821,
												"id": 823,
												"nodeType": "Return",
												"src": "23684:13:0"
											}
										]
									},
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "23545:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "23627:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23632:2:0"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "23664:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23663:9:0"
									},
									"scope": 897,
									"src": "23618:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "23828:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 830,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "23847:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23847:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 832,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "23858:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23858:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "23847:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23872:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 829,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23839:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23839:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "23839:68:0"
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "23713:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "23792:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23803:2:0"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23828:0:0"
									},
									"scope": 897,
									"src": "23783:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "24320:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24358:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24350:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 846,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24350:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24350:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 845,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "24331:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24331:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "24331:30:0"
											}
										]
									},
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "23923:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 843,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 842,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 816,
												"src": "24310:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24310:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "24275:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24292:2:0"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24320:0:0"
									},
									"scope": 897,
									"src": "24266:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "24594:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 862,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "24613:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24633:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "24625:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 863,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "24625:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24625:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "24613:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24637:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 861,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24605:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24605:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "24605:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 872,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "24708:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 871,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "24689:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24689:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "24689:28:0"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "24377:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 859,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 858,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 816,
												"src": "24584:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24584:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "24533:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24559:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "24551:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24550:18:0"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24594:0:0"
									},
									"scope": 897,
									"src": "24524:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "24948:128:0",
										"statements": [
											{
												"assignments": [
													883
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "24967:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "24959:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 882,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24959:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 885,
												"initialValue": {
													"id": 884,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 792,
													"src": "24978:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24959:25:0"
											},
											{
												"expression": {
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 886,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "24995:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 887,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "25004:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24995:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "24995:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 891,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "25049:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "25059:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 890,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "25028:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25028:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "EmitStatement",
												"src": "25023:45:0"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "24733:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "24894:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24921:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "24913:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24912:18:0"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24948:0:0"
									},
									"scope": 897,
									"src": "24885:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3507,
							"src": "23048:2031:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 898,
								"nodeType": "StructuredDocumentation",
								"src": "25154:75:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1760,
							"linearizedBaseContracts": [
								1760
							],
							"name": "Math",
							"nameLocation": "25239:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 902,
									"members": [
										{
											"id": 899,
											"name": "Down",
											"nameLocation": "25276:4:0",
											"nodeType": "EnumValue",
											"src": "25276:4:0"
										},
										{
											"id": 900,
											"name": "Up",
											"nameLocation": "25319:2:0",
											"nodeType": "EnumValue",
											"src": "25319:2:0"
										},
										{
											"id": 901,
											"name": "Zero",
											"nameLocation": "25351:4:0",
											"nodeType": "EnumValue",
											"src": "25351:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "25256:8:0",
									"nodeType": "EnumDefinition",
									"src": "25251:126:0"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "25519:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 912,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "25537:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 913,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "25541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "25537:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 916,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "25549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "25537:13:0",
													"trueExpression": {
														"id": 915,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "25545:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 911,
												"id": 918,
												"nodeType": "Return",
												"src": "25530:20:0"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "25385:61:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "25461:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25473:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "25465:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "25484:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "25476:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25464:22:0"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "25510:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25509:9:0"
									},
									"scope": 1760,
									"src": "25452:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "25701:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 930,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "25719:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 931,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "25723:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "25719:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 934,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "25731:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "25719:13:0",
													"trueExpression": {
														"id": 933,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "25727:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 929,
												"id": 936,
												"nodeType": "Return",
												"src": "25712:20:0"
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "25566:62:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "25643:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25655:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "25647:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "25666:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "25658:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25646:22:0"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "25692:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25691:9:0"
									},
									"scope": 1760,
									"src": "25634:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "25930:85:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 948,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "25987:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 949,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "25991:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25987:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 951,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "25986:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 952,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 941,
																		"src": "25997:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 953,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "26001:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "25997:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 955,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "25996:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26006:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "25996:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25986:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 947,
												"id": 959,
												"nodeType": "Return",
												"src": "25979:28:0"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "25748:105:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "25868:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25884:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "25876:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "25895:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "25887:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25875:22:0"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "25921:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25920:9:0"
									},
									"scope": 1760,
									"src": "25859:156:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "26293:126:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 971,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "26383:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26388:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "26383:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 975,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 964,
																			"src": "26397:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26401:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "26397:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 978,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "26396:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 979,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "26406:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26396:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26410:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "26396:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "26383:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26392:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 970,
												"id": 984,
												"nodeType": "Return",
												"src": "26376:35:0"
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "26023:193:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "26231:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "26247:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "26239:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "26258:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "26250:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26238:22:0"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "26284:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26284:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26283:9:0"
									},
									"scope": 1760,
									"src": "26222:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "26874:3873:0",
										"statements": [
											{
												"id": 1106,
												"nodeType": "UncheckedBlock",
												"src": "26885:3855:0",
												"statements": [
													{
														"assignments": [
															999
														],
														"declarations": [
															{
																"constant": false,
																"id": 999,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "27218:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 1106,
																"src": "27210:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 998,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27210:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1000,
														"nodeType": "VariableDeclarationStatement",
														"src": "27210:13:0"
													},
													{
														"assignments": [
															1002
														],
														"declarations": [
															{
																"constant": false,
																"id": 1002,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "27291:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 1106,
																"src": "27283:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1001,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27283:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1003,
														"nodeType": "VariableDeclarationStatement",
														"src": "27283:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "27364:161:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "27383:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "27400:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "27403:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "27410:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "27406:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27406:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "27393:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27393:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "27387:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "27431:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "27444:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "27447:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "27440:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27440:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "27431:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "27467:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "27484:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "27488:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "27480:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27480:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "27499:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "27503:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "27496:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27496:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27476:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27476:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "27467:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 999,
																"isOffset": false,
																"isSlot": false,
																"src": "27431:5:0",
																"valueSize": 1
															},
															{
																"declaration": 999,
																"isOffset": false,
																"isSlot": false,
																"src": "27488:5:0",
																"valueSize": 1
															},
															{
																"declaration": 999,
																"isOffset": false,
																"isSlot": false,
																"src": "27503:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1002,
																"isOffset": false,
																"isSlot": false,
																"src": "27467:5:0",
																"valueSize": 1
															},
															{
																"declaration": 989,
																"isOffset": false,
																"isSlot": false,
																"src": "27400:1:0",
																"valueSize": 1
															},
															{
																"declaration": 989,
																"isOffset": false,
																"isSlot": false,
																"src": "27444:1:0",
																"valueSize": 1
															},
															{
																"declaration": 991,
																"isOffset": false,
																"isSlot": false,
																"src": "27403:1:0",
																"valueSize": 1
															},
															{
																"declaration": 991,
																"isOffset": false,
																"isSlot": false,
																"src": "27447:1:0",
																"valueSize": 1
															}
														],
														"id": 1004,
														"nodeType": "InlineAssembly",
														"src": "27355:170:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1005,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "27609:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27618:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27609:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1013,
														"nodeType": "IfStatement",
														"src": "27605:77:0",
														"trueBody": {
															"id": 1012,
															"nodeType": "Block",
															"src": "27621:61:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1008,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 999,
																			"src": "27647:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1009,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "27655:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "27647:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 997,
																	"id": 1011,
																	"nodeType": "Return",
																	"src": "27640:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1015,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "27795:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1016,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "27809:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "27795:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1014,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "27787:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27787:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1019,
														"nodeType": "ExpressionStatement",
														"src": "27787:28:0"
													},
													{
														"assignments": [
															1021
														],
														"declarations": [
															{
																"constant": false,
																"id": 1021,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "28086:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 1106,
																"src": "28078:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1020,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28078:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1022,
														"nodeType": "VariableDeclarationStatement",
														"src": "28078:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "28119:298:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "28190:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "28210:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "28213:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "28216:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "28203:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28203:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "28190:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "28313:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "28326:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "28336:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "28347:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "28333:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28333:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28322:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28322:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "28313:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "28372:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "28385:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "28392:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28381:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28381:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "28372:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 993,
																"isOffset": false,
																"isSlot": false,
																"src": "28216:11:0",
																"valueSize": 1
															},
															{
																"declaration": 999,
																"isOffset": false,
																"isSlot": false,
																"src": "28347:5:0",
																"valueSize": 1
															},
															{
																"declaration": 999,
																"isOffset": false,
																"isSlot": false,
																"src": "28372:5:0",
																"valueSize": 1
															},
															{
																"declaration": 999,
																"isOffset": false,
																"isSlot": false,
																"src": "28385:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1002,
																"isOffset": false,
																"isSlot": false,
																"src": "28313:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1002,
																"isOffset": false,
																"isSlot": false,
																"src": "28326:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1021,
																"isOffset": false,
																"isSlot": false,
																"src": "28190:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1021,
																"isOffset": false,
																"isSlot": false,
																"src": "28336:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1021,
																"isOffset": false,
																"isSlot": false,
																"src": "28392:9:0",
																"valueSize": 1
															},
															{
																"declaration": 989,
																"isOffset": false,
																"isSlot": false,
																"src": "28210:1:0",
																"valueSize": 1
															},
															{
																"declaration": 991,
																"isOffset": false,
																"isSlot": false,
																"src": "28213:1:0",
																"valueSize": 1
															}
														],
														"id": 1023,
														"nodeType": "InlineAssembly",
														"src": "28110:307:0"
													},
													{
														"assignments": [
															1025
														],
														"declarations": [
															{
																"constant": false,
																"id": 1025,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "28738:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 1106,
																"src": "28730:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1024,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28730:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1033,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1026,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "28745:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "28760:12:0",
																			"subExpression": {
																				"id": 1027,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 993,
																				"src": "28761:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28775:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "28760:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1031,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "28759:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28745:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "28730:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "28801:371:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "28868:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "28887:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "28900:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "28883:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28883:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "28868:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "28975:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "28988:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "28995:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "28984:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28984:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "28975:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "29118:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "29138:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "29141:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "29134:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "29134:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "29148:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "29130:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29130:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29155:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29126:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29126:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "29118:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 993,
																"isOffset": false,
																"isSlot": false,
																"src": "28868:11:0",
																"valueSize": 1
															},
															{
																"declaration": 993,
																"isOffset": false,
																"isSlot": false,
																"src": "28887:11:0",
																"valueSize": 1
															},
															{
																"declaration": 999,
																"isOffset": false,
																"isSlot": false,
																"src": "28975:5:0",
																"valueSize": 1
															},
															{
																"declaration": 999,
																"isOffset": false,
																"isSlot": false,
																"src": "28988:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1025,
																"isOffset": false,
																"isSlot": false,
																"src": "28900:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1025,
																"isOffset": false,
																"isSlot": false,
																"src": "28995:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1025,
																"isOffset": false,
																"isSlot": false,
																"src": "29118:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1025,
																"isOffset": false,
																"isSlot": false,
																"src": "29141:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1025,
																"isOffset": false,
																"isSlot": false,
																"src": "29148:4:0",
																"valueSize": 1
															}
														],
														"id": 1034,
														"nodeType": "InlineAssembly",
														"src": "28792:380:0"
													},
													{
														"expression": {
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1035,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "29241:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1036,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "29250:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1037,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "29258:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29250:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29241:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1040,
														"nodeType": "ExpressionStatement",
														"src": "29241:21:0"
													},
													{
														"assignments": [
															1042
														],
														"declarations": [
															{
																"constant": false,
																"id": 1042,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "29593:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 1106,
																"src": "29585:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1041,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29585:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1049,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29604:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1044,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "29608:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "29604:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1046,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "29603:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29623:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "29603:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29585:39:0"
													},
													{
														"expression": {
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1050,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "29845:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29856:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1052,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "29860:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1053,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "29874:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29860:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29856:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29845:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1057,
														"nodeType": "ExpressionStatement",
														"src": "29845:36:0"
													},
													{
														"expression": {
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1058,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "29915:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1060,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "29930:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1061,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "29944:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29930:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29926:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29915:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1065,
														"nodeType": "ExpressionStatement",
														"src": "29915:36:0"
													},
													{
														"expression": {
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1066,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "29986:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29997:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1068,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "30001:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1069,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "30015:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30001:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29997:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29986:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1073,
														"nodeType": "ExpressionStatement",
														"src": "29986:36:0"
													},
													{
														"expression": {
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1074,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "30057:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30068:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1076,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "30072:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1077,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "30086:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30072:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30068:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30057:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1081,
														"nodeType": "ExpressionStatement",
														"src": "30057:36:0"
													},
													{
														"expression": {
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1082,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "30128:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30139:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1084,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "30143:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1085,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "30157:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30143:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30139:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30128:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1089,
														"nodeType": "ExpressionStatement",
														"src": "30128:36:0"
													},
													{
														"expression": {
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1090,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "30200:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30211:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1092,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "30215:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1093,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "30229:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30215:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30211:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30200:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1097,
														"nodeType": "ExpressionStatement",
														"src": "30200:36:0"
													},
													{
														"expression": {
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1098,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "30676:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1099,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 999,
																	"src": "30685:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1100,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "30693:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30685:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30676:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1103,
														"nodeType": "ExpressionStatement",
														"src": "30676:24:0"
													},
													{
														"expression": {
															"id": 1104,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "30722:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 997,
														"id": 1105,
														"nodeType": "Return",
														"src": "30715:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "26427:309:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "26751:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "26776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "26768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "26796:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "26788:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "26816:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "26808:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26757:77:0"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "26866:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "26858:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26858:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26857:16:0"
									},
									"scope": 1760,
									"src": "26742:4005:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "31037:195:0",
										"statements": [
											{
												"assignments": [
													1124
												],
												"declarations": [
													{
														"constant": false,
														"id": 1124,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "31056:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1151,
														"src": "31048:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31048:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1130,
												"initialValue": {
													"arguments": [
														{
															"id": 1126,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "31072:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1127,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "31075:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1128,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "31078:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1125,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1108,
															1152
														],
														"referencedDeclaration": 1108,
														"src": "31065:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31065:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31048:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$902",
															"typeString": "enum Math.Rounding"
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1131,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "31105:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$902",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1132,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "31117:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$902_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 900,
															"src": "31117:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$902",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "31105:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1136,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "31139:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1137,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "31142:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1138,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "31145:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1135,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "31132:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31132:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31160:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "31132:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "31105:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1148,
												"nodeType": "IfStatement",
												"src": "31101:100:0",
												"trueBody": {
													"id": 1147,
													"nodeType": "Block",
													"src": "31163:38:0",
													"statements": [
														{
															"expression": {
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1143,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1124,
																	"src": "31178:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31188:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "31178:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1146,
															"nodeType": "ExpressionStatement",
															"src": "31178:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1149,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1124,
													"src": "31218:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1122,
												"id": 1150,
												"nodeType": "Return",
												"src": "31211:13:0"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "30755:123:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "30893:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "30918:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "30910:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "30938:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "30930:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "30958:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "30950:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "30989:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "30980:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$902",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1117,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1116,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 902,
														"src": "30980:8:0"
													},
													"referencedDeclaration": 902,
													"src": "30980:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$902",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30899:105:0"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "31028:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31027:9:0"
									},
									"scope": 1760,
									"src": "30884:348:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "31515:1616:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1160,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "31530:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31530:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1166,
												"nodeType": "IfStatement",
												"src": "31526:47:0",
												"trueBody": {
													"id": 1165,
													"nodeType": "Block",
													"src": "31538:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31560:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1159,
															"id": 1164,
															"nodeType": "Return",
															"src": "31553:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													1168
												],
												"declarations": [
													{
														"constant": false,
														"id": 1168,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "32272:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "32264:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32264:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1177,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32281:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1171,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1155,
																			"src": "32292:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1170,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1432,
																			1468
																		],
																		"referencedDeclaration": 1432,
																		"src": "32287:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32287:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32298:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "32287:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1175,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "32286:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32281:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32264:36:0"
											},
											{
												"id": 1262,
												"nodeType": "UncheckedBlock",
												"src": "32707:417:0",
												"statements": [
													{
														"expression": {
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1178,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "32732:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1179,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "32742:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1180,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "32751:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1181,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1168,
																					"src": "32755:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "32751:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32742:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1184,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32741:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32766:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "32741:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32732:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1188,
														"nodeType": "ExpressionStatement",
														"src": "32732:35:0"
													},
													{
														"expression": {
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1189,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "32782:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1190,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "32792:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1191,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "32801:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1192,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1168,
																					"src": "32805:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "32801:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32792:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1195,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32791:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32816:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "32791:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32782:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1199,
														"nodeType": "ExpressionStatement",
														"src": "32782:35:0"
													},
													{
														"expression": {
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1200,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "32832:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1201,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "32842:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1204,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1202,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "32851:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1203,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1168,
																					"src": "32855:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "32851:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32842:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1206,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32841:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32866:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "32841:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32832:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1210,
														"nodeType": "ExpressionStatement",
														"src": "32832:35:0"
													},
													{
														"expression": {
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1211,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "32882:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1212,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "32892:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1213,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "32901:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1214,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1168,
																					"src": "32905:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "32901:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32892:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1217,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32891:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32916:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "32891:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32882:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1221,
														"nodeType": "ExpressionStatement",
														"src": "32882:35:0"
													},
													{
														"expression": {
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1222,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "32932:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1223,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "32942:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1224,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "32951:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1225,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1168,
																					"src": "32955:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "32951:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32942:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1228,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32941:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32966:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "32941:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32932:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1232,
														"nodeType": "ExpressionStatement",
														"src": "32932:35:0"
													},
													{
														"expression": {
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1233,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "32982:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1234,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "32992:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1237,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1235,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "33001:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1236,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1168,
																					"src": "33005:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "33001:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32992:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1239,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32991:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33016:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "32991:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32982:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1243,
														"nodeType": "ExpressionStatement",
														"src": "32982:35:0"
													},
													{
														"expression": {
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1244,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "33032:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1245,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "33042:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1248,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1246,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "33051:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1247,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1168,
																					"src": "33055:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "33051:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "33042:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1250,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "33041:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33066:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "33041:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33032:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1254,
														"nodeType": "ExpressionStatement",
														"src": "33032:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1256,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "33093:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1257,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1155,
																		"src": "33101:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1258,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1168,
																		"src": "33105:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "33101:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1255,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "33089:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33089:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1159,
														"id": 1261,
														"nodeType": "Return",
														"src": "33082:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "31240:212:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "31467:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "31480:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "31472:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31471:11:0"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "31506:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31505:9:0"
									},
									"scope": 1760,
									"src": "31458:1673:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "33312:166:0",
										"statements": [
											{
												"id": 1298,
												"nodeType": "UncheckedBlock",
												"src": "33323:148:0",
												"statements": [
													{
														"assignments": [
															1276
														],
														"declarations": [
															{
																"constant": false,
																"id": 1276,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "33356:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1298,
																"src": "33348:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1275,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "33348:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1280,
														"initialValue": {
															"arguments": [
																{
																	"id": 1278,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "33370:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1277,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1264,
																	1300
																],
																"referencedDeclaration": 1264,
																"src": "33365:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33365:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "33348:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1281,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "33394:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$902",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1282,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1270,
																					"src": "33404:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$902",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1283,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 902,
																						"src": "33416:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$902_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1284,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 900,
																					"src": "33416:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$902",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "33404:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1286,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1276,
																						"src": "33431:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1287,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1276,
																						"src": "33440:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "33431:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1289,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1267,
																					"src": "33449:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "33431:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "33404:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33457:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "33404:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33453:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1295,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33403:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "33394:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1274,
														"id": 1297,
														"nodeType": "Return",
														"src": "33387:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "33139:91:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "33245:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "33258:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "33250:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "33270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "33261:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$902",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1269,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1268,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 902,
														"src": "33261:8:0"
													},
													"referencedDeclaration": 902,
													"src": "33261:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$902",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33249:30:0"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "33303:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33302:9:0"
									},
									"scope": 1760,
									"src": "33236:242:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "33669:958:0",
										"statements": [
											{
												"assignments": [
													1309
												],
												"declarations": [
													{
														"constant": false,
														"id": 1309,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "33688:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1431,
														"src": "33680:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1308,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33680:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1311,
												"initialValue": {
													"hexValue": "30",
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "33697:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33680:18:0"
											},
											{
												"id": 1428,
												"nodeType": "UncheckedBlock",
												"src": "33709:887:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1312,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "33738:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33747:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "33738:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33753:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33738:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1326,
														"nodeType": "IfStatement",
														"src": "33734:102:0",
														"trueBody": {
															"id": 1325,
															"nodeType": "Block",
															"src": "33756:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1317,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "33775:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33785:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "33775:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1320,
																	"nodeType": "ExpressionStatement",
																	"src": "33775:13:0"
																},
																{
																	"expression": {
																		"id": 1323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1321,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "33807:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33817:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "33807:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1324,
																	"nodeType": "ExpressionStatement",
																	"src": "33807:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1327,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "33854:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33863:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "33854:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33854:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1341,
														"nodeType": "IfStatement",
														"src": "33850:99:0",
														"trueBody": {
															"id": 1340,
															"nodeType": "Block",
															"src": "33871:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1332,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "33890:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33900:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "33890:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1335,
																	"nodeType": "ExpressionStatement",
																	"src": "33890:12:0"
																},
																{
																	"expression": {
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1336,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "33921:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33931:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "33921:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1339,
																	"nodeType": "ExpressionStatement",
																	"src": "33921:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1342,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "33967:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33976:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "33967:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33981:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33967:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1356,
														"nodeType": "IfStatement",
														"src": "33963:99:0",
														"trueBody": {
															"id": 1355,
															"nodeType": "Block",
															"src": "33984:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1347,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "34003:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34013:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "34003:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1350,
																	"nodeType": "ExpressionStatement",
																	"src": "34003:12:0"
																},
																{
																	"expression": {
																		"id": 1353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1351,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "34034:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34044:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "34034:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1354,
																	"nodeType": "ExpressionStatement",
																	"src": "34034:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1357,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "34080:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34089:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "34080:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34094:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34080:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1371,
														"nodeType": "IfStatement",
														"src": "34076:99:0",
														"trueBody": {
															"id": 1370,
															"nodeType": "Block",
															"src": "34097:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1362,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "34116:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34126:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "34116:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1365,
																	"nodeType": "ExpressionStatement",
																	"src": "34116:12:0"
																},
																{
																	"expression": {
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1366,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "34147:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34157:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "34147:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1369,
																	"nodeType": "ExpressionStatement",
																	"src": "34147:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1372,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "34193:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34202:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "34193:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34206:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34193:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1386,
														"nodeType": "IfStatement",
														"src": "34189:96:0",
														"trueBody": {
															"id": 1385,
															"nodeType": "Block",
															"src": "34209:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1377,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "34228:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34238:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "34228:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1380,
																	"nodeType": "ExpressionStatement",
																	"src": "34228:11:0"
																},
																{
																	"expression": {
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1381,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "34258:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34268:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "34258:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1384,
																	"nodeType": "ExpressionStatement",
																	"src": "34258:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1387,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "34303:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34312:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "34303:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34316:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34303:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1401,
														"nodeType": "IfStatement",
														"src": "34299:96:0",
														"trueBody": {
															"id": 1400,
															"nodeType": "Block",
															"src": "34319:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1392,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "34338:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34348:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "34338:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1395,
																	"nodeType": "ExpressionStatement",
																	"src": "34338:11:0"
																},
																{
																	"expression": {
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1396,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "34368:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34378:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "34368:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1399,
																	"nodeType": "ExpressionStatement",
																	"src": "34368:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1402,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "34413:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34422:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "34413:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34426:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34413:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1416,
														"nodeType": "IfStatement",
														"src": "34409:96:0",
														"trueBody": {
															"id": 1415,
															"nodeType": "Block",
															"src": "34429:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "34448:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34458:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "34448:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1410,
																	"nodeType": "ExpressionStatement",
																	"src": "34448:11:0"
																},
																{
																	"expression": {
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1411,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "34478:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34488:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "34478:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1414,
																	"nodeType": "ExpressionStatement",
																	"src": "34478:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1417,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "34523:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34532:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "34523:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34536:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34523:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1427,
														"nodeType": "IfStatement",
														"src": "34519:66:0",
														"trueBody": {
															"id": 1426,
															"nodeType": "Block",
															"src": "34539:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1422,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "34558:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34568:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "34558:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1425,
																	"nodeType": "ExpressionStatement",
																	"src": "34558:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1429,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1309,
													"src": "34613:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1307,
												"id": 1430,
												"nodeType": "Return",
												"src": "34606:13:0"
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "33486:116:0",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "33617:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33630:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "33622:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33621:15:0"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "33660:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33659:9:0"
									},
									"scope": 1760,
									"src": "33608:1019:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "34866:170:0",
										"statements": [
											{
												"id": 1466,
												"nodeType": "UncheckedBlock",
												"src": "34877:152:0",
												"statements": [
													{
														"assignments": [
															1444
														],
														"declarations": [
															{
																"constant": false,
																"id": 1444,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "34910:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1466,
																"src": "34902:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1443,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "34902:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1448,
														"initialValue": {
															"arguments": [
																{
																	"id": 1446,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1435,
																	"src": "34924:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1445,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1432,
																	1468
																],
																"referencedDeclaration": 1432,
																"src": "34919:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34919:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "34902:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1449,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1444,
																"src": "34952:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$902",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1450,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1438,
																					"src": "34962:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$902",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1451,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 902,
																						"src": "34974:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$902_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1452,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 900,
																					"src": "34974:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$902",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "34962:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1456,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1454,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "34989:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1455,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1444,
																						"src": "34994:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "34989:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1457,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1435,
																					"src": "35003:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "34989:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "34962:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35015:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "34962:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35011:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1463,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "34961:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "34952:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1442,
														"id": 1465,
														"nodeType": "Return",
														"src": "34945:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "34635:145:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "34795:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34808:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "34800:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34800:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "34824:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "34815:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$902",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1437,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1436,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 902,
														"src": "34815:8:0"
													},
													"referencedDeclaration": 902,
													"src": "34815:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$902",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34799:34:0"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "34857:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34856:9:0"
									},
									"scope": 1760,
									"src": "34786:250:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "35229:860:0",
										"statements": [
											{
												"assignments": [
													1477
												],
												"declarations": [
													{
														"constant": false,
														"id": 1477,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "35248:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1596,
														"src": "35240:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1476,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35240:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1479,
												"initialValue": {
													"hexValue": "30",
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "35257:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35240:18:0"
											},
											{
												"id": 1593,
												"nodeType": "UncheckedBlock",
												"src": "35269:789:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1480,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "35298:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35307:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35311:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "35307:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "35298:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1496,
														"nodeType": "IfStatement",
														"src": "35294:102:0",
														"trueBody": {
															"id": 1495,
															"nodeType": "Block",
															"src": "35315:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 1489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1485,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1471,
																			"src": "35334:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1486,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35343:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1487,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35347:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "35343:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "35334:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1490,
																	"nodeType": "ExpressionStatement",
																	"src": "35334:15:0"
																},
																{
																	"expression": {
																		"id": 1493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1491,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1477,
																			"src": "35368:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35378:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "35368:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1494,
																	"nodeType": "ExpressionStatement",
																	"src": "35368:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1497,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "35414:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35423:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35427:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "35423:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "35414:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1513,
														"nodeType": "IfStatement",
														"src": "35410:102:0",
														"trueBody": {
															"id": 1512,
															"nodeType": "Block",
															"src": "35431:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1502,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1471,
																			"src": "35450:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35459:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1504,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35463:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "35459:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "35450:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1507,
																	"nodeType": "ExpressionStatement",
																	"src": "35450:15:0"
																},
																{
																	"expression": {
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1508,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1477,
																			"src": "35484:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35494:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "35484:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1511,
																	"nodeType": "ExpressionStatement",
																	"src": "35484:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1514,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "35530:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35539:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35543:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "35539:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "35530:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1530,
														"nodeType": "IfStatement",
														"src": "35526:102:0",
														"trueBody": {
															"id": 1529,
															"nodeType": "Block",
															"src": "35547:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1519,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1471,
																			"src": "35566:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1520,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35575:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35579:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "35575:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "35566:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1524,
																	"nodeType": "ExpressionStatement",
																	"src": "35566:15:0"
																},
																{
																	"expression": {
																		"id": 1527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1525,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1477,
																			"src": "35600:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35610:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "35600:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1528,
																	"nodeType": "ExpressionStatement",
																	"src": "35600:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1531,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "35646:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35655:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35659:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "35655:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "35646:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1547,
														"nodeType": "IfStatement",
														"src": "35642:99:0",
														"trueBody": {
															"id": 1546,
															"nodeType": "Block",
															"src": "35662:79:0",
															"statements": [
																{
																	"expression": {
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1536,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1471,
																			"src": "35681:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35690:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35694:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "35690:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "35681:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1541,
																	"nodeType": "ExpressionStatement",
																	"src": "35681:14:0"
																},
																{
																	"expression": {
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1542,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1477,
																			"src": "35714:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35724:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "35714:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1545,
																	"nodeType": "ExpressionStatement",
																	"src": "35714:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1548,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "35759:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35768:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35772:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "35768:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "35759:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1564,
														"nodeType": "IfStatement",
														"src": "35755:99:0",
														"trueBody": {
															"id": 1563,
															"nodeType": "Block",
															"src": "35775:79:0",
															"statements": [
																{
																	"expression": {
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1553,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1471,
																			"src": "35794:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1554,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35803:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35807:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "35803:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "35794:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1558,
																	"nodeType": "ExpressionStatement",
																	"src": "35794:14:0"
																},
																{
																	"expression": {
																		"id": 1561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1559,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1477,
																			"src": "35827:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35837:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "35827:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1562,
																	"nodeType": "ExpressionStatement",
																	"src": "35827:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1565,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "35872:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35881:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35885:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "35881:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "35872:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1581,
														"nodeType": "IfStatement",
														"src": "35868:99:0",
														"trueBody": {
															"id": 1580,
															"nodeType": "Block",
															"src": "35888:79:0",
															"statements": [
																{
																	"expression": {
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1570,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1471,
																			"src": "35907:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35916:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1572,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35920:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "35916:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "35907:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1575,
																	"nodeType": "ExpressionStatement",
																	"src": "35907:14:0"
																},
																{
																	"expression": {
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1576,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1477,
																			"src": "35940:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35950:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "35940:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1579,
																	"nodeType": "ExpressionStatement",
																	"src": "35940:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1582,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "35985:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35994:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35998:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "35994:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "35985:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1592,
														"nodeType": "IfStatement",
														"src": "35981:66:0",
														"trueBody": {
															"id": 1591,
															"nodeType": "Block",
															"src": "36001:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1587,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1477,
																			"src": "36020:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36030:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "36020:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1590,
																	"nodeType": "ExpressionStatement",
																	"src": "36020:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1594,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1477,
													"src": "36075:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1475,
												"id": 1595,
												"nodeType": "Return",
												"src": "36068:13:0"
											}
										]
									},
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "35044:117:0",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "35176:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "35190:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "35182:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35181:15:0"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "35220:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35219:9:0"
									},
									"scope": 1760,
									"src": "35167:922:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "36330:170:0",
										"statements": [
											{
												"id": 1631,
												"nodeType": "UncheckedBlock",
												"src": "36341:152:0",
												"statements": [
													{
														"assignments": [
															1609
														],
														"declarations": [
															{
																"constant": false,
																"id": 1609,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "36374:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1631,
																"src": "36366:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1608,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "36366:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1613,
														"initialValue": {
															"arguments": [
																{
																	"id": 1611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "36389:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1610,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1597,
																	1633
																],
																"referencedDeclaration": 1597,
																"src": "36383:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36383:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "36366:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1614,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "36417:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$902",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1615,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1603,
																					"src": "36427:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$902",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1616,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 902,
																						"src": "36439:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$902_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1617,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 900,
																					"src": "36439:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$902",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "36427:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1621,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1619,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "36454:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1620,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1609,
																						"src": "36458:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "36454:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1622,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1600,
																					"src": "36467:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "36454:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "36427:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36479:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "36427:53:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36475:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1628,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "36426:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "36417:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1607,
														"id": 1630,
														"nodeType": "Return",
														"src": "36410:71:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "36097:146:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "36258:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "36272:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "36264:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "36288:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "36279:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$902",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1602,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1601,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 902,
														"src": "36279:8:0"
													},
													"referencedDeclaration": 902,
													"src": "36279:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$902",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36263:34:0"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "36321:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36320:9:0"
									},
									"scope": 1760,
									"src": "36249:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "36822:624:0",
										"statements": [
											{
												"assignments": [
													1642
												],
												"declarations": [
													{
														"constant": false,
														"id": 1642,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "36841:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1719,
														"src": "36833:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36833:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1644,
												"initialValue": {
													"hexValue": "30",
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "36850:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36833:18:0"
											},
											{
												"id": 1716,
												"nodeType": "UncheckedBlock",
												"src": "36862:553:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1645,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1636,
																	"src": "36891:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36900:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "36891:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36906:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "36891:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1659,
														"nodeType": "IfStatement",
														"src": "36887:101:0",
														"trueBody": {
															"id": 1658,
															"nodeType": "Block",
															"src": "36909:79:0",
															"statements": [
																{
																	"expression": {
																		"id": 1652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1636,
																			"src": "36928:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36938:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "36928:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1653,
																	"nodeType": "ExpressionStatement",
																	"src": "36928:13:0"
																},
																{
																	"expression": {
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1654,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "36960:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36970:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "36960:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1657,
																	"nodeType": "ExpressionStatement",
																	"src": "36960:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1660,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1636,
																	"src": "37006:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37015:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "37006:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37020:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37006:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1674,
														"nodeType": "IfStatement",
														"src": "37002:98:0",
														"trueBody": {
															"id": 1673,
															"nodeType": "Block",
															"src": "37023:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1665,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1636,
																			"src": "37042:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37052:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "37042:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1668,
																	"nodeType": "ExpressionStatement",
																	"src": "37042:12:0"
																},
																{
																	"expression": {
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1669,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "37073:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37083:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "37073:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1672,
																	"nodeType": "ExpressionStatement",
																	"src": "37073:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1675,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1636,
																	"src": "37118:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37127:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "37118:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37132:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37118:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1689,
														"nodeType": "IfStatement",
														"src": "37114:98:0",
														"trueBody": {
															"id": 1688,
															"nodeType": "Block",
															"src": "37135:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1680,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1636,
																			"src": "37154:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37164:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "37154:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1683,
																	"nodeType": "ExpressionStatement",
																	"src": "37154:12:0"
																},
																{
																	"expression": {
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1684,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "37185:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37195:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "37185:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1687,
																	"nodeType": "ExpressionStatement",
																	"src": "37185:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1690,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1636,
																	"src": "37230:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37239:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "37230:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37244:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37230:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1704,
														"nodeType": "IfStatement",
														"src": "37226:98:0",
														"trueBody": {
															"id": 1703,
															"nodeType": "Block",
															"src": "37247:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1695,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1636,
																			"src": "37266:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37276:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "37266:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1698,
																	"nodeType": "ExpressionStatement",
																	"src": "37266:12:0"
																},
																{
																	"expression": {
																		"id": 1701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1699,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "37297:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37307:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "37297:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1702,
																	"nodeType": "ExpressionStatement",
																	"src": "37297:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1705,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1636,
																	"src": "37342:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37351:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "37342:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37355:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37342:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1715,
														"nodeType": "IfStatement",
														"src": "37338:66:0",
														"trueBody": {
															"id": 1714,
															"nodeType": "Block",
															"src": "37358:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1710,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "37377:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37387:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "37377:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1713,
																	"nodeType": "ExpressionStatement",
																	"src": "37377:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1717,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1642,
													"src": "37432:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1640,
												"id": 1718,
												"nodeType": "Return",
												"src": "37425:13:0"
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "36508:245:0",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "36768:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "36783:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "36775:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36774:15:0"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "36813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36812:9:0"
									},
									"scope": 1760,
									"src": "36759:687:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "37688:178:0",
										"statements": [
											{
												"id": 1757,
												"nodeType": "UncheckedBlock",
												"src": "37699:160:0",
												"statements": [
													{
														"assignments": [
															1732
														],
														"declarations": [
															{
																"constant": false,
																"id": 1732,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "37732:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1757,
																"src": "37724:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1731,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "37724:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1736,
														"initialValue": {
															"arguments": [
																{
																	"id": 1734,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1723,
																	"src": "37748:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1733,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1720,
																	1759
																],
																"referencedDeclaration": 1720,
																"src": "37741:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37741:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "37724:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1737,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1732,
																"src": "37776:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$902",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1741,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1738,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1726,
																					"src": "37786:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$902",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1739,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 902,
																						"src": "37798:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$902_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1740,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 900,
																					"src": "37798:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$902",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "37786:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1747,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1742,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "37813:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1745,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1743,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1732,
																									"src": "37819:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1744,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "37828:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "37819:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1746,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "37818:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "37813:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1748,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1723,
																					"src": "37833:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "37813:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "37786:52:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37845:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "37786:60:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37841:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1754,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "37785:62:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "37776:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1730,
														"id": 1756,
														"nodeType": "Return",
														"src": "37769:78:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "37454:146:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "37615:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "37630:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "37622:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "37646:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "37637:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$902",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1725,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1724,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 902,
														"src": "37637:8:0"
													},
													"referencedDeclaration": 902,
													"src": "37637:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$902",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37621:34:0"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "37679:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37678:9:0"
									},
									"scope": 1760,
									"src": "37606:260:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3507,
							"src": "25231:12638:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1761,
								"nodeType": "StructuredDocumentation",
								"src": "37942:36:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1932,
							"linearizedBaseContracts": [
								1932
							],
							"name": "Strings",
							"nameLocation": "37988:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1764,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "38028:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1932,
									"src": "38003:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1762,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "38003:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1763,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "38039:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1767,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "38087:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1932,
									"src": "38064:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1765,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "38064:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1766,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "38105:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "38285:645:0",
										"statements": [
											{
												"id": 1813,
												"nodeType": "UncheckedBlock",
												"src": "38296:627:0",
												"statements": [
													{
														"assignments": [
															1776
														],
														"declarations": [
															{
																"constant": false,
																"id": 1776,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "38329:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1813,
																"src": "38321:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1775,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "38321:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1783,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1779,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1770,
																		"src": "38349:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1777,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "38338:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1760_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1597,
																	"src": "38338:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38338:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38358:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "38338:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "38321:38:0"
													},
													{
														"assignments": [
															1785
														],
														"declarations": [
															{
																"constant": false,
																"id": 1785,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "38388:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1813,
																"src": "38374:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1784,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "38374:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1790,
														"initialValue": {
															"arguments": [
																{
																	"id": 1788,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1776,
																	"src": "38408:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "38397:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1786,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "38401:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38397:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "38374:41:0"
													},
													{
														"assignments": [
															1792
														],
														"declarations": [
															{
																"constant": false,
																"id": 1792,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "38438:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1813,
																"src": "38430:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1791,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "38430:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1793,
														"nodeType": "VariableDeclarationStatement",
														"src": "38430:11:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "38513:69:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "38532:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "38543:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "38555:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "38559:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "38551:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "38551:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "38539:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38539:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "38532:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1785,
																"isOffset": false,
																"isSlot": false,
																"src": "38543:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1776,
																"isOffset": false,
																"isSlot": false,
																"src": "38559:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1792,
																"isOffset": false,
																"isSlot": false,
																"src": "38532:3:0",
																"valueSize": 1
															}
														],
														"id": 1794,
														"nodeType": "InlineAssembly",
														"src": "38504:78:0"
													},
													{
														"body": {
															"id": 1809,
															"nodeType": "Block",
															"src": "38609:275:0",
															"statements": [
																{
																	"expression": {
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "38628:5:0",
																		"subExpression": {
																			"id": 1796,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1792,
																			"src": "38628:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1798,
																	"nodeType": "ExpressionStatement",
																	"src": "38628:5:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "38713:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "38744:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "38758:5:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "38765:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "38754:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "38754:14:0"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "38770:8:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "38749:4:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "38749:30:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "38736:7:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "38736:44:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "38736:44:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 1764,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "38770:8:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1792,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "38744:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1770,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "38758:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1799,
																	"nodeType": "InlineAssembly",
																	"src": "38704:95:0"
																},
																{
																	"expression": {
																		"id": 1802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1800,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1770,
																			"src": "38817:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "38826:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "38817:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1803,
																	"nodeType": "ExpressionStatement",
																	"src": "38817:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1804,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1770,
																			"src": "38851:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "38860:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "38851:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1808,
																	"nodeType": "IfStatement",
																	"src": "38847:21:0",
																	"trueBody": {
																		"id": 1807,
																		"nodeType": "Break",
																		"src": "38863:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38603:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1810,
														"nodeType": "WhileStatement",
														"src": "38596:288:0"
													},
													{
														"expression": {
															"id": 1811,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "38905:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1774,
														"id": 1812,
														"nodeType": "Return",
														"src": "38898:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "38116:92:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "38223:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "38240:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "38232:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38231:15:0"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "38270:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1772,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38270:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38269:15:0"
									},
									"scope": 1932,
									"src": "38214:716:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1834,
										"nodeType": "Block",
										"src": "39114:104:0",
										"statements": [
											{
												"id": 1833,
												"nodeType": "UncheckedBlock",
												"src": "39125:86:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1824,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "39169:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1827,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1818,
																				"src": "39188:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1825,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1760,
																				"src": "39176:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1760_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1720,
																			"src": "39176:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "39176:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "39197:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "39176:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1823,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1835,
																	1911,
																	1931
																],
																"referencedDeclaration": 1911,
																"src": "39157:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39157:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1822,
														"id": 1832,
														"nodeType": "Return",
														"src": "39150:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "38938:96:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "39049:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39069:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "39061:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39060:15:0"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "39099:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1820,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39099:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39098:15:0"
									},
									"scope": 1932,
									"src": "39040:178:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1910,
										"nodeType": "Block",
										"src": "39436:357:0",
										"statements": [
											{
												"assignments": [
													1846
												],
												"declarations": [
													{
														"constant": false,
														"id": 1846,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "39460:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1910,
														"src": "39447:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1845,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "39447:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1855,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39479:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1850,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1840,
																	"src": "39483:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "39479:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39492:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "39479:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "39469:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1847,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "39473:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39469:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39447:47:0"
											},
											{
												"expression": {
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1856,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "39505:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1858,
														"indexExpression": {
															"hexValue": "30",
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39512:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "39505:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39517:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "39505:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "39505:15:0"
											},
											{
												"expression": {
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1862,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "39531:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1864,
														"indexExpression": {
															"hexValue": "31",
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39538:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "39531:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39543:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "39531:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1867,
												"nodeType": "ExpressionStatement",
												"src": "39531:15:0"
											},
											{
												"body": {
													"id": 1896,
													"nodeType": "Block",
													"src": "39602:86:0",
													"statements": [
														{
															"expression": {
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1882,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1846,
																		"src": "39617:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1884,
																	"indexExpression": {
																		"id": 1883,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1869,
																		"src": "39624:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "39617:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1885,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1764,
																		"src": "39629:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1889,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1886,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1838,
																			"src": "39638:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "39646:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "39638:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "39629:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "39617:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1891,
															"nodeType": "ExpressionStatement",
															"src": "39617:33:0"
														},
														{
															"expression": {
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1892,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1838,
																	"src": "39665:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39675:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "39665:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1895,
															"nodeType": "ExpressionStatement",
															"src": "39665:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1876,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "39590:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39594:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "39590:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1897,
												"initializationExpression": {
													"assignments": [
														1869
													],
													"declarations": [
														{
															"constant": false,
															"id": 1869,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "39570:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1897,
															"src": "39562:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1868,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "39562:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1875,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39574:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1871,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1840,
																"src": "39578:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39574:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39587:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "39574:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "39562:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "39597:3:0",
														"subExpression": {
															"id": 1879,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "39599:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1881,
													"nodeType": "ExpressionStatement",
													"src": "39597:3:0"
												},
												"nodeType": "ForStatement",
												"src": "39557:131:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1899,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "39706:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39715:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "39706:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39718:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1898,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "39698:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39698:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1904,
												"nodeType": "ExpressionStatement",
												"src": "39698:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1907,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "39778:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1906,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "39771:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1905,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "39771:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39771:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1844,
												"id": 1909,
												"nodeType": "Return",
												"src": "39764:21:0"
											}
										]
									},
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "39226:114:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "39355:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39375:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "39367:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "39390:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "39382:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39366:31:0"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "39421:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1842,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39421:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39420:15:0"
									},
									"scope": 1932,
									"src": "39346:447:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1930,
										"nodeType": "Block",
										"src": "40023:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1924,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1914,
																			"src": "40069:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "40061:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1922,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "40061:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40061:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40053:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1920,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "40053:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40053:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1927,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "40077:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1919,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1835,
															1911,
															1931
														],
														"referencedDeclaration": 1911,
														"src": "40041:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40041:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1918,
												"id": 1929,
												"nodeType": "Return",
												"src": "40034:59:0"
											}
										]
									},
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "39801:143:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "39959:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "39979:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "39971:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39970:14:0"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "40008:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1916,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40008:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40007:15:0"
									},
									"scope": 1932,
									"src": "39950:151:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3507,
							"src": "37980:2124:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1933,
								"nodeType": "StructuredDocumentation",
								"src": "40188:210:0",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 2290,
							"linearizedBaseContracts": [
								2290
							],
							"name": "ECDSA",
							"nameLocation": "40408:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1939,
									"members": [
										{
											"id": 1934,
											"name": "NoError",
											"nameLocation": "40450:7:0",
											"nodeType": "EnumValue",
											"src": "40450:7:0"
										},
										{
											"id": 1935,
											"name": "InvalidSignature",
											"nameLocation": "40468:16:0",
											"nodeType": "EnumValue",
											"src": "40468:16:0"
										},
										{
											"id": 1936,
											"name": "InvalidSignatureLength",
											"nameLocation": "40495:22:0",
											"nodeType": "EnumValue",
											"src": "40495:22:0"
										},
										{
											"id": 1937,
											"name": "InvalidSignatureS",
											"nameLocation": "40528:17:0",
											"nodeType": "EnumValue",
											"src": "40528:17:0"
										},
										{
											"id": 1938,
											"name": "InvalidSignatureV",
											"nameLocation": "40556:17:0",
											"nodeType": "EnumValue",
											"src": "40556:17:0"
										}
									],
									"name": "RecoverError",
									"nameLocation": "40426:12:0",
									"nodeType": "EnumDefinition",
									"src": "40421:181:0"
								},
								{
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "40664:467:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1939",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1945,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1942,
														"src": "40679:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1939",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1946,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1939,
															"src": "40688:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1939_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1934,
														"src": "40688:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1939",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "40679:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1939",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1951,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "40777:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1939",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1952,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1939,
																"src": "40786:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1939_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1935,
															"src": "40786:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1939",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "40777:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1939",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1960,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "40888:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1939",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1961,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1939,
																	"src": "40897:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1939_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1936,
																"src": "40897:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1939",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "40888:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1939",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1969,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1942,
																	"src": "41012:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1939",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1970,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1939,
																		"src": "41021:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1939_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1937,
																	"src": "41021:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1939",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "41012:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1978,
															"nodeType": "IfStatement",
															"src": "41008:116:0",
															"trueBody": {
																"id": 1977,
																"nodeType": "Block",
																"src": "41053:71:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
																					"id": 1974,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "41075:36:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					},
																					"value": "ECDSA: invalid signature 's' value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					}
																				],
																				"id": 1973,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "41068:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "41068:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1976,
																		"nodeType": "ExpressionStatement",
																		"src": "41068:44:0"
																	}
																]
															}
														},
														"id": 1979,
														"nodeType": "IfStatement",
														"src": "40884:240:0",
														"trueBody": {
															"id": 1968,
															"nodeType": "Block",
															"src": "40934:68:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																				"id": 1965,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "40956:33:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				},
																				"value": "ECDSA: invalid signature length"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				}
																			],
																			"id": 1964,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "40949:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 1966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40949:41:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1967,
																	"nodeType": "ExpressionStatement",
																	"src": "40949:41:0"
																}
															]
														}
													},
													"id": 1980,
													"nodeType": "IfStatement",
													"src": "40773:351:0",
													"trueBody": {
														"id": 1959,
														"nodeType": "Block",
														"src": "40817:61:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																			"id": 1956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "40839:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			},
																			"value": "ECDSA: invalid signature"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			}
																		],
																		"id": 1955,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "40832:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 1957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40832:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1958,
																"nodeType": "ExpressionStatement",
																"src": "40832:34:0"
															}
														]
													}
												},
												"id": 1981,
												"nodeType": "IfStatement",
												"src": "40675:449:0",
												"trueBody": {
													"id": 1950,
													"nodeType": "Block",
													"src": "40710:57:0",
													"statements": [
														{
															"functionReturnParameters": 1944,
															"id": 1949,
															"nodeType": "Return",
															"src": "40725:7:0"
														}
													]
												}
											}
										]
									},
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "40619:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "40644:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "40631:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1939",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1941,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1940,
														"name": "RecoverError",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1939,
														"src": "40631:12:0"
													},
													"referencedDeclaration": 1939,
													"src": "40631:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1939",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40630:20:0"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40664:0:0"
									},
									"scope": 2290,
									"src": "40610:521:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2028,
										"nodeType": "Block",
										"src": "42321:643:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1996,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1988,
															"src": "42336:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "42336:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42356:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "42336:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2026,
													"nodeType": "Block",
													"src": "42874:83:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "42905:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "42897:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2018,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "42897:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42897:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2022,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1939,
																			"src": "42909:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1939_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1936,
																		"src": "42909:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1939",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 2024,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42896:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1939_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 1995,
															"id": 2025,
															"nodeType": "Return",
															"src": "42889:56:0"
														}
													]
												},
												"id": 2027,
												"nodeType": "IfStatement",
												"src": "42332:625:0",
												"trueBody": {
													"id": 2017,
													"nodeType": "Block",
													"src": "42360:508:0",
													"statements": [
														{
															"assignments": [
																2001
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2001,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "42383:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2017,
																	"src": "42375:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 2000,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "42375:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2002,
															"nodeType": "VariableDeclarationStatement",
															"src": "42375:9:0"
														},
														{
															"assignments": [
																2004
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2004,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "42407:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2017,
																	"src": "42399:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 2003,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "42399:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2005,
															"nodeType": "VariableDeclarationStatement",
															"src": "42399:9:0"
														},
														{
															"assignments": [
																2007
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2007,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "42429:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2017,
																	"src": "42423:7:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 2006,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "42423:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2008,
															"nodeType": "VariableDeclarationStatement",
															"src": "42423:7:0"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "42635:175:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "42654:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "42669:9:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "42680:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "42665:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "42665:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "42659:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42659:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "42654:1:0"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "42704:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "42719:9:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "42730:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "42715:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "42715:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "42709:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42709:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "42704:1:0"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "42754:41:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42764:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nodeType": "YulIdentifier",
																									"src": "42777:9:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "42788:4:0",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "42773:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "42773:20:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "42767:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "42767:27:0"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nodeType": "YulIdentifier",
																				"src": "42759:4:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42759:36:0"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "42754:1:0"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 2001,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42654:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2004,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42704:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1988,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42669:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1988,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42719:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1988,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42777:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2007,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42754:1:0",
																	"valueSize": 1
																}
															],
															"id": 2009,
															"nodeType": "InlineAssembly",
															"src": "42626:184:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2011,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1986,
																		"src": "42842:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2012,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2007,
																		"src": "42848:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 2013,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2001,
																		"src": "42851:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2014,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2004,
																		"src": "42854:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2010,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2029,
																		2103,
																		2197
																	],
																	"referencedDeclaration": 2197,
																	"src": "42831:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1939_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
																	}
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42831:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1939_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 1995,
															"id": 2016,
															"nodeType": "Return",
															"src": "42824:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1984,
										"nodeType": "StructuredDocumentation",
										"src": "41139:1072:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
									},
									"id": 2029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "42226:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "42245:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "42237:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1985,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "42264:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "42251:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1987,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42251:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42236:38:0"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "42298:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "42307:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1939",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1993,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1992,
														"name": "RecoverError",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1939,
														"src": "42307:12:0"
													},
													"referencedDeclaration": 1939,
													"src": "42307:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1939",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42297:23:0"
									},
									"scope": 2290,
									"src": "42217:747:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2055,
										"nodeType": "Block",
										"src": "43853:144:0",
										"statements": [
											{
												"assignments": [
													2040,
													2043
												],
												"declarations": [
													{
														"constant": false,
														"id": 2040,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "43873:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2055,
														"src": "43865:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2039,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "43865:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2043,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "43897:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2055,
														"src": "43884:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1939",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2042,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2041,
																"name": "RecoverError",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1939,
																"src": "43884:12:0"
															},
															"referencedDeclaration": 1939,
															"src": "43884:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1939",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2048,
												"initialValue": {
													"arguments": [
														{
															"id": 2045,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "43917:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2046,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "43923:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2044,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2029,
															2103,
															2197
														],
														"referencedDeclaration": 2029,
														"src": "43906:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1939_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43906:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1939_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43864:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2050,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2043,
															"src": "43956:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1939",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1939",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 2049,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1983,
														"src": "43944:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1939_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43944:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2052,
												"nodeType": "ExpressionStatement",
												"src": "43944:18:0"
											},
											{
												"expression": {
													"id": 2053,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2040,
													"src": "43980:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2038,
												"id": 2054,
												"nodeType": "Return",
												"src": "43973:16:0"
											}
										]
									},
									"documentation": {
										"id": 2030,
										"nodeType": "StructuredDocumentation",
										"src": "42972:788:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
									},
									"id": 2056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "43775:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "43791:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "43783:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2031,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "43783:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "43810:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "43797:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2033,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43797:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43782:38:0"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "43844:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43843:9:0"
									},
									"scope": 2290,
									"src": "43766:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2102,
										"nodeType": "Block",
										"src": "44397:207:0",
										"statements": [
											{
												"assignments": [
													2072
												],
												"declarations": [
													{
														"constant": false,
														"id": 2072,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "44416:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 2102,
														"src": "44408:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2071,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "44408:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2079,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2073,
														"name": "vs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "44420:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																"id": 2076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44433:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																},
																"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																}
															],
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "44425:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 2074,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "44425:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44425:75:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "44420:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44408:92:0"
											},
											{
												"assignments": [
													2081
												],
												"declarations": [
													{
														"constant": false,
														"id": 2081,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "44517:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 2102,
														"src": "44511:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2080,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "44511:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2094,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2086,
																					"name": "vs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "44536:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "44528:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2084,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "44528:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "44528:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "323535",
																			"id": 2088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "44543:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "255"
																		},
																		"src": "44528:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2090,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "44527:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3237",
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44550:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_27_by_1",
																	"typeString": "int_const 27"
																},
																"value": "27"
															},
															"src": "44527:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2083,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "44521:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 2082,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "44521:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44521:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44511:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2096,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2059,
															"src": "44582:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2097,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2081,
															"src": "44588:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2098,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "44591:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2099,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2072,
															"src": "44594:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2095,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2029,
															2103,
															2197
														],
														"referencedDeclaration": 2197,
														"src": "44571:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1939_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44571:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1939_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 2070,
												"id": 2101,
												"nodeType": "Return",
												"src": "44564:32:0"
											}
										]
									},
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "44005:249:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
									},
									"id": 2103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "44269:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "44298:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "44290:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2058,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "44321:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "44313:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2060,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44313:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "44341:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "44333:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2062,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44279:71:0"
									},
									"returnParameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "44374:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "44383:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1939",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2068,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2067,
														"name": "RecoverError",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1939,
														"src": "44383:12:0"
													},
													"referencedDeclaration": 1939,
													"src": "44383:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1939",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44373:23:0"
									},
									"scope": 2290,
									"src": "44260:344:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "44896:140:0",
										"statements": [
											{
												"assignments": [
													2116,
													2119
												],
												"declarations": [
													{
														"constant": false,
														"id": 2116,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "44916:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2132,
														"src": "44908:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2115,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "44908:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2119,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "44940:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2132,
														"src": "44927:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1939",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2118,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2117,
																"name": "RecoverError",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1939,
																"src": "44927:12:0"
															},
															"referencedDeclaration": 1939,
															"src": "44927:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1939",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2125,
												"initialValue": {
													"arguments": [
														{
															"id": 2121,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2106,
															"src": "44960:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2122,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2108,
															"src": "44966:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2123,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "44969:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2120,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2029,
															2103,
															2197
														],
														"referencedDeclaration": 2103,
														"src": "44949:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1939_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44949:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1939_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44907:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2127,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2119,
															"src": "44995:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1939",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1939",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 2126,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1983,
														"src": "44983:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1939_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44983:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2129,
												"nodeType": "ExpressionStatement",
												"src": "44983:18:0"
											},
											{
												"expression": {
													"id": 2130,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2116,
													"src": "45019:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2114,
												"id": 2131,
												"nodeType": "Return",
												"src": "45012:16:0"
											}
										]
									},
									"documentation": {
										"id": 2104,
										"nodeType": "StructuredDocumentation",
										"src": "44612:158:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
									},
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "44785:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "44811:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "44803:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2105,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "44834:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "44826:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2107,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "44854:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "44846:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44792:71:0"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "44887:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44886:9:0"
									},
									"scope": 2290,
									"src": "44776:260:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2196,
										"nodeType": "Block",
										"src": "45372:1366:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2152,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "46278:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "46270:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "46270:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46270:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 2154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46283:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "46270:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2165,
												"nodeType": "IfStatement",
												"src": "46266:163:0",
												"trueBody": {
													"id": 2164,
													"nodeType": "Block",
													"src": "46351:78:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2158,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "46382:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "46374:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2156,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "46374:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46374:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2160,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1939,
																			"src": "46386:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1939_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1937,
																		"src": "46386:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1939",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 2162,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "46373:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1939_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 2149,
															"id": 2163,
															"nodeType": "Return",
															"src": "46366:51:0"
														}
													]
												}
											},
											{
												"assignments": [
													2167
												],
												"declarations": [
													{
														"constant": false,
														"id": 2167,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "46534:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2196,
														"src": "46526:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2166,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "46526:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2174,
												"initialValue": {
													"arguments": [
														{
															"id": 2169,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "46553:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2170,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "46559:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2171,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2140,
															"src": "46562:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2172,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "46565:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2168,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "46543:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46543:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46526:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2175,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2167,
														"src": "46582:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46600:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "46592:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2176,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "46592:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46592:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "46582:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2190,
												"nodeType": "IfStatement",
												"src": "46578:103:0",
												"trueBody": {
													"id": 2189,
													"nodeType": "Block",
													"src": "46604:77:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "46635:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "46627:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2181,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "46627:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46627:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2185,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1939,
																			"src": "46639:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1939_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1935,
																		"src": "46639:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1939",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 2187,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "46626:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1939_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 2149,
															"id": 2188,
															"nodeType": "Return",
															"src": "46619:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2191,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "46701:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2192,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1939,
																"src": "46709:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1939_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1934,
															"src": "46709:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1939",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"id": 2194,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "46700:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1939_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 2149,
												"id": 2195,
												"nodeType": "Return",
												"src": "46693:37:0"
											}
										]
									},
									"documentation": {
										"id": 2134,
										"nodeType": "StructuredDocumentation",
										"src": "45044:168:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
									},
									"id": 2197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "45227:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "45256:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "45248:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "45277:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "45271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2137,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "45271:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "45297:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "45289:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2139,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "45317:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "45309:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45237:88:0"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "45349:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "45358:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1939",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2146,
														"name": "RecoverError",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1939,
														"src": "45358:12:0"
													},
													"referencedDeclaration": 1939,
													"src": "45358:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1939",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45348:23:0"
									},
									"scope": 2290,
									"src": "45218:1520:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2229,
										"nodeType": "Block",
										"src": "47014:142:0",
										"statements": [
											{
												"assignments": [
													2212,
													2215
												],
												"declarations": [
													{
														"constant": false,
														"id": 2212,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "47034:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2229,
														"src": "47026:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2211,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "47026:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2215,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "47058:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2229,
														"src": "47045:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1939",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2214,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2213,
																"name": "RecoverError",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1939,
																"src": "47045:12:0"
															},
															"referencedDeclaration": 1939,
															"src": "47045:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1939",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2222,
												"initialValue": {
													"arguments": [
														{
															"id": 2217,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2200,
															"src": "47078:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2218,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "47084:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2219,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2204,
															"src": "47087:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2220,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "47090:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2216,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2029,
															2103,
															2197
														],
														"referencedDeclaration": 2197,
														"src": "47067:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1939_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47067:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1939_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47025:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2224,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "47115:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1939",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1939",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 2223,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1983,
														"src": "47103:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1939_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47103:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2226,
												"nodeType": "ExpressionStatement",
												"src": "47103:18:0"
											},
											{
												"expression": {
													"id": 2227,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2212,
													"src": "47139:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2210,
												"id": 2228,
												"nodeType": "Return",
												"src": "47132:16:0"
											}
										]
									},
									"documentation": {
										"id": 2198,
										"nodeType": "StructuredDocumentation",
										"src": "46746:125:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "46886:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "46912:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "46904:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2199,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "46904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "46933:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "46927:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2201,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "46927:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "46953:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "46945:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2203,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "46945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "46973:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "46965:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2205,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "46965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46893:88:0"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "47005:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47005:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47004:9:0"
									},
									"scope": 2290,
									"src": "46877:279:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2246,
										"nodeType": "Block",
										"src": "47534:191:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47675:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 2242,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2233,
																	"src": "47711:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2239,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "47658:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "47658:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47658:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2238,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "47648:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47648:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2237,
												"id": 2245,
												"nodeType": "Return",
												"src": "47641:76:0"
											}
										]
									},
									"documentation": {
										"id": 2231,
										"nodeType": "StructuredDocumentation",
										"src": "47164:286:0",
										"text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 2247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "47465:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "47496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "47488:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47487:14:0"
									},
									"returnParameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "47525:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2235,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47524:9:0"
									},
									"scope": 2290,
									"src": "47456:269:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2268,
										"nodeType": "Block",
										"src": "48100:118:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48145:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 2261,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2250,
																				"src": "48196:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "48196:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2259,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1932,
																			"src": "48179:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$1932_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1815,
																		"src": "48179:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 2263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "48179:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 2264,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2250,
																	"src": "48207:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2256,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "48128:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "48128:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48128:81:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2255,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "48118:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48118:92:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2254,
												"id": 2267,
												"nodeType": "Return",
												"src": "48111:99:0"
											}
										]
									},
									"documentation": {
										"id": 2248,
										"nodeType": "StructuredDocumentation",
										"src": "47733:281:0",
										"text": " @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 2269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "48029:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "48065:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "48052:14:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "48052:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48051:16:0"
									},
									"returnParameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "48091:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "48091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48090:9:0"
									},
									"scope": 2290,
									"src": "48020:198:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2288,
										"nodeType": "Block",
										"src": "48670:94:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 2282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48715:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 2283,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2272,
																	"src": "48727:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2284,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2274,
																	"src": "48744:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2280,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "48698:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "48698:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48698:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2279,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "48688:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48688:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2278,
												"id": 2287,
												"nodeType": "Return",
												"src": "48681:75:0"
											}
										]
									},
									"documentation": {
										"id": 2270,
										"nodeType": "StructuredDocumentation",
										"src": "48226:336:0",
										"text": " @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."
									},
									"id": 2289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "48577:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "48601:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "48593:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2271,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "48593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "48626:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "48618:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2273,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "48618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48592:45:0"
									},
									"returnParameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "48661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "48661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48660:9:0"
									},
									"scope": 2290,
									"src": "48568:196:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3507,
							"src": "40400:8367:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2291,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 897,
										"src": "48795:7:0"
									},
									"id": 2292,
									"nodeType": "InheritanceSpecifier",
									"src": "48795:7:0"
								},
								{
									"baseName": {
										"id": 2293,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 767,
										"src": "48804:15:0"
									},
									"id": 2294,
									"nodeType": "InheritanceSpecifier",
									"src": "48804:15:0"
								}
							],
							"canonicalName": "OverflowICO",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3506,
							"linearizedBaseContracts": [
								3506,
								767,
								897,
								787
							],
							"name": "OverflowICO",
							"nameLocation": "48780:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2298,
									"libraryName": {
										"id": 2295,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 715,
										"src": "48833:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "48827:27:0",
									"typeName": {
										"id": 2297,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2296,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "48847:6:0"
										},
										"referencedDeclaration": 77,
										"src": "48847:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 2301,
									"libraryName": {
										"id": 2299,
										"name": "ECDSA",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2290,
										"src": "48866:5:0"
									},
									"nodeType": "UsingForDirective",
									"src": "48860:24:0",
									"typeName": {
										"id": 2300,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "48876:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "72da776e",
									"id": 2304,
									"mutability": "immutable",
									"name": "salesToken",
									"nameLocation": "48914:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "48890:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 2303,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2302,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "48890:6:0"
										},
										"referencedDeclaration": 77,
										"src": "48890:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2099438",
									"id": 2307,
									"mutability": "immutable",
									"name": "emissionToken",
									"nameLocation": "48955:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "48931:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 2306,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2305,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "48931:6:0"
										},
										"referencedDeclaration": 77,
										"src": "48931:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3d956691",
									"id": 2309,
									"mutability": "immutable",
									"name": "tokensToSell",
									"nameLocation": "49000:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "48975:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2308,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "48975:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "32acd355",
									"id": 2311,
									"mutability": "immutable",
									"name": "ethersToRaise",
									"nameLocation": "49044:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49019:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2310,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49019:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16fc4869",
									"id": 2313,
									"mutability": "immutable",
									"name": "refundThreshold",
									"nameLocation": "49089:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49064:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2312,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49064:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4d412357",
									"id": 2315,
									"mutability": "immutable",
									"name": "totalEmission",
									"nameLocation": "49136:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49111:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49111:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 2317,
									"mutability": "immutable",
									"name": "startTime",
									"nameLocation": "49181:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49156:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2316,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49156:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3197cbb6",
									"id": 2319,
									"mutability": "immutable",
									"name": "endTime",
									"nameLocation": "49222:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49197:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2318,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49197:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8e05fb74",
									"id": 2321,
									"mutability": "immutable",
									"name": "receiveTime",
									"nameLocation": "49261:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49236:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2320,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49236:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70d5ae05",
									"id": 2323,
									"mutability": "immutable",
									"name": "burnAddress",
									"nameLocation": "49304:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49279:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2322,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "49279:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a8ea6f4c",
									"id": 2325,
									"mutability": "immutable",
									"name": "emissionTokenSaleAmount",
									"nameLocation": "49347:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49322:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2324,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49322:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2bcbf7cd",
									"id": 2327,
									"mutability": "immutable",
									"name": "minCommit",
									"nameLocation": "49404:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49379:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2326,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49379:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "483383c8",
									"id": 2329,
									"mutability": "immutable",
									"name": "maxCommit",
									"nameLocation": "49445:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49420:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2328,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49420:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f2698ab",
									"id": 2331,
									"mutability": "mutable",
									"name": "started",
									"nameLocation": "49475:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49463:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2330,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "49463:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bef4876b",
									"id": 2333,
									"mutability": "mutable",
									"name": "finished",
									"nameLocation": "49501:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49489:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2332,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "49489:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2335,
									"mutability": "mutable",
									"name": "emissionPerEther",
									"nameLocation": "49526:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49518:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2334,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49518:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2337,
									"mutability": "mutable",
									"name": "lastUpdate",
									"nameLocation": "49557:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49549:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2336,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49549:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "78bb86d3",
									"id": 2339,
									"mutability": "mutable",
									"name": "totalCommitments",
									"nameLocation": "49589:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49574:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2338,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49574:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e8fcf723",
									"id": 2343,
									"mutability": "mutable",
									"name": "commitments",
									"nameLocation": "49647:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49612:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2342,
										"keyType": {
											"id": 2340,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "49620:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "49612:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 2341,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "49631:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "599e10ce",
									"id": 2347,
									"mutability": "mutable",
									"name": "missedEmissions",
									"nameLocation": "49700:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49665:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2346,
										"keyType": {
											"id": 2344,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "49673:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "49665:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 2345,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "49684:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1048ab28",
									"id": 2351,
									"mutability": "mutable",
									"name": "finalEmissions",
									"nameLocation": "49757:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49722:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2350,
										"keyType": {
											"id": 2348,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "49730:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "49722:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 2349,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "49741:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ec01774",
									"id": 2355,
									"mutability": "mutable",
									"name": "finalTokens",
									"nameLocation": "49813:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "49778:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2354,
										"keyType": {
											"id": 2352,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "49786:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "49778:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 2353,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "49797:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5e1dd8c4451717d5ca4ffbefdada35e22e0871220b9ed9dd03a351f0938c5ed7",
									"id": 2361,
									"name": "Commit",
									"nameLocation": "49839:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "49862:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "49846:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2359,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "49877:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "49869:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49869:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49845:39:0"
									},
									"src": "49833:52:0"
								},
								{
									"anonymous": false,
									"eventSelector": "45c072aa05b9853b5a993de7a28bc332ee01404a628cec1a23ce0f659f842ef1",
									"id": 2371,
									"name": "Claim",
									"nameLocation": "49897:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2363,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "49929:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "49913:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2365,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth",
												"nameLocation": "49953:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "49945:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "49975:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "49967:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"indexed": false,
												"mutability": "mutable",
												"name": "emission",
												"nameLocation": "49999:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "49991:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49991:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49902:112:0"
									},
									"src": "49891:124:0"
								},
								{
									"anonymous": false,
									"eventSelector": "98658f77a1c9013bc3a00213385d7b07de0435b7b3b3023a43c66b91e05566c2",
									"id": 2381,
									"name": "Claim2",
									"nameLocation": "50027:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "50050:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "50034:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "50065:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "50057:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"indexed": false,
												"mutability": "mutable",
												"name": "emission",
												"nameLocation": "50080:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "50072:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"indexed": false,
												"mutability": "mutable",
												"name": "emissionBonus",
												"nameLocation": "50098:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "50090:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50033:79:0"
									},
									"src": "50021:92:0"
								},
								{
									"constant": false,
									"functionSelector": "9b19251a",
									"id": 2385,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "50157:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3506,
									"src": "50125:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2384,
										"keyType": {
											"id": 2382,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "50133:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "50125:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 2383,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "50144:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2396,
										"nodeType": "Block",
										"src": "50202:108:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2388,
																"name": "whitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2385,
																"src": "50221:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2391,
															"indexExpression": {
																"expression": {
																	"id": 2389,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "50231:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "50231:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "50221:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207468652077686974656c69737465642063616e2063616c6c20746869732066756e6374696f6e",
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50244:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_08d7bea4d4a341680d6aa759e624330914b0b3566272060603de9374867f09f2",
																"typeString": "literal_string \"Only the whitelisted can call this function\""
															},
															"value": "Only the whitelisted can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_08d7bea4d4a341680d6aa759e624330914b0b3566272060603de9374867f09f2",
																"typeString": "literal_string \"Only the whitelisted can call this function\""
															}
														],
														"id": 2387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "50213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50213:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2394,
												"nodeType": "ExpressionStatement",
												"src": "50213:77:0"
											},
											{
												"id": 2395,
												"nodeType": "PlaceholderStatement",
												"src": "50301:1:0"
											}
										]
									},
									"id": 2397,
									"name": "onlyWhitelisted",
									"nameLocation": "50184:15:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50199:2:0"
									},
									"src": "50175:135:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2413,
										"nodeType": "Block",
										"src": "50392:63:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2404,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2399,
																	"src": "50411:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2405,
																	"name": "emissionPerEther",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2335,
																	"src": "50419:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "50411:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2407,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "50410:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 2410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 2408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50439:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 2409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50445:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "50439:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "50410:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2403,
												"id": 2412,
												"nodeType": "Return",
												"src": "50403:44:0"
											}
										]
									},
									"id": 2414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateEmission",
									"nameLocation": "50327:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "50353:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "50345:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50344:15:0"
									},
									"returnParameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "50383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50382:9:0"
									},
									"scope": 3506,
									"src": "50318:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2481,
										"nodeType": "Block",
										"src": "50538:453:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2422,
																"name": "totalCommitments",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2339,
																"src": "50557:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50576:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50557:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f20636f6d6d69746d656e7473",
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50579:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4bbdc6a3b88188c6333049541b61be1ba3041903473deadb5788ff0a8b023c24",
																"typeString": "literal_string \"no commitments\""
															},
															"value": "no commitments"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4bbdc6a3b88188c6333049541b61be1ba3041903473deadb5788ff0a8b023c24",
																"typeString": "literal_string \"no commitments\""
															}
														],
														"id": 2421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "50549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50549:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2427,
												"nodeType": "ExpressionStatement",
												"src": "50549:47:0"
											},
											{
												"assignments": [
													2429
												],
												"declarations": [
													{
														"constant": false,
														"id": 2429,
														"mutability": "mutable",
														"name": "elapsed",
														"nameLocation": "50617:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2481,
														"src": "50609:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2428,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50609:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2446,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 2432,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "50636:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "50636:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2434,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2319,
																"src": "50653:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2430,
																"name": "Math",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "50627:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Math_$1760_$",
																	"typeString": "type(library Math)"
																}
															},
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "min",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 938,
															"src": "50627:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50627:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2440,
																		"name": "lastUpdate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2337,
																		"src": "50695:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2441,
																		"name": "endTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2319,
																		"src": "50707:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2438,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "50686:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1760_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 938,
																	"src": "50686:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50686:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2443,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2317,
																"src": "50717:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2436,
																"name": "Math",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "50677:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Math_$1760_$",
																	"typeString": "type(library Math)"
																}
															},
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 920,
															"src": "50677:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50677:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50627:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50609:118:0"
											},
											{
												"assignments": [
													2448
												],
												"declarations": [
													{
														"constant": false,
														"id": 2448,
														"mutability": "mutable",
														"name": "emission",
														"nameLocation": "50746:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2481,
														"src": "50738:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2447,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50738:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2458,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2449,
																	"name": "totalEmission",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2315,
																	"src": "50758:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2450,
																	"name": "elapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2429,
																	"src": "50774:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "50758:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2452,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "50757:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2453,
																	"name": "endTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2319,
																	"src": "50799:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2454,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "50809:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "50799:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2456,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "50798:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50757:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50738:81:0"
											},
											{
												"assignments": [
													2460
												],
												"declarations": [
													{
														"constant": false,
														"id": 2460,
														"mutability": "mutable",
														"name": "_emissionPerEther",
														"nameLocation": "50838:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 2481,
														"src": "50830:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50830:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2471,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2461,
														"name": "emissionPerEther",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2335,
														"src": "50858:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2462,
																		"name": "emission",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2448,
																		"src": "50878:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 2465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50889:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 2464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50895:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "50889:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	},
																	"src": "50878:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2467,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "50877:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2468,
															"name": "totalCommitments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "50901:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "50877:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50858:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50830:87:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2472,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2416,
																	"src": "50946:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2473,
																	"name": "_emissionPerEther",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2460,
																	"src": "50954:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "50946:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2475,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "50945:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 2478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50975:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 2477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50981:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "50975:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "50945:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2420,
												"id": 2480,
												"nodeType": "Return",
												"src": "50938:45:0"
											}
										]
									},
									"id": 2482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateEmission",
									"nameLocation": "50472:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "50499:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "50491:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50490:15:0"
									},
									"returnParameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "50529:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50528:9:0"
									},
									"scope": 3506,
									"src": "50463:528:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2545,
										"nodeType": "Block",
										"src": "51037:470:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2486,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "51056:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "51056:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2488,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2317,
																"src": "51075:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "51056:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742073746172746564",
															"id": 2490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51086:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694",
																"typeString": "literal_string \"not started\""
															},
															"value": "not started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694",
																"typeString": "literal_string \"not started\""
															}
														],
														"id": 2485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51048:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51048:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2492,
												"nodeType": "ExpressionStatement",
												"src": "51048:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2493,
														"name": "totalCommitments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "51115:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "51134:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "51115:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2539,
												"nodeType": "IfStatement",
												"src": "51111:350:0",
												"trueBody": {
													"id": 2538,
													"nodeType": "Block",
													"src": "51137:324:0",
													"statements": [
														{
															"assignments": [
																2497
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2497,
																	"mutability": "mutable",
																	"name": "elapsed",
																	"nameLocation": "51160:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2538,
																	"src": "51152:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2496,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "51152:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2514,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2500,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "51179:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 2501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "51179:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2502,
																			"name": "endTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2319,
																			"src": "51196:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2498,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1760,
																			"src": "51170:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$1760_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 2499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 938,
																		"src": "51170:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "51170:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2508,
																					"name": "lastUpdate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2337,
																					"src": "51242:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2509,
																					"name": "endTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2319,
																					"src": "51254:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2506,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1760,
																					"src": "51233:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$1760_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 2507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "min",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 938,
																				"src": "51233:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "51233:29:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2511,
																			"name": "startTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "51264:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2504,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1760,
																			"src": "51224:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$1760_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 2505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 920,
																		"src": "51224:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "51224:50:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "51170:104:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "51152:122:0"
														},
														{
															"assignments": [
																2516
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2516,
																	"mutability": "mutable",
																	"name": "emission",
																	"nameLocation": "51297:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2538,
																	"src": "51289:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2515,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "51289:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2526,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2517,
																				"name": "totalEmission",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2315,
																				"src": "51309:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2518,
																				"name": "elapsed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2497,
																				"src": "51325:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "51309:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2520,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "51308:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2521,
																				"name": "endTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2319,
																				"src": "51354:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2522,
																				"name": "startTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2317,
																				"src": "51364:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "51354:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2524,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "51353:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "51308:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "51289:85:0"
														},
														{
															"expression": {
																"id": 2536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2527,
																	"name": "emissionPerEther",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2335,
																	"src": "51389:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2532,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2528,
																					"name": "emission",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2516,
																					"src": "51410:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"id": 2531,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2529,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "51421:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"hexValue": "3138",
																						"id": 2530,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "51427:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_18_by_1",
																							"typeString": "int_const 18"
																						},
																						"value": "18"
																					},
																					"src": "51421:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					}
																				},
																				"src": "51410:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2533,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "51409:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2534,
																		"name": "totalCommitments",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "51433:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "51409:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "51389:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2537,
															"nodeType": "ExpressionStatement",
															"src": "51389:60:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2540,
														"name": "lastUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2337,
														"src": "51471:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2541,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "51484:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "51484:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "51471:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2544,
												"nodeType": "ExpressionStatement",
												"src": "51471:28:0"
											}
										]
									},
									"id": 2546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateEmission",
									"nameLocation": "51010:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51025:2:0"
									},
									"returnParameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51037:0:0"
									},
									"scope": 3506,
									"src": "51001:506:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2670,
										"nodeType": "Block",
										"src": "51886:1300:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2572,
																"name": "_startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2554,
																"src": "51919:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 2573,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "51933:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "51933:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "51919:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53746172742074696d65206d75737420626520696e20746865206675747572652e",
															"id": 2576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51963:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10d8fb2eb8acaf21b9be7215663ea4532cb3c6ec89e31c0d947fdb8ed7ca6090",
																"typeString": "literal_string \"Start time must be in the future.\""
															},
															"value": "Start time must be in the future."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10d8fb2eb8acaf21b9be7215663ea4532cb3c6ec89e31c0d947fdb8ed7ca6090",
																"typeString": "literal_string \"Start time must be in the future.\""
															}
														],
														"id": 2571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51897:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51897:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2578,
												"nodeType": "ExpressionStatement",
												"src": "51897:112:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2580,
																"name": "_endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2556,
																"src": "52042:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2581,
																"name": "_startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2554,
																"src": "52053:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "52042:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456e642074696d65206d7573742062652067726561746572207468616e2073746172742074696d652e",
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52078:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a08386fa97c3416be6417fc53bec008ff546259d6e6560af54c4ed621b26f258",
																"typeString": "literal_string \"End time must be greater than start time.\""
															},
															"value": "End time must be greater than start time."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a08386fa97c3416be6417fc53bec008ff546259d6e6560af54c4ed621b26f258",
																"typeString": "literal_string \"End time must be greater than start time.\""
															}
														],
														"id": 2579,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "52020:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52020:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2585,
												"nodeType": "ExpressionStatement",
												"src": "52020:112:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2587,
																"name": "_ethersToRaise",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2550,
																"src": "52151:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "52151:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45746865727320746f2072616973652073686f756c642062652067726561746572207468616e2030",
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52171:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7ffb54d5888da07207794d46ba2074909741fd305023c4e6c8a8cfe69aef1393",
																"typeString": "literal_string \"Ethers to raise should be greater than 0\""
															},
															"value": "Ethers to raise should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7ffb54d5888da07207794d46ba2074909741fd305023c4e6c8a8cfe69aef1393",
																"typeString": "literal_string \"Ethers to raise should be greater than 0\""
															}
														],
														"id": 2586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "52143:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52143:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2592,
												"nodeType": "ExpressionStatement",
												"src": "52143:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2594,
																"name": "_ethersToRaise",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2550,
																"src": "52247:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2595,
																"name": "_refundThreshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "52264:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "52247:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45746865727320746f2072616973652073686f756c642062652067726561746572207468616e20726566756e64207468726573686f6c64",
															"id": 2597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52295:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34eb37593ef37f9aa15266f34da59cd4c6cc420115437aa50285585f1ae9e04e",
																"typeString": "literal_string \"Ethers to raise should be greater than refund threshold\""
															},
															"value": "Ethers to raise should be greater than refund threshold"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34eb37593ef37f9aa15266f34da59cd4c6cc420115437aa50285585f1ae9e04e",
																"typeString": "literal_string \"Ethers to raise should be greater than refund threshold\""
															}
														],
														"id": 2593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "52225:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52225:138:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2599,
												"nodeType": "ExpressionStatement",
												"src": "52225:138:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2601,
																"name": "_minCommit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2560,
																"src": "52382:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52395:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "52382:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e696d756d20636f6d6d69746d656e742073686f756c642062652067726561746572207468616e2030",
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52398:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9c67585b736274cf310f8ecd28f301d1a27386921996d078ffd4f820817ab4cc",
																"typeString": "literal_string \"Minimum commitment should be greater than 0\""
															},
															"value": "Minimum commitment should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9c67585b736274cf310f8ecd28f301d1a27386921996d078ffd4f820817ab4cc",
																"typeString": "literal_string \"Minimum commitment should be greater than 0\""
															}
														],
														"id": 2600,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "52374:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52374:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2606,
												"nodeType": "ExpressionStatement",
												"src": "52374:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2608,
																"name": "_maxCommit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2562,
																"src": "52477:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2609,
																"name": "_minCommit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2560,
																"src": "52491:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "52477:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178696d756d20636f6d6d69746d656e742073686f756c642062652067726561746572206f7220657175616c20746f206d696e696d756d20636f6d6d69746d656e74",
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52516:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf633b11af979adfb29caed3c8eb8a935f98963ff6db8f3172dc702a514dc404",
																"typeString": "literal_string \"Maximum commitment should be greater or equal to minimum commitment\""
															},
															"value": "Maximum commitment should be greater or equal to minimum commitment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf633b11af979adfb29caed3c8eb8a935f98963ff6db8f3172dc702a514dc404",
																"typeString": "literal_string \"Maximum commitment should be greater or equal to minimum commitment\""
															}
														],
														"id": 2607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "52455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52455:141:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2613,
												"nodeType": "ExpressionStatement",
												"src": "52455:141:0"
											},
											{
												"expression": {
													"id": 2618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2614,
														"name": "salesToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2304,
														"src": "52609:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307834316439363265443961324166314236383834344546353838653138324136323861354641366633",
																"id": 2616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52629:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x41d962eD9a2Af1B68844EF588e182A628a5FA6f3"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2615,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "52622:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 2617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "52622:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "52609:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 2619,
												"nodeType": "ExpressionStatement",
												"src": "52609:63:0"
											},
											{
												"expression": {
													"id": 2622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2620,
														"name": "tokensToSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2309,
														"src": "52683:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2621,
														"name": "_tokensToSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2548,
														"src": "52698:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52683:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2623,
												"nodeType": "ExpressionStatement",
												"src": "52683:28:0"
											},
											{
												"expression": {
													"id": 2626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2624,
														"name": "ethersToRaise",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2311,
														"src": "52722:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2625,
														"name": "_ethersToRaise",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2550,
														"src": "52738:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52722:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2627,
												"nodeType": "ExpressionStatement",
												"src": "52722:30:0"
											},
											{
												"expression": {
													"id": 2630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2628,
														"name": "refundThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2313,
														"src": "52763:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2629,
														"name": "_refundThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2552,
														"src": "52781:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52763:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2631,
												"nodeType": "ExpressionStatement",
												"src": "52763:34:0"
											},
											{
												"expression": {
													"id": 2634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2632,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2317,
														"src": "52808:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2633,
														"name": "_startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2554,
														"src": "52820:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52808:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2635,
												"nodeType": "ExpressionStatement",
												"src": "52808:22:0"
											},
											{
												"expression": {
													"id": 2638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2636,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2319,
														"src": "52841:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2637,
														"name": "_endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2556,
														"src": "52851:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52841:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2639,
												"nodeType": "ExpressionStatement",
												"src": "52841:18:0"
											},
											{
												"expression": {
													"id": 2642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2640,
														"name": "receiveTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2321,
														"src": "52870:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2641,
														"name": "_receiveTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2558,
														"src": "52884:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52870:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2643,
												"nodeType": "ExpressionStatement",
												"src": "52870:26:0"
											},
											{
												"expression": {
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2644,
														"name": "minCommit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2327,
														"src": "52907:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2645,
														"name": "_minCommit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2560,
														"src": "52919:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52907:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2647,
												"nodeType": "ExpressionStatement",
												"src": "52907:22:0"
											},
											{
												"expression": {
													"id": 2650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2648,
														"name": "maxCommit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2329,
														"src": "52940:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2649,
														"name": "_maxCommit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2562,
														"src": "52952:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52940:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2651,
												"nodeType": "ExpressionStatement",
												"src": "52940:22:0"
											},
											{
												"expression": {
													"id": 2656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2652,
														"name": "emissionToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "52973:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307845394630344534313866393341653733333837353736653961623066384644423743383835343544",
																"id": 2654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52996:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xE9F04E418f93Ae73387576e9ab0f8FDB7C88545D"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2653,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "52989:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 2655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "52989:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "52973:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 2657,
												"nodeType": "ExpressionStatement",
												"src": "52973:66:0"
											},
											{
												"expression": {
													"id": 2660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2658,
														"name": "totalEmission",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2315,
														"src": "53050:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2659,
														"name": "_totalEmission",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2564,
														"src": "53066:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53050:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2661,
												"nodeType": "ExpressionStatement",
												"src": "53050:30:0"
											},
											{
												"expression": {
													"id": 2664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2662,
														"name": "burnAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2323,
														"src": "53091:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2663,
														"name": "_burnAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2566,
														"src": "53105:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53091:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2665,
												"nodeType": "ExpressionStatement",
												"src": "53091:26:0"
											},
											{
												"expression": {
													"id": 2668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2666,
														"name": "emissionTokenSaleAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2325,
														"src": "53128:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2667,
														"name": "_emissionTokenSaleAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2568,
														"src": "53154:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53128:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2669,
												"nodeType": "ExpressionStatement",
												"src": "53128:50:0"
											}
										]
									},
									"id": 2671,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "_tokensToSell",
												"nameLocation": "51545:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "51537:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "_ethersToRaise",
												"nameLocation": "51577:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "51569:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "_refundThreshold",
												"nameLocation": "51610:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "51602:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "_startTime",
												"nameLocation": "51645:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "51637:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "51674:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "51666:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2558,
												"mutability": "mutable",
												"name": "_receiveTime",
												"nameLocation": "51701:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "51693:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2560,
												"mutability": "mutable",
												"name": "_minCommit",
												"nameLocation": "51732:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "51724:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "_maxCommit",
												"nameLocation": "51761:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "51753:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "_totalEmission",
												"nameLocation": "51790:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "51782:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "_burnAddress",
												"nameLocation": "51823:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "51815:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51815:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "_emissionTokenSaleAmount",
												"nameLocation": "51854:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "51846:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51526:359:0"
									},
									"returnParameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51886:0:0"
									},
									"scope": 3506,
									"src": "51515:1671:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2712,
										"nodeType": "Block",
										"src": "53230:319:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "53249:8:0",
															"subExpression": {
																"id": 2677,
																"name": "started",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "53250:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920737461727465642e",
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53259:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aee1dddcfe1778195162fed17118452d5e06c02c78bab9a311a88b9491d70474",
																"typeString": "literal_string \"Already started.\""
															},
															"value": "Already started."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aee1dddcfe1778195162fed17118452d5e06c02c78bab9a311a88b9491d70474",
																"typeString": "literal_string \"Already started.\""
															}
														],
														"id": 2676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "53241:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53241:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2681,
												"nodeType": "ExpressionStatement",
												"src": "53241:37:0"
											},
											{
												"expression": {
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2682,
														"name": "started",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2331,
														"src": "53289:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53299:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "53289:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2685,
												"nodeType": "ExpressionStatement",
												"src": "53289:14:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2689,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "53342:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "53342:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2693,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "53362:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OverflowICO_$3506",
																		"typeString": "contract OverflowICO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OverflowICO_$3506",
																		"typeString": "contract OverflowICO"
																	}
																],
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53354:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2691,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "53354:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53354:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2695,
															"name": "tokensToSell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2309,
															"src": "53369:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2686,
															"name": "salesToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2304,
															"src": "53314:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 2688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 492,
														"src": "53314:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53314:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2697,
												"nodeType": "ExpressionStatement",
												"src": "53314:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2701,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "53438:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "53438:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2705,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "53471:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OverflowICO_$3506",
																		"typeString": "contract OverflowICO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OverflowICO_$3506",
																		"typeString": "contract OverflowICO"
																	}
																],
																"id": 2704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53463:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2703,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "53463:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53463:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2707,
																"name": "totalEmission",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2315,
																"src": "53491:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2708,
																"name": "emissionTokenSaleAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2325,
																"src": "53507:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "53491:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2698,
															"name": "emissionToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2307,
															"src": "53393:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 2700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 492,
														"src": "53393:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53393:148:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2711,
												"nodeType": "ExpressionStatement",
												"src": "53393:148:0"
											}
										]
									},
									"functionSelector": "be9a6555",
									"id": 2713,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2674,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2673,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 816,
												"src": "53220:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53220:9:0"
										}
									],
									"name": "start",
									"nameLocation": "53203:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53208:2:0"
									},
									"returnParameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53230:0:0"
									},
									"scope": 3506,
									"src": "53194:355:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2789,
										"nodeType": "Block",
										"src": "53605:672:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2718,
														"name": "_updateEmission",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2546,
														"src": "53616:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53616:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2720,
												"nodeType": "ExpressionStatement",
												"src": "53616:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2722,
																	"name": "started",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2331,
																	"src": "53666:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2723,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "53694:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "53694:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 2725,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2317,
																		"src": "53713:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "53694:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "53666:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2728,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "53743:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "53743:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2730,
																	"name": "endTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2319,
																	"src": "53761:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "53743:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "53666:102:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e206f6e6c79206465706f73697420457468657220647572696e67207468652073616c6520706572696f642e",
															"id": 2733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53783:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9df3668a93dc1ed2c74ab1007ca935ed6ab477236d8ea005670aae5d150690a3",
																"typeString": "literal_string \"Can only deposit Ether during the sale period.\""
															},
															"value": "Can only deposit Ether during the sale period."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9df3668a93dc1ed2c74ab1007ca935ed6ab477236d8ea005670aae5d150690a3",
																"typeString": "literal_string \"Can only deposit Ether during the sale period.\""
															}
														],
														"id": 2721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "53644:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53644:198:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2735,
												"nodeType": "ExpressionStatement",
												"src": "53644:198:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2737,
																	"name": "minCommit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2327,
																	"src": "53875:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2738,
																			"name": "commitments",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2343,
																			"src": "53888:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2741,
																		"indexExpression": {
																			"expression": {
																				"id": 2739,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "53900:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "53900:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "53888:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 2742,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "53914:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "53914:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "53888:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "53875:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2746,
																			"name": "commitments",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2343,
																			"src": "53944:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2749,
																		"indexExpression": {
																			"expression": {
																				"id": 2747,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "53956:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "53956:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "53944:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 2750,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "53970:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "53970:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "53944:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 2753,
																	"name": "maxCommit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2329,
																	"src": "53983:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "53944:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "53875:117:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d6d69746d656e7420616d6f756e74206973206f7574736964652074686520616c6c6f7765642072616e67652e",
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54007:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c83009c7e36eac9b22add549c0f57add8236aaf712d791400e8f73301b7d27d8",
																"typeString": "literal_string \"Commitment amount is outside the allowed range.\""
															},
															"value": "Commitment amount is outside the allowed range."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c83009c7e36eac9b22add549c0f57add8236aaf712d791400e8f73301b7d27d8",
																"typeString": "literal_string \"Commitment amount is outside the allowed range.\""
															}
														],
														"id": 2736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "53853:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53853:214:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2758,
												"nodeType": "ExpressionStatement",
												"src": "53853:214:0"
											},
											{
												"expression": {
													"id": 2765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2759,
															"name": "commitments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "54078:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2762,
														"indexExpression": {
															"expression": {
																"id": 2760,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "54090:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "54090:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "54078:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 2763,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "54105:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "54105:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54078:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2766,
												"nodeType": "ExpressionStatement",
												"src": "54078:36:0"
											},
											{
												"expression": {
													"id": 2770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2767,
														"name": "totalCommitments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "54125:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 2768,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "54145:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "54145:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54125:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2771,
												"nodeType": "ExpressionStatement",
												"src": "54125:29:0"
											},
											{
												"expression": {
													"id": 2780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2772,
															"name": "missedEmissions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2347,
															"src": "54165:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2775,
														"indexExpression": {
															"expression": {
																"id": 2773,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "54181:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "54181:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "54165:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2777,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "54214:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "54214:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2776,
															"name": "calculateEmission",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "54196:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 2779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54196:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54165:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2781,
												"nodeType": "ExpressionStatement",
												"src": "54165:59:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2783,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "54247:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "54247:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2785,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "54259:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "54259:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2782,
														"name": "Commit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2361,
														"src": "54240:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54240:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2788,
												"nodeType": "EmitStatement",
												"src": "54235:34:0"
											}
										]
									},
									"functionSelector": "3c7a3aff",
									"id": 2790,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2716,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2715,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 743,
												"src": "53592:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53592:12:0"
										}
									],
									"name": "commit",
									"nameLocation": "53566:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53572:2:0"
									},
									"returnParameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53605:0:0"
									},
									"scope": 3506,
									"src": "53557:720:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2914,
										"nodeType": "Block",
										"src": "54355:1039:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2799,
														"name": "_updateEmission",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2546,
														"src": "54366:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54366:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2801,
												"nodeType": "ExpressionStatement",
												"src": "54366:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2802,
															"name": "finalTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "54398:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2805,
														"indexExpression": {
															"expression": {
																"id": 2803,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "54410:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "54410:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "54398:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54424:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "54398:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2819,
												"nodeType": "IfStatement",
												"src": "54394:109:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "30",
																"id": 2808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54448:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"baseExpression": {
																	"id": 2809,
																	"name": "finalTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2355,
																	"src": "54451:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2812,
																"indexExpression": {
																	"expression": {
																		"id": 2810,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "54463:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "54463:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "54451:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"baseExpression": {
																	"id": 2813,
																	"name": "finalEmissions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2351,
																	"src": "54476:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2816,
																"indexExpression": {
																	"expression": {
																		"id": 2814,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "54491:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "54491:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "54476:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2817,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "54447:56:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(int_const 0,uint256,uint256)"
														}
													},
													"functionReturnParameters": 2798,
													"id": 2818,
													"nodeType": "Return",
													"src": "54440:63:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2820,
															"name": "commitments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "54520:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2823,
														"indexExpression": {
															"expression": {
																"id": 2821,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "54532:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "54532:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "54520:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54547:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "54520:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2831,
												"nodeType": "IfStatement",
												"src": "54516:50:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "30",
																"id": 2826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54558:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 2827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54561:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 2828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54564:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2829,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "54557:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
															"typeString": "tuple(int_const 0,int_const 0,int_const 0)"
														}
													},
													"functionReturnParameters": 2798,
													"id": 2830,
													"nodeType": "Return",
													"src": "54550:16:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2832,
														"name": "totalCommitments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "54583:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2833,
														"name": "refundThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2313,
														"src": "54603:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54583:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2912,
													"nodeType": "Block",
													"src": "55290:97:0",
													"statements": [
														{
															"assignments": [
																2901
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2901,
																	"mutability": "mutable",
																	"name": "amt",
																	"nameLocation": "55313:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2912,
																	"src": "55305:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2900,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "55305:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2906,
															"initialValue": {
																"baseExpression": {
																	"id": 2902,
																	"name": "commitments",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2343,
																	"src": "55319:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2905,
																"indexExpression": {
																	"expression": {
																		"id": 2903,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "55331:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "55331:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "55319:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "55305:37:0"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 2907,
																		"name": "amt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2901,
																		"src": "55365:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 2908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "55370:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 2909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "55373:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2910,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "55364:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(uint256,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 2798,
															"id": 2911,
															"nodeType": "Return",
															"src": "55357:18:0"
														}
													]
												},
												"id": 2913,
												"nodeType": "IfStatement",
												"src": "54579:808:0",
												"trueBody": {
													"id": 2899,
													"nodeType": "Block",
													"src": "54620:664:0",
													"statements": [
														{
															"assignments": [
																2836
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2836,
																	"mutability": "mutable",
																	"name": "ethersToSpend",
																	"nameLocation": "54643:13:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2899,
																	"src": "54635:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2835,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "54635:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2853,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2839,
																			"name": "commitments",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2343,
																			"src": "54686:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2842,
																		"indexExpression": {
																			"expression": {
																				"id": 2840,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "54698:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "54698:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "54686:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2848,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"id": 2843,
																							"name": "commitments",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2343,
																							"src": "54729:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 2846,
																						"indexExpression": {
																							"expression": {
																								"id": 2844,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "54741:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 2845,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "54741:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "54729:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2847,
																						"name": "ethersToRaise",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2311,
																						"src": "54755:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "54729:39:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2849,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "54728:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2850,
																			"name": "totalCommitments",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2339,
																			"src": "54772:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "54728:60:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2837,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "54659:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1760_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 938,
																	"src": "54659:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54659:144:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "54635:168:0"
														},
														{
															"assignments": [
																2855
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2855,
																	"mutability": "mutable",
																	"name": "ethersToRefund",
																	"nameLocation": "54826:14:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2899,
																	"src": "54818:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2854,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "54818:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2862,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2856,
																		"name": "commitments",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2343,
																		"src": "54843:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2859,
																	"indexExpression": {
																		"expression": {
																			"id": 2857,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "54855:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "54855:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "54843:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2860,
																	"name": "ethersToSpend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2836,
																	"src": "54869:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "54843:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "54818:64:0"
														},
														{
															"assignments": [
																2864
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2864,
																	"mutability": "mutable",
																	"name": "tokensToReceive",
																	"nameLocation": "54905:15:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2899,
																	"src": "54897:23:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2863,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "54897:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2871,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2865,
																				"name": "tokensToSell",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2309,
																				"src": "54924:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2866,
																				"name": "ethersToSpend",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2836,
																				"src": "54939:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "54924:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2868,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "54923:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2869,
																	"name": "ethersToRaise",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2311,
																	"src": "54973:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "54923:63:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "54897:89:0"
														},
														{
															"assignments": [
																2873
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2873,
																	"mutability": "mutable",
																	"name": "emission",
																	"nameLocation": "55009:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2899,
																	"src": "55001:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2872,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "55001:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2885,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2875,
																				"name": "commitments",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2343,
																				"src": "55038:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2878,
																			"indexExpression": {
																				"expression": {
																					"id": 2876,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "55050:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "55050:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "55038:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2874,
																		"name": "calculateEmission",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2414,
																		"src": "55020:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 2879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "55020:42:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2880,
																		"name": "missedEmissions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2347,
																		"src": "55082:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2883,
																	"indexExpression": {
																		"expression": {
																			"id": 2881,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "55098:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "55098:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "55082:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "55020:89:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "55001:108:0"
														},
														{
															"assignments": [
																2887
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2887,
																	"mutability": "mutable",
																	"name": "emissionTokensToReceive",
																	"nameLocation": "55134:23:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2899,
																	"src": "55126:31:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2886,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "55126:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2891,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2888,
																	"name": "tokensToReceive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2864,
																	"src": "55160:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 2889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55178:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "55160:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "55126:53:0"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 2892,
																		"name": "ethersToRefund",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2855,
																		"src": "55204:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2893,
																			"name": "tokensToReceive",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2864,
																			"src": "55220:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 2894,
																			"name": "emissionTokensToReceive",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2887,
																			"src": "55238:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "55220:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2896,
																		"name": "emission",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2873,
																		"src": "55263:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2897,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "55203:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256)"
																}
															},
															"functionReturnParameters": 2798,
															"id": 2898,
															"nodeType": "Return",
															"src": "55196:76:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "12adecda",
									"id": 2915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "simulateClaim",
									"nameLocation": "54294:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54307:2:0"
									},
									"returnParameters": {
										"id": 2798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "54328:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "54337:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "54346:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54327:27:0"
									},
									"scope": 3506,
									"src": "54285:1109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3045,
										"nodeType": "Block",
										"src": "55494:1054:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2926,
															"name": "finalTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "55519:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2929,
														"indexExpression": {
															"expression": {
																"id": 2927,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "55531:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "55531:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "55519:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55545:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55519:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2949,
												"nodeType": "IfStatement",
												"src": "55515:136:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "30",
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55569:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"baseExpression": {
																	"id": 2933,
																	"name": "finalTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2355,
																	"src": "55572:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2936,
																"indexExpression": {
																	"expression": {
																		"id": 2934,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "55584:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "55584:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "55572:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2937,
																		"name": "finalTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2355,
																		"src": "55597:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2940,
																	"indexExpression": {
																		"expression": {
																			"id": 2938,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "55609:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "55609:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "55597:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 2941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55621:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "55597:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"baseExpression": {
																	"id": 2943,
																	"name": "finalEmissions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2351,
																	"src": "55624:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2946,
																"indexExpression": {
																	"expression": {
																		"id": 2944,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "55639:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "55639:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "55624:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2947,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "55568:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(int_const 0,uint256,uint256,uint256)"
														}
													},
													"functionReturnParameters": 2925,
													"id": 2948,
													"nodeType": "Return",
													"src": "55561:90:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2950,
															"name": "commitments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "55668:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2953,
														"indexExpression": {
															"expression": {
																"id": 2951,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "55680:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "55680:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "55668:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2954,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55695:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55668:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2962,
												"nodeType": "IfStatement",
												"src": "55664:53:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "30",
																"id": 2956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55706:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 2957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55709:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 2958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55712:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 2959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55715:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2960,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "55705:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
															"typeString": "tuple(int_const 0,int_const 0,int_const 0,int_const 0)"
														}
													},
													"functionReturnParameters": 2925,
													"id": 2961,
													"nodeType": "Return",
													"src": "55698:19:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2963,
														"name": "totalCommitments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "55734:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2964,
														"name": "refundThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2313,
														"src": "55754:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55734:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3043,
													"nodeType": "Block",
													"src": "56441:100:0",
													"statements": [
														{
															"assignments": [
																3031
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3031,
																	"mutability": "mutable",
																	"name": "amt",
																	"nameLocation": "56464:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3043,
																	"src": "56456:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3030,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "56456:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3036,
															"initialValue": {
																"baseExpression": {
																	"id": 3032,
																	"name": "commitments",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2343,
																	"src": "56470:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3035,
																"indexExpression": {
																	"expression": {
																		"id": 3033,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "56482:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "56482:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "56470:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "56456:37:0"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 3037,
																		"name": "amt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3031,
																		"src": "56516:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 3038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "56521:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 3039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "56524:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 3040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "56527:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 3041,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "56515:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(uint256,int_const 0,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 2925,
															"id": 3042,
															"nodeType": "Return",
															"src": "56508:21:0"
														}
													]
												},
												"id": 3044,
												"nodeType": "IfStatement",
												"src": "55730:811:0",
												"trueBody": {
													"id": 3029,
													"nodeType": "Block",
													"src": "55771:664:0",
													"statements": [
														{
															"assignments": [
																2967
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2967,
																	"mutability": "mutable",
																	"name": "ethersToSpend",
																	"nameLocation": "55794:13:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3029,
																	"src": "55786:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2966,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "55786:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2984,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2970,
																			"name": "commitments",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2343,
																			"src": "55837:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2973,
																		"indexExpression": {
																			"expression": {
																				"id": 2971,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "55849:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "55849:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "55837:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2979,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"id": 2974,
																							"name": "commitments",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2343,
																							"src": "55880:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 2977,
																						"indexExpression": {
																							"expression": {
																								"id": 2975,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "55892:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 2976,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "55892:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "55880:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2978,
																						"name": "ethersToRaise",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2311,
																						"src": "55906:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "55880:39:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2980,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "55879:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2981,
																			"name": "totalCommitments",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2339,
																			"src": "55923:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "55879:60:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2968,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "55810:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1760_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 938,
																	"src": "55810:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55810:144:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "55786:168:0"
														},
														{
															"assignments": [
																2986
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2986,
																	"mutability": "mutable",
																	"name": "ethersToRefund",
																	"nameLocation": "55977:14:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3029,
																	"src": "55969:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2985,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "55969:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2993,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2987,
																		"name": "commitments",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2343,
																		"src": "55994:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2990,
																	"indexExpression": {
																		"expression": {
																			"id": 2988,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "56006:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "56006:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "55994:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2991,
																	"name": "ethersToSpend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2967,
																	"src": "56020:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "55994:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "55969:64:0"
														},
														{
															"assignments": [
																2995
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2995,
																	"mutability": "mutable",
																	"name": "tokensToReceive",
																	"nameLocation": "56056:15:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3029,
																	"src": "56048:23:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2994,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "56048:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3002,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2996,
																				"name": "tokensToSell",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2309,
																				"src": "56075:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2997,
																				"name": "ethersToSpend",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2967,
																				"src": "56090:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "56075:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2999,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "56074:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3000,
																	"name": "ethersToRaise",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2311,
																	"src": "56124:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "56074:63:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "56048:89:0"
														},
														{
															"assignments": [
																3004
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3004,
																	"mutability": "mutable",
																	"name": "emission",
																	"nameLocation": "56160:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3029,
																	"src": "56152:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3003,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "56152:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3016,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 3006,
																				"name": "commitments",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2343,
																				"src": "56190:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 3009,
																			"indexExpression": {
																				"expression": {
																					"id": 3007,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "56202:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 3008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "56202:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "56190:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3005,
																		"name": "_calculateEmission",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2482,
																		"src": "56171:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 3010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "56171:43:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 3011,
																		"name": "missedEmissions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2347,
																		"src": "56234:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3014,
																	"indexExpression": {
																		"expression": {
																			"id": 3012,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "56250:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "56250:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "56234:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "56171:90:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "56152:109:0"
														},
														{
															"assignments": [
																3018
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3018,
																	"mutability": "mutable",
																	"name": "emissionTokensToReceive",
																	"nameLocation": "56286:23:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3029,
																	"src": "56278:31:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3017,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "56278:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3022,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3019,
																	"name": "tokensToReceive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2995,
																	"src": "56312:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 3020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "56330:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "56312:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "56278:53:0"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 3023,
																		"name": "ethersToRefund",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2986,
																		"src": "56356:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3024,
																		"name": "tokensToReceive",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2995,
																		"src": "56372:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3025,
																		"name": "emissionTokensToReceive",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3018,
																		"src": "56389:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3026,
																		"name": "emission",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3004,
																		"src": "56414:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3027,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "56355:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256)"
																}
															},
															"functionReturnParameters": 2925,
															"id": 3028,
															"nodeType": "Return",
															"src": "56348:75:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "94ef7e62",
									"id": 3046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "simulateClaimNoUpdate",
									"nameLocation": "55411:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55432:2:0"
									},
									"returnParameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "55458:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "55467:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "55476:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "55485:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55457:36:0"
									},
									"scope": 3506,
									"src": "55402:1146:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3233,
										"nodeType": "Block",
										"src": "56633:1651:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3057,
														"name": "_updateEmission",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2546,
														"src": "56644:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56644:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3059,
												"nodeType": "ExpressionStatement",
												"src": "56644:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3061,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "56694:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "56694:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 3063,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2319,
																"src": "56712:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "56694:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e206f6e6c7920636c61696d20746f6b656e73206166746572207468652073616c652068617320656e6465642e",
															"id": 3065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56734:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa7e2e8e92c81e3e258566a14d09938bec93fd21b9be5e37228bf6cd9bbafc6d",
																"typeString": "literal_string \"Can only claim tokens after the sale has ended.\""
															},
															"value": "Can only claim tokens after the sale has ended."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa7e2e8e92c81e3e258566a14d09938bec93fd21b9be5e37228bf6cd9bbafc6d",
																"typeString": "literal_string \"Can only claim tokens after the sale has ended.\""
															}
														],
														"id": 3060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "56672:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56672:122:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3067,
												"nodeType": "ExpressionStatement",
												"src": "56672:122:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3069,
																	"name": "commitments",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2343,
																	"src": "56827:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3072,
																"indexExpression": {
																	"expression": {
																		"id": 3070,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "56839:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "56839:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "56827:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56853:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "56827:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f74206465706f736974656420616e792045746865722e",
															"id": 3075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56869:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54aebf7faa81b3fce9d385aee7f1c287e158dfd1024f7a846b75a4168e5d5d2e",
																"typeString": "literal_string \"You have not deposited any Ether.\""
															},
															"value": "You have not deposited any Ether."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54aebf7faa81b3fce9d385aee7f1c287e158dfd1024f7a846b75a4168e5d5d2e",
																"typeString": "literal_string \"You have not deposited any Ether.\""
															}
														],
														"id": 3068,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "56805:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56805:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3077,
												"nodeType": "ExpressionStatement",
												"src": "56805:110:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3078,
														"name": "totalCommitments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "56932:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 3079,
														"name": "refundThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2313,
														"src": "56952:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "56932:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3231,
													"nodeType": "Block",
													"src": "57966:311:0",
													"statements": [
														{
															"assignments": [
																3190
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3190,
																	"mutability": "mutable",
																	"name": "amt",
																	"nameLocation": "57989:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3231,
																	"src": "57981:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3189,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "57981:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3195,
															"initialValue": {
																"baseExpression": {
																	"id": 3191,
																	"name": "commitments",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2343,
																	"src": "57995:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3194,
																"indexExpression": {
																	"expression": {
																		"id": 3192,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "58007:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "58007:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "57995:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "57981:37:0"
														},
														{
															"expression": {
																"id": 3201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3196,
																		"name": "commitments",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2343,
																		"src": "58033:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3199,
																	"indexExpression": {
																		"expression": {
																			"id": 3197,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "58045:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "58045:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "58033:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 3200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "58059:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "58033:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3202,
															"nodeType": "ExpressionStatement",
															"src": "58033:27:0"
														},
														{
															"assignments": [
																3204,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3204,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "58081:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3231,
																	"src": "58076:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 3203,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "58076:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 3212,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 3210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "58122:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 3205,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "58094:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "58094:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 3207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "58094:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 3209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 3208,
																			"name": "amt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3190,
																			"src": "58117:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "58094:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 3211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58094:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "58075:50:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3214,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3204,
																		"src": "58148:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4661696c656420746f207472616e73666572206574686572",
																		"id": 3215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "58157:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6",
																			"typeString": "literal_string \"Failed to transfer ether\""
																		},
																		"value": "Failed to transfer ether"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6",
																			"typeString": "literal_string \"Failed to transfer ether\""
																		}
																	],
																	"id": 3213,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "58140:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58140:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3217,
															"nodeType": "ExpressionStatement",
															"src": "58140:44:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3219,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "58210:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "58210:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3221,
																		"name": "amt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3190,
																		"src": "58222:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 3222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "58227:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 3223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "58230:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3218,
																	"name": "Claim",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2371,
																	"src": "58204:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256)"
																	}
																},
																"id": 3224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58204:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3225,
															"nodeType": "EmitStatement",
															"src": "58199:33:0"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 3226,
																		"name": "amt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3190,
																		"src": "58255:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 3227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "58260:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 3228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "58263:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 3229,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "58254:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(uint256,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 3056,
															"id": 3230,
															"nodeType": "Return",
															"src": "58247:18:0"
														}
													]
												},
												"id": 3232,
												"nodeType": "IfStatement",
												"src": "56928:1349:0",
												"trueBody": {
													"id": 3188,
													"nodeType": "Block",
													"src": "56969:991:0",
													"statements": [
														{
															"assignments": [
																3082
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3082,
																	"mutability": "mutable",
																	"name": "ethersToSpend",
																	"nameLocation": "56992:13:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3188,
																	"src": "56984:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3081,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "56984:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3099,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3085,
																			"name": "commitments",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2343,
																			"src": "57035:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 3088,
																		"indexExpression": {
																			"expression": {
																				"id": 3086,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "57047:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "57047:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "57035:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3094,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"id": 3089,
																							"name": "commitments",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2343,
																							"src": "57078:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 3092,
																						"indexExpression": {
																							"expression": {
																								"id": 3090,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "57090:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 3091,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "57090:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "57078:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3093,
																						"name": "ethersToRaise",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2311,
																						"src": "57104:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "57078:39:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 3095,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "57077:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 3096,
																			"name": "totalCommitments",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2339,
																			"src": "57121:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "57077:60:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3083,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "57008:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1760_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 3084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 938,
																	"src": "57008:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57008:144:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "56984:168:0"
														},
														{
															"assignments": [
																3101
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3101,
																	"mutability": "mutable",
																	"name": "ethersToRefund",
																	"nameLocation": "57175:14:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3188,
																	"src": "57167:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3100,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "57167:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3108,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3102,
																		"name": "commitments",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2343,
																		"src": "57192:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3105,
																	"indexExpression": {
																		"expression": {
																			"id": 3103,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "57204:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "57204:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "57192:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 3106,
																	"name": "ethersToSpend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3082,
																	"src": "57218:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "57192:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "57167:64:0"
														},
														{
															"assignments": [
																3110
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3110,
																	"mutability": "mutable",
																	"name": "tokensToReceive",
																	"nameLocation": "57254:15:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3188,
																	"src": "57246:23:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3109,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "57246:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3117,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3111,
																				"name": "tokensToSell",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2309,
																				"src": "57273:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3112,
																				"name": "ethersToSpend",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3082,
																				"src": "57288:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "57273:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3114,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "57272:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3115,
																	"name": "ethersToRaise",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2311,
																	"src": "57322:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "57272:63:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "57246:89:0"
														},
														{
															"assignments": [
																3119
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3119,
																	"mutability": "mutable",
																	"name": "emission",
																	"nameLocation": "57358:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3188,
																	"src": "57350:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3118,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "57350:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3131,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 3121,
																				"name": "commitments",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2343,
																				"src": "57387:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 3124,
																			"indexExpression": {
																				"expression": {
																					"id": 3122,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "57399:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 3123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "57399:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "57387:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3120,
																		"name": "calculateEmission",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2414,
																		"src": "57369:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 3125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "57369:42:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 3126,
																		"name": "missedEmissions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2347,
																		"src": "57431:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3129,
																	"indexExpression": {
																		"expression": {
																			"id": 3127,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "57447:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "57447:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "57431:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "57369:89:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "57350:108:0"
														},
														{
															"expression": {
																"id": 3137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3132,
																		"name": "missedEmissions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2347,
																		"src": "57473:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3135,
																	"indexExpression": {
																		"expression": {
																			"id": 3133,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "57489:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "57489:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "57473:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 3136,
																	"name": "emission",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3119,
																	"src": "57504:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "57473:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3138,
															"nodeType": "ExpressionStatement",
															"src": "57473:39:0"
														},
														{
															"expression": {
																"id": 3144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3139,
																		"name": "commitments",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2343,
																		"src": "57529:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3142,
																	"indexExpression": {
																		"expression": {
																			"id": 3140,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "57541:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "57541:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "57529:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 3143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "57555:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "57529:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3145,
															"nodeType": "ExpressionStatement",
															"src": "57529:27:0"
														},
														{
															"expression": {
																"id": 3151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3146,
																		"name": "finalEmissions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2351,
																		"src": "57573:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3149,
																	"indexExpression": {
																		"expression": {
																			"id": 3147,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "57588:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "57588:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "57573:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3150,
																	"name": "emission",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3119,
																	"src": "57602:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "57573:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3152,
															"nodeType": "ExpressionStatement",
															"src": "57573:37:0"
														},
														{
															"expression": {
																"id": 3158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3153,
																		"name": "finalTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2355,
																		"src": "57625:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3156,
																	"indexExpression": {
																		"expression": {
																			"id": 3154,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "57637:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "57637:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "57625:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3157,
																	"name": "tokensToReceive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3110,
																	"src": "57651:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "57625:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3159,
															"nodeType": "ExpressionStatement",
															"src": "57625:41:0"
														},
														{
															"assignments": [
																3161,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3161,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "57689:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3188,
																	"src": "57684:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 3160,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "57684:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 3169,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 3167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "57741:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 3162,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "57702:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "57702:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 3164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "57702:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 3166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 3165,
																			"name": "ethersToRefund",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3101,
																			"src": "57725:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "57702:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 3168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57702:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "57683:61:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3171,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3161,
																		"src": "57767:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4661696c656420746f207472616e73666572206574686572",
																		"id": 3172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "57776:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6",
																			"typeString": "literal_string \"Failed to transfer ether\""
																		},
																		"value": "Failed to transfer ether"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6",
																			"typeString": "literal_string \"Failed to transfer ether\""
																		}
																	],
																	"id": 3170,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "57759:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57759:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3174,
															"nodeType": "ExpressionStatement",
															"src": "57759:44:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3176,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "57829:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "57829:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3178,
																		"name": "ethersToRefund",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3101,
																		"src": "57841:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3179,
																		"name": "tokensToReceive",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3110,
																		"src": "57857:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3180,
																		"name": "emission",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3119,
																		"src": "57874:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3175,
																	"name": "Claim",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2371,
																	"src": "57823:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256)"
																	}
																},
																"id": 3181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57823:60:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3182,
															"nodeType": "EmitStatement",
															"src": "57818:65:0"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 3183,
																		"name": "ethersToRefund",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3101,
																		"src": "57906:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3184,
																		"name": "tokensToReceive",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3110,
																		"src": "57922:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3185,
																		"name": "emission",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3119,
																		"src": "57939:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "57905:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256)"
																}
															},
															"functionReturnParameters": 3056,
															"id": 3187,
															"nodeType": "Return",
															"src": "57898:50:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 3234,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3049,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3048,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 743,
												"src": "56584:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56584:12:0"
										}
									],
									"name": "claim",
									"nameLocation": "56567:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56572:2:0"
									},
									"returnParameters": {
										"id": 3056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "56606:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "56615:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "56624:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56605:27:0"
									},
									"scope": 3506,
									"src": "56558:1726:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3310,
										"nodeType": "Block",
										"src": "58332:464:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3240,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "58351:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "58351:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3242,
																"name": "receiveTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2321,
																"src": "58370:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "58351:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420636c61696d61626c6520796574",
															"id": 3244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58383:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_214d642b53df775d4b33d366c6f9372cc2ec5014c3ae9d7e74d205687b92a939",
																"typeString": "literal_string \"not claimable yet\""
															},
															"value": "not claimable yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_214d642b53df775d4b33d366c6f9372cc2ec5014c3ae9d7e74d205687b92a939",
																"typeString": "literal_string \"not claimable yet\""
															}
														],
														"id": 3239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58343:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58343:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3246,
												"nodeType": "ExpressionStatement",
												"src": "58343:60:0"
											},
											{
												"assignments": [
													3248
												],
												"declarations": [
													{
														"constant": false,
														"id": 3248,
														"mutability": "mutable",
														"name": "a1",
														"nameLocation": "58422:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 3310,
														"src": "58414:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3247,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58414:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3253,
												"initialValue": {
													"baseExpression": {
														"id": 3249,
														"name": "finalTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "58427:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3252,
													"indexExpression": {
														"expression": {
															"id": 3250,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "58439:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "58439:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "58427:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58414:36:0"
											},
											{
												"assignments": [
													3255
												],
												"declarations": [
													{
														"constant": false,
														"id": 3255,
														"mutability": "mutable",
														"name": "a2",
														"nameLocation": "58469:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 3310,
														"src": "58461:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3254,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3260,
												"initialValue": {
													"baseExpression": {
														"id": 3256,
														"name": "finalEmissions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2351,
														"src": "58474:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3259,
													"indexExpression": {
														"expression": {
															"id": 3257,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "58489:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "58489:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "58474:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58461:39:0"
											},
											{
												"assignments": [
													3262
												],
												"declarations": [
													{
														"constant": false,
														"id": 3262,
														"mutability": "mutable",
														"name": "a3",
														"nameLocation": "58519:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 3310,
														"src": "58511:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58511:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3269,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 3263,
															"name": "finalTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "58524:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3266,
														"indexExpression": {
															"expression": {
																"id": 3264,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58536:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58536:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "58524:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "33",
														"id": 3267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58550:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "58524:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58511:40:0"
											},
											{
												"expression": {
													"id": 3275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3270,
															"name": "finalTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "58564:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3273,
														"indexExpression": {
															"expression": {
																"id": 3271,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58576:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58576:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "58564:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58590:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "58564:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3276,
												"nodeType": "ExpressionStatement",
												"src": "58564:27:0"
											},
											{
												"expression": {
													"id": 3282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3277,
															"name": "finalEmissions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2351,
															"src": "58602:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3280,
														"indexExpression": {
															"expression": {
																"id": 3278,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58617:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58617:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "58602:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58631:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "58602:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3283,
												"nodeType": "ExpressionStatement",
												"src": "58602:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3287,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58669:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58669:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3289,
															"name": "a1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3248,
															"src": "58681:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3284,
															"name": "salesToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2304,
															"src": "58645:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 3286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 466,
														"src": "58645:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 3290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58645:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3291,
												"nodeType": "ExpressionStatement",
												"src": "58645:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3295,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58722:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58722:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3297,
																"name": "a2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3255,
																"src": "58734:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 3298,
																"name": "a3",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3262,
																"src": "58739:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "58734:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3292,
															"name": "emissionToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2307,
															"src": "58695:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 3294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 466,
														"src": "58695:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 3300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58695:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3301,
												"nodeType": "ExpressionStatement",
												"src": "58695:47:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3303,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58765:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58765:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3305,
															"name": "a1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3248,
															"src": "58777:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3306,
															"name": "a2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3255,
															"src": "58781:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3307,
															"name": "a3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3262,
															"src": "58785:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3302,
														"name": "Claim2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "58758:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 3308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58758:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3309,
												"nodeType": "EmitStatement",
												"src": "58753:35:0"
											}
										]
									},
									"functionSelector": "01eaaec4",
									"id": 3311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3237,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3236,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 743,
												"src": "58319:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "58319:12:0"
										}
									],
									"name": "claim2",
									"nameLocation": "58301:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58307:2:0"
									},
									"returnParameters": {
										"id": 3238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58332:0:0"
									},
									"scope": 3506,
									"src": "58292:504:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3427,
										"nodeType": "Block",
										"src": "58841:1232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3317,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "58874:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "58874:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 3319,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2319,
																"src": "58892:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "58874:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e206f6e6c792066696e697368206166746572207468652073616c652068617320656e6465642e",
															"id": 3321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58914:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9349edeb6937a4137e4f8d14f88ddb95976f830013510388532c7cb44635b9be",
																"typeString": "literal_string \"Can only finish after the sale has ended.\""
															},
															"value": "Can only finish after the sale has ended."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9349edeb6937a4137e4f8d14f88ddb95976f830013510388532c7cb44635b9be",
																"typeString": "literal_string \"Can only finish after the sale has ended.\""
															}
														],
														"id": 3316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58852:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58852:116:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3323,
												"nodeType": "ExpressionStatement",
												"src": "58852:116:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "58987:9:0",
															"subExpression": {
																"id": 3325,
																"name": "finished",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2333,
																"src": "58988:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792066696e69736865642e",
															"id": 3327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58998:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_743c7eb8da68c5549428905a6d7f94eb1a9d7382444d14a96e31c22b32429672",
																"typeString": "literal_string \"Already finished.\""
															},
															"value": "Already finished."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_743c7eb8da68c5549428905a6d7f94eb1a9d7382444d14a96e31c22b32429672",
																"typeString": "literal_string \"Already finished.\""
															}
														],
														"id": 3324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58979:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58979:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3329,
												"nodeType": "ExpressionStatement",
												"src": "58979:39:0"
											},
											{
												"expression": {
													"id": 3332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3330,
														"name": "finished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2333,
														"src": "59029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59040:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "59029:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3333,
												"nodeType": "ExpressionStatement",
												"src": "59029:15:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3334,
														"name": "totalCommitments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "59061:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 3335,
														"name": "refundThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2313,
														"src": "59081:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "59061:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3425,
													"nodeType": "Block",
													"src": "59902:164:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 3410,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 825,
																			"src": "59941:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 3411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "59941:7:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3412,
																		"name": "tokensToSell",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2309,
																		"src": "59950:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3407,
																		"name": "salesToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2304,
																		"src": "59917:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 3409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 466,
																	"src": "59917:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 3413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59917:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3414,
															"nodeType": "ExpressionStatement",
															"src": "59917:46:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 3418,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 825,
																			"src": "60005:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 3419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "60005:7:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3420,
																			"name": "totalEmission",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2315,
																			"src": "60014:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 3421,
																			"name": "emissionTokenSaleAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2325,
																			"src": "60030:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "60014:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3415,
																		"name": "emissionToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2307,
																		"src": "59978:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 3417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 466,
																	"src": "59978:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 3423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59978:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3424,
															"nodeType": "ExpressionStatement",
															"src": "59978:76:0"
														}
													]
												},
												"id": 3426,
												"nodeType": "IfStatement",
												"src": "59057:1009:0",
												"trueBody": {
													"id": 3406,
													"nodeType": "Block",
													"src": "59098:798:0",
													"statements": [
														{
															"assignments": [
																3338,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3338,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "59119:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3406,
																	"src": "59114:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 3337,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "59114:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 3350,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 3348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "59227:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 3339,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 825,
																				"src": "59132:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 3340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "59132:7:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 3341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "59132:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 3347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"arguments": [
																				{
																					"id": 3344,
																					"name": "ethersToRaise",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2311,
																					"src": "59179:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3345,
																					"name": "totalCommitments",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2339,
																					"src": "59194:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 3342,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1760,
																					"src": "59170:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$1760_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 3343,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "min",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 938,
																				"src": "59170:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "59170:41:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "59132:94:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 3349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59132:98:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "59113:117:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3352,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3338,
																		"src": "59253:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4661696c656420746f207472616e73666572206574686572",
																		"id": 3353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "59262:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6",
																			"typeString": "literal_string \"Failed to transfer ether\""
																		},
																		"value": "Failed to transfer ether"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_fc82a56dc4de57e61d425293467c35650ce3f5da596abcd786472a327187f7e6",
																			"typeString": "literal_string \"Failed to transfer ether\""
																		}
																	],
																	"id": 3351,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "59245:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59245:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3355,
															"nodeType": "ExpressionStatement",
															"src": "59245:44:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3356,
																	"name": "ethersToRaise",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2311,
																	"src": "59308:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 3357,
																	"name": "totalCommitments",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2339,
																	"src": "59324:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "59308:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3405,
															"nodeType": "IfStatement",
															"src": "59304:581:0",
															"trueBody": {
																"id": 3404,
																"nodeType": "Block",
																"src": "59342:543:0",
																"statements": [
																	{
																		"assignments": [
																			3360
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3360,
																				"mutability": "mutable",
																				"name": "emissionTokensToBurn",
																				"nameLocation": "59369:20:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 3404,
																				"src": "59361:28:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 3359,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "59361:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3370,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3366,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3361,
																							"name": "emissionTokenSaleAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2325,
																							"src": "59393:23:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 3364,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 3362,
																										"name": "ethersToRaise",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2311,
																										"src": "59420:13:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "-",
																									"rightExpression": {
																										"id": 3363,
																										"name": "totalCommitments",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2339,
																										"src": "59436:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "59420:32:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 3365,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "59419:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "59393:60:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 3367,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "59392:62:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3368,
																				"name": "ethersToRaise",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2311,
																				"src": "59457:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "59392:78:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "59361:109:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 3374,
																					"name": "burnAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2323,
																					"src": "59520:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3375,
																					"name": "emissionTokensToBurn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3360,
																					"src": "59533:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 3371,
																					"name": "emissionToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2307,
																					"src": "59493:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 3373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 466,
																				"src": "59493:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 3376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "59493:61:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3377,
																		"nodeType": "ExpressionStatement",
																		"src": "59493:61:0"
																	},
																	{
																		"assignments": [
																			3379
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3379,
																				"mutability": "mutable",
																				"name": "tokensToBurn",
																				"nameLocation": "59599:12:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 3404,
																				"src": "59591:20:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 3378,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "59591:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3389,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3380,
																							"name": "tokensToSell",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2309,
																							"src": "59615:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 3383,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 3381,
																										"name": "ethersToRaise",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2311,
																										"src": "59652:13:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "-",
																									"rightExpression": {
																										"id": 3382,
																										"name": "totalCommitments",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2339,
																										"src": "59668:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "59652:32:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 3384,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "59651:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "59615:70:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 3386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "59614:72:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3387,
																				"name": "ethersToRaise",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2311,
																				"src": "59689:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "59614:88:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "59591:111:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 3393,
																					"name": "burnAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2323,
																					"src": "59766:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3394,
																					"name": "emissionTokensToBurn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3360,
																					"src": "59779:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 3390,
																					"name": "emissionToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2307,
																					"src": "59739:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 3392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 466,
																				"src": "59739:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 3395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "59739:61:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3396,
																		"nodeType": "ExpressionStatement",
																		"src": "59739:61:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 3400,
																					"name": "burnAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2323,
																					"src": "59843:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3401,
																					"name": "tokensToBurn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3379,
																					"src": "59856:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 3397,
																					"name": "salesToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2304,
																					"src": "59819:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 3399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 466,
																				"src": "59819:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 3402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "59819:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3403,
																		"nodeType": "ExpressionStatement",
																		"src": "59819:50:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "d56b2889",
									"id": 3428,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3313,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 816,
												"src": "58831:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "58831:9:0"
										}
									],
									"name": "finish",
									"nameLocation": "58813:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58819:2:0"
									},
									"returnParameters": {
										"id": 3315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58841:0:0"
									},
									"scope": 3506,
									"src": "58804:1269:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3458,
										"nodeType": "Block",
										"src": "60221:129:0",
										"statements": [
											{
												"body": {
													"id": 3456,
													"nodeType": "Block",
													"src": "60281:62:0",
													"statements": [
														{
															"expression": {
																"id": 3454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3448,
																		"name": "whitelist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2385,
																		"src": "60296:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3452,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 3449,
																			"name": "toAddAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3432,
																			"src": "60306:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 3451,
																		"indexExpression": {
																			"id": 3450,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3438,
																			"src": "60321:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "60306:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "60296:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 3453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "60327:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "60296:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3455,
															"nodeType": "ExpressionStatement",
															"src": "60296:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3441,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3438,
														"src": "60249:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3442,
															"name": "toAddAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3432,
															"src": "60253:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 3443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "60253:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "60249:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3457,
												"initializationExpression": {
													"assignments": [
														3438
													],
													"declarations": [
														{
															"constant": false,
															"id": 3438,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "60242:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 3457,
															"src": "60237:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3437,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "60237:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3440,
													"initialValue": {
														"hexValue": "30",
														"id": 3439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60246:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "60237:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 3446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "60276:3:0",
														"subExpression": {
															"id": 3445,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3438,
															"src": "60276:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3447,
													"nodeType": "ExpressionStatement",
													"src": "60276:3:0"
												},
												"nodeType": "ForStatement",
												"src": "60232:111:0"
											}
										]
									},
									"documentation": {
										"id": 3429,
										"nodeType": "StructuredDocumentation",
										"src": "60081:45:0",
										"text": " @notice Add to whitelist"
									},
									"functionSelector": "7f649783",
									"id": 3459,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3435,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3434,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 816,
												"src": "60206:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "60206:9:0"
										}
									],
									"name": "addToWhitelist",
									"nameLocation": "60141:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3432,
												"mutability": "mutable",
												"name": "toAddAddresses",
												"nameLocation": "60175:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 3459,
												"src": "60156:33:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3430,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "60156:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3431,
													"nodeType": "ArrayTypeName",
													"src": "60156:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60155:35:0"
									},
									"returnParameters": {
										"id": 3436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60221:0:0"
									},
									"scope": 3506,
									"src": "60132:218:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3488,
										"nodeType": "Block",
										"src": "60510:135:0",
										"statements": [
											{
												"body": {
													"id": 3486,
													"nodeType": "Block",
													"src": "60573:65:0",
													"statements": [
														{
															"expression": {
																"id": 3484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "60588:38:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 3479,
																		"name": "whitelist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2385,
																		"src": "60595:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3483,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 3480,
																			"name": "toRemoveAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3463,
																			"src": "60605:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 3482,
																		"indexExpression": {
																			"id": 3481,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3469,
																			"src": "60623:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "60605:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "60595:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3485,
															"nodeType": "ExpressionStatement",
															"src": "60588:38:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3472,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3469,
														"src": "60538:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3473,
															"name": "toRemoveAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3463,
															"src": "60542:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 3474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "60542:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "60538:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3487,
												"initializationExpression": {
													"assignments": [
														3469
													],
													"declarations": [
														{
															"constant": false,
															"id": 3469,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "60531:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 3487,
															"src": "60526:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3468,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "60526:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3471,
													"initialValue": {
														"hexValue": "30",
														"id": 3470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "60526:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 3477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "60568:3:0",
														"subExpression": {
															"id": 3476,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3469,
															"src": "60568:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3478,
													"nodeType": "ExpressionStatement",
													"src": "60568:3:0"
												},
												"nodeType": "ForStatement",
												"src": "60521:117:0"
											}
										]
									},
									"documentation": {
										"id": 3460,
										"nodeType": "StructuredDocumentation",
										"src": "60358:50:0",
										"text": " @notice Remove from whitelist"
									},
									"functionSelector": "548db174",
									"id": 3489,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3465,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 816,
												"src": "60495:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "60495:9:0"
										}
									],
									"name": "removeFromWhitelist",
									"nameLocation": "60423:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3463,
												"mutability": "mutable",
												"name": "toRemoveAddresses",
												"nameLocation": "60462:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 3489,
												"src": "60443:36:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3461,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "60443:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3462,
													"nodeType": "ArrayTypeName",
													"src": "60443:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60442:38:0"
									},
									"returnParameters": {
										"id": 3467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60510:0:0"
									},
									"scope": 3506,
									"src": "60414:231:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3500,
										"nodeType": "Block",
										"src": "60716:41:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3496,
														"name": "whitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2385,
														"src": "60734:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3498,
													"indexExpression": {
														"id": 3497,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3491,
														"src": "60744:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "60734:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3495,
												"id": 3499,
												"nodeType": "Return",
												"src": "60727:22:0"
											}
										]
									},
									"functionSelector": "3a3ab672",
									"id": 3501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOnWhitelist",
									"nameLocation": "60662:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3491,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "60684:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "60676:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60675:14:0"
									},
									"returnParameters": {
										"id": 3495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "60710:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3493,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "60710:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60709:6:0"
									},
									"scope": 3506,
									"src": "60653:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3504,
										"nodeType": "Block",
										"src": "60792:2:0",
										"statements": []
									},
									"id": 3505,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60772:2:0"
									},
									"returnParameters": {
										"id": 3503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60792:0:0"
									},
									"scope": 3506,
									"src": "60765:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3507,
							"src": "48771:12026:0",
							"usedErrors": []
						}
					],
					"src": "0:60797:0"
				},
				"id": 0
			}
		}
	}
}