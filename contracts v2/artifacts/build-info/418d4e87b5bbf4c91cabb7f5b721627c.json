{
	"id": "418d4e87b5bbf4c91cabb7f5b721627c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/pair.sol": {
				"content": "pragma solidity =0.5.16;\n\nimport './interfaces/IPair.sol';\nimport './UniswapV2ERC20.sol';\nimport './libraries/Math.sol';\nimport './interfaces/IERC20.sol';\nimport './interfaces/IFactory.sol';\nimport './interfaces/IUniswapV2Callee.sol';\n\ncontract EZKaliburPair is IPair, UniswapV2ERC20 {\n  using SafeMath  for uint;\n\n  uint public constant MINIMUM_LIQUIDITY = 10 ** 3;\n  bytes4 private constant SELECTOR = bytes4(keccak256(bytes('transfer(address,uint256)')));\n\n  address public factory;\n  address public token0;\n  address public token1;\n\n  bool public initialized;\n\n  uint public constant FEE_DENOMINATOR = 100000;\n  uint public constant MAX_FEE_PERCENT = 2000; // = 2%\n\n  uint112 private reserve0;           // uses single storage slot, accessible via getReserves\n  uint112 private reserve1;           // uses single storage slot, accessible via getReserves\n  uint16 public token0FeePercent = 300; // default = 0.3%  // uses single storage slot, accessible via getReserves\n  uint16 public token1FeePercent = 300; // default = 0.3%  // uses single storage slot, accessible via getReserves\n\n  uint public precisionMultiplier0;\n  uint public precisionMultiplier1;\n\n  uint public kLast; // reserve0 * reserve1, as of immediately after the most recent liquidity event\n\n  bool public stableSwap; // if set to true, defines pair type as stable\n  bool public pairTypeImmutable; // if set to true, stableSwap states cannot be updated anymore\n\n  uint private unlocked = 1;\n  modifier lock() {\n    require(unlocked == 1, 'eZKaliburPair: LOCKED');\n    unlocked = 0;\n    _;\n    unlocked = 1;\n  }\n\n  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint16 _token0FeePercent, uint16 _token1FeePercent) {\n    _reserve0 = reserve0;\n    _reserve1 = reserve1;\n    _token0FeePercent = token0FeePercent;\n    _token1FeePercent = token1FeePercent;\n  }\n\n  function _safeTransfer(address token, address to, uint value) private {\n    (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value));\n    require(success && (data.length == 0 || abi.decode(data, (bool))), 'eZKaliburPair: TRANSFER_FAILED');\n  }\n\n  event DrainWrongToken(address indexed token, address to);\n  event FeePercentUpdated(uint16 token0FeePercent, uint16 token1FeePercent);\n  event SetStableSwap(bool prevStableSwap, bool stableSwap);\n  event SetPairTypeImmutable();\n  event Mint(address indexed sender, uint amount0, uint amount1);\n  event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n  event Swap(\n    address indexed sender,\n    uint amount0In,\n    uint amount1In,\n    uint amount0Out,\n    uint amount1Out,\n    address indexed to\n  );\n  event Sync(uint112 reserve0, uint112 reserve1);\n  event Skim();\n\n  constructor() public {\n    factory = msg.sender;\n  }\n\n  // called once by the factory at time of deployment\n  function initialize(address _token0, address _token1) external {\n    require(msg.sender == factory && !initialized, 'eZKaliburPair: FORBIDDEN');\n    // sufficient check\n    token0 = _token0;\n    token1 = _token1;\n\n    precisionMultiplier0 = 10 ** uint(IERC20(_token0).decimals());\n    precisionMultiplier1 = 10 ** uint(IERC20(_token1).decimals());\n\n    initialized = true;\n  }\n\n  /**\n  * @dev Updates the swap fees percent\n  *\n  * Can only be called by the factory's feeAmountOwner\n  */\n  function setFeePercent(uint16 newToken0FeePercent, uint16 newToken1FeePercent) external lock {\n    require(msg.sender == IFactory(factory).feePercentOwner(), \"eZKaliburPair: only factory's feeAmountOwner\");\n    require(newToken0FeePercent <= MAX_FEE_PERCENT && newToken1FeePercent <= MAX_FEE_PERCENT, \"eZKaliburPair: feePercent mustn't exceed the maximum\");\n    require(newToken0FeePercent > 0 && newToken1FeePercent > 0, \"eZKaliburPair: feePercent mustn't exceed the minimum\");\n    token0FeePercent = newToken0FeePercent;\n    token1FeePercent = newToken1FeePercent;\n    emit FeePercentUpdated(newToken0FeePercent, newToken1FeePercent);\n  }\n\n  function setStableSwap(bool stable, uint112 expectedReserve0, uint112 expectedReserve1) external lock {\n    require(msg.sender == IFactory(factory).setStableOwner(), \"eZKaliburPair: only factory's setStableOwner\");\n    require(!pairTypeImmutable, \"eZKaliburPair: immutable\");\n\n    require(stable != stableSwap, \"eZKaliburPair: no update\");\n    require(expectedReserve0 == reserve0 && expectedReserve1 == reserve1, \"eZKaliburPair: failed\");\n\n    bool feeOn = _mintFee(reserve0, reserve1);\n\n    emit SetStableSwap(stableSwap, stable);\n    stableSwap = stable;\n    kLast = (stable && feeOn) ? _k(uint(reserve0), uint(reserve1)) : 0;\n  }\n\n  function setPairTypeImmutable() external lock {\n    require(msg.sender == IFactory(factory).owner(), \"eZKaliburPair: only factory's owner\");\n    require(!pairTypeImmutable, \"eZKaliburPair: already immutable\");\n\n    pairTypeImmutable = true;\n    emit SetPairTypeImmutable();\n  }\n\n  // update reserves\n  function _update(uint balance0, uint balance1) private {\n    require(balance0 <= uint112(- 1) && balance1 <= uint112(- 1), 'eZKaliburPair: OVERFLOW');\n\n    reserve0 = uint112(balance0);\n    reserve1 = uint112(balance1);\n    emit Sync(uint112(balance0), uint112(balance1));\n  }\n\n  // if fee is on, mint liquidity equivalent to \"factory.ownerFeeShare()\" of the growth in sqrt(k)\n  // only for uni configuration\n  function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\n    if(stableSwap) return false;\n\n    (uint ownerFeeShare, address feeTo) = IFactory(factory).feeInfo();\n    feeOn = feeTo != address(0);\n    uint _kLast = kLast;\n    // gas savings\n    if (feeOn) {\n      if (_kLast != 0) {\n        uint rootK = Math.sqrt(_k(uint(_reserve0), uint(_reserve1)));\n        uint rootKLast = Math.sqrt(_kLast);\n        if (rootK > rootKLast) {\n          uint d = (FEE_DENOMINATOR.mul(100) / ownerFeeShare).sub(100);\n          uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(100);\n          uint denominator = rootK.mul(d).add(rootKLast.mul(100));\n          uint liquidity = numerator / denominator;\n          if (liquidity > 0) _mint(feeTo, liquidity);\n        }\n      }\n    } else if (_kLast != 0) {\n      kLast = 0;\n    }\n  }\n\n  // this low-level function should be called from a contract which performs important safety checks\n  function mint(address to) external lock returns (uint liquidity) {\n    (uint112 _reserve0, uint112 _reserve1,,) = getReserves();\n    // gas savings\n    uint balance0 = IERC20(token0).balanceOf(address(this));\n    uint balance1 = IERC20(token1).balanceOf(address(this));\n    uint amount0 = balance0.sub(_reserve0);\n    uint amount1 = balance1.sub(_reserve1);\n\n    bool feeOn = _mintFee(_reserve0, _reserve1);\n    uint _totalSupply = totalSupply;\n    // gas savings, must be defined here since totalSupply can update in _mintFee\n    if (_totalSupply == 0) {\n      liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\n      _mint(address(0), MINIMUM_LIQUIDITY);\n      // permanently lock the first MINIMUM_LIQUIDITY tokens\n    } else {\n      liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);\n    }\n    require(liquidity > 0, 'eZKaliburPair: INSUFFICIENT_LIQUIDITY_MINTED');\n    _mint(to, liquidity);\n\n    _update(balance0, balance1);\n    if (feeOn) kLast = _k(uint(reserve0), uint(reserve1));\n    // reserve0 and reserve1 are up-to-date\n    emit Mint(msg.sender, amount0, amount1);\n  }\n\n  // this low-level function should be called from a contract which performs important safety checks\n  function burn(address to) external lock returns (uint amount0, uint amount1) {\n    (uint112 _reserve0, uint112 _reserve1,,) = getReserves(); // gas savings\n    address _token0 = token0; // gas savings\n    address _token1 = token1; // gas savings\n    uint balance0 = IERC20(_token0).balanceOf(address(this));\n    uint balance1 = IERC20(_token1).balanceOf(address(this));\n    uint liquidity = balanceOf[address(this)];\n\n    bool feeOn = _mintFee(_reserve0, _reserve1);\n    uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n    amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\n    amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\n    require(amount0 > 0 && amount1 > 0, 'eZKaliburPair: INSUFFICIENT_LIQUIDITY_BURNED');\n    _burn(address(this), liquidity);\n    _safeTransfer(_token0, to, amount0);\n    _safeTransfer(_token1, to, amount1);\n    balance0 = IERC20(_token0).balanceOf(address(this));\n    balance1 = IERC20(_token1).balanceOf(address(this));\n\n    _update(balance0, balance1);\n    if (feeOn) kLast = _k(uint(reserve0), uint(reserve1)); // reserve0 and reserve1 are up-to-date\n    emit Burn(msg.sender, amount0, amount1, to);\n  }\n\n  struct TokensData {\n    address token0;\n    address token1;\n    uint amount0Out;\n    uint amount1Out;\n    uint balance0;\n    uint balance1;\n    uint remainingFee0;\n    uint remainingFee1;\n  }\n\n  // this low-level function should be called from a contract which performs important safety checks\n  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {\n    TokensData memory tokensData = TokensData({\n      token0: token0,\n      token1: token1,\n      amount0Out: amount0Out,\n      amount1Out: amount1Out,\n      balance0: 0,\n      balance1: 0,\n      remainingFee0: 0,\n      remainingFee1: 0\n    });\n    _swap(tokensData, to, data, address(0));\n  }\n\n  // this low-level function should be called from a contract which performs important safety checks\n  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {\n    TokensData memory tokensData = TokensData({\n      token0: token0,\n      token1: token1,\n      amount0Out: amount0Out,\n      amount1Out: amount1Out,\n      balance0: 0,\n      balance1: 0,\n      remainingFee0: 0,\n      remainingFee1: 0\n    });\n    _swap(tokensData, to, data, referrer);\n  }\n\n\n  function _swap(TokensData memory tokensData, address to, bytes memory data, address referrer) internal lock {\n    require(tokensData.amount0Out > 0 || tokensData.amount1Out > 0, 'eZKaliburPair: INSUFFICIENT_OUTPUT_AMOUNT');\n\n    (uint112 _reserve0, uint112 _reserve1, uint16 _token0FeePercent, uint16 _token1FeePercent) = getReserves();\n    require(tokensData.amount0Out < _reserve0 && tokensData.amount1Out < _reserve1, 'eZKaliburPair: INSUFFICIENT_LIQUIDITY');\n\n\n    {\n      require(to != tokensData.token0 && to != tokensData.token1, 'eZKaliburPair: INVALID_TO');\n      // optimistically transfer tokens\n      if (tokensData.amount0Out > 0) _safeTransfer(tokensData.token0, to, tokensData.amount0Out);\n      // optimistically transfer tokens\n      if (tokensData.amount1Out > 0) _safeTransfer(tokensData.token1, to, tokensData.amount1Out);\n      if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, tokensData.amount0Out, tokensData.amount1Out, data);\n      tokensData.balance0 = IERC20(tokensData.token0).balanceOf(address(this));\n      tokensData.balance1 = IERC20(tokensData.token1).balanceOf(address(this));\n    }\n\n    uint amount0In = tokensData.balance0 > _reserve0 - tokensData.amount0Out ? tokensData.balance0 - (_reserve0 - tokensData.amount0Out) : 0;\n    uint amount1In = tokensData.balance1 > _reserve1 - tokensData.amount1Out ? tokensData.balance1 - (_reserve1 - tokensData.amount1Out) : 0;\n    require(amount0In > 0 || amount1In > 0, 'eZKaliburPair: INSUFFICIENT_INPUT_AMOUNT');\n\n    tokensData.remainingFee0 = amount0In.mul(_token0FeePercent) / FEE_DENOMINATOR;\n    tokensData.remainingFee1 = amount1In.mul(_token1FeePercent) / FEE_DENOMINATOR;\n\n    {// scope for referer/stable fees management\n      uint fee = 0;\n\n      uint referrerInputFeeShare = referrer != address(0) ? IFactory(factory).referrersFeeShare(referrer) : 0;\n      if (referrerInputFeeShare > 0) {\n        if (amount0In > 0) {\n          fee = amount0In.mul(referrerInputFeeShare).mul(_token0FeePercent) / (FEE_DENOMINATOR ** 2);\n          tokensData.remainingFee0 = tokensData.remainingFee0.sub(fee);\n          _safeTransfer(tokensData.token0, referrer, fee);\n        }\n        if (amount1In > 0) {\n          fee = amount1In.mul(referrerInputFeeShare).mul(_token1FeePercent) / (FEE_DENOMINATOR ** 2);\n          tokensData.remainingFee1 = tokensData.remainingFee1.sub(fee);\n          _safeTransfer(tokensData.token1, referrer, fee);\n        }\n      }\n\n      if(stableSwap){\n        (uint ownerFeeShare, address feeTo) = IFactory(factory).feeInfo();\n        if(feeTo != address(0)) {\n          ownerFeeShare = FEE_DENOMINATOR.sub(referrerInputFeeShare).mul(ownerFeeShare);\n          if (amount0In > 0) {\n            fee = amount0In.mul(ownerFeeShare).mul(_token0FeePercent) / (FEE_DENOMINATOR ** 3);\n            tokensData.remainingFee0 = tokensData.remainingFee0.sub(fee);\n            _safeTransfer(tokensData.token0, feeTo, fee);\n          }\n          if (amount1In > 0) {\n            fee = amount1In.mul(ownerFeeShare).mul(_token1FeePercent) / (FEE_DENOMINATOR ** 3);\n            tokensData.remainingFee1 = tokensData.remainingFee1.sub(fee);\n            _safeTransfer(tokensData.token1, feeTo, fee);\n          }\n        }\n      }\n      // readjust tokens balance\n      if (amount0In > 0) tokensData.balance0 = IERC20(tokensData.token0).balanceOf(address(this));\n      if (amount1In > 0) tokensData.balance1 = IERC20(tokensData.token1).balanceOf(address(this));\n    }\n    {// scope for reserve{0,1}Adjusted, avoids stack too deep errors\n      uint balance0Adjusted = tokensData.balance0.sub(tokensData.remainingFee0);\n      uint balance1Adjusted = tokensData.balance1.sub(tokensData.remainingFee1);\n      require(_k(balance0Adjusted, balance1Adjusted) >= _k(uint(_reserve0), uint(_reserve1)), 'eZKaliburPair: K');\n    }\n    _update(tokensData.balance0, tokensData.balance1);\n    emit Swap(msg.sender, amount0In, amount1In, tokensData.amount0Out, tokensData.amount1Out, to);\n  }\n\n  function _k(uint balance0, uint balance1) internal view returns (uint) {\n    if (stableSwap) {\n      uint _x = balance0.mul(1e18) / precisionMultiplier0;\n      uint _y = balance1.mul(1e18) / precisionMultiplier1;\n      uint _a = (_x.mul(_y)) / 1e18;\n      uint _b = (_x.mul(_x) / 1e18).add(_y.mul(_y) / 1e18);\n      return  _a.mul(_b) / 1e18; // x3y+y3x >= k\n    }\n    return balance0.mul(balance1);\n  }\n\n  function _get_y(uint x0, uint xy, uint y) internal pure returns (uint) {\n    for (uint i = 0; i < 255; i++) {\n      uint y_prev = y;\n      uint k = _f(x0, y);\n      if (k < xy) {\n        uint dy = (xy - k) * 1e18 / _d(x0, y);\n        y = y + dy;\n      } else {\n        uint dy = (k - xy) * 1e18 / _d(x0, y);\n        y = y - dy;\n      }\n      if (y > y_prev) {\n        if (y - y_prev <= 1) {\n          return y;\n        }\n      } else {\n        if (y_prev - y <= 1) {\n          return y;\n        }\n      }\n    }\n    return y;\n  }\n\n  function _f(uint x0, uint y) internal pure returns (uint) {\n    return x0 * (y * y / 1e18 * y / 1e18) / 1e18 + (x0 * x0 / 1e18 * x0 / 1e18) * y / 1e18;\n  }\n\n  function _d(uint x0, uint y) internal pure returns (uint) {\n    return 3 * x0 * (y * y / 1e18) / 1e18 + (x0 * x0 / 1e18 * x0 / 1e18);\n  }\n\n  function getAmountOut(uint amountIn, address tokenIn) external view returns (uint) {\n    uint16 feePercent = tokenIn == token0 ? token0FeePercent : token1FeePercent;\n    return _getAmountOut(amountIn, tokenIn, uint(reserve0), uint(reserve1), feePercent);\n  }\n\n  function _getAmountOut(uint amountIn, address tokenIn, uint _reserve0, uint _reserve1, uint feePercent) internal view returns (uint) {\n    if (stableSwap) {\n      amountIn = amountIn.sub(amountIn.mul(feePercent) / FEE_DENOMINATOR); // remove fee from amount received\n      uint xy = _k(_reserve0, _reserve1);\n      _reserve0 = _reserve0 * 1e18 / precisionMultiplier0;\n      _reserve1 = _reserve1 * 1e18 / precisionMultiplier1;\n\n      (uint reserveA, uint reserveB) = tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0);\n      amountIn = tokenIn == token0 ? amountIn * 1e18 / precisionMultiplier0 : amountIn * 1e18 / precisionMultiplier1;\n      uint y = reserveB - _get_y(amountIn + reserveA, xy, reserveB);\n      return y * (tokenIn == token0 ? precisionMultiplier1 : precisionMultiplier0) / 1e18;\n\n    } else {\n      (uint reserveA, uint reserveB) = tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0);\n      amountIn = amountIn.mul(FEE_DENOMINATOR.sub(feePercent));\n      return (amountIn.mul(reserveB)) / (reserveA.mul(FEE_DENOMINATOR).add(amountIn));\n    }\n  }\n\n  // force balances to match reserves\n  function skim(address to) external lock {\n    address _token0 = token0;\n    // gas savings\n    address _token1 = token1;\n    // gas savings\n    _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0));\n    _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1));\n    emit Skim();\n  }\n\n  // force reserves to match balances\n  function sync() external lock {\n    uint token0Balance = IERC20(token0).balanceOf(address(this));\n    uint token1Balance = IERC20(token1).balanceOf(address(this));\n    require(token0Balance != 0 && token1Balance != 0, \"eZKaliburPair: liquidity ratio not initialized\");\n    _update(token0Balance, token1Balance);\n  }\n\n  /**\n  * @dev Allow to recover token sent here by mistake\n  *\n  * Can only be called by factory's owner\n  */\n  function drainWrongToken(address token, address to) external lock {\n    require(msg.sender == IFactory(factory).owner(), \"eZKaliburPair: only factory's owner\");\n    require(token != token0 && token != token1, \"eZKaliburPair: invalid token\");\n    _safeTransfer(token, to, IERC20(token).balanceOf(address(this)));\n    emit DrainWrongToken(token, to);\n  }\n}\n"
			},
			"contracts/interfaces/IUniswapV2Callee.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Callee {\n    function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data) external;\n}\n"
			},
			"contracts/interfaces/IFactory.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IFactory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\n\n    function owner() external view returns (address);\n    function feePercentOwner() external view returns (address);\n    function setStableOwner() external view returns (address);\n    function feeTo() external view returns (address);\n\n    function ownerFeeShare() external view returns (uint256);\n    function referrersFeeShare(address) external view returns (uint256);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint256) external view returns (address pair);\n    function allPairsLength() external view returns (uint256);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function feeInfo() external view returns (uint _ownerFeeShare, address _feeTo);\n}\n"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function decimals() external view returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n}\n"
			},
			"contracts/libraries/Math.sol": {
				"content": "pragma solidity =0.5.16;\n\n// a library for performing various math operations\n\nlibrary Math {\n    function min(uint x, uint y) internal pure returns (uint z) {\n        z = x < y ? x : y;\n    }\n\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\n    function sqrt(uint y) internal pure returns (uint z) {\n        if (y > 3) {\n            z = y;\n            uint x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n}\n"
			},
			"contracts/UniswapV2ERC20.sol": {
				"content": "pragma solidity =0.5.16;\n\nimport './interfaces/IUniswapV2ERC20.sol';\nimport './libraries/SafeMath.sol';\n\ncontract UniswapV2ERC20 is IUniswapV2ERC20 {\n    using SafeMath for uint;\n\n    string public constant name = 'eZKalibur LP';\n    string public constant symbol = 'eZK-LP';\n    uint8 public constant decimals = 18;\n    uint  public totalSupply;\n    mapping(address => uint) public balanceOf;\n    mapping(address => mapping(address => uint)) public allowance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n    mapping(address => uint) public nonces;\n\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    constructor() public {\n        uint chainId;\n        assembly {\n            chainId := chainid\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\n                keccak256(bytes(name)),\n                keccak256(bytes('1')),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    function _mint(address to, uint value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function _burn(address from, uint value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(address owner, address spender, uint value) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(address from, address to, uint value) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint value) external returns (bool) {\n        if (allowance[from][msg.sender] != uint(-1)) {\n            uint remaining = allowance[from][msg.sender].sub(value);\n            allowance[from][msg.sender] = remaining;\n            emit Approval(from, msg.sender, remaining);\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\n        require(deadline >= block.timestamp, 'UniswapV2: EXPIRED');\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                '\\x19\\x01',\n                DOMAIN_SEPARATOR,\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE');\n        _approve(owner, spender, value);\n    }\n}\n"
			},
			"contracts/interfaces/IPair.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IPair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint16 token0feePercent, uint16 token1FeePercent);\n    function getAmountOut(uint amountIn, address tokenIn) external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function setFeePercent(uint16 token0FeePercent, uint16 token1FeePercent) external;\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "pragma solidity >=0.5.16;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x, 'ds-math-add-overflow');\n    }\n\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\n    }\n\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\n    }\n}\n"
			},
			"contracts/interfaces/IUniswapV2ERC20.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2ERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/UniswapV2ERC20.sol": {
				"UniswapV2ERC20": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/UniswapV2ERC20.sol\":105:3532  contract UniswapV2ERC20 is IUniswapV2ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/UniswapV2ERC20.sol\":921:1365  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/UniswapV2ERC20.sol\":921:1365  constructor() public {... */\n  pop\n    /* \"contracts/UniswapV2ERC20.sol\":952:964  uint chainId */\n  0x00\n    /* \"contracts/UniswapV2ERC20.sol\":1008:1015  chainid */\n  chainid\n    /* \"contracts/UniswapV2ERC20.sol\":997:1015  chainId := chainid */\n  swap1\n  pop\n    /* \"contracts/UniswapV2ERC20.sol\":1104:1199  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  mload(0x40)\n  dup1\n  dup1\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  0x52\n  swap2\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"contracts/UniswapV2ERC20.sol\":1233:1237  name */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x655a4b616c69627572204c500000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/UniswapV2ERC20.sol\":1217:1239  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/UniswapV2ERC20.sol\":1267:1277  bytes('1') */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/UniswapV2ERC20.sol\":1257:1278  keccak256(bytes('1')) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/UniswapV2ERC20.sol\":1296:1303  chainId */\n  dup4\n    /* \"contracts/UniswapV2ERC20.sol\":1329:1333  this */\n  address\n    /* \"contracts/UniswapV2ERC20.sol\":1076:1348  abi.encode(... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"contracts/UniswapV2ERC20.sol\":1076:1348  abi.encode(... */\n  swap1\n  0x40\n  mstore\n    /* \"contracts/UniswapV2ERC20.sol\":1053:1358  keccak256(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/UniswapV2ERC20.sol\":1034:1050  DOMAIN_SEPARATOR */\n  0x03\n    /* \"contracts/UniswapV2ERC20.sol\":1034:1358  DOMAIN_SEPARATOR = keccak256(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/UniswapV2ERC20.sol\":921:1365  constructor() public {... */\n  pop\n    /* \"contracts/UniswapV2ERC20.sol\":105:3532  contract UniswapV2ERC20 is IUniswapV2ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"contracts/UniswapV2ERC20.sol\":105:3532  contract UniswapV2ERC20 is IUniswapV2ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/UniswapV2ERC20.sol\":105:3532  contract UniswapV2ERC20 is IUniswapV2ERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/UniswapV2ERC20.sol\":184:228  string public constant name = 'eZKalibur LP' */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":184:228  string public constant name = 'eZKalibur LP' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":2179:2323  function approve(address spender, uint value) external returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"contracts/UniswapV2ERC20.sol\":2179:2323  function approve(address spender, uint value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":321:345  uint  public totalSupply */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":2471:2862  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"contracts/UniswapV2ERC20.sol\":2471:2862  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":607:715  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":280:315  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":466:497  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":351:392  mapping(address => uint) public balanceOf */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"contracts/UniswapV2ERC20.sol\":351:392  mapping(address => uint) public balanceOf */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":721:759  mapping(address => uint) public nonces */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"contracts/UniswapV2ERC20.sol\":721:759  mapping(address => uint) public nonces */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":234:274  string public constant symbol = 'eZK-LP' */\n    tag_12:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_46:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_46)\n    tag_48:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":234:274  string public constant symbol = 'eZK-LP' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_49\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_49:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":2329:2465  function transfer(address to, uint value) external returns (bool) {... */\n    tag_13:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"contracts/UniswapV2ERC20.sol\":2329:2465  function transfer(address to, uint value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":2868:3530  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n        /* \"contracts/UniswapV2ERC20.sol\":2868:3530  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/UniswapV2ERC20.sol\":398:459  mapping(address => mapping(address => uint)) public allowance */\n    tag_15:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"contracts/UniswapV2ERC20.sol\":398:459  mapping(address => mapping(address => uint)) public allowance */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":184:228  string public constant name = 'eZKalibur LP' */\n    tag_19:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      0x655a4b616c69627572204c500000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":2179:2323  function approve(address spender, uint value) external returns (bool) {... */\n    tag_26:\n        /* \"contracts/UniswapV2ERC20.sol\":2243:2247  bool */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2259:2295  _approve(msg.sender, spender, value) */\n      tag_60\n        /* \"contracts/UniswapV2ERC20.sol\":2268:2278  msg.sender */\n      caller\n        /* \"contracts/UniswapV2ERC20.sol\":2280:2287  spender */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2289:2294  value */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2259:2267  _approve */\n      tag_61\n        /* \"contracts/UniswapV2ERC20.sol\":2259:2295  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/UniswapV2ERC20.sol\":2312:2316  true */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":2305:2316  return true */\n      swap1\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":2179:2323  function approve(address spender, uint value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":321:345  uint  public totalSupply */\n    tag_28:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":2471:2862  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n    tag_31:\n        /* \"contracts/UniswapV2ERC20.sol\":2549:2553  bool */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2605:2607  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/UniswapV2ERC20.sol\":2569:2578  allowance */\n      0x02\n        /* \"contracts/UniswapV2ERC20.sol\":2569:2584  allowance[from] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2579:2583  from */\n      dup7\n        /* \"contracts/UniswapV2ERC20.sol\":2569:2584  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":2569:2596  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2585:2595  msg.sender */\n      caller\n        /* \"contracts/UniswapV2ERC20.sol\":2569:2596  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/UniswapV2ERC20.sol\":2569:2608  allowance[from][msg.sender] != uint(-1) */\n      eq\n        /* \"contracts/UniswapV2ERC20.sol\":2565:2799  if (allowance[from][msg.sender] != uint(-1)) {... */\n      tag_63\n      jumpi\n        /* \"contracts/UniswapV2ERC20.sol\":2624:2638  uint remaining */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2679  allowance[from][msg.sender].sub(value) */\n      tag_64\n        /* \"contracts/UniswapV2ERC20.sol\":2673:2678  value */\n      dup4\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2650  allowance */\n      0x02\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2656  allowance[from] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2651:2655  from */\n      dup9\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2656  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2668  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2657:2667  msg.sender */\n      caller\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2668  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2672  allowance[from][msg.sender].sub */\n      tag_65\n      swap1\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2679  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"contracts/UniswapV2ERC20.sol\":2624:2679  uint remaining = allowance[from][msg.sender].sub(value) */\n      swap1\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":2723:2732  remaining */\n      dup1\n        /* \"contracts/UniswapV2ERC20.sol\":2693:2702  allowance */\n      0x02\n        /* \"contracts/UniswapV2ERC20.sol\":2693:2708  allowance[from] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2703:2707  from */\n      dup8\n        /* \"contracts/UniswapV2ERC20.sol\":2693:2708  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":2693:2720  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2709:2719  msg.sender */\n      caller\n        /* \"contracts/UniswapV2ERC20.sol\":2693:2720  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":2693:2732  allowance[from][msg.sender] = remaining */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":2766:2776  msg.sender */\n      caller\n        /* \"contracts/UniswapV2ERC20.sol\":2751:2788  Approval(from, msg.sender, remaining) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2ERC20.sol\":2760:2764  from */\n      dup6\n        /* \"contracts/UniswapV2ERC20.sol\":2751:2788  Approval(from, msg.sender, remaining) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/UniswapV2ERC20.sol\":2778:2787  remaining */\n      dup4\n        /* \"contracts/UniswapV2ERC20.sol\":2751:2788  Approval(from, msg.sender, remaining) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/UniswapV2ERC20.sol\":2565:2799  if (allowance[from][msg.sender] != uint(-1)) {... */\n      pop\n    tag_63:\n        /* \"contracts/UniswapV2ERC20.sol\":2808:2834  _transfer(from, to, value) */\n      tag_66\n        /* \"contracts/UniswapV2ERC20.sol\":2818:2822  from */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2824:2826  to */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2828:2833  value */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2808:2817  _transfer */\n      tag_67\n        /* \"contracts/UniswapV2ERC20.sol\":2808:2834  _transfer(from, to, value) */\n      jump\t// in\n    tag_66:\n        /* \"contracts/UniswapV2ERC20.sol\":2851:2855  true */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":2844:2855  return true */\n      swap1\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":2471:2862  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":607:715  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_33:\n        /* \"contracts/UniswapV2ERC20.sol\":649:715  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/UniswapV2ERC20.sol\":607:715  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":280:315  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"contracts/UniswapV2ERC20.sol\":313:315  18 */\n      0x12\n        /* \"contracts/UniswapV2ERC20.sol\":280:315  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":466:497  bytes32 public DOMAIN_SEPARATOR */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":351:392  mapping(address => uint) public balanceOf */\n    tag_40:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":721:759  mapping(address => uint) public nonces */\n    tag_43:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":234:274  string public constant symbol = 'eZK-LP' */\n    tag_45:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x655a4b2d4c500000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":2329:2465  function transfer(address to, uint value) external returns (bool) {... */\n    tag_52:\n        /* \"contracts/UniswapV2ERC20.sol\":2389:2393  bool */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2405:2437  _transfer(msg.sender, to, value) */\n      tag_69\n        /* \"contracts/UniswapV2ERC20.sol\":2415:2425  msg.sender */\n      caller\n        /* \"contracts/UniswapV2ERC20.sol\":2427:2429  to */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2431:2436  value */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2405:2414  _transfer */\n      tag_67\n        /* \"contracts/UniswapV2ERC20.sol\":2405:2437  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_69:\n        /* \"contracts/UniswapV2ERC20.sol\":2454:2458  true */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":2447:2458  return true */\n      swap1\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":2329:2465  function transfer(address to, uint value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":2868:3530  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_55:\n        /* \"contracts/UniswapV2ERC20.sol\":3013:3028  block.timestamp */\n      timestamp\n        /* \"contracts/UniswapV2ERC20.sol\":3001:3009  deadline */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":3001:3028  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/UniswapV2ERC20.sol\":2993:3051  require(deadline >= block.timestamp, 'UniswapV2: EXPIRED') */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e697377617056323a20455850495245440000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"contracts/UniswapV2ERC20.sol\":3061:3075  bytes32 digest */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":3163:3179  DOMAIN_SEPARATOR */\n      sload(0x03)\n        /* \"contracts/UniswapV2ERC20.sol\":649:715  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/UniswapV2ERC20.sol\":3218:3233  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"contracts/UniswapV2ERC20.sol\":3235:3240  owner */\n      dup10\n        /* \"contracts/UniswapV2ERC20.sol\":3242:3249  spender */\n      dup10\n        /* \"contracts/UniswapV2ERC20.sol\":3251:3256  value */\n      dup10\n        /* \"contracts/UniswapV2ERC20.sol\":3258:3264  nonces */\n      0x04\n        /* \"contracts/UniswapV2ERC20.sol\":3258:3271  nonces[owner] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":3265:3270  owner */\n      dup15\n        /* \"contracts/UniswapV2ERC20.sol\":3258:3271  nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":3258:3273  nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/UniswapV2ERC20.sol\":3275:3283  deadline */\n      dup11\n        /* \"contracts/UniswapV2ERC20.sol\":3207:3284  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/UniswapV2ERC20.sol\":3207:3284  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/UniswapV2ERC20.sol\":3197:3285  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":3101:3299  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/UniswapV2ERC20.sol\":3101:3299  abi.encodePacked(... */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/UniswapV2ERC20.sol\":3078:3309  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":3061:3309  bytes32 digest = keccak256(... */\n      swap1\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":3319:3343  address recoveredAddress */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":3346:3372  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":3356:3362  digest */\n      dup3\n        /* \"contracts/UniswapV2ERC20.sol\":3364:3365  v */\n      dup7\n        /* \"contracts/UniswapV2ERC20.sol\":3367:3368  r */\n      dup7\n        /* \"contracts/UniswapV2ERC20.sol\":3370:3371  s */\n      dup7\n        /* \"contracts/UniswapV2ERC20.sol\":3346:3372  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n        /* \"contracts/UniswapV2ERC20.sol\":3346:3372  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/UniswapV2ERC20.sol\":3319:3372  address recoveredAddress = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":3418:3419  0 */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":3390:3420  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2ERC20.sol\":3390:3406  recoveredAddress */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":3390:3420  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/UniswapV2ERC20.sol\":3390:3449  recoveredAddress != address(0) && recoveredAddress == owner */\n      dup1\n      iszero\n      tag_73\n      jumpi\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":3444:3449  owner */\n      dup9\n        /* \"contracts/UniswapV2ERC20.sol\":3424:3449  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2ERC20.sol\":3424:3440  recoveredAddress */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":3424:3449  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/UniswapV2ERC20.sol\":3390:3449  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_73:\n        /* \"contracts/UniswapV2ERC20.sol\":3382:3482  require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE') */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e697377617056323a20494e56414c49445f5349474e415455524500000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"contracts/UniswapV2ERC20.sol\":3492:3523  _approve(owner, spender, value) */\n      tag_75\n        /* \"contracts/UniswapV2ERC20.sol\":3501:3506  owner */\n      dup10\n        /* \"contracts/UniswapV2ERC20.sol\":3508:3515  spender */\n      dup10\n        /* \"contracts/UniswapV2ERC20.sol\":3517:3522  value */\n      dup10\n        /* \"contracts/UniswapV2ERC20.sol\":3492:3500  _approve */\n      tag_61\n        /* \"contracts/UniswapV2ERC20.sol\":3492:3523  _approve(owner, spender, value) */\n      jump\t// in\n    tag_75:\n        /* \"contracts/UniswapV2ERC20.sol\":2868:3530  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":398:459  mapping(address => mapping(address => uint)) public allowance */\n    tag_58:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":1785:1951  function _approve(address owner, address spender, uint value) private {... */\n    tag_61:\n        /* \"contracts/UniswapV2ERC20.sol\":1893:1898  value */\n      dup1\n        /* \"contracts/UniswapV2ERC20.sol\":1865:1874  allowance */\n      0x02\n        /* \"contracts/UniswapV2ERC20.sol\":1865:1881  allowance[owner] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":1875:1880  owner */\n      dup6\n        /* \"contracts/UniswapV2ERC20.sol\":1865:1881  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":1865:1890  allowance[owner][spender] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":1882:1889  spender */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":1865:1890  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":1865:1898  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":1929:1936  spender */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":1913:1944  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2ERC20.sol\":1922:1927  owner */\n      dup4\n        /* \"contracts/UniswapV2ERC20.sol\":1913:1944  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/UniswapV2ERC20.sol\":1938:1943  value */\n      dup4\n        /* \"contracts/UniswapV2ERC20.sol\":1913:1944  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/UniswapV2ERC20.sol\":1785:1951  function _approve(address owner, address spender, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":288:415  function sub(uint x, uint y) internal pure returns (uint z) {... */\n    tag_65:\n        /* \"contracts/libraries/SafeMath.sol\":340:346  uint z */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":381:382  x */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":375:376  y */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":371:372  x */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":371:376  x - y */\n      sub\n        /* \"contracts/libraries/SafeMath.sol\":367:376  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":366:382  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":358:408  require((z = x - y) <= x, 'ds-math-sub-underflow') */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d7375622d756e646572666c6f770000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/libraries/SafeMath.sol\":288:415  function sub(uint x, uint y) internal pure returns (uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":1957:2173  function _transfer(address from, address to, uint value) private {... */\n    tag_67:\n        /* \"contracts/UniswapV2ERC20.sol\":2050:2076  balanceOf[from].sub(value) */\n      tag_80\n        /* \"contracts/UniswapV2ERC20.sol\":2070:2075  value */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":2050:2059  balanceOf */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":2050:2065  balanceOf[from] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2060:2064  from */\n      dup7\n        /* \"contracts/UniswapV2ERC20.sol\":2050:2065  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/UniswapV2ERC20.sol\":2050:2069  balanceOf[from].sub */\n      tag_65\n      swap1\n        /* \"contracts/UniswapV2ERC20.sol\":2050:2076  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_80:\n        /* \"contracts/UniswapV2ERC20.sol\":2032:2041  balanceOf */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":2032:2047  balanceOf[from] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2042:2046  from */\n      dup6\n        /* \"contracts/UniswapV2ERC20.sol\":2032:2047  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":2032:2076  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":2102:2126  balanceOf[to].add(value) */\n      tag_81\n        /* \"contracts/UniswapV2ERC20.sol\":2120:2125  value */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":2102:2111  balanceOf */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":2102:2115  balanceOf[to] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2112:2114  to */\n      dup6\n        /* \"contracts/UniswapV2ERC20.sol\":2102:2115  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/UniswapV2ERC20.sol\":2102:2119  balanceOf[to].add */\n      tag_82\n      swap1\n        /* \"contracts/UniswapV2ERC20.sol\":2102:2126  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"contracts/UniswapV2ERC20.sol\":2086:2095  balanceOf */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":2086:2099  balanceOf[to] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2096:2098  to */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2086:2099  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":2086:2126  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":2156:2158  to */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":2141:2166  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2ERC20.sol\":2150:2154  from */\n      dup4\n        /* \"contracts/UniswapV2ERC20.sol\":2141:2166  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/UniswapV2ERC20.sol\":2160:2165  value */\n      dup4\n        /* \"contracts/UniswapV2ERC20.sol\":2141:2166  Transfer(from, to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/UniswapV2ERC20.sol\":1957:2173  function _transfer(address from, address to, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":156:282  function add(uint x, uint y) internal pure returns (uint z) {... */\n    tag_82:\n        /* \"contracts/libraries/SafeMath.sol\":208:214  uint z */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":249:250  x */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":243:244  y */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":239:240  x */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":239:244  x + y */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":235:244  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":234:250  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":226:275  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"contracts/libraries/SafeMath.sol\":156:282  function add(uint x, uint y) internal pure returns (uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a7231582008bc3f24cad86ba581624288cb5490439a93308552dba5d16976cac262c351f464736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600046905060405180806110fb60529139605201905060405180910390206040518060400160405280600c81526020017f655a4b616c69627572204c500000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001955050505050506040516020818303038152906040528051906020012060038190555050610fcc8061012f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b6102696107f7565b6040518082815260200191505060405180910390f35b61028761081e565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab610823565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610829565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610841565b6040518082815260200191505060405180910390f35b610379610859565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610892565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506108a9565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bed565b6040518082815260200191505060405180910390f35b6040518060400160405280600c81526020017f655a4b616c69627572204c50000000000000000000000000000000000000000081525081565b60006105b1338484610c12565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146107e15760006106f783600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cfd90919063ffffffff16565b905080600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505b6107ec848484610d80565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600681526020017f655a4b2d4c50000000000000000000000000000000000000000000000000000081525081565b600061089f338484610d80565b6001905092915050565b4284101561091f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f556e697377617056323a2045585049524544000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610af1573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610b6557508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610bd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f556e697377617056323a20494e56414c49445f5349474e41545552450000000081525060200191505060405180910390fd5b610be2898989610c12565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d7a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610dd281600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cfd90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e6781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1490919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a7231582008bc3f24cad86ba581624288cb5490439a93308552dba5d16976cac262c351f464736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 CHAINID SWAP1 POP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x10FB PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x655A4B616C69627572204C500000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0xFCC DUP1 PUSH2 0x12F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x892 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x655A4B616C69627572204C500000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x7E1 JUMPI PUSH1 0x0 PUSH2 0x6F7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x7EC DUP5 DUP5 DUP5 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x655A4B2D4C500000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89F CALLER DUP5 DUP5 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20455850495245440000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xB65 JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xBD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE2 DUP10 DUP10 DUP10 PUSH2 0xC12 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDD2 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF14 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ADDMOD 0xBC EXTCODEHASH 0x24 0xCA 0xD8 PUSH12 0xA581624288CB5490439A9330 DUP6 MSTORE 0xDB 0xA5 0xD1 PUSH10 0x76CAC262C351F464736F PUSH13 0x63430005100032454950373132 DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "105:3427:0:-;;;921:444;8:9:-1;5:2;;;30:1;27;20:12;5:2;921:444:0;952:12;1008:7;997:18;;1104:95;;;;;;;;;;;;;;;;;;;1233:4;;;;;;;;;;;;;;;;;1217:22;;;;;;1267:10;;;;;;;;;;;;;;;;;1257:21;;;;;;1296:7;1329:4;1076:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1076:272:0;;;1053:305;;;;;;1034:16;:324;;;;921:444;105:3427;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b6102696107f7565b6040518082815260200191505060405180910390f35b61028761081e565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab610823565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610829565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610841565b6040518082815260200191505060405180910390f35b610379610859565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610892565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506108a9565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bed565b6040518082815260200191505060405180910390f35b6040518060400160405280600c81526020017f655a4b616c69627572204c50000000000000000000000000000000000000000081525081565b60006105b1338484610c12565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146107e15760006106f783600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cfd90919063ffffffff16565b905080600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505b6107ec848484610d80565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600681526020017f655a4b2d4c50000000000000000000000000000000000000000000000000000081525081565b600061089f338484610d80565b6001905092915050565b4284101561091f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f556e697377617056323a2045585049524544000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610af1573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610b6557508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610bd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f556e697377617056323a20494e56414c49445f5349474e41545552450000000081525060200191505060405180910390fd5b610be2898989610c12565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d7a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610dd281600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cfd90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e6781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1490919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a7231582008bc3f24cad86ba581624288cb5490439a93308552dba5d16976cac262c351f464736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x892 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x655A4B616C69627572204C500000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x7E1 JUMPI PUSH1 0x0 PUSH2 0x6F7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x7EC DUP5 DUP5 DUP5 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x655A4B2D4C500000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89F CALLER DUP5 DUP5 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20455850495245440000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xB65 JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xBD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE2 DUP10 DUP10 DUP10 PUSH2 0xC12 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDD2 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF14 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ADDMOD 0xBC EXTCODEHASH 0x24 0xCA 0xD8 PUSH12 0xA581624288CB5490439A9330 DUP6 MSTORE 0xDB 0xA5 0xD1 PUSH10 0x76CAC262C351F464736F PUSH13 0x63430005100032000000000000 ",
							"sourceMap": "105:3427:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;105:3427:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;184:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;184:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2179:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2179:144:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;321:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2471:391;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2471:391:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;607:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;280:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;466:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;351:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;351:41:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;721:38;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;721:38:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;234:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;234:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2329:136;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2329:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2868:662;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2868:662:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;398:61;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;398:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;184:44;;;;;;;;;;;;;;;;;;;:::o;2179:144::-;2243:4;2259:36;2268:10;2280:7;2289:5;2259:8;:36::i;:::-;2312:4;2305:11;;2179:144;;;;:::o;321:24::-;;;;:::o;2471:391::-;2549:4;2605:2;2569:9;:15;2579:4;2569:15;;;;;;;;;;;;;;;:27;2585:10;2569:27;;;;;;;;;;;;;;;;:39;2565:234;;2624:14;2641:38;2673:5;2641:9;:15;2651:4;2641:15;;;;;;;;;;;;;;;:27;2657:10;2641:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2624:55;;2723:9;2693;:15;2703:4;2693:15;;;;;;;;;;;;;;;:27;2709:10;2693:27;;;;;;;;;;;;;;;:39;;;;2766:10;2751:37;;2760:4;2751:37;;;2778:9;2751:37;;;;;;;;;;;;;;;;;;2565:234;;2808:26;2818:4;2824:2;2828:5;2808:9;:26::i;:::-;2851:4;2844:11;;2471:391;;;;;:::o;607:108::-;649:66;607:108;;;:::o;280:35::-;313:2;280:35;:::o;466:31::-;;;;:::o;351:41::-;;;;;;;;;;;;;;;;;:::o;721:38::-;;;;;;;;;;;;;;;;;:::o;234:40::-;;;;;;;;;;;;;;;;;;;:::o;2329:136::-;2389:4;2405:32;2415:10;2427:2;2431:5;2405:9;:32::i;:::-;2454:4;2447:11;;2329:136;;;;:::o;2868:662::-;3013:15;3001:8;:27;;2993:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3061:14;3163:16;;649:66;3218:15;;3235:5;3242:7;3251:5;3258:6;:13;3265:5;3258:13;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;3275:8;3207:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3207:77:0;;;3197:88;;;;;;3101:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3101:198:0;;;3078:231;;;;;;3061:248;;3319:24;3346:26;3356:6;3364:1;3367;3370;3346:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3346:26:0;;;;;;;;3319:53;;3418:1;3390:30;;:16;:30;;;;:59;;;;;3444:5;3424:25;;:16;:25;;;3390:59;3382:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3492:31;3501:5;3508:7;3517:5;3492:8;:31::i;:::-;2868:662;;;;;;;;;:::o;398:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1785:166::-;1893:5;1865:9;:16;1875:5;1865:16;;;;;;;;;;;;;;;:25;1882:7;1865:25;;;;;;;;;;;;;;;:33;;;;1929:7;1913:31;;1922:5;1913:31;;;1938:5;1913:31;;;;;;;;;;;;;;;;;;1785:166;;;:::o;288:127:7:-;340:6;381:1;375;371;:5;367:9;;;366:16;;358:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;288:127;;;;:::o;1957:216:0:-;2050:26;2070:5;2050:9;:15;2060:4;2050:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;2032:9;:15;2042:4;2032:15;;;;;;;;;;;;;;;:44;;;;2102:24;2120:5;2102:9;:13;2112:2;2102:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;2086:9;:13;2096:2;2086:13;;;;;;;;;;;;;;;:40;;;;2156:2;2141:25;;2150:4;2141:25;;;2160:5;2141:25;;;;;;;;;;;;;;;;;;1957:216;;;:::o;156:126:7:-;208:6;249:1;243;239;:5;235:9;;;234:16;;226:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;156:126;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "808800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1028",
								"PERMIT_TYPEHASH()": "300",
								"allowance(address,address)": "1355",
								"approve(address,uint256)": "22431",
								"balanceOf(address)": "1214",
								"decimals()": "328",
								"name()": "infinite",
								"nonces(address)": "1236",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1050",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 105,
									"end": 3532,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 105,
									"end": 3532,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 105,
									"end": 3532,
									"name": "MSTORE"
								},
								{
									"begin": 921,
									"end": 1365,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 921,
									"end": 1365,
									"name": "POP"
								},
								{
									"begin": 952,
									"end": 964,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1008,
									"end": 1015,
									"name": "CHAINID"
								},
								{
									"begin": 997,
									"end": 1015,
									"name": "SWAP1"
								},
								{
									"begin": 997,
									"end": 1015,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "MLOAD"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "DUP1"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "DUP1"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "SWAP2"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "CODECOPY"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "MLOAD"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "DUP1"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "SWAP2"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "SUB"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "KECCAK256"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "MLOAD"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "DUP1"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "ADD"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "MSTORE"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "DUP1"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "PUSH",
									"value": "C"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "DUP2"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "MSTORE"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "ADD"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "PUSH",
									"value": "655A4B616C69627572204C500000000000000000000000000000000000000000"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "DUP2"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "MSTORE"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "POP"
								},
								{
									"begin": 1217,
									"end": 1239,
									"name": "DUP1"
								},
								{
									"begin": 1217,
									"end": 1239,
									"name": "MLOAD"
								},
								{
									"begin": 1217,
									"end": 1239,
									"name": "SWAP1"
								},
								{
									"begin": 1217,
									"end": 1239,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1217,
									"end": 1239,
									"name": "ADD"
								},
								{
									"begin": 1217,
									"end": 1239,
									"name": "KECCAK256"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "MLOAD"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "DUP1"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "ADD"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "MSTORE"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "DUP1"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "DUP2"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "MSTORE"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "ADD"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "PUSH",
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "DUP2"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "MSTORE"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "POP"
								},
								{
									"begin": 1257,
									"end": 1278,
									"name": "DUP1"
								},
								{
									"begin": 1257,
									"end": 1278,
									"name": "MLOAD"
								},
								{
									"begin": 1257,
									"end": 1278,
									"name": "SWAP1"
								},
								{
									"begin": 1257,
									"end": 1278,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1257,
									"end": 1278,
									"name": "ADD"
								},
								{
									"begin": 1257,
									"end": 1278,
									"name": "KECCAK256"
								},
								{
									"begin": 1296,
									"end": 1303,
									"name": "DUP4"
								},
								{
									"begin": 1329,
									"end": 1333,
									"name": "ADDRESS"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MLOAD"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "ADD"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP1"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP7"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP2"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MSTORE"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "ADD"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP6"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP2"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MSTORE"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "ADD"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP5"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP2"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MSTORE"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "ADD"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP4"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP2"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MSTORE"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "ADD"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP3"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "AND"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "AND"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP2"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MSTORE"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "ADD"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "SWAP6"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "POP"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "POP"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "POP"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "POP"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "POP"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "POP"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "SWAP1"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MSTORE"
								},
								{
									"begin": 1053,
									"end": 1358,
									"name": "DUP1"
								},
								{
									"begin": 1053,
									"end": 1358,
									"name": "MLOAD"
								},
								{
									"begin": 1053,
									"end": 1358,
									"name": "SWAP1"
								},
								{
									"begin": 1053,
									"end": 1358,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1053,
									"end": 1358,
									"name": "ADD"
								},
								{
									"begin": 1053,
									"end": 1358,
									"name": "KECCAK256"
								},
								{
									"begin": 1034,
									"end": 1050,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1034,
									"end": 1358,
									"name": "DUP2"
								},
								{
									"begin": 1034,
									"end": 1358,
									"name": "SWAP1"
								},
								{
									"begin": 1034,
									"end": 1358,
									"name": "SSTORE"
								},
								{
									"begin": 1034,
									"end": 1358,
									"name": "POP"
								},
								{
									"begin": 921,
									"end": 1365,
									"name": "POP"
								},
								{
									"begin": 105,
									"end": 3532,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 105,
									"end": 3532,
									"name": "DUP1"
								},
								{
									"begin": 105,
									"end": 3532,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 105,
									"end": 3532,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 105,
									"end": 3532,
									"name": "CODECOPY"
								},
								{
									"begin": 105,
									"end": 3532,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 105,
									"end": 3532,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582008bc3f24cad86ba581624288cb5490439a93308552dba5d16976cac262c351f464736f6c63430005100032",
									".code": [
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "MSTORE"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "POP"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "LT"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "SHR"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "GT"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "GT"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "EQ"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "EQ"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "EQ"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "EQ"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMP"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPDEST"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "EQ"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "EQ"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "EQ"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMP"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPDEST"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "EQ"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "EQ"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "EQ"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "EQ"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "EQ"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "EQ"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPI"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "JUMPDEST"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 3532,
											"name": "REVERT"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "JUMPDEST"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "JUMPDEST"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MLOAD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP3"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SUB"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP3"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP4"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MLOAD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MLOAD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP4"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "AND"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ISZERO"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "JUMPI"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP3"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SUB"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MLOAD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP4"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SUB"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "EXP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SUB"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "NOT"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "AND"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "JUMPDEST"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP3"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MLOAD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SUB"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "RETURN"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "JUMPDEST"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP2"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ADD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "AND"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ADD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP3"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP2"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ADD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP3"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP2"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "JUMPDEST"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "MLOAD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP3"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ISZERO"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ISZERO"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ISZERO"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ISZERO"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP2"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "MSTORE"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ADD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP2"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "MLOAD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP2"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SUB"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "RETURN"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "MLOAD"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "DUP1"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "DUP3"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "DUP2"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "MSTORE"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "ADD"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SWAP2"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "MLOAD"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "DUP1"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SWAP2"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SUB"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "RETURN"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "JUMPDEST"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP2"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ADD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "AND"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ADD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP3"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP2"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "AND"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ADD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP3"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP2"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ADD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP3"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP2"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "JUMPDEST"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "MLOAD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP3"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ISZERO"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ISZERO"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ISZERO"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ISZERO"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP2"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "MSTORE"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ADD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP2"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "MLOAD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP2"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SUB"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "RETURN"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "JUMPDEST"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "JUMPDEST"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "MLOAD"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "DUP3"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "DUP2"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "MSTORE"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "ADD"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "SWAP2"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "POP"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "POP"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "MLOAD"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "SWAP2"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "SUB"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "SWAP1"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "RETURN"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "JUMPDEST"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "JUMPDEST"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "MLOAD"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "DUP1"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "DUP3"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "AND"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "AND"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "DUP2"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "MSTORE"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "ADD"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "SWAP2"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "POP"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "POP"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "MLOAD"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "DUP1"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "SWAP2"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "SUB"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "SWAP1"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "RETURN"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "MLOAD"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "DUP3"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "MSTORE"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "ADD"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "SWAP2"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "MLOAD"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "SWAP2"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "SUB"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "SWAP1"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "RETURN"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "JUMPDEST"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP2"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "ADD"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "AND"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "ADD"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP3"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP2"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "POP"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "POP"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "POP"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "JUMPDEST"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "MLOAD"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP3"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP2"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "MSTORE"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "ADD"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP2"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "POP"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "POP"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "MLOAD"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP2"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SUB"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "RETURN"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP2"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "ADD"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "AND"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "ADD"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP3"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP2"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "MLOAD"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP3"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP2"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "MSTORE"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "ADD"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP2"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "MLOAD"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP2"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SUB"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "RETURN"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP4"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP4"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "AND"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ISZERO"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "JUMPI"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP4"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "EXP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "NOT"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "AND"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP3"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "RETURN"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "JUMPDEST"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP2"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ADD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "AND"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ADD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP3"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP2"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ADD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP3"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP2"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "JUMPDEST"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "MLOAD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP3"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ISZERO"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ISZERO"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ISZERO"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ISZERO"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP2"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "MSTORE"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ADD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP2"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "MLOAD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP2"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SUB"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "RETURN"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "JUMPDEST"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "AND"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP3"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "AND"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP3"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP3"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP3"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "AND"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP3"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP3"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP3"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "JUMPDEST"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "STOP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "JUMPDEST"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "ADD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "AND"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "ADD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP3"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "AND"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "ADD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP3"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "JUMPDEST"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "MLOAD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP3"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "MSTORE"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "ADD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "MLOAD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SUB"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "RETURN"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "JUMPDEST"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MLOAD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "655A4B616C69627572204C500000000000000000000000000000000000000000"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "JUMPDEST"
										},
										{
											"begin": 2243,
											"end": 2247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2295,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2268,
											"end": 2278,
											"name": "CALLER"
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "DUP5"
										},
										{
											"begin": 2289,
											"end": 2294,
											"name": "DUP5"
										},
										{
											"begin": 2259,
											"end": 2267,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2259,
											"end": 2295,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2259,
											"end": 2295,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2259,
											"end": 2295,
											"name": "JUMPDEST"
										},
										{
											"begin": 2312,
											"end": 2316,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2305,
											"end": 2316,
											"name": "SWAP1"
										},
										{
											"begin": 2305,
											"end": 2316,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP3"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP2"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SLOAD"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "DUP2"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "JUMPDEST"
										},
										{
											"begin": 2549,
											"end": 2553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2607,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2578,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2583,
											"name": "DUP7"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "AND"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "AND"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "DUP2"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "MSTORE"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "ADD"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "SWAP1"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "DUP2"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "MSTORE"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "ADD"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "KECCAK256"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2595,
											"name": "CALLER"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "AND"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "AND"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "DUP2"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "MSTORE"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "ADD"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "SWAP1"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "DUP2"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "MSTORE"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "ADD"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "KECCAK256"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "SLOAD"
										},
										{
											"begin": 2569,
											"end": 2608,
											"name": "EQ"
										},
										{
											"begin": 2565,
											"end": 2799,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2565,
											"end": 2799,
											"name": "JUMPI"
										},
										{
											"begin": 2624,
											"end": 2638,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2673,
											"end": 2678,
											"name": "DUP4"
										},
										{
											"begin": 2641,
											"end": 2650,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2655,
											"name": "DUP9"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "AND"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "AND"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "DUP2"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "ADD"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "SWAP1"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "DUP2"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "ADD"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "KECCAK256"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2667,
											"name": "CALLER"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "AND"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "AND"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "DUP2"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "ADD"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "SWAP1"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "DUP2"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "ADD"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "KECCAK256"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "SLOAD"
										},
										{
											"begin": 2641,
											"end": 2672,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2641,
											"end": 2672,
											"name": "SWAP1"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "SWAP2"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "SWAP1"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "AND"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "JUMPDEST"
										},
										{
											"begin": 2624,
											"end": 2679,
											"name": "SWAP1"
										},
										{
											"begin": 2624,
											"end": 2679,
											"name": "POP"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP1"
										},
										{
											"begin": 2693,
											"end": 2702,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2707,
											"name": "DUP8"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "AND"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "AND"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "DUP2"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "MSTORE"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "ADD"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "SWAP1"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "DUP2"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "MSTORE"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "ADD"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "KECCAK256"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2719,
											"name": "CALLER"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "AND"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "AND"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "DUP2"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "MSTORE"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "ADD"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "SWAP1"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "DUP2"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "MSTORE"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "ADD"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "KECCAK256"
										},
										{
											"begin": 2693,
											"end": 2732,
											"name": "DUP2"
										},
										{
											"begin": 2693,
											"end": 2732,
											"name": "SWAP1"
										},
										{
											"begin": 2693,
											"end": 2732,
											"name": "SSTORE"
										},
										{
											"begin": 2693,
											"end": 2732,
											"name": "POP"
										},
										{
											"begin": 2766,
											"end": 2776,
											"name": "CALLER"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "AND"
										},
										{
											"begin": 2760,
											"end": 2764,
											"name": "DUP6"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "AND"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2778,
											"end": 2787,
											"name": "DUP4"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "MLOAD"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "DUP1"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "DUP3"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "DUP2"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "MSTORE"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "ADD"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "SWAP2"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "POP"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "POP"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "MLOAD"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "DUP1"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "SWAP2"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "SUB"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "SWAP1"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "LOG3"
										},
										{
											"begin": 2565,
											"end": 2799,
											"name": "POP"
										},
										{
											"begin": 2565,
											"end": 2799,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2565,
											"end": 2799,
											"name": "JUMPDEST"
										},
										{
											"begin": 2808,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2818,
											"end": 2822,
											"name": "DUP5"
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "DUP5"
										},
										{
											"begin": 2828,
											"end": 2833,
											"name": "DUP5"
										},
										{
											"begin": 2808,
											"end": 2817,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2808,
											"end": 2834,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2808,
											"end": 2834,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2808,
											"end": 2834,
											"name": "JUMPDEST"
										},
										{
											"begin": 2851,
											"end": 2855,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2844,
											"end": 2855,
											"name": "SWAP1"
										},
										{
											"begin": 2844,
											"end": 2855,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP4"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP3"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "JUMPDEST"
										},
										{
											"begin": 649,
											"end": 715,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "SHL"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "DUP2"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "JUMPDEST"
										},
										{
											"begin": 313,
											"end": 315,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "DUP2"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "SLOAD"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "JUMPDEST"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "MSTORE"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "MSTORE"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "KECCAK256"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP2"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "POP"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "POP"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SLOAD"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP2"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "MSTORE"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "MSTORE"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "KECCAK256"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP2"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SLOAD"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP2"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "655A4B2D4C500000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "JUMPDEST"
										},
										{
											"begin": 2389,
											"end": 2393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2437,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2415,
											"end": 2425,
											"name": "CALLER"
										},
										{
											"begin": 2427,
											"end": 2429,
											"name": "DUP5"
										},
										{
											"begin": 2431,
											"end": 2436,
											"name": "DUP5"
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2405,
											"end": 2437,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2405,
											"end": 2437,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2405,
											"end": 2437,
											"name": "JUMPDEST"
										},
										{
											"begin": 2454,
											"end": 2458,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2447,
											"end": 2458,
											"name": "SWAP1"
										},
										{
											"begin": 2447,
											"end": 2458,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP3"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP2"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "JUMPDEST"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3001,
											"end": 3009,
											"name": "DUP5"
										},
										{
											"begin": 3001,
											"end": 3028,
											"name": "LT"
										},
										{
											"begin": 3001,
											"end": 3028,
											"name": "ISZERO"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "JUMPI"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "MLOAD"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP2"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "MSTORE"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "ADD"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP1"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP1"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "ADD"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP3"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP2"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "SUB"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP3"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "MSTORE"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP2"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "MSTORE"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "ADD"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP1"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "556E697377617056323A20455850495245440000000000000000000000000000"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP2"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "MSTORE"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "POP"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "ADD"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "SWAP2"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "POP"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "POP"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "MLOAD"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP1"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "SWAP2"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "SUB"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "SWAP1"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "REVERT"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "JUMPDEST"
										},
										{
											"begin": 3061,
											"end": 3075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3179,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3163,
											"end": 3179,
											"name": "SLOAD"
										},
										{
											"begin": 649,
											"end": 715,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3218,
											"end": 3233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3233,
											"name": "SHL"
										},
										{
											"begin": 3235,
											"end": 3240,
											"name": "DUP10"
										},
										{
											"begin": 3242,
											"end": 3249,
											"name": "DUP10"
										},
										{
											"begin": 3251,
											"end": 3256,
											"name": "DUP10"
										},
										{
											"begin": 3258,
											"end": 3264,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3270,
											"name": "DUP15"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "AND"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "AND"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "DUP2"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "MSTORE"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "ADD"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "SWAP1"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "DUP2"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "MSTORE"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "ADD"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "KECCAK256"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "DUP2"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "SLOAD"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "DUP1"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "SWAP3"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "SWAP2"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "SWAP1"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "SWAP2"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "SWAP1"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "POP"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "SSTORE"
										},
										{
											"begin": 3275,
											"end": 3283,
											"name": "DUP11"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MLOAD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP1"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP8"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP2"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP7"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "AND"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "AND"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP2"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP6"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "AND"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "AND"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP2"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP5"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP2"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP4"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP2"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP3"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP2"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "SWAP7"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "SWAP1"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3197,
											"end": 3285,
											"name": "DUP1"
										},
										{
											"begin": 3197,
											"end": 3285,
											"name": "MLOAD"
										},
										{
											"begin": 3197,
											"end": 3285,
											"name": "SWAP1"
										},
										{
											"begin": 3197,
											"end": 3285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3197,
											"end": 3285,
											"name": "ADD"
										},
										{
											"begin": 3197,
											"end": 3285,
											"name": "KECCAK256"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "MLOAD"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "ADD"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "DUP1"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "DUP1"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "DUP2"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "MSTORE"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "POP"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "ADD"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "DUP4"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "DUP2"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "MSTORE"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "ADD"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "DUP3"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "DUP2"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "MSTORE"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "ADD"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "SWAP3"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "POP"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "POP"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "POP"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "SWAP1"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "MSTORE"
										},
										{
											"begin": 3078,
											"end": 3309,
											"name": "DUP1"
										},
										{
											"begin": 3078,
											"end": 3309,
											"name": "MLOAD"
										},
										{
											"begin": 3078,
											"end": 3309,
											"name": "SWAP1"
										},
										{
											"begin": 3078,
											"end": 3309,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3078,
											"end": 3309,
											"name": "ADD"
										},
										{
											"begin": 3078,
											"end": 3309,
											"name": "KECCAK256"
										},
										{
											"begin": 3061,
											"end": 3309,
											"name": "SWAP1"
										},
										{
											"begin": 3061,
											"end": 3309,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3356,
											"end": 3362,
											"name": "DUP3"
										},
										{
											"begin": 3364,
											"end": 3365,
											"name": "DUP7"
										},
										{
											"begin": 3367,
											"end": 3368,
											"name": "DUP7"
										},
										{
											"begin": 3370,
											"end": 3371,
											"name": "DUP7"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP1"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP6"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP5"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "AND"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "AND"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP4"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP3"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "SWAP5"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "SUB"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "SWAP1"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP1"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP5"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "SUB"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "SWAP1"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP6"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "GAS"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "STATICCALL"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "SUB"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 3319,
											"end": 3372,
											"name": "SWAP1"
										},
										{
											"begin": 3319,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3418,
											"end": 3419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3420,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3420,
											"name": "AND"
										},
										{
											"begin": 3390,
											"end": 3406,
											"name": "DUP2"
										},
										{
											"begin": 3390,
											"end": 3420,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3420,
											"name": "AND"
										},
										{
											"begin": 3390,
											"end": 3420,
											"name": "EQ"
										},
										{
											"begin": 3390,
											"end": 3420,
											"name": "ISZERO"
										},
										{
											"begin": 3390,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 3390,
											"end": 3449,
											"name": "ISZERO"
										},
										{
											"begin": 3390,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3390,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 3390,
											"end": 3449,
											"name": "POP"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP9"
										},
										{
											"begin": 3424,
											"end": 3449,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3424,
											"end": 3449,
											"name": "AND"
										},
										{
											"begin": 3424,
											"end": 3440,
											"name": "DUP2"
										},
										{
											"begin": 3424,
											"end": 3449,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3424,
											"end": 3449,
											"name": "AND"
										},
										{
											"begin": 3424,
											"end": 3449,
											"name": "EQ"
										},
										{
											"begin": 3390,
											"end": 3449,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3390,
											"end": 3449,
											"name": "JUMPDEST"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "JUMPI"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "MLOAD"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP2"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "MSTORE"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "ADD"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP1"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP1"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "ADD"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP3"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP2"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "SUB"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP3"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "MSTORE"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP2"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "MSTORE"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "ADD"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP1"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "556E697377617056323A20494E56414C49445F5349474E415455524500000000"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP2"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "MSTORE"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "ADD"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "SWAP2"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "MLOAD"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP1"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "SWAP2"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "SUB"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "SWAP1"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "REVERT"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "JUMPDEST"
										},
										{
											"begin": 3492,
											"end": 3523,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3501,
											"end": 3506,
											"name": "DUP10"
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "DUP10"
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "DUP10"
										},
										{
											"begin": 3492,
											"end": 3500,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3492,
											"end": 3523,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3492,
											"end": 3523,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3492,
											"end": 3523,
											"name": "JUMPDEST"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "JUMPDEST"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "MSTORE"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "MSTORE"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "KECCAK256"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "MSTORE"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "MSTORE"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "KECCAK256"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SLOAD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1785,
											"end": 1951,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1785,
											"end": 1951,
											"name": "JUMPDEST"
										},
										{
											"begin": 1893,
											"end": 1898,
											"name": "DUP1"
										},
										{
											"begin": 1865,
											"end": 1874,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP6"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "AND"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "AND"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "DUP2"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "MSTORE"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "ADD"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "SWAP1"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "DUP2"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "MSTORE"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "ADD"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "KECCAK256"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1889,
											"name": "DUP5"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "AND"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "AND"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "DUP2"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "MSTORE"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "ADD"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "SWAP1"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "DUP2"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "MSTORE"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "ADD"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "KECCAK256"
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "DUP2"
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "SWAP1"
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "SSTORE"
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "POP"
										},
										{
											"begin": 1929,
											"end": 1936,
											"name": "DUP2"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "AND"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "DUP4"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "AND"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1938,
											"end": 1943,
											"name": "DUP4"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "MLOAD"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "DUP1"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "DUP3"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "DUP2"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "MSTORE"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "ADD"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "SWAP2"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "POP"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "POP"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "MLOAD"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "DUP1"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "SWAP2"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "SUB"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "SWAP1"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "LOG3"
										},
										{
											"begin": 1785,
											"end": 1951,
											"name": "POP"
										},
										{
											"begin": 1785,
											"end": 1951,
											"name": "POP"
										},
										{
											"begin": 1785,
											"end": 1951,
											"name": "POP"
										},
										{
											"begin": 1785,
											"end": 1951,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "JUMPDEST"
										},
										{
											"begin": 340,
											"end": 346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 381,
											"end": 382,
											"name": "DUP3"
										},
										{
											"begin": 375,
											"end": 376,
											"name": "DUP3"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "DUP5"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "SUB"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "SWAP2"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "POP"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "DUP2"
										},
										{
											"begin": 366,
											"end": 382,
											"name": "GT"
										},
										{
											"begin": 366,
											"end": 382,
											"name": "ISZERO"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "JUMPI"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MLOAD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP3"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "SUB"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP3"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F770000000000000000000000"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "POP"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "SWAP2"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "POP"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "POP"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MLOAD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "SWAP2"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "SUB"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "SWAP1"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "REVERT"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "SWAP3"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "SWAP2"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "POP"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "POP"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1957,
											"end": 2173,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 1957,
											"end": 2173,
											"name": "JUMPDEST"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2070,
											"end": 2075,
											"name": "DUP2"
										},
										{
											"begin": 2050,
											"end": 2059,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2064,
											"name": "DUP7"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "AND"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "AND"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "DUP2"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "MSTORE"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "ADD"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "SWAP1"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "DUP2"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "MSTORE"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "ADD"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "KECCAK256"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "SLOAD"
										},
										{
											"begin": 2050,
											"end": 2069,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2050,
											"end": 2069,
											"name": "SWAP1"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "SWAP2"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "SWAP1"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "AND"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "JUMPDEST"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "DUP6"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "AND"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "AND"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "DUP2"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "MSTORE"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "ADD"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "DUP2"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "MSTORE"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "ADD"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "KECCAK256"
										},
										{
											"begin": 2032,
											"end": 2076,
											"name": "DUP2"
										},
										{
											"begin": 2032,
											"end": 2076,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2076,
											"name": "SSTORE"
										},
										{
											"begin": 2032,
											"end": 2076,
											"name": "POP"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "DUP2"
										},
										{
											"begin": 2102,
											"end": 2111,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "DUP6"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "AND"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "AND"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "DUP2"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "MSTORE"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "ADD"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "DUP2"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "MSTORE"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "ADD"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "KECCAK256"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "SLOAD"
										},
										{
											"begin": 2102,
											"end": 2119,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2102,
											"end": 2119,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "SWAP2"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "AND"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "JUMPDEST"
										},
										{
											"begin": 2086,
											"end": 2095,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2098,
											"name": "DUP5"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "AND"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "AND"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "DUP2"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "MSTORE"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "ADD"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "SWAP1"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "DUP2"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "MSTORE"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "ADD"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "KECCAK256"
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "DUP2"
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "SWAP1"
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "SSTORE"
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "POP"
										},
										{
											"begin": 2156,
											"end": 2158,
											"name": "DUP2"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "AND"
										},
										{
											"begin": 2150,
											"end": 2154,
											"name": "DUP4"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "AND"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2160,
											"end": 2165,
											"name": "DUP4"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "MLOAD"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "DUP1"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "DUP3"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "DUP2"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "MSTORE"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "ADD"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "SWAP2"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "POP"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "POP"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "MLOAD"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "DUP1"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "SWAP2"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "SUB"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "SWAP1"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "LOG3"
										},
										{
											"begin": 1957,
											"end": 2173,
											"name": "POP"
										},
										{
											"begin": 1957,
											"end": 2173,
											"name": "POP"
										},
										{
											"begin": 1957,
											"end": 2173,
											"name": "POP"
										},
										{
											"begin": 1957,
											"end": 2173,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 249,
											"end": 250,
											"name": "DUP3"
										},
										{
											"begin": 243,
											"end": 244,
											"name": "DUP3"
										},
										{
											"begin": 239,
											"end": 240,
											"name": "DUP5"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "ADD"
										},
										{
											"begin": 235,
											"end": 244,
											"name": "SWAP2"
										},
										{
											"begin": 235,
											"end": 244,
											"name": "POP"
										},
										{
											"begin": 235,
											"end": 244,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 250,
											"name": "LT"
										},
										{
											"begin": 234,
											"end": 250,
											"name": "ISZERO"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "SWAP2"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "SWAP2"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "REVERT"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "JUMPDEST"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "SWAP3"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "SWAP2"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/UniswapV2ERC20.sol\":\"UniswapV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UniswapV2ERC20.sol\":{\"keccak256\":\"0x13a4240b24ff1952f2aee5b6d1cc82cb8ca07b3cfe6c33f6f981f788c26d533a\",\"urls\":[\"bzz-raw://0a9a153a771a9721f70ec3370edcc31a3d121a3073a92f686ce6ca78d8a17938\",\"dweb:/ipfs/QmRMkGcPkf3ekirYEjWWW1XXKsU3qErFGLAn97c2kt97g9\"]},\"contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x9e433765e9ef7b4ff5e406b260b222c47c2aa27d36df756db708064fcb239ae7\",\"urls\":[\"bzz-raw://5b67c24a5e1652b51ad2f37adad2905519f0e05e7c8b2b4d8b3e00b429bb9213\",\"dweb:/ipfs/QmarJq43GabAGGSqtMUb87ACYQt73mSFbXKyFAPDXpbFNM\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x9ea215227e02c4462247124b424db9dc7364f7d5ac0961debf46c16d5861ad21\",\"urls\":[\"bzz-raw://1c02a26140f0789d05f820916aaebb2981ce714b67022f0bb7c635c91454f490\",\"dweb:/ipfs/QmR5BDEdyncBMss8vRgzK6jsGrBRkk4wqgNNHNmzi36k11\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 38,
								"contract": "contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x61db17aebc5d812c7002d15c1da954065e56abe49d64b14c034abe5604d70eb3\",\"urls\":[\"bzz-raw://b006685e753f9120469f10b09c159f222d4cb8b507a6c1f0c14ed50c883ebe66\",\"dweb:/ipfs/QmSyY7iTugbczPwfGK67etiyPULenYGzzRYbt8aabwwkUb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/IFactory.sol": {
				"IFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_ownerFeeShare",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_feeTo",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feePercentOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "ownerFeeShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referrersFeeShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "setStableOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeInfo()": "995b5aae",
							"feePercentOwner()": "4c217715",
							"feeTo()": "017e7e58",
							"getPair(address,address)": "e6a43905",
							"owner()": "8da5cb5b",
							"ownerFeeShare()": "69c8b572",
							"referrersFeeShare(address)": "7183d47c",
							"setFeeTo(address)": "f46901ed",
							"setStableOwner()": "fc39026a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_ownerFeeShare\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feePercentOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerFeeShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrersFeeShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"setStableOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFactory.sol\":\"IFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0x9dc30a29e23d6f856525d3555ba9fa59c69d714d04659494d6b79ed63b81ff9e\",\"urls\":[\"bzz-raw://e63be599e1ac42dff55d4e974b9e58f99189af3002721482e36bb4edddb2de9e\",\"dweb:/ipfs/QmPfJvQBF6qS5E5SwUapLKinCHdLASoeDmDX2wdkKFtd1X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/IPair.sol": {
				"IPair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint16",
									"name": "token0feePercent",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "token1FeePercent",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint16",
									"name": "token0FeePercent",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "token1FeePercent",
									"type": "uint16"
								}
							],
							"name": "setFeePercent",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getAmountOut(uint256,address)": "f140a35a",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"setFeePercent(uint16,uint16)": "48e5d260",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"swap(uint256,uint256,address,bytes,address)": "6e1fdd7f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint16\",\"name\":\"token0feePercent\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"token1FeePercent\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"token0FeePercent\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"token1FeePercent\",\"type\":\"uint16\"}],\"name\":\"setFeePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPair.sol\":\"IPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPair.sol\":{\"keccak256\":\"0x58a590f3255843597ae481db1e095656b314e7a69e041152a26eb5d982e85523\",\"urls\":[\"bzz-raw://0c8156cd523ad57d02919ef243ab2f1746617e510c1e7543bf5970eac57b63e6\",\"dweb:/ipfs/QmadYSF7CE1XsmHJxdNPTjTwPnj3G61VmypeLeJEjmNBqk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/IUniswapV2Callee.sol": {
				"IUniswapV2Callee": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV2Call",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV2Call(address,uint256,uint256,bytes)": "10d1e85c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV2Call\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV2Callee.sol\":\"IUniswapV2Callee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV2Callee.sol\":{\"keccak256\":\"0xdb17a1fb73e261e736ae8862be2d9a32964fc4b3741f48980f5cdc9d92b99a96\",\"urls\":[\"bzz-raw://468dab23a95d9d9b7d6ce74008d45eef3de2f137ede604e6be6c5e7d0121c5e9\",\"dweb:/ipfs/QmcXwjTfp6tCRgf1KsNQyUAtrqKhiaN6fbaHVGr22eficP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/IUniswapV2ERC20.sol": {
				"IUniswapV2ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV2ERC20.sol\":\"IUniswapV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x9e433765e9ef7b4ff5e406b260b222c47c2aa27d36df756db708064fcb239ae7\",\"urls\":[\"bzz-raw://5b67c24a5e1652b51ad2f37adad2905519f0e05e7c8b2b4d8b3e00b429bb9213\",\"dweb:/ipfs/QmarJq43GabAGGSqtMUb87ACYQt73mSFbXKyFAPDXpbFNM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/libraries/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/Math.sol\":79:601  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/Math.sol\":79:601  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582049d556589f162ffd25e0221a1695f2b2d48f35639a0929f8f2a351aa0b55ed0164736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582049d556589f162ffd25e0221a1695f2b2d48f35639a0929f8f2a351aa0b55ed0164736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x49 0xD5 JUMP PC SWAP16 AND 0x2F REVERT 0x25 0xE0 0x22 BYTE AND SWAP6 CALLCODE 0xB2 0xD4 DUP16 CALLDATALOAD PUSH4 0x9A0929F8 CALLCODE LOG3 MLOAD 0xAA SIGNEXTEND SSTORE 0xED ADD PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "79:522:6:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582049d556589f162ffd25e0221a1695f2b2d48f35639a0929f8f2a351aa0b55ed0164736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x49 0xD5 JUMP PC SWAP16 AND 0x2F REVERT 0x25 0xE0 0x22 BYTE AND SWAP6 CALLCODE 0xB2 0xD4 DUP16 CALLDATALOAD PUSH4 0x9A0929F8 CALLCODE LOG3 MLOAD 0xAA SIGNEXTEND SSTORE 0xED ADD PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "79:522:6:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"min(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 79,
									"end": 601,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 79,
									"end": 601,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582049d556589f162ffd25e0221a1695f2b2d48f35639a0929f8f2a351aa0b55ed0164736f6c63430005100032",
									".code": [
										{
											"begin": 79,
											"end": 601,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 79,
											"end": 601,
											"name": "ADDRESS"
										},
										{
											"begin": 79,
											"end": 601,
											"name": "EQ"
										},
										{
											"begin": 79,
											"end": 601,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 79,
											"end": 601,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 79,
											"end": 601,
											"name": "MSTORE"
										},
										{
											"begin": 79,
											"end": 601,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 79,
											"end": 601,
											"name": "DUP1"
										},
										{
											"begin": 79,
											"end": 601,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Math.sol\":{\"keccak256\":\"0x05927cb4aa14897bd567607522c18d2d518fa803ade6f870fac244c6f3702a3b\",\"urls\":[\"bzz-raw://b2805464c2d75cbdd726d6bd5c9b8d1f2c8566b606ec769ffa9a194a42248862\",\"dweb:/ipfs/QmWBa9BsCH8gbncvDFXmfMJX1USTHvAREtc8C7nz6miQpw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":133:563  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":133:563  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820a66264352a7ac79bcc9872846db2a93cd24f1691a12d0a638889391afc56c41864736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820a66264352a7ac79bcc9872846db2a93cd24f1691a12d0a638889391afc56c41864736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xA6 PUSH3 0x64352A PUSH27 0xC79BCC9872846DB2A93CD24F1691A12D0A638889391AFC56C41864 PUSH20 0x6F6C634300051000320000000000000000000000 ",
							"sourceMap": "133:430:7:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820a66264352a7ac79bcc9872846db2a93cd24f1691a12d0a638889391afc56c41864736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xA6 PUSH3 0x64352A PUSH27 0xC79BCC9872846DB2A93CD24F1691A12D0A638889391AFC56C41864 PUSH20 0x6F6C634300051000320000000000000000000000 ",
							"sourceMap": "133:430:7:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 133,
									"end": 563,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 563,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820a66264352a7ac79bcc9872846db2a93cd24f1691a12d0a638889391afc56c41864736f6c63430005100032",
									".code": [
										{
											"begin": 133,
											"end": 563,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "ADDRESS"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "EQ"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "MSTORE"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "DUP1"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x9ea215227e02c4462247124b424db9dc7364f7d5ac0961debf46c16d5861ad21\",\"urls\":[\"bzz-raw://1c02a26140f0789d05f820916aaebb2981ce714b67022f0bb7c635c91454f490\",\"dweb:/ipfs/QmR5BDEdyncBMss8vRgzK6jsGrBRkk4wqgNNHNmzi36k11\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/pair.sol": {
				"EZKaliburPair": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "DrainWrongToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "token0FeePercent",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "token1FeePercent",
									"type": "uint16"
								}
							],
							"name": "FeePercentUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "SetPairTypeImmutable",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "prevStableSwap",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "stableSwap",
									"type": "bool"
								}
							],
							"name": "SetStableSwap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Skim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "FEE_DENOMINATOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_FEE_PERCENT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "drainWrongToken",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "_reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "_reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint16",
									"name": "_token0FeePercent",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "_token1FeePercent",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "pairTypeImmutable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "precisionMultiplier0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "precisionMultiplier1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint16",
									"name": "newToken0FeePercent",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "newToken1FeePercent",
									"type": "uint16"
								}
							],
							"name": "setFeePercent",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "setPairTypeImmutable",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "bool",
									"name": "stable",
									"type": "bool"
								},
								{
									"internalType": "uint112",
									"name": "expectedReserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "expectedReserve1",
									"type": "uint112"
								}
							],
							"name": "setStableSwap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stableSwap",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0FeePercent",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1FeePercent",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"drainWrongToken(address,address)": {
								"details": "Allow to recover token sent here by mistake  * Can only be called by factory's owner"
							},
							"setFeePercent(uint16,uint16)": {
								"details": "Updates the swap fees percent  * Can only be called by the factory's feeAmountOwner"
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/pair.sol\":236:17820  contract EZKaliburPair is IPair, UniswapV2ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/pair.sol\":893:896  300 */\n  0x012c\n    /* \"contracts/pair.sol\":860:896  uint16 public token0FeePercent = 300 */\n  0x08\n  exp(0x0100, 0x1c)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/pair.sol\":1008:1011  300 */\n  0x012c\n    /* \"contracts/pair.sol\":975:1011  uint16 public token1FeePercent = 300 */\n  0x08\n  exp(0x0100, 0x1e)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/pair.sol\":1460:1461  1 */\n  0x01\n    /* \"contracts/pair.sol\":1436:1461  uint private unlocked = 1 */\n  0x0d\n  sstore\n    /* \"contracts/pair.sol\":2748:2800  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/pair.sol\":2748:2800  constructor() public {... */\n  pop\n    /* \"contracts/UniswapV2ERC20.sol\":952:964  uint chainId */\n  0x00\n    /* \"contracts/UniswapV2ERC20.sol\":1008:1015  chainid */\n  chainid\n    /* \"contracts/UniswapV2ERC20.sol\":997:1015  chainId := chainid */\n  swap1\n  pop\n    /* \"contracts/UniswapV2ERC20.sol\":1104:1199  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  mload(0x40)\n  dup1\n  dup1\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  0x52\n  swap2\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"contracts/UniswapV2ERC20.sol\":1233:1237  name */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x655a4b616c69627572204c500000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/UniswapV2ERC20.sol\":1217:1239  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/UniswapV2ERC20.sol\":1267:1277  bytes('1') */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/UniswapV2ERC20.sol\":1257:1278  keccak256(bytes('1')) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/UniswapV2ERC20.sol\":1296:1303  chainId */\n  dup4\n    /* \"contracts/UniswapV2ERC20.sol\":1329:1333  this */\n  address\n    /* \"contracts/UniswapV2ERC20.sol\":1076:1348  abi.encode(... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"contracts/UniswapV2ERC20.sol\":1076:1348  abi.encode(... */\n  swap1\n  0x40\n  mstore\n    /* \"contracts/UniswapV2ERC20.sol\":1053:1358  keccak256(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/UniswapV2ERC20.sol\":1034:1050  DOMAIN_SEPARATOR */\n  0x03\n    /* \"contracts/UniswapV2ERC20.sol\":1034:1358  DOMAIN_SEPARATOR = keccak256(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/UniswapV2ERC20.sol\":921:1365  constructor() public {... */\n  pop\n    /* \"contracts/pair.sol\":2785:2795  msg.sender */\n  caller\n    /* \"contracts/pair.sol\":2775:2782  factory */\n  0x05\n  0x00\n    /* \"contracts/pair.sol\":2775:2795  factory = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/pair.sol\":236:17820  contract EZKaliburPair is IPair, UniswapV2ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"contracts/pair.sol\":236:17820  contract EZKaliburPair is IPair, UniswapV2ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/pair.sol\":236:17820  contract EZKaliburPair is IPair, UniswapV2ERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6a627842\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xba9a7a56\n      gt\n      tag_44\n      jumpi\n      dup1\n      0xd73792a9\n      gt\n      tag_45\n      jumpi\n      dup1\n      0xd73792a9\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xf140a35a\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xf39ac11f\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xfff6cae9\n      eq\n      tag_42\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0xba9a7a56\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xbc25cf77\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_37\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x89afcb44\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x89afcb44\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x9e548b7f\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xb6200b07\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x6a627842\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x6e1fdd7f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x7464fc3d\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x3029e5d4\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x3ba17077\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x3ba17077\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x48e5d260\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x62ecec03\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x67d81740\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0x3029e5d4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x3b9f1dc0\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x158ef93e\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x158ef93e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x288e5d02\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2fcd1692\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0x022c0d9f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0902f1ac\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/pair.sol\":9143:9528  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {... */\n    tag_3:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"contracts/pair.sol\":9143:9528  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_52:\n        /* \"contracts/pair.sol\":9143:9528  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_53:\n        /* \"contracts/pair.sol\":9143:9528  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_54:\n        /* \"contracts/pair.sol\":9143:9528  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/UniswapV2ERC20.sol\":184:228  string public constant name = 'eZKalibur LP' */\n    tag_4:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_58:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_58)\n    tag_60:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":184:228  string public constant name = 'eZKalibur LP' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_61:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":1586:1861  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint16 _token0FeePercent, uint16 _token1FeePercent) {... */\n    tag_5:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":2179:2323  function approve(address spender, uint value) external returns (bool) {... */\n    tag_6:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_65:\n        /* \"contracts/UniswapV2ERC20.sol\":2179:2323  function approve(address spender, uint value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":488:509  address public token0 */\n    tag_7:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":539:562  bool public initialized */\n    tag_8:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":321:345  uint  public totalSupply */\n    tag_9:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":2471:2862  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n    tag_10:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_74:\n        /* \"contracts/UniswapV2ERC20.sol\":2471:2862  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":1127:1159  uint public precisionMultiplier1 */\n    tag_11:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":975:1011  uint16 public token1FeePercent = 300 */\n    tag_12:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":3991:4624  function setStableSwap(bool stable, uint112 expectedReserve0, uint112 expectedReserve1) external lock {... */\n    tag_13:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_81\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_81:\n        /* \"contracts/pair.sol\":3991:4624  function setStableSwap(bool stable, uint112 expectedReserve0, uint112 expectedReserve1) external lock {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/UniswapV2ERC20.sol\":607:715  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_14:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":280:315  uint8 public constant decimals = 18 */\n    tag_15:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":466:497  bytes32 public DOMAIN_SEPARATOR */\n    tag_16:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":1091:1123  uint public precisionMultiplier0 */\n    tag_17:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":4628:4905  function setPairTypeImmutable() external lock {... */\n    tag_18:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contracts/pair.sol\":2858:3234  function initialize(address _token0, address _token1) external {... */\n    tag_19:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_94:\n        /* \"contracts/pair.sol\":2858:3234  function initialize(address _token0, address _token1) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contracts/pair.sol\":3347:3987  function setFeePercent(uint16 newToken0FeePercent, uint16 newToken1FeePercent) external lock {... */\n    tag_20:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_97\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_97:\n        /* \"contracts/pair.sol\":3347:3987  function setFeePercent(uint16 newToken0FeePercent, uint16 newToken1FeePercent) external lock {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/pair.sol\":860:896  uint16 public token0FeePercent = 300 */\n    tag_21:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":616:659  uint public constant MAX_FEE_PERCENT = 2000 */\n    tag_22:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":6298:7445  function mint(address to) external lock returns (uint liquidity) {... */\n    tag_23:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_104\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_104:\n        /* \"contracts/pair.sol\":6298:7445  function mint(address to) external lock returns (uint liquidity) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":9633:10034  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {... */\n    tag_24:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_107\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_107:\n        /* \"contracts/pair.sol\":9633:10034  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_108\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_108:\n        /* \"contracts/pair.sol\":9633:10034  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_109:\n        /* \"contracts/pair.sol\":9633:10034  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_110\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_110:\n        /* \"contracts/pair.sol\":9633:10034  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_111\n      jump\t// in\n    tag_106:\n      stop\n        /* \"contracts/UniswapV2ERC20.sol\":351:392  mapping(address => uint) public balanceOf */\n    tag_25:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_113\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_113:\n        /* \"contracts/UniswapV2ERC20.sol\":351:392  mapping(address => uint) public balanceOf */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_114\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":1164:1181  uint public kLast */\n    tag_26:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":721:759  mapping(address => uint) public nonces */\n    tag_27:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_118\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_118:\n        /* \"contracts/UniswapV2ERC20.sol\":721:759  mapping(address => uint) public nonces */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_119\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":7550:8843  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n    tag_28:\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_121\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_121:\n        /* \"contracts/pair.sol\":7550:8843  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_122\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":234:274  string public constant symbol = 'eZK-LP' */\n    tag_29:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_125:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_127\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_125)\n    tag_127:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":234:274  string public constant symbol = 'eZK-LP' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_128:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":1266:1288  bool public stableSwap */\n    tag_30:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":2329:2465  function transfer(address to, uint value) external returns (bool) {... */\n    tag_31:\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_132\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_132:\n        /* \"contracts/UniswapV2ERC20.sol\":2329:2465  function transfer(address to, uint value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_133\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":1339:1368  bool public pairTypeImmutable */\n    tag_32:\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":317:365  uint public constant MINIMUM_LIQUIDITY = 10 ** 3 */\n    tag_33:\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":16659:16995  function skim(address to) external lock {... */\n    tag_34:\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_139\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_139:\n        /* \"contracts/pair.sol\":16659:16995  function skim(address to) external lock {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_140\n      jump\t// in\n    tag_138:\n      stop\n        /* \"contracts/pair.sol\":462:484  address public factory */\n    tag_35:\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":513:534  address public token1 */\n    tag_36:\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":2868:3530  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_37:\n      tag_145\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_146\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_146:\n        /* \"contracts/UniswapV2ERC20.sol\":2868:3530  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_147\n      jump\t// in\n    tag_145:\n      stop\n        /* \"contracts/pair.sol\":567:612  uint public constant FEE_DENOMINATOR = 100000 */\n    tag_38:\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UniswapV2ERC20.sol\":398:459  mapping(address => mapping(address => uint)) public allowance */\n    tag_39:\n      tag_150\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_151\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_151:\n        /* \"contracts/UniswapV2ERC20.sol\":398:459  mapping(address => mapping(address => uint)) public allowance */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_152\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":15259:15517  function getAmountOut(uint amountIn, address tokenIn) external view returns (uint) {... */\n    tag_40:\n      tag_153\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_154\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_154:\n        /* \"contracts/pair.sol\":15259:15517  function getAmountOut(uint amountIn, address tokenIn) external view returns (uint) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_155\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/pair.sol\":17466:17818  function drainWrongToken(address token, address to) external lock {... */\n    tag_41:\n      tag_156\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_157\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_157:\n        /* \"contracts/pair.sol\":17466:17818  function drainWrongToken(address token, address to) external lock {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_158\n      jump\t// in\n    tag_156:\n      stop\n        /* \"contracts/pair.sol\":17037:17352  function sync() external lock {... */\n    tag_42:\n      tag_159\n      tag_160\n      jump\t// in\n    tag_159:\n      stop\n        /* \"contracts/pair.sol\":9143:9528  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {... */\n    tag_55:\n        /* \"contracts/pair.sol\":9239:9267  TokensData memory tokensData */\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"contracts/pair.sol\":9270:9478  TokensData({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/pair.sol\":9297:9303  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":9270:9478  TokensData({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/pair.sol\":9319:9325  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":9270:9478  TokensData({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/pair.sol\":9345:9355  amount0Out */\n      dup8\n        /* \"contracts/pair.sol\":9270:9478  TokensData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/pair.sol\":9375:9385  amount1Out */\n      dup7\n        /* \"contracts/pair.sol\":9270:9478  TokensData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/pair.sol\":9403:9404  0 */\n      0x00\n        /* \"contracts/pair.sol\":9270:9478  TokensData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/pair.sol\":9422:9423  0 */\n      0x00\n        /* \"contracts/pair.sol\":9270:9478  TokensData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/pair.sol\":9446:9447  0 */\n      0x00\n        /* \"contracts/pair.sol\":9270:9478  TokensData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/pair.sol\":9470:9471  0 */\n      0x00\n        /* \"contracts/pair.sol\":9270:9478  TokensData({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/pair.sol\":9239:9478  TokensData memory tokensData = TokensData({... */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":9484:9523  _swap(tokensData, to, data, address(0)) */\n      tag_164\n        /* \"contracts/pair.sol\":9490:9500  tokensData */\n      dup2\n        /* \"contracts/pair.sol\":9502:9504  to */\n      dup6\n        /* \"contracts/pair.sol\":9506:9510  data */\n      dup6\n      dup6\n        /* \"contracts/pair.sol\":9484:9523  _swap(tokensData, to, data, address(0)) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/pair.sol\":9484:9523  _swap(tokensData, to, data, address(0)) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":9520:9521  0 */\n      0x00\n        /* \"contracts/pair.sol\":9484:9489  _swap */\n      tag_165\n        /* \"contracts/pair.sol\":9484:9523  _swap(tokensData, to, data, address(0)) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/pair.sol\":9143:9528  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":184:228  string public constant name = 'eZKalibur LP' */\n    tag_57:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      0x655a4b616c69627572204c500000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/pair.sol\":1586:1861  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint16 _token0FeePercent, uint16 _token1FeePercent) {... */\n    tag_63:\n        /* \"contracts/pair.sol\":1630:1647  uint112 _reserve0 */\n      0x00\n        /* \"contracts/pair.sol\":1649:1666  uint112 _reserve1 */\n      dup1\n        /* \"contracts/pair.sol\":1668:1692  uint16 _token0FeePercent */\n      0x00\n        /* \"contracts/pair.sol\":1694:1718  uint16 _token1FeePercent */\n      dup1\n        /* \"contracts/pair.sol\":1738:1746  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":1726:1746  _reserve0 = reserve0 */\n      swap4\n      pop\n        /* \"contracts/pair.sol\":1764:1772  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":1752:1772  _reserve1 = reserve1 */\n      swap3\n      pop\n        /* \"contracts/pair.sol\":1798:1814  token0FeePercent */\n      0x08\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/pair.sol\":1778:1814  _token0FeePercent = token0FeePercent */\n      swap2\n      pop\n        /* \"contracts/pair.sol\":1840:1856  token1FeePercent */\n      0x08\n      0x1e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/pair.sol\":1820:1856  _token1FeePercent = token1FeePercent */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":1586:1861  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint16 _token0FeePercent, uint16 _token1FeePercent) {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":2179:2323  function approve(address spender, uint value) external returns (bool) {... */\n    tag_66:\n        /* \"contracts/UniswapV2ERC20.sol\":2243:2247  bool */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2259:2295  _approve(msg.sender, spender, value) */\n      tag_168\n        /* \"contracts/UniswapV2ERC20.sol\":2268:2278  msg.sender */\n      caller\n        /* \"contracts/UniswapV2ERC20.sol\":2280:2287  spender */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2289:2294  value */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2259:2267  _approve */\n      tag_169\n        /* \"contracts/UniswapV2ERC20.sol\":2259:2295  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/UniswapV2ERC20.sol\":2312:2316  true */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":2305:2316  return true */\n      swap1\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":2179:2323  function approve(address spender, uint value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":488:509  address public token0 */\n    tag_68:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/pair.sol\":539:562  bool public initialized */\n    tag_70:\n      0x07\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":321:345  uint  public totalSupply */\n    tag_72:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":2471:2862  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n    tag_75:\n        /* \"contracts/UniswapV2ERC20.sol\":2549:2553  bool */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2605:2607  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/UniswapV2ERC20.sol\":2569:2578  allowance */\n      0x02\n        /* \"contracts/UniswapV2ERC20.sol\":2569:2584  allowance[from] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2579:2583  from */\n      dup7\n        /* \"contracts/UniswapV2ERC20.sol\":2569:2584  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":2569:2596  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2585:2595  msg.sender */\n      caller\n        /* \"contracts/UniswapV2ERC20.sol\":2569:2596  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/UniswapV2ERC20.sol\":2569:2608  allowance[from][msg.sender] != uint(-1) */\n      eq\n        /* \"contracts/UniswapV2ERC20.sol\":2565:2799  if (allowance[from][msg.sender] != uint(-1)) {... */\n      tag_171\n      jumpi\n        /* \"contracts/UniswapV2ERC20.sol\":2624:2638  uint remaining */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2679  allowance[from][msg.sender].sub(value) */\n      tag_172\n        /* \"contracts/UniswapV2ERC20.sol\":2673:2678  value */\n      dup4\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2650  allowance */\n      0x02\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2656  allowance[from] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2651:2655  from */\n      dup9\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2656  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2668  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2657:2667  msg.sender */\n      caller\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2668  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2672  allowance[from][msg.sender].sub */\n      tag_173\n      swap1\n        /* \"contracts/UniswapV2ERC20.sol\":2641:2679  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"contracts/UniswapV2ERC20.sol\":2624:2679  uint remaining = allowance[from][msg.sender].sub(value) */\n      swap1\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":2723:2732  remaining */\n      dup1\n        /* \"contracts/UniswapV2ERC20.sol\":2693:2702  allowance */\n      0x02\n        /* \"contracts/UniswapV2ERC20.sol\":2693:2708  allowance[from] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2703:2707  from */\n      dup8\n        /* \"contracts/UniswapV2ERC20.sol\":2693:2708  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":2693:2720  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2709:2719  msg.sender */\n      caller\n        /* \"contracts/UniswapV2ERC20.sol\":2693:2720  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":2693:2732  allowance[from][msg.sender] = remaining */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":2766:2776  msg.sender */\n      caller\n        /* \"contracts/UniswapV2ERC20.sol\":2751:2788  Approval(from, msg.sender, remaining) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2ERC20.sol\":2760:2764  from */\n      dup6\n        /* \"contracts/UniswapV2ERC20.sol\":2751:2788  Approval(from, msg.sender, remaining) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/UniswapV2ERC20.sol\":2778:2787  remaining */\n      dup4\n        /* \"contracts/UniswapV2ERC20.sol\":2751:2788  Approval(from, msg.sender, remaining) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/UniswapV2ERC20.sol\":2565:2799  if (allowance[from][msg.sender] != uint(-1)) {... */\n      pop\n    tag_171:\n        /* \"contracts/UniswapV2ERC20.sol\":2808:2834  _transfer(from, to, value) */\n      tag_174\n        /* \"contracts/UniswapV2ERC20.sol\":2818:2822  from */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2824:2826  to */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2828:2833  value */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2808:2817  _transfer */\n      tag_175\n        /* \"contracts/UniswapV2ERC20.sol\":2808:2834  _transfer(from, to, value) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/UniswapV2ERC20.sol\":2851:2855  true */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":2844:2855  return true */\n      swap1\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":2471:2862  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":1127:1159  uint public precisionMultiplier1 */\n    tag_77:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/pair.sol\":975:1011  uint16 public token1FeePercent = 300 */\n    tag_79:\n      0x08\n      0x1e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/pair.sol\":3991:4624  function setStableSwap(bool stable, uint112 expectedReserve0, uint112 expectedReserve1) external lock {... */\n    tag_82:\n        /* \"contracts/pair.sol\":1507:1508  1 */\n      0x01\n        /* \"contracts/pair.sol\":1495:1503  unlocked */\n      sload(0x0d)\n        /* \"contracts/pair.sol\":1495:1508  unlocked == 1 */\n      eq\n        /* \"contracts/pair.sol\":1487:1534  require(unlocked == 1, 'eZKaliburPair: LOCKED') */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a204c4f434b45440000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/pair.sol\":1551:1552  0 */\n      0x00\n        /* \"contracts/pair.sol\":1540:1548  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1540:1552  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":4130:4137  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":4121:4153  IFactory(factory).setStableOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc39026a\n        /* \"contracts/pair.sol\":4121:4155  IFactory(factory).setStableOwner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_179\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_179:\n        /* \"contracts/pair.sol\":4121:4155  IFactory(factory).setStableOwner() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_180\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_180:\n        /* \"contracts/pair.sol\":4121:4155  IFactory(factory).setStableOwner() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_181\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_181:\n        /* \"contracts/pair.sol\":4121:4155  IFactory(factory).setStableOwner() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":4107:4155  msg.sender == IFactory(factory).setStableOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":4107:4117  msg.sender */\n      caller\n        /* \"contracts/pair.sol\":4107:4155  msg.sender == IFactory(factory).setStableOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/pair.sol\":4099:4204  require(msg.sender == IFactory(factory).setStableOwner(), \"eZKaliburPair: only factory's setStableOwner\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9ff115c8f228bb5656172ece44e1abafba1eb82b0ff5c74955e92e978f9be43b\n      0x2c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/pair.sol\":4219:4236  pairTypeImmutable */\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/pair.sol\":4218:4236  !pairTypeImmutable */\n      iszero\n        /* \"contracts/pair.sol\":4210:4265  require(!pairTypeImmutable, \"eZKaliburPair: immutable\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a20696d6d757461626c650000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"contracts/pair.sol\":4290:4300  stableSwap */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/pair.sol\":4280:4300  stable != stableSwap */\n      iszero\n      iszero\n        /* \"contracts/pair.sol\":4280:4286  stable */\n      dup4\n        /* \"contracts/pair.sol\":4280:4300  stable != stableSwap */\n      iszero\n      iszero\n      eq\n      iszero\n        /* \"contracts/pair.sol\":4272:4329  require(stable != stableSwap, \"eZKaliburPair: no update\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a206e6f207570646174650000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/pair.sol\":4363:4371  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":4343:4371  expectedReserve0 == reserve0 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":4343:4359  expectedReserve0 */\n      dup3\n        /* \"contracts/pair.sol\":4343:4371  expectedReserve0 == reserve0 */\n      0xffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/pair.sol\":4343:4403  expectedReserve0 == reserve0 && expectedReserve1 == reserve1 */\n      dup1\n      iszero\n      tag_185\n      jumpi\n      pop\n        /* \"contracts/pair.sol\":4395:4403  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":4375:4403  expectedReserve1 == reserve1 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":4375:4391  expectedReserve1 */\n      dup2\n        /* \"contracts/pair.sol\":4375:4403  expectedReserve1 == reserve1 */\n      0xffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/pair.sol\":4343:4403  expectedReserve0 == reserve0 && expectedReserve1 == reserve1 */\n    tag_185:\n        /* \"contracts/pair.sol\":4335:4429  require(expectedReserve0 == reserve0 && expectedReserve1 == reserve1, \"eZKaliburPair: failed\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a206661696c65640000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"contracts/pair.sol\":4436:4446  bool feeOn */\n      0x00\n        /* \"contracts/pair.sol\":4449:4477  _mintFee(reserve0, reserve1) */\n      tag_187\n        /* \"contracts/pair.sol\":4458:4466  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":4468:4476  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":4449:4457  _mintFee */\n      tag_188\n        /* \"contracts/pair.sol\":4449:4477  _mintFee(reserve0, reserve1) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/pair.sol\":4436:4477  bool feeOn = _mintFee(reserve0, reserve1) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":4489:4522  SetStableSwap(stableSwap, stable) */\n      0xb6a86710bde53aa7fb1b3856279e2af5b476d53e2dd0902cf17a0911b5a43a8b\n        /* \"contracts/pair.sol\":4503:4513  stableSwap */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/pair.sol\":4515:4521  stable */\n      dup6\n        /* \"contracts/pair.sol\":4489:4522  SetStableSwap(stableSwap, stable) */\n      mload(0x40)\n      dup1\n      dup4\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/pair.sol\":4541:4547  stable */\n      dup4\n        /* \"contracts/pair.sol\":4528:4538  stableSwap */\n      0x0c\n      0x00\n        /* \"contracts/pair.sol\":4528:4547  stableSwap = stable */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":4562:4568  stable */\n      dup4\n        /* \"contracts/pair.sol\":4562:4577  stable && feeOn */\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n        /* \"contracts/pair.sol\":4572:4577  feeOn */\n      dup1\n        /* \"contracts/pair.sol\":4562:4577  stable && feeOn */\n    tag_189:\n        /* \"contracts/pair.sol\":4561:4619  (stable && feeOn) ? _k(uint(reserve0), uint(reserve1)) : 0 */\n      tag_190\n      jumpi\n        /* \"contracts/pair.sol\":4618:4619  0 */\n      0x00\n        /* \"contracts/pair.sol\":4561:4619  (stable && feeOn) ? _k(uint(reserve0), uint(reserve1)) : 0 */\n      jump(tag_191)\n    tag_190:\n        /* \"contracts/pair.sol\":4581:4615  _k(uint(reserve0), uint(reserve1)) */\n      tag_192\n        /* \"contracts/pair.sol\":4589:4597  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":4584:4598  uint(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":4605:4613  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":4600:4614  uint(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":4581:4583  _k */\n      tag_193\n        /* \"contracts/pair.sol\":4581:4615  _k(uint(reserve0), uint(reserve1)) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/pair.sol\":4561:4619  (stable && feeOn) ? _k(uint(reserve0), uint(reserve1)) : 0 */\n    tag_191:\n        /* \"contracts/pair.sol\":4553:4558  kLast */\n      0x0b\n        /* \"contracts/pair.sol\":4553:4619  kLast = (stable && feeOn) ? _k(uint(reserve0), uint(reserve1)) : 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":1558:1559  _ */\n      pop\n        /* \"contracts/pair.sol\":1576:1577  1 */\n      0x01\n        /* \"contracts/pair.sol\":1565:1573  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1565:1577  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":3991:4624  function setStableSwap(bool stable, uint112 expectedReserve0, uint112 expectedReserve1) external lock {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":607:715  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_84:\n        /* \"contracts/UniswapV2ERC20.sol\":649:715  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/UniswapV2ERC20.sol\":607:715  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":280:315  uint8 public constant decimals = 18 */\n    tag_86:\n        /* \"contracts/UniswapV2ERC20.sol\":313:315  18 */\n      0x12\n        /* \"contracts/UniswapV2ERC20.sol\":280:315  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":466:497  bytes32 public DOMAIN_SEPARATOR */\n    tag_88:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/pair.sol\":1091:1123  uint public precisionMultiplier0 */\n    tag_90:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/pair.sol\":4628:4905  function setPairTypeImmutable() external lock {... */\n    tag_92:\n        /* \"contracts/pair.sol\":1507:1508  1 */\n      0x01\n        /* \"contracts/pair.sol\":1495:1503  unlocked */\n      sload(0x0d)\n        /* \"contracts/pair.sol\":1495:1508  unlocked == 1 */\n      eq\n        /* \"contracts/pair.sol\":1487:1534  require(unlocked == 1, 'eZKaliburPair: LOCKED') */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a204c4f434b45440000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"contracts/pair.sol\":1551:1552  0 */\n      0x00\n        /* \"contracts/pair.sol\":1540:1548  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1540:1552  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":4711:4718  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":4702:4725  IFactory(factory).owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"contracts/pair.sol\":4702:4727  IFactory(factory).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_197\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_197:\n        /* \"contracts/pair.sol\":4702:4727  IFactory(factory).owner() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_198\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_198:\n        /* \"contracts/pair.sol\":4702:4727  IFactory(factory).owner() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_199\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_199:\n        /* \"contracts/pair.sol\":4702:4727  IFactory(factory).owner() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":4688:4727  msg.sender == IFactory(factory).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":4688:4698  msg.sender */\n      caller\n        /* \"contracts/pair.sol\":4688:4727  msg.sender == IFactory(factory).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/pair.sol\":4680:4767  require(msg.sender == IFactory(factory).owner(), \"eZKaliburPair: only factory's owner\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_fd83120603ed4d82de96120f878f97f3eab3d3e5b9b17eb433b2f605b574072d\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/pair.sol\":4782:4799  pairTypeImmutable */\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/pair.sol\":4781:4799  !pairTypeImmutable */\n      iszero\n        /* \"contracts/pair.sol\":4773:4836  require(!pairTypeImmutable, \"eZKaliburPair: already immutable\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a20616c726561647920696d6d757461626c65\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"contracts/pair.sol\":4863:4867  true */\n      0x01\n        /* \"contracts/pair.sol\":4843:4860  pairTypeImmutable */\n      0x0c\n      0x01\n        /* \"contracts/pair.sol\":4843:4867  pairTypeImmutable = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":4878:4900  SetPairTypeImmutable() */\n      0x09122c41ae733a4d7740324d50e35fbd6ee85be3c1312a45596d8045150ab2f2\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/pair.sol\":1576:1577  1 */\n      0x01\n        /* \"contracts/pair.sol\":1565:1573  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1565:1577  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":4628:4905  function setPairTypeImmutable() external lock {... */\n      jump\t// out\n        /* \"contracts/pair.sol\":2858:3234  function initialize(address _token0, address _token1) external {... */\n    tag_95:\n        /* \"contracts/pair.sol\":2949:2956  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":2935:2956  msg.sender == factory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":2935:2945  msg.sender */\n      caller\n        /* \"contracts/pair.sol\":2935:2956  msg.sender == factory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/pair.sol\":2935:2972  msg.sender == factory && !initialized */\n      dup1\n      iszero\n      tag_203\n      jumpi\n      pop\n        /* \"contracts/pair.sol\":2961:2972  initialized */\n      0x07\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/pair.sol\":2960:2972  !initialized */\n      iszero\n        /* \"contracts/pair.sol\":2935:2972  msg.sender == factory && !initialized */\n    tag_203:\n        /* \"contracts/pair.sol\":2927:3001  require(msg.sender == factory && !initialized, 'eZKaliburPair: FORBIDDEN') */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a20464f5242494444454e0000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"contracts/pair.sol\":3040:3047  _token0 */\n      dup2\n        /* \"contracts/pair.sol\":3031:3037  token0 */\n      0x06\n      0x00\n        /* \"contracts/pair.sol\":3031:3047  token0 = _token0 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":3062:3069  _token1 */\n      dup1\n        /* \"contracts/pair.sol\":3053:3059  token1 */\n      0x07\n      0x00\n        /* \"contracts/pair.sol\":3053:3069  token1 = _token1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":3117:3124  _token0 */\n      dup2\n        /* \"contracts/pair.sol\":3110:3134  IERC20(_token0).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/pair.sol\":3110:3136  IERC20(_token0).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_205\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_205:\n        /* \"contracts/pair.sol\":3110:3136  IERC20(_token0).decimals() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_206\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_206:\n        /* \"contracts/pair.sol\":3110:3136  IERC20(_token0).decimals() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_207\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_207:\n        /* \"contracts/pair.sol\":3110:3136  IERC20(_token0).decimals() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":3105:3137  uint(IERC20(_token0).decimals()) */\n      0xff\n      and\n        /* \"contracts/pair.sol\":3099:3101  10 */\n      0x0a\n        /* \"contracts/pair.sol\":3099:3137  10 ** uint(IERC20(_token0).decimals()) */\n      exp\n        /* \"contracts/pair.sol\":3076:3096  precisionMultiplier0 */\n      0x09\n        /* \"contracts/pair.sol\":3076:3137  precisionMultiplier0 = 10 ** uint(IERC20(_token0).decimals()) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":3184:3191  _token1 */\n      dup1\n        /* \"contracts/pair.sol\":3177:3201  IERC20(_token1).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/pair.sol\":3177:3203  IERC20(_token1).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_208\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_208:\n        /* \"contracts/pair.sol\":3177:3203  IERC20(_token1).decimals() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_209\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_209:\n        /* \"contracts/pair.sol\":3177:3203  IERC20(_token1).decimals() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_210\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_210:\n        /* \"contracts/pair.sol\":3177:3203  IERC20(_token1).decimals() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":3172:3204  uint(IERC20(_token1).decimals()) */\n      0xff\n      and\n        /* \"contracts/pair.sol\":3166:3168  10 */\n      0x0a\n        /* \"contracts/pair.sol\":3166:3204  10 ** uint(IERC20(_token1).decimals()) */\n      exp\n        /* \"contracts/pair.sol\":3143:3163  precisionMultiplier1 */\n      0x0a\n        /* \"contracts/pair.sol\":3143:3204  precisionMultiplier1 = 10 ** uint(IERC20(_token1).decimals()) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":3225:3229  true */\n      0x01\n        /* \"contracts/pair.sol\":3211:3222  initialized */\n      0x07\n      0x14\n        /* \"contracts/pair.sol\":3211:3229  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":2858:3234  function initialize(address _token0, address _token1) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":3347:3987  function setFeePercent(uint16 newToken0FeePercent, uint16 newToken1FeePercent) external lock {... */\n    tag_98:\n        /* \"contracts/pair.sol\":1507:1508  1 */\n      0x01\n        /* \"contracts/pair.sol\":1495:1503  unlocked */\n      sload(0x0d)\n        /* \"contracts/pair.sol\":1495:1508  unlocked == 1 */\n      eq\n        /* \"contracts/pair.sol\":1487:1534  require(unlocked == 1, 'eZKaliburPair: LOCKED') */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a204c4f434b45440000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"contracts/pair.sol\":1551:1552  0 */\n      0x00\n        /* \"contracts/pair.sol\":1540:1548  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1540:1552  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":3477:3484  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":3468:3501  IFactory(factory).feePercentOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4c217715\n        /* \"contracts/pair.sol\":3468:3503  IFactory(factory).feePercentOwner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_214\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_214:\n        /* \"contracts/pair.sol\":3468:3503  IFactory(factory).feePercentOwner() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_215\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_215:\n        /* \"contracts/pair.sol\":3468:3503  IFactory(factory).feePercentOwner() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_216\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_216:\n        /* \"contracts/pair.sol\":3468:3503  IFactory(factory).feePercentOwner() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":3454:3503  msg.sender == IFactory(factory).feePercentOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":3454:3464  msg.sender */\n      caller\n        /* \"contracts/pair.sol\":3454:3503  msg.sender == IFactory(factory).feePercentOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/pair.sol\":3446:3552  require(msg.sender == IFactory(factory).feePercentOwner(), \"eZKaliburPair: only factory's feeAmountOwner\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f80fc17e443115161d9ed24aaf21c6e6102496443806d2822fe65bc11fc7a8d3\n      0x2c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"contracts/pair.sol\":655:659  2000 */\n      0x07d0\n        /* \"contracts/pair.sol\":3566:3585  newToken0FeePercent */\n      dup3\n        /* \"contracts/pair.sol\":3566:3604  newToken0FeePercent <= MAX_FEE_PERCENT */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/pair.sol\":3566:3646  newToken0FeePercent <= MAX_FEE_PERCENT && newToken1FeePercent <= MAX_FEE_PERCENT */\n      dup1\n      iszero\n      tag_218\n      jumpi\n      pop\n        /* \"contracts/pair.sol\":655:659  2000 */\n      0x07d0\n        /* \"contracts/pair.sol\":3608:3627  newToken1FeePercent */\n      dup2\n        /* \"contracts/pair.sol\":3608:3646  newToken1FeePercent <= MAX_FEE_PERCENT */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/pair.sol\":3566:3646  newToken0FeePercent <= MAX_FEE_PERCENT && newToken1FeePercent <= MAX_FEE_PERCENT */\n    tag_218:\n        /* \"contracts/pair.sol\":3558:3703  require(newToken0FeePercent <= MAX_FEE_PERCENT && newToken1FeePercent <= MAX_FEE_PERCENT, \"eZKaliburPair: feePercent mustn't exceed the maximum\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_2be17c6303e0c10da5ff1eb4b266c473ae5fd600c60b6f9faccee86002ad7d5e\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"contracts/pair.sol\":3739:3740  0 */\n      0x00\n        /* \"contracts/pair.sol\":3717:3736  newToken0FeePercent */\n      dup3\n        /* \"contracts/pair.sol\":3717:3740  newToken0FeePercent > 0 */\n      0xffff\n      and\n      gt\n        /* \"contracts/pair.sol\":3717:3767  newToken0FeePercent > 0 && newToken1FeePercent > 0 */\n      dup1\n      iszero\n      tag_220\n      jumpi\n      pop\n        /* \"contracts/pair.sol\":3766:3767  0 */\n      0x00\n        /* \"contracts/pair.sol\":3744:3763  newToken1FeePercent */\n      dup2\n        /* \"contracts/pair.sol\":3744:3767  newToken1FeePercent > 0 */\n      0xffff\n      and\n      gt\n        /* \"contracts/pair.sol\":3717:3767  newToken0FeePercent > 0 && newToken1FeePercent > 0 */\n    tag_220:\n        /* \"contracts/pair.sol\":3709:3824  require(newToken0FeePercent > 0 && newToken1FeePercent > 0, \"eZKaliburPair: feePercent mustn't exceed the minimum\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_d1bf768db97cbb37158f2706c5b1b11ef80704d9d42c88986d88c55d10379282\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"contracts/pair.sol\":3849:3868  newToken0FeePercent */\n      dup2\n        /* \"contracts/pair.sol\":3830:3846  token0FeePercent */\n      0x08\n      0x1c\n        /* \"contracts/pair.sol\":3830:3868  token0FeePercent = newToken0FeePercent */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":3893:3912  newToken1FeePercent */\n      dup1\n        /* \"contracts/pair.sol\":3874:3890  token1FeePercent */\n      0x08\n      0x1e\n        /* \"contracts/pair.sol\":3874:3912  token1FeePercent = newToken1FeePercent */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":3923:3982  FeePercentUpdated(newToken0FeePercent, newToken1FeePercent) */\n      0xa4877b8ecb5a00ba277e4bceeeb187a669e7113649774dfbea05c259ce27f17b\n        /* \"contracts/pair.sol\":3941:3960  newToken0FeePercent */\n      dup3\n        /* \"contracts/pair.sol\":3962:3981  newToken1FeePercent */\n      dup3\n        /* \"contracts/pair.sol\":3923:3982  FeePercentUpdated(newToken0FeePercent, newToken1FeePercent) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/pair.sol\":1576:1577  1 */\n      0x01\n        /* \"contracts/pair.sol\":1565:1573  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1565:1577  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":3347:3987  function setFeePercent(uint16 newToken0FeePercent, uint16 newToken1FeePercent) external lock {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":860:896  uint16 public token0FeePercent = 300 */\n    tag_100:\n      0x08\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/pair.sol\":616:659  uint public constant MAX_FEE_PERCENT = 2000 */\n    tag_102:\n        /* \"contracts/pair.sol\":655:659  2000 */\n      0x07d0\n        /* \"contracts/pair.sol\":616:659  uint public constant MAX_FEE_PERCENT = 2000 */\n      dup2\n      jump\t// out\n        /* \"contracts/pair.sol\":6298:7445  function mint(address to) external lock returns (uint liquidity) {... */\n    tag_105:\n        /* \"contracts/pair.sol\":6347:6361  uint liquidity */\n      0x00\n        /* \"contracts/pair.sol\":1507:1508  1 */\n      0x01\n        /* \"contracts/pair.sol\":1495:1503  unlocked */\n      sload(0x0d)\n        /* \"contracts/pair.sol\":1495:1508  unlocked == 1 */\n      eq\n        /* \"contracts/pair.sol\":1487:1534  require(unlocked == 1, 'eZKaliburPair: LOCKED') */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a204c4f434b45440000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"contracts/pair.sol\":1551:1552  0 */\n      0x00\n        /* \"contracts/pair.sol\":1540:1548  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1540:1552  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":6370:6387  uint112 _reserve0 */\n      0x00\n        /* \"contracts/pair.sol\":6389:6406  uint112 _reserve1 */\n      dup1\n        /* \"contracts/pair.sol\":6412:6425  getReserves() */\n      tag_225\n        /* \"contracts/pair.sol\":6412:6423  getReserves */\n      tag_63\n        /* \"contracts/pair.sol\":6412:6425  getReserves() */\n      jump\t// in\n    tag_225:\n        /* \"contracts/pair.sol\":6369:6425  (uint112 _reserve0, uint112 _reserve1,,) = getReserves() */\n      pop\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/pair.sol\":6450:6463  uint balance0 */\n      0x00\n        /* \"contracts/pair.sol\":6473:6479  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":6466:6490  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/pair.sol\":6499:6503  this */\n      address\n        /* \"contracts/pair.sol\":6466:6505  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_226\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_226:\n        /* \"contracts/pair.sol\":6466:6505  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_227\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_227:\n        /* \"contracts/pair.sol\":6466:6505  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_228\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_228:\n        /* \"contracts/pair.sol\":6466:6505  IERC20(token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":6450:6505  uint balance0 = IERC20(token0).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":6511:6524  uint balance1 */\n      0x00\n        /* \"contracts/pair.sol\":6534:6540  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":6527:6551  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/pair.sol\":6560:6564  this */\n      address\n        /* \"contracts/pair.sol\":6527:6566  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_229\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_229:\n        /* \"contracts/pair.sol\":6527:6566  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_230\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_230:\n        /* \"contracts/pair.sol\":6527:6566  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_231\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_231:\n        /* \"contracts/pair.sol\":6527:6566  IERC20(token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":6511:6566  uint balance1 = IERC20(token1).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":6572:6584  uint amount0 */\n      0x00\n        /* \"contracts/pair.sol\":6587:6610  balance0.sub(_reserve0) */\n      tag_232\n        /* \"contracts/pair.sol\":6600:6609  _reserve0 */\n      dup6\n        /* \"contracts/pair.sol\":6587:6610  balance0.sub(_reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":6587:6595  balance0 */\n      dup5\n        /* \"contracts/pair.sol\":6587:6599  balance0.sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":6587:6610  balance0.sub(_reserve0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"contracts/pair.sol\":6572:6610  uint amount0 = balance0.sub(_reserve0) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":6616:6628  uint amount1 */\n      0x00\n        /* \"contracts/pair.sol\":6631:6654  balance1.sub(_reserve1) */\n      tag_233\n        /* \"contracts/pair.sol\":6644:6653  _reserve1 */\n      dup6\n        /* \"contracts/pair.sol\":6631:6654  balance1.sub(_reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":6631:6639  balance1 */\n      dup5\n        /* \"contracts/pair.sol\":6631:6643  balance1.sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":6631:6654  balance1.sub(_reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"contracts/pair.sol\":6616:6654  uint amount1 = balance1.sub(_reserve1) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":6661:6671  bool feeOn */\n      0x00\n        /* \"contracts/pair.sol\":6674:6704  _mintFee(_reserve0, _reserve1) */\n      tag_234\n        /* \"contracts/pair.sol\":6683:6692  _reserve0 */\n      dup8\n        /* \"contracts/pair.sol\":6694:6703  _reserve1 */\n      dup8\n        /* \"contracts/pair.sol\":6674:6682  _mintFee */\n      tag_188\n        /* \"contracts/pair.sol\":6674:6704  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_234:\n        /* \"contracts/pair.sol\":6661:6704  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":6710:6727  uint _totalSupply */\n      0x00\n        /* \"contracts/pair.sol\":6730:6741  totalSupply */\n      dup1\n      sload\n        /* \"contracts/pair.sol\":6710:6741  uint _totalSupply = totalSupply */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":6849:6850  0 */\n      0x00\n        /* \"contracts/pair.sol\":6833:6845  _totalSupply */\n      dup2\n        /* \"contracts/pair.sol\":6833:6850  _totalSupply == 0 */\n      eq\n        /* \"contracts/pair.sol\":6829:7157  if (_totalSupply == 0) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"contracts/pair.sol\":6872:6926  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      tag_236\n        /* \"contracts/pair.sol\":358:365  10 ** 3 */\n      0x03e8\n        /* \"contracts/pair.sol\":6872:6903  Math.sqrt(amount0.mul(amount1)) */\n      tag_237\n        /* \"contracts/pair.sol\":6882:6902  amount0.mul(amount1) */\n      tag_238\n        /* \"contracts/pair.sol\":6894:6901  amount1 */\n      dup7\n        /* \"contracts/pair.sol\":6882:6889  amount0 */\n      dup9\n        /* \"contracts/pair.sol\":6882:6893  amount0.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":6882:6902  amount0.mul(amount1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"contracts/pair.sol\":6872:6881  Math.sqrt */\n      tag_240\n        /* \"contracts/pair.sol\":6872:6903  Math.sqrt(amount0.mul(amount1)) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/pair.sol\":6872:6907  Math.sqrt(amount0.mul(amount1)).sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":6872:6926  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_236:\n        /* \"contracts/pair.sol\":6860:6926  liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap9\n      pop\n        /* \"contracts/pair.sol\":6934:6970  _mint(address(0), MINIMUM_LIQUIDITY) */\n      tag_241\n        /* \"contracts/pair.sol\":6948:6949  0 */\n      0x00\n        /* \"contracts/pair.sol\":358:365  10 ** 3 */\n      0x03e8\n        /* \"contracts/pair.sol\":6934:6939  _mint */\n      tag_242\n        /* \"contracts/pair.sol\":6934:6970  _mint(address(0), MINIMUM_LIQUIDITY) */\n      jump\t// in\n    tag_241:\n        /* \"contracts/pair.sol\":6829:7157  if (_totalSupply == 0) {... */\n      jump(tag_243)\n    tag_235:\n        /* \"contracts/pair.sol\":7064:7150  Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      tag_244\n        /* \"contracts/pair.sol\":7101:7110  _reserve0 */\n      dup9\n        /* \"contracts/pair.sol\":7073:7110  amount0.mul(_totalSupply) / _reserve0 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":7073:7098  amount0.mul(_totalSupply) */\n      tag_245\n        /* \"contracts/pair.sol\":7085:7097  _totalSupply */\n      dup4\n        /* \"contracts/pair.sol\":7073:7080  amount0 */\n      dup8\n        /* \"contracts/pair.sol\":7073:7084  amount0.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":7073:7098  amount0.mul(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_245:\n        /* \"contracts/pair.sol\":7073:7110  amount0.mul(_totalSupply) / _reserve0 */\n      dup2\n      tag_246\n      jumpi\n      invalid\n    tag_246:\n      div\n        /* \"contracts/pair.sol\":7140:7149  _reserve1 */\n      dup9\n        /* \"contracts/pair.sol\":7112:7149  amount1.mul(_totalSupply) / _reserve1 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":7112:7137  amount1.mul(_totalSupply) */\n      tag_247\n        /* \"contracts/pair.sol\":7124:7136  _totalSupply */\n      dup5\n        /* \"contracts/pair.sol\":7112:7119  amount1 */\n      dup8\n        /* \"contracts/pair.sol\":7112:7123  amount1.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":7112:7137  amount1.mul(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/pair.sol\":7112:7149  amount1.mul(_totalSupply) / _reserve1 */\n      dup2\n      tag_248\n      jumpi\n      invalid\n    tag_248:\n      div\n        /* \"contracts/pair.sol\":7064:7072  Math.min */\n      tag_249\n        /* \"contracts/pair.sol\":7064:7150  Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/pair.sol\":7052:7150  liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      swap9\n      pop\n        /* \"contracts/pair.sol\":6829:7157  if (_totalSupply == 0) {... */\n    tag_243:\n        /* \"contracts/pair.sol\":7182:7183  0 */\n      0x00\n        /* \"contracts/pair.sol\":7170:7179  liquidity */\n      dup10\n        /* \"contracts/pair.sol\":7170:7183  liquidity > 0 */\n      gt\n        /* \"contracts/pair.sol\":7162:7232  require(liquidity > 0, 'eZKaliburPair: INSUFFICIENT_LIQUIDITY_MINTED') */\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8ab36b58f19f5658e716652a965572c61ec94ca2b0078cc5663963339a0ef78f\n      0x2c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"contracts/pair.sol\":7238:7258  _mint(to, liquidity) */\n      tag_251\n        /* \"contracts/pair.sol\":7244:7246  to */\n      dup11\n        /* \"contracts/pair.sol\":7248:7257  liquidity */\n      dup11\n        /* \"contracts/pair.sol\":7238:7243  _mint */\n      tag_242\n        /* \"contracts/pair.sol\":7238:7258  _mint(to, liquidity) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/pair.sol\":7265:7292  _update(balance0, balance1) */\n      tag_252\n        /* \"contracts/pair.sol\":7273:7281  balance0 */\n      dup7\n        /* \"contracts/pair.sol\":7283:7291  balance1 */\n      dup7\n        /* \"contracts/pair.sol\":7265:7272  _update */\n      tag_253\n        /* \"contracts/pair.sol\":7265:7292  _update(balance0, balance1) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/pair.sol\":7302:7307  feeOn */\n      dup2\n        /* \"contracts/pair.sol\":7298:7351  if (feeOn) kLast = _k(uint(reserve0), uint(reserve1)) */\n      iszero\n      tag_254\n      jumpi\n        /* \"contracts/pair.sol\":7317:7351  _k(uint(reserve0), uint(reserve1)) */\n      tag_255\n        /* \"contracts/pair.sol\":7325:7333  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":7320:7334  uint(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":7341:7349  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":7336:7350  uint(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":7317:7319  _k */\n      tag_193\n        /* \"contracts/pair.sol\":7317:7351  _k(uint(reserve0), uint(reserve1)) */\n      jump\t// in\n    tag_255:\n        /* \"contracts/pair.sol\":7309:7314  kLast */\n      0x0b\n        /* \"contracts/pair.sol\":7309:7351  kLast = _k(uint(reserve0), uint(reserve1)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":7298:7351  if (feeOn) kLast = _k(uint(reserve0), uint(reserve1)) */\n    tag_254:\n        /* \"contracts/pair.sol\":7411:7421  msg.sender */\n      caller\n        /* \"contracts/pair.sol\":7406:7440  Mint(msg.sender, amount0, amount1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\n        /* \"contracts/pair.sol\":7423:7430  amount0 */\n      dup6\n        /* \"contracts/pair.sol\":7432:7439  amount1 */\n      dup6\n        /* \"contracts/pair.sol\":7406:7440  Mint(msg.sender, amount0, amount1) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/pair.sol\":1558:1559  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":1576:1577  1 */\n      0x01\n        /* \"contracts/pair.sol\":1565:1573  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1565:1577  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":6298:7445  function mint(address to) external lock returns (uint liquidity) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":9633:10034  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {... */\n    tag_111:\n        /* \"contracts/pair.sol\":9747:9775  TokensData memory tokensData */\n      tag_257\n      tag_163\n      jump\t// in\n    tag_257:\n        /* \"contracts/pair.sol\":9778:9986  TokensData({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/pair.sol\":9805:9811  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":9778:9986  TokensData({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/pair.sol\":9827:9833  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":9778:9986  TokensData({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/pair.sol\":9853:9863  amount0Out */\n      dup9\n        /* \"contracts/pair.sol\":9778:9986  TokensData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/pair.sol\":9883:9893  amount1Out */\n      dup8\n        /* \"contracts/pair.sol\":9778:9986  TokensData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/pair.sol\":9911:9912  0 */\n      0x00\n        /* \"contracts/pair.sol\":9778:9986  TokensData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/pair.sol\":9930:9931  0 */\n      0x00\n        /* \"contracts/pair.sol\":9778:9986  TokensData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/pair.sol\":9954:9955  0 */\n      0x00\n        /* \"contracts/pair.sol\":9778:9986  TokensData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/pair.sol\":9978:9979  0 */\n      0x00\n        /* \"contracts/pair.sol\":9778:9986  TokensData({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/pair.sol\":9747:9986  TokensData memory tokensData = TokensData({... */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":9992:10029  _swap(tokensData, to, data, referrer) */\n      tag_258\n        /* \"contracts/pair.sol\":9998:10008  tokensData */\n      dup2\n        /* \"contracts/pair.sol\":10010:10012  to */\n      dup7\n        /* \"contracts/pair.sol\":10014:10018  data */\n      dup7\n      dup7\n        /* \"contracts/pair.sol\":9992:10029  _swap(tokensData, to, data, referrer) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/pair.sol\":9992:10029  _swap(tokensData, to, data, referrer) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":10020:10028  referrer */\n      dup6\n        /* \"contracts/pair.sol\":9992:9997  _swap */\n      tag_165\n        /* \"contracts/pair.sol\":9992:10029  _swap(tokensData, to, data, referrer) */\n      jump\t// in\n    tag_258:\n        /* \"contracts/pair.sol\":9633:10034  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data, address referrer) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":351:392  mapping(address => uint) public balanceOf */\n    tag_114:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/pair.sol\":1164:1181  uint public kLast */\n    tag_116:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":721:759  mapping(address => uint) public nonces */\n    tag_119:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/pair.sol\":7550:8843  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n    tag_122:\n        /* \"contracts/pair.sol\":7599:7611  uint amount0 */\n      0x00\n        /* \"contracts/pair.sol\":7613:7625  uint amount1 */\n      dup1\n        /* \"contracts/pair.sol\":1507:1508  1 */\n      0x01\n        /* \"contracts/pair.sol\":1495:1503  unlocked */\n      sload(0x0d)\n        /* \"contracts/pair.sol\":1495:1508  unlocked == 1 */\n      eq\n        /* \"contracts/pair.sol\":1487:1534  require(unlocked == 1, 'eZKaliburPair: LOCKED') */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a204c4f434b45440000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_260:\n        /* \"contracts/pair.sol\":1551:1552  0 */\n      0x00\n        /* \"contracts/pair.sol\":1540:1548  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1540:1552  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":7634:7651  uint112 _reserve0 */\n      0x00\n        /* \"contracts/pair.sol\":7653:7670  uint112 _reserve1 */\n      dup1\n        /* \"contracts/pair.sol\":7676:7689  getReserves() */\n      tag_262\n        /* \"contracts/pair.sol\":7676:7687  getReserves */\n      tag_63\n        /* \"contracts/pair.sol\":7676:7689  getReserves() */\n      jump\t// in\n    tag_262:\n        /* \"contracts/pair.sol\":7633:7689  (uint112 _reserve0, uint112 _reserve1,,) = getReserves() */\n      pop\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/pair.sol\":7710:7725  address _token0 */\n      0x00\n        /* \"contracts/pair.sol\":7728:7734  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":7710:7734  address _token0 = token0 */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":7755:7770  address _token1 */\n      0x00\n        /* \"contracts/pair.sol\":7773:7779  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":7755:7779  address _token1 = token1 */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":7800:7813  uint balance0 */\n      0x00\n        /* \"contracts/pair.sol\":7823:7830  _token0 */\n      dup3\n        /* \"contracts/pair.sol\":7816:7841  IERC20(_token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/pair.sol\":7850:7854  this */\n      address\n        /* \"contracts/pair.sol\":7816:7856  IERC20(_token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_263\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_263:\n        /* \"contracts/pair.sol\":7816:7856  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_264\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_264:\n        /* \"contracts/pair.sol\":7816:7856  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_265\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_265:\n        /* \"contracts/pair.sol\":7816:7856  IERC20(_token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":7800:7856  uint balance0 = IERC20(_token0).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":7862:7875  uint balance1 */\n      0x00\n        /* \"contracts/pair.sol\":7885:7892  _token1 */\n      dup3\n        /* \"contracts/pair.sol\":7878:7903  IERC20(_token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/pair.sol\":7912:7916  this */\n      address\n        /* \"contracts/pair.sol\":7878:7918  IERC20(_token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_266\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_266:\n        /* \"contracts/pair.sol\":7878:7918  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_267\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_267:\n        /* \"contracts/pair.sol\":7878:7918  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_268\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_268:\n        /* \"contracts/pair.sol\":7878:7918  IERC20(_token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":7862:7918  uint balance1 = IERC20(_token1).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":7924:7938  uint liquidity */\n      0x00\n        /* \"contracts/pair.sol\":7941:7950  balanceOf */\n      0x01\n        /* \"contracts/pair.sol\":7941:7965  balanceOf[address(this)] */\n      0x00\n        /* \"contracts/pair.sol\":7959:7963  this */\n      address\n        /* \"contracts/pair.sol\":7941:7965  balanceOf[address(this)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/pair.sol\":7924:7965  uint liquidity = balanceOf[address(this)] */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":7972:7982  bool feeOn */\n      0x00\n        /* \"contracts/pair.sol\":7985:8015  _mintFee(_reserve0, _reserve1) */\n      tag_269\n        /* \"contracts/pair.sol\":7994:8003  _reserve0 */\n      dup9\n        /* \"contracts/pair.sol\":8005:8014  _reserve1 */\n      dup9\n        /* \"contracts/pair.sol\":7985:7993  _mintFee */\n      tag_188\n        /* \"contracts/pair.sol\":7985:8015  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/pair.sol\":7972:8015  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":8021:8038  uint _totalSupply */\n      0x00\n        /* \"contracts/pair.sol\":8041:8052  totalSupply */\n      dup1\n      sload\n        /* \"contracts/pair.sol\":8021:8052  uint _totalSupply = totalSupply */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":8172:8184  _totalSupply */\n      dup1\n        /* \"contracts/pair.sol\":8146:8169  liquidity.mul(balance0) */\n      tag_270\n        /* \"contracts/pair.sol\":8160:8168  balance0 */\n      dup7\n        /* \"contracts/pair.sol\":8146:8155  liquidity */\n      dup6\n        /* \"contracts/pair.sol\":8146:8159  liquidity.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":8146:8169  liquidity.mul(balance0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_270:\n        /* \"contracts/pair.sol\":8146:8184  liquidity.mul(balance0) / _totalSupply */\n      dup2\n      tag_271\n      jumpi\n      invalid\n    tag_271:\n      div\n        /* \"contracts/pair.sol\":8136:8184  amount0 = liquidity.mul(balance0) / _totalSupply */\n      swap11\n      pop\n        /* \"contracts/pair.sol\":8274:8286  _totalSupply */\n      dup1\n        /* \"contracts/pair.sol\":8248:8271  liquidity.mul(balance1) */\n      tag_272\n        /* \"contracts/pair.sol\":8262:8270  balance1 */\n      dup6\n        /* \"contracts/pair.sol\":8248:8257  liquidity */\n      dup6\n        /* \"contracts/pair.sol\":8248:8261  liquidity.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":8248:8271  liquidity.mul(balance1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_272:\n        /* \"contracts/pair.sol\":8248:8286  liquidity.mul(balance1) / _totalSupply */\n      dup2\n      tag_273\n      jumpi\n      invalid\n    tag_273:\n      div\n        /* \"contracts/pair.sol\":8238:8286  amount1 = liquidity.mul(balance1) / _totalSupply */\n      swap10\n      pop\n        /* \"contracts/pair.sol\":8358:8359  0 */\n      0x00\n        /* \"contracts/pair.sol\":8348:8355  amount0 */\n      dup12\n        /* \"contracts/pair.sol\":8348:8359  amount0 > 0 */\n      gt\n        /* \"contracts/pair.sol\":8348:8374  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_274\n      jumpi\n      pop\n        /* \"contracts/pair.sol\":8373:8374  0 */\n      0x00\n        /* \"contracts/pair.sol\":8363:8370  amount1 */\n      dup11\n        /* \"contracts/pair.sol\":8363:8374  amount1 > 0 */\n      gt\n        /* \"contracts/pair.sol\":8348:8374  amount0 > 0 && amount1 > 0 */\n    tag_274:\n        /* \"contracts/pair.sol\":8340:8423  require(amount0 > 0 && amount1 > 0, 'eZKaliburPair: INSUFFICIENT_LIQUIDITY_BURNED') */\n      tag_275\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_5c26fe7bac5bd215670303820601ac49f0d4baeb8f47fd314bbc05e382ca9e12\n      0x2c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_275:\n        /* \"contracts/pair.sol\":8429:8460  _burn(address(this), liquidity) */\n      tag_276\n        /* \"contracts/pair.sol\":8443:8447  this */\n      address\n        /* \"contracts/pair.sol\":8450:8459  liquidity */\n      dup5\n        /* \"contracts/pair.sol\":8429:8434  _burn */\n      tag_277\n        /* \"contracts/pair.sol\":8429:8460  _burn(address(this), liquidity) */\n      jump\t// in\n    tag_276:\n        /* \"contracts/pair.sol\":8466:8501  _safeTransfer(_token0, to, amount0) */\n      tag_278\n        /* \"contracts/pair.sol\":8480:8487  _token0 */\n      dup8\n        /* \"contracts/pair.sol\":8489:8491  to */\n      dup14\n        /* \"contracts/pair.sol\":8493:8500  amount0 */\n      dup14\n        /* \"contracts/pair.sol\":8466:8479  _safeTransfer */\n      tag_279\n        /* \"contracts/pair.sol\":8466:8501  _safeTransfer(_token0, to, amount0) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/pair.sol\":8507:8542  _safeTransfer(_token1, to, amount1) */\n      tag_280\n        /* \"contracts/pair.sol\":8521:8528  _token1 */\n      dup7\n        /* \"contracts/pair.sol\":8530:8532  to */\n      dup14\n        /* \"contracts/pair.sol\":8534:8541  amount1 */\n      dup13\n        /* \"contracts/pair.sol\":8507:8520  _safeTransfer */\n      tag_279\n        /* \"contracts/pair.sol\":8507:8542  _safeTransfer(_token1, to, amount1) */\n      jump\t// in\n    tag_280:\n        /* \"contracts/pair.sol\":8566:8573  _token0 */\n      dup7\n        /* \"contracts/pair.sol\":8559:8584  IERC20(_token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/pair.sol\":8593:8597  this */\n      address\n        /* \"contracts/pair.sol\":8559:8599  IERC20(_token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_281\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_281:\n        /* \"contracts/pair.sol\":8559:8599  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_282\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_282:\n        /* \"contracts/pair.sol\":8559:8599  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_283\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_283:\n        /* \"contracts/pair.sol\":8559:8599  IERC20(_token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":8548:8599  balance0 = IERC20(_token0).balanceOf(address(this)) */\n      swap5\n      pop\n        /* \"contracts/pair.sol\":8623:8630  _token1 */\n      dup6\n        /* \"contracts/pair.sol\":8616:8641  IERC20(_token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/pair.sol\":8650:8654  this */\n      address\n        /* \"contracts/pair.sol\":8616:8656  IERC20(_token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_284\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_284:\n        /* \"contracts/pair.sol\":8616:8656  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_285\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_285:\n        /* \"contracts/pair.sol\":8616:8656  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_286\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_286:\n        /* \"contracts/pair.sol\":8616:8656  IERC20(_token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":8605:8656  balance1 = IERC20(_token1).balanceOf(address(this)) */\n      swap4\n      pop\n        /* \"contracts/pair.sol\":8663:8690  _update(balance0, balance1) */\n      tag_287\n        /* \"contracts/pair.sol\":8671:8679  balance0 */\n      dup6\n        /* \"contracts/pair.sol\":8681:8689  balance1 */\n      dup6\n        /* \"contracts/pair.sol\":8663:8670  _update */\n      tag_253\n        /* \"contracts/pair.sol\":8663:8690  _update(balance0, balance1) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/pair.sol\":8700:8705  feeOn */\n      dup2\n        /* \"contracts/pair.sol\":8696:8749  if (feeOn) kLast = _k(uint(reserve0), uint(reserve1)) */\n      iszero\n      tag_288\n      jumpi\n        /* \"contracts/pair.sol\":8715:8749  _k(uint(reserve0), uint(reserve1)) */\n      tag_289\n        /* \"contracts/pair.sol\":8723:8731  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":8718:8732  uint(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":8739:8747  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":8734:8748  uint(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":8715:8717  _k */\n      tag_193\n        /* \"contracts/pair.sol\":8715:8749  _k(uint(reserve0), uint(reserve1)) */\n      jump\t// in\n    tag_289:\n        /* \"contracts/pair.sol\":8707:8712  kLast */\n      0x0b\n        /* \"contracts/pair.sol\":8707:8749  kLast = _k(uint(reserve0), uint(reserve1)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":8696:8749  if (feeOn) kLast = _k(uint(reserve0), uint(reserve1)) */\n    tag_288:\n        /* \"contracts/pair.sol\":8835:8837  to */\n      dup12\n        /* \"contracts/pair.sol\":8800:8838  Burn(msg.sender, amount0, amount1, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":8805:8815  msg.sender */\n      caller\n        /* \"contracts/pair.sol\":8800:8838  Burn(msg.sender, amount0, amount1, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496\n        /* \"contracts/pair.sol\":8817:8824  amount0 */\n      dup14\n        /* \"contracts/pair.sol\":8826:8833  amount1 */\n      dup14\n        /* \"contracts/pair.sol\":8800:8838  Burn(msg.sender, amount0, amount1, to) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/pair.sol\":1558:1559  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":1576:1577  1 */\n      0x01\n        /* \"contracts/pair.sol\":1565:1573  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1565:1577  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":7550:8843  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":234:274  string public constant symbol = 'eZK-LP' */\n    tag_124:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x655a4b2d4c500000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/pair.sol\":1266:1288  bool public stableSwap */\n    tag_130:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":2329:2465  function transfer(address to, uint value) external returns (bool) {... */\n    tag_133:\n        /* \"contracts/UniswapV2ERC20.sol\":2389:2393  bool */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2405:2437  _transfer(msg.sender, to, value) */\n      tag_291\n        /* \"contracts/UniswapV2ERC20.sol\":2415:2425  msg.sender */\n      caller\n        /* \"contracts/UniswapV2ERC20.sol\":2427:2429  to */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2431:2436  value */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2405:2414  _transfer */\n      tag_175\n        /* \"contracts/UniswapV2ERC20.sol\":2405:2437  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_291:\n        /* \"contracts/UniswapV2ERC20.sol\":2454:2458  true */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":2447:2458  return true */\n      swap1\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":2329:2465  function transfer(address to, uint value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":1339:1368  bool public pairTypeImmutable */\n    tag_135:\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/pair.sol\":317:365  uint public constant MINIMUM_LIQUIDITY = 10 ** 3 */\n    tag_137:\n        /* \"contracts/pair.sol\":358:365  10 ** 3 */\n      0x03e8\n        /* \"contracts/pair.sol\":317:365  uint public constant MINIMUM_LIQUIDITY = 10 ** 3 */\n      dup2\n      jump\t// out\n        /* \"contracts/pair.sol\":16659:16995  function skim(address to) external lock {... */\n    tag_140:\n        /* \"contracts/pair.sol\":1507:1508  1 */\n      0x01\n        /* \"contracts/pair.sol\":1495:1503  unlocked */\n      sload(0x0d)\n        /* \"contracts/pair.sol\":1495:1508  unlocked == 1 */\n      eq\n        /* \"contracts/pair.sol\":1487:1534  require(unlocked == 1, 'eZKaliburPair: LOCKED') */\n      tag_293\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a204c4f434b45440000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_293:\n        /* \"contracts/pair.sol\":1551:1552  0 */\n      0x00\n        /* \"contracts/pair.sol\":1540:1548  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1540:1552  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":16705:16720  address _token0 */\n      0x00\n        /* \"contracts/pair.sol\":16723:16729  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":16705:16729  address _token0 = token0 */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":16754:16769  address _token1 */\n      0x00\n        /* \"contracts/pair.sol\":16772:16778  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":16754:16778  address _token1 = token1 */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":16803:16885  _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0)) */\n      tag_295\n        /* \"contracts/pair.sol\":16817:16824  _token0 */\n      dup3\n        /* \"contracts/pair.sol\":16826:16828  to */\n      dup5\n        /* \"contracts/pair.sol\":16830:16884  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      tag_296\n        /* \"contracts/pair.sol\":16875:16883  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":16830:16884  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":16837:16844  _token0 */\n      dup7\n        /* \"contracts/pair.sol\":16830:16855  IERC20(_token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/pair.sol\":16864:16868  this */\n      address\n        /* \"contracts/pair.sol\":16830:16870  IERC20(_token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_297\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_297:\n        /* \"contracts/pair.sol\":16830:16870  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_298\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_298:\n        /* \"contracts/pair.sol\":16830:16870  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_299\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_299:\n        /* \"contracts/pair.sol\":16830:16870  IERC20(_token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":16830:16874  IERC20(_token0).balanceOf(address(this)).sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":16830:16884  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_296:\n        /* \"contracts/pair.sol\":16803:16816  _safeTransfer */\n      tag_279\n        /* \"contracts/pair.sol\":16803:16885  _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0)) */\n      jump\t// in\n    tag_295:\n        /* \"contracts/pair.sol\":16891:16973  _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1)) */\n      tag_300\n        /* \"contracts/pair.sol\":16905:16912  _token1 */\n      dup2\n        /* \"contracts/pair.sol\":16914:16916  to */\n      dup5\n        /* \"contracts/pair.sol\":16918:16972  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      tag_301\n        /* \"contracts/pair.sol\":16963:16971  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":16918:16972  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":16925:16932  _token1 */\n      dup6\n        /* \"contracts/pair.sol\":16918:16943  IERC20(_token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/pair.sol\":16952:16956  this */\n      address\n        /* \"contracts/pair.sol\":16918:16958  IERC20(_token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_302\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_302:\n        /* \"contracts/pair.sol\":16918:16958  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_303\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_303:\n        /* \"contracts/pair.sol\":16918:16958  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_304\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_304:\n        /* \"contracts/pair.sol\":16918:16958  IERC20(_token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":16918:16962  IERC20(_token1).balanceOf(address(this)).sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":16918:16972  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_301:\n        /* \"contracts/pair.sol\":16891:16904  _safeTransfer */\n      tag_279\n        /* \"contracts/pair.sol\":16891:16973  _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1)) */\n      jump\t// in\n    tag_300:\n        /* \"contracts/pair.sol\":16984:16990  Skim() */\n      0x21ad22495c9c75cd1c94756f91824e779c0c8a8e168b267c790df464fe056b79\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/pair.sol\":1558:1559  _ */\n      pop\n      pop\n        /* \"contracts/pair.sol\":1576:1577  1 */\n      0x01\n        /* \"contracts/pair.sol\":1565:1573  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1565:1577  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":16659:16995  function skim(address to) external lock {... */\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":462:484  address public factory */\n    tag_142:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/pair.sol\":513:534  address public token1 */\n    tag_144:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":2868:3530  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_147:\n        /* \"contracts/UniswapV2ERC20.sol\":3013:3028  block.timestamp */\n      timestamp\n        /* \"contracts/UniswapV2ERC20.sol\":3001:3009  deadline */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":3001:3028  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/UniswapV2ERC20.sol\":2993:3051  require(deadline >= block.timestamp, 'UniswapV2: EXPIRED') */\n      tag_306\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e697377617056323a20455850495245440000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_306:\n        /* \"contracts/UniswapV2ERC20.sol\":3061:3075  bytes32 digest */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":3163:3179  DOMAIN_SEPARATOR */\n      sload(0x03)\n        /* \"contracts/UniswapV2ERC20.sol\":649:715  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/UniswapV2ERC20.sol\":3218:3233  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"contracts/UniswapV2ERC20.sol\":3235:3240  owner */\n      dup10\n        /* \"contracts/UniswapV2ERC20.sol\":3242:3249  spender */\n      dup10\n        /* \"contracts/UniswapV2ERC20.sol\":3251:3256  value */\n      dup10\n        /* \"contracts/UniswapV2ERC20.sol\":3258:3264  nonces */\n      0x04\n        /* \"contracts/UniswapV2ERC20.sol\":3258:3271  nonces[owner] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":3265:3270  owner */\n      dup15\n        /* \"contracts/UniswapV2ERC20.sol\":3258:3271  nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":3258:3273  nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/UniswapV2ERC20.sol\":3275:3283  deadline */\n      dup11\n        /* \"contracts/UniswapV2ERC20.sol\":3207:3284  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/UniswapV2ERC20.sol\":3207:3284  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/UniswapV2ERC20.sol\":3197:3285  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":3101:3299  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/UniswapV2ERC20.sol\":3101:3299  abi.encodePacked(... */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/UniswapV2ERC20.sol\":3078:3309  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":3061:3309  bytes32 digest = keccak256(... */\n      swap1\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":3319:3343  address recoveredAddress */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":3346:3372  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":3356:3362  digest */\n      dup3\n        /* \"contracts/UniswapV2ERC20.sol\":3364:3365  v */\n      dup7\n        /* \"contracts/UniswapV2ERC20.sol\":3367:3368  r */\n      dup7\n        /* \"contracts/UniswapV2ERC20.sol\":3370:3371  s */\n      dup7\n        /* \"contracts/UniswapV2ERC20.sol\":3346:3372  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_307\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_307:\n        /* \"contracts/UniswapV2ERC20.sol\":3346:3372  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/UniswapV2ERC20.sol\":3319:3372  address recoveredAddress = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":3418:3419  0 */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":3390:3420  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2ERC20.sol\":3390:3406  recoveredAddress */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":3390:3420  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/UniswapV2ERC20.sol\":3390:3449  recoveredAddress != address(0) && recoveredAddress == owner */\n      dup1\n      iszero\n      tag_308\n      jumpi\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":3444:3449  owner */\n      dup9\n        /* \"contracts/UniswapV2ERC20.sol\":3424:3449  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2ERC20.sol\":3424:3440  recoveredAddress */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":3424:3449  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/UniswapV2ERC20.sol\":3390:3449  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_308:\n        /* \"contracts/UniswapV2ERC20.sol\":3382:3482  require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE') */\n      tag_309\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e697377617056323a20494e56414c49445f5349474e415455524500000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_309:\n        /* \"contracts/UniswapV2ERC20.sol\":3492:3523  _approve(owner, spender, value) */\n      tag_310\n        /* \"contracts/UniswapV2ERC20.sol\":3501:3506  owner */\n      dup10\n        /* \"contracts/UniswapV2ERC20.sol\":3508:3515  spender */\n      dup10\n        /* \"contracts/UniswapV2ERC20.sol\":3517:3522  value */\n      dup10\n        /* \"contracts/UniswapV2ERC20.sol\":3492:3500  _approve */\n      tag_169\n        /* \"contracts/UniswapV2ERC20.sol\":3492:3523  _approve(owner, spender, value) */\n      jump\t// in\n    tag_310:\n        /* \"contracts/UniswapV2ERC20.sol\":2868:3530  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":567:612  uint public constant FEE_DENOMINATOR = 100000 */\n    tag_149:\n        /* \"contracts/pair.sol\":606:612  100000 */\n      0x0186a0\n        /* \"contracts/pair.sol\":567:612  uint public constant FEE_DENOMINATOR = 100000 */\n      dup2\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":398:459  mapping(address => mapping(address => uint)) public allowance */\n    tag_152:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/pair.sol\":15259:15517  function getAmountOut(uint amountIn, address tokenIn) external view returns (uint) {... */\n    tag_155:\n        /* \"contracts/pair.sol\":15336:15340  uint */\n      0x00\n        /* \"contracts/pair.sol\":15348:15365  uint16 feePercent */\n      dup1\n        /* \"contracts/pair.sol\":15379:15385  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":15368:15385  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":15368:15375  tokenIn */\n      dup4\n        /* \"contracts/pair.sol\":15368:15385  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/pair.sol\":15368:15423  tokenIn == token0 ? token0FeePercent : token1FeePercent */\n      tag_312\n      jumpi\n        /* \"contracts/pair.sol\":15407:15423  token1FeePercent */\n      0x08\n      0x1e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/pair.sol\":15368:15423  tokenIn == token0 ? token0FeePercent : token1FeePercent */\n      jump(tag_313)\n    tag_312:\n        /* \"contracts/pair.sol\":15388:15404  token0FeePercent */\n      0x08\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/pair.sol\":15368:15423  tokenIn == token0 ? token0FeePercent : token1FeePercent */\n    tag_313:\n        /* \"contracts/pair.sol\":15348:15423  uint16 feePercent = tokenIn == token0 ? token0FeePercent : token1FeePercent */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":15436:15512  _getAmountOut(amountIn, tokenIn, uint(reserve0), uint(reserve1), feePercent) */\n      tag_314\n        /* \"contracts/pair.sol\":15450:15458  amountIn */\n      dup5\n        /* \"contracts/pair.sol\":15460:15467  tokenIn */\n      dup5\n        /* \"contracts/pair.sol\":15474:15482  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":15469:15483  uint(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":15490:15498  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":15485:15499  uint(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":15501:15511  feePercent */\n      dup6\n        /* \"contracts/pair.sol\":15436:15512  _getAmountOut(amountIn, tokenIn, uint(reserve0), uint(reserve1), feePercent) */\n      0xffff\n      and\n        /* \"contracts/pair.sol\":15436:15449  _getAmountOut */\n      tag_315\n        /* \"contracts/pair.sol\":15436:15512  _getAmountOut(amountIn, tokenIn, uint(reserve0), uint(reserve1), feePercent) */\n      jump\t// in\n    tag_314:\n        /* \"contracts/pair.sol\":15429:15512  return _getAmountOut(amountIn, tokenIn, uint(reserve0), uint(reserve1), feePercent) */\n      swap2\n      pop\n      pop\n        /* \"contracts/pair.sol\":15259:15517  function getAmountOut(uint amountIn, address tokenIn) external view returns (uint) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":17466:17818  function drainWrongToken(address token, address to) external lock {... */\n    tag_158:\n        /* \"contracts/pair.sol\":1507:1508  1 */\n      0x01\n        /* \"contracts/pair.sol\":1495:1503  unlocked */\n      sload(0x0d)\n        /* \"contracts/pair.sol\":1495:1508  unlocked == 1 */\n      eq\n        /* \"contracts/pair.sol\":1487:1534  require(unlocked == 1, 'eZKaliburPair: LOCKED') */\n      tag_317\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a204c4f434b45440000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_317:\n        /* \"contracts/pair.sol\":1551:1552  0 */\n      0x00\n        /* \"contracts/pair.sol\":1540:1548  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1540:1552  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":17569:17576  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":17560:17583  IFactory(factory).owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"contracts/pair.sol\":17560:17585  IFactory(factory).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_319\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_319:\n        /* \"contracts/pair.sol\":17560:17585  IFactory(factory).owner() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_320\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_320:\n        /* \"contracts/pair.sol\":17560:17585  IFactory(factory).owner() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_321\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_321:\n        /* \"contracts/pair.sol\":17560:17585  IFactory(factory).owner() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":17546:17585  msg.sender == IFactory(factory).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":17546:17556  msg.sender */\n      caller\n        /* \"contracts/pair.sol\":17546:17585  msg.sender == IFactory(factory).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/pair.sol\":17538:17625  require(msg.sender == IFactory(factory).owner(), \"eZKaliburPair: only factory's owner\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_fd83120603ed4d82de96120f878f97f3eab3d3e5b9b17eb433b2f605b574072d\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n        /* \"contracts/pair.sol\":17648:17654  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":17639:17654  token != token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":17639:17644  token */\n      dup3\n        /* \"contracts/pair.sol\":17639:17654  token != token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/pair.sol\":17639:17673  token != token0 && token != token1 */\n      dup1\n      iszero\n      tag_323\n      jumpi\n      pop\n        /* \"contracts/pair.sol\":17667:17673  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":17658:17673  token != token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":17658:17663  token */\n      dup3\n        /* \"contracts/pair.sol\":17658:17673  token != token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/pair.sol\":17639:17673  token != token0 && token != token1 */\n    tag_323:\n        /* \"contracts/pair.sol\":17631:17706  require(token != token0 && token != token1, \"eZKaliburPair: invalid token\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a20696e76616c696420746f6b656e00000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_324:\n        /* \"contracts/pair.sol\":17712:17776  _safeTransfer(token, to, IERC20(token).balanceOf(address(this))) */\n      tag_325\n        /* \"contracts/pair.sol\":17726:17731  token */\n      dup3\n        /* \"contracts/pair.sol\":17733:17735  to */\n      dup3\n        /* \"contracts/pair.sol\":17744:17749  token */\n      dup5\n        /* \"contracts/pair.sol\":17737:17760  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/pair.sol\":17769:17773  this */\n      address\n        /* \"contracts/pair.sol\":17737:17775  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_326\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_326:\n        /* \"contracts/pair.sol\":17737:17775  IERC20(token).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_327\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_327:\n        /* \"contracts/pair.sol\":17737:17775  IERC20(token).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_328\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_328:\n        /* \"contracts/pair.sol\":17737:17775  IERC20(token).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":17712:17725  _safeTransfer */\n      tag_279\n        /* \"contracts/pair.sol\":17712:17776  _safeTransfer(token, to, IERC20(token).balanceOf(address(this))) */\n      jump\t// in\n    tag_325:\n        /* \"contracts/pair.sol\":17803:17808  token */\n      dup2\n        /* \"contracts/pair.sol\":17787:17813  DrainWrongToken(token, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x368a9dc863ecb94b5ba32a682e26295b10d9c2666fad7d785ebdf262c3c52413\n        /* \"contracts/pair.sol\":17810:17812  to */\n      dup3\n        /* \"contracts/pair.sol\":17787:17813  DrainWrongToken(token, to) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/pair.sol\":1576:1577  1 */\n      0x01\n        /* \"contracts/pair.sol\":1565:1573  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1565:1577  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":17466:17818  function drainWrongToken(address token, address to) external lock {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":17037:17352  function sync() external lock {... */\n    tag_160:\n        /* \"contracts/pair.sol\":1507:1508  1 */\n      0x01\n        /* \"contracts/pair.sol\":1495:1503  unlocked */\n      sload(0x0d)\n        /* \"contracts/pair.sol\":1495:1508  unlocked == 1 */\n      eq\n        /* \"contracts/pair.sol\":1487:1534  require(unlocked == 1, 'eZKaliburPair: LOCKED') */\n      tag_330\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a204c4f434b45440000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_330:\n        /* \"contracts/pair.sol\":1551:1552  0 */\n      0x00\n        /* \"contracts/pair.sol\":1540:1548  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1540:1552  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":17073:17091  uint token0Balance */\n      0x00\n        /* \"contracts/pair.sol\":17101:17107  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":17094:17118  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/pair.sol\":17127:17131  this */\n      address\n        /* \"contracts/pair.sol\":17094:17133  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_332\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_332:\n        /* \"contracts/pair.sol\":17094:17133  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_333\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_333:\n        /* \"contracts/pair.sol\":17094:17133  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_334\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_334:\n        /* \"contracts/pair.sol\":17094:17133  IERC20(token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":17073:17133  uint token0Balance = IERC20(token0).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":17139:17157  uint token1Balance */\n      0x00\n        /* \"contracts/pair.sol\":17167:17173  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":17160:17184  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/pair.sol\":17193:17197  this */\n      address\n        /* \"contracts/pair.sol\":17160:17199  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_335\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_335:\n        /* \"contracts/pair.sol\":17160:17199  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_336\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_336:\n        /* \"contracts/pair.sol\":17160:17199  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_337\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_337:\n        /* \"contracts/pair.sol\":17160:17199  IERC20(token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":17139:17199  uint token1Balance = IERC20(token1).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":17230:17231  0 */\n      0x00\n        /* \"contracts/pair.sol\":17213:17226  token0Balance */\n      dup3\n        /* \"contracts/pair.sol\":17213:17231  token0Balance != 0 */\n      eq\n      iszero\n        /* \"contracts/pair.sol\":17213:17253  token0Balance != 0 && token1Balance != 0 */\n      dup1\n      iszero\n      tag_338\n      jumpi\n      pop\n        /* \"contracts/pair.sol\":17252:17253  0 */\n      0x00\n        /* \"contracts/pair.sol\":17235:17248  token1Balance */\n      dup2\n        /* \"contracts/pair.sol\":17235:17253  token1Balance != 0 */\n      eq\n      iszero\n        /* \"contracts/pair.sol\":17213:17253  token0Balance != 0 && token1Balance != 0 */\n    tag_338:\n        /* \"contracts/pair.sol\":17205:17304  require(token0Balance != 0 && token1Balance != 0, \"eZKaliburPair: liquidity ratio not initialized\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b812a7bb29dec6f526121e1bfdf77da0d9fd5f3d8c74be699d0a2f01be67e231\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_339:\n        /* \"contracts/pair.sol\":17310:17347  _update(token0Balance, token1Balance) */\n      tag_340\n        /* \"contracts/pair.sol\":17318:17331  token0Balance */\n      dup3\n        /* \"contracts/pair.sol\":17333:17346  token1Balance */\n      dup3\n        /* \"contracts/pair.sol\":17310:17317  _update */\n      tag_253\n        /* \"contracts/pair.sol\":17310:17347  _update(token0Balance, token1Balance) */\n      jump\t// in\n    tag_340:\n        /* \"contracts/pair.sol\":1558:1559  _ */\n      pop\n      pop\n        /* \"contracts/pair.sol\":1576:1577  1 */\n      0x01\n        /* \"contracts/pair.sol\":1565:1573  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1565:1577  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":17037:17352  function sync() external lock {... */\n      jump\t// out\n        /* \"contracts/pair.sol\":10039:14016  function _swap(TokensData memory tokensData, address to, bytes memory data, address referrer) internal lock {... */\n    tag_165:\n        /* \"contracts/pair.sol\":1507:1508  1 */\n      0x01\n        /* \"contracts/pair.sol\":1495:1503  unlocked */\n      sload(0x0d)\n        /* \"contracts/pair.sol\":1495:1508  unlocked == 1 */\n      eq\n        /* \"contracts/pair.sol\":1487:1534  require(unlocked == 1, 'eZKaliburPair: LOCKED') */\n      tag_342\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a204c4f434b45440000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_342:\n        /* \"contracts/pair.sol\":1551:1552  0 */\n      0x00\n        /* \"contracts/pair.sol\":1540:1548  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1540:1552  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":10185:10186  0 */\n      0x00\n        /* \"contracts/pair.sol\":10161:10171  tokensData */\n      dup5\n        /* \"contracts/pair.sol\":10161:10182  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/pair.sol\":10161:10186  tokensData.amount0Out > 0 */\n      gt\n        /* \"contracts/pair.sol\":10161:10215  tokensData.amount0Out > 0 || tokensData.amount1Out > 0 */\n      dup1\n      tag_344\n      jumpi\n      pop\n        /* \"contracts/pair.sol\":10214:10215  0 */\n      0x00\n        /* \"contracts/pair.sol\":10190:10200  tokensData */\n      dup5\n        /* \"contracts/pair.sol\":10190:10211  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/pair.sol\":10190:10215  tokensData.amount1Out > 0 */\n      gt\n        /* \"contracts/pair.sol\":10161:10215  tokensData.amount0Out > 0 || tokensData.amount1Out > 0 */\n    tag_344:\n        /* \"contracts/pair.sol\":10153:10261  require(tokensData.amount0Out > 0 || tokensData.amount1Out > 0, 'eZKaliburPair: INSUFFICIENT_OUTPUT_AMOUNT') */\n      tag_345\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_985af2d628585b86a62c2a3e0e095aa532421cf73afcd9f40539c0e984229c9a\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_345:\n        /* \"contracts/pair.sol\":10269:10286  uint112 _reserve0 */\n      0x00\n        /* \"contracts/pair.sol\":10288:10305  uint112 _reserve1 */\n      dup1\n        /* \"contracts/pair.sol\":10307:10331  uint16 _token0FeePercent */\n      0x00\n        /* \"contracts/pair.sol\":10333:10357  uint16 _token1FeePercent */\n      dup1\n        /* \"contracts/pair.sol\":10361:10374  getReserves() */\n      tag_346\n        /* \"contracts/pair.sol\":10361:10372  getReserves */\n      tag_63\n        /* \"contracts/pair.sol\":10361:10374  getReserves() */\n      jump\t// in\n    tag_346:\n        /* \"contracts/pair.sol\":10268:10374  (uint112 _reserve0, uint112 _reserve1, uint16 _token0FeePercent, uint16 _token1FeePercent) = getReserves() */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"contracts/pair.sol\":10412:10421  _reserve0 */\n      dup4\n        /* \"contracts/pair.sol\":10388:10421  tokensData.amount0Out < _reserve0 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":10388:10398  tokensData */\n      dup9\n        /* \"contracts/pair.sol\":10388:10409  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/pair.sol\":10388:10421  tokensData.amount0Out < _reserve0 */\n      lt\n        /* \"contracts/pair.sol\":10388:10458  tokensData.amount0Out < _reserve0 && tokensData.amount1Out < _reserve1 */\n      dup1\n      iszero\n      tag_347\n      jumpi\n      pop\n        /* \"contracts/pair.sol\":10449:10458  _reserve1 */\n      dup3\n        /* \"contracts/pair.sol\":10425:10458  tokensData.amount1Out < _reserve1 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":10425:10435  tokensData */\n      dup9\n        /* \"contracts/pair.sol\":10425:10446  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/pair.sol\":10425:10458  tokensData.amount1Out < _reserve1 */\n      lt\n        /* \"contracts/pair.sol\":10388:10458  tokensData.amount0Out < _reserve0 && tokensData.amount1Out < _reserve1 */\n    tag_347:\n        /* \"contracts/pair.sol\":10380:10500  require(tokensData.amount0Out < _reserve0 && tokensData.amount1Out < _reserve1, 'eZKaliburPair: INSUFFICIENT_LIQUIDITY') */\n      tag_348\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6c8afa2437545964ffee4c84b28541af800177f71a1bad08a0655cae5b8d43e9\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_348:\n        /* \"contracts/pair.sol\":10530:10540  tokensData */\n      dup8\n        /* \"contracts/pair.sol\":10530:10547  tokensData.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/pair.sol\":10524:10547  to != tokensData.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":10524:10526  to */\n      dup8\n        /* \"contracts/pair.sol\":10524:10547  to != tokensData.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/pair.sol\":10524:10574  to != tokensData.token0 && to != tokensData.token1 */\n      dup1\n      iszero\n      tag_349\n      jumpi\n      pop\n        /* \"contracts/pair.sol\":10557:10567  tokensData */\n      dup8\n        /* \"contracts/pair.sol\":10557:10574  tokensData.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/pair.sol\":10551:10574  to != tokensData.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":10551:10553  to */\n      dup8\n        /* \"contracts/pair.sol\":10551:10574  to != tokensData.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/pair.sol\":10524:10574  to != tokensData.token0 && to != tokensData.token1 */\n    tag_349:\n        /* \"contracts/pair.sol\":10516:10604  require(to != tokensData.token0 && to != tokensData.token1, 'eZKaliburPair: INVALID_TO') */\n      tag_350\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a20494e56414c49445f544f00000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_350:\n        /* \"contracts/pair.sol\":10680:10681  0 */\n      0x00\n        /* \"contracts/pair.sol\":10656:10666  tokensData */\n      dup9\n        /* \"contracts/pair.sol\":10656:10677  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/pair.sol\":10656:10681  tokensData.amount0Out > 0 */\n      gt\n        /* \"contracts/pair.sol\":10652:10742  if (tokensData.amount0Out > 0) _safeTransfer(tokensData.token0, to, tokensData.amount0Out) */\n      iszero\n      tag_351\n      jumpi\n        /* \"contracts/pair.sol\":10683:10742  _safeTransfer(tokensData.token0, to, tokensData.amount0Out) */\n      tag_352\n        /* \"contracts/pair.sol\":10697:10707  tokensData */\n      dup9\n        /* \"contracts/pair.sol\":10697:10714  tokensData.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/pair.sol\":10716:10718  to */\n      dup9\n        /* \"contracts/pair.sol\":10720:10730  tokensData */\n      dup11\n        /* \"contracts/pair.sol\":10720:10741  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/pair.sol\":10683:10696  _safeTransfer */\n      tag_279\n        /* \"contracts/pair.sol\":10683:10742  _safeTransfer(tokensData.token0, to, tokensData.amount0Out) */\n      jump\t// in\n    tag_352:\n        /* \"contracts/pair.sol\":10652:10742  if (tokensData.amount0Out > 0) _safeTransfer(tokensData.token0, to, tokensData.amount0Out) */\n    tag_351:\n        /* \"contracts/pair.sol\":10818:10819  0 */\n      0x00\n        /* \"contracts/pair.sol\":10794:10804  tokensData */\n      dup9\n        /* \"contracts/pair.sol\":10794:10815  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/pair.sol\":10794:10819  tokensData.amount1Out > 0 */\n      gt\n        /* \"contracts/pair.sol\":10790:10880  if (tokensData.amount1Out > 0) _safeTransfer(tokensData.token1, to, tokensData.amount1Out) */\n      iszero\n      tag_353\n      jumpi\n        /* \"contracts/pair.sol\":10821:10880  _safeTransfer(tokensData.token1, to, tokensData.amount1Out) */\n      tag_354\n        /* \"contracts/pair.sol\":10835:10845  tokensData */\n      dup9\n        /* \"contracts/pair.sol\":10835:10852  tokensData.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/pair.sol\":10854:10856  to */\n      dup9\n        /* \"contracts/pair.sol\":10858:10868  tokensData */\n      dup11\n        /* \"contracts/pair.sol\":10858:10879  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/pair.sol\":10821:10834  _safeTransfer */\n      tag_279\n        /* \"contracts/pair.sol\":10821:10880  _safeTransfer(tokensData.token1, to, tokensData.amount1Out) */\n      jump\t// in\n    tag_354:\n        /* \"contracts/pair.sol\":10790:10880  if (tokensData.amount1Out > 0) _safeTransfer(tokensData.token1, to, tokensData.amount1Out) */\n    tag_353:\n        /* \"contracts/pair.sol\":10906:10907  0 */\n      0x00\n        /* \"contracts/pair.sol\":10892:10896  data */\n      dup7\n        /* \"contracts/pair.sol\":10892:10903  data.length */\n      mload\n        /* \"contracts/pair.sol\":10892:10907  data.length > 0 */\n      gt\n        /* \"contracts/pair.sol\":10888:11007  if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, tokensData.amount0Out, tokensData.amount1Out, data) */\n      iszero\n      tag_355\n      jumpi\n        /* \"contracts/pair.sol\":10926:10928  to */\n      dup7\n        /* \"contracts/pair.sol\":10909:10943  IUniswapV2Callee(to).uniswapV2Call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x10d1e85c\n        /* \"contracts/pair.sol\":10944:10954  msg.sender */\n      caller\n        /* \"contracts/pair.sol\":10956:10966  tokensData */\n      dup11\n        /* \"contracts/pair.sol\":10956:10977  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/pair.sol\":10979:10989  tokensData */\n      dup12\n        /* \"contracts/pair.sol\":10979:11000  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/pair.sol\":11002:11006  data */\n      dup11\n        /* \"contracts/pair.sol\":10909:11007  IUniswapV2Callee(to).uniswapV2Call(msg.sender, tokensData.amount0Out, tokensData.amount1Out, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_356:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_358\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_356)\n    tag_358:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/pair.sol\":10909:11007  IUniswapV2Callee(to).uniswapV2Call(msg.sender, tokensData.amount0Out, tokensData.amount1Out, data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_359\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_359:\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_360\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_360:\n        /* \"contracts/pair.sol\":10909:11007  IUniswapV2Callee(to).uniswapV2Call(msg.sender, tokensData.amount0Out, tokensData.amount1Out, data) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_361\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_361:\n        /* \"contracts/pair.sol\":10909:11007  IUniswapV2Callee(to).uniswapV2Call(msg.sender, tokensData.amount0Out, tokensData.amount1Out, data) */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":10888:11007  if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, tokensData.amount0Out, tokensData.amount1Out, data) */\n    tag_355:\n        /* \"contracts/pair.sol\":11044:11054  tokensData */\n      dup8\n        /* \"contracts/pair.sol\":11044:11061  tokensData.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/pair.sol\":11037:11072  IERC20(tokensData.token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/pair.sol\":11081:11085  this */\n      address\n        /* \"contracts/pair.sol\":11037:11087  IERC20(tokensData.token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_362\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_362:\n        /* \"contracts/pair.sol\":11037:11087  IERC20(tokensData.token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_363\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_363:\n        /* \"contracts/pair.sol\":11037:11087  IERC20(tokensData.token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_364\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_364:\n        /* \"contracts/pair.sol\":11037:11087  IERC20(tokensData.token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":11015:11025  tokensData */\n      dup9\n        /* \"contracts/pair.sol\":11015:11034  tokensData.balance0 */\n      0x80\n      add\n        /* \"contracts/pair.sol\":11015:11087  tokensData.balance0 = IERC20(tokensData.token0).balanceOf(address(this)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/pair.sol\":11124:11134  tokensData */\n      dup8\n        /* \"contracts/pair.sol\":11124:11141  tokensData.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/pair.sol\":11117:11152  IERC20(tokensData.token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/pair.sol\":11161:11165  this */\n      address\n        /* \"contracts/pair.sol\":11117:11167  IERC20(tokensData.token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_365\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_365:\n        /* \"contracts/pair.sol\":11117:11167  IERC20(tokensData.token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_366\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_366:\n        /* \"contracts/pair.sol\":11117:11167  IERC20(tokensData.token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_367\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_367:\n        /* \"contracts/pair.sol\":11117:11167  IERC20(tokensData.token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":11095:11105  tokensData */\n      dup9\n        /* \"contracts/pair.sol\":11095:11114  tokensData.balance1 */\n      0xa0\n      add\n        /* \"contracts/pair.sol\":11095:11167  tokensData.balance1 = IERC20(tokensData.token1).balanceOf(address(this)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/pair.sol\":11180:11194  uint amount0In */\n      0x00\n        /* \"contracts/pair.sol\":11231:11241  tokensData */\n      dup9\n        /* \"contracts/pair.sol\":11231:11252  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/pair.sol\":11219:11228  _reserve0 */\n      dup6\n        /* \"contracts/pair.sol\":11219:11252  _reserve0 - tokensData.amount0Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/pair.sol\":11197:11207  tokensData */\n      dup10\n        /* \"contracts/pair.sol\":11197:11216  tokensData.balance0 */\n      0x80\n      add\n      mload\n        /* \"contracts/pair.sol\":11197:11252  tokensData.balance0 > _reserve0 - tokensData.amount0Out */\n      gt\n        /* \"contracts/pair.sol\":11197:11316  tokensData.balance0 > _reserve0 - tokensData.amount0Out ? tokensData.balance0 - (_reserve0 - tokensData.amount0Out) : 0 */\n      tag_368\n      jumpi\n        /* \"contracts/pair.sol\":11315:11316  0 */\n      0x00\n        /* \"contracts/pair.sol\":11197:11316  tokensData.balance0 > _reserve0 - tokensData.amount0Out ? tokensData.balance0 - (_reserve0 - tokensData.amount0Out) : 0 */\n      jump(tag_369)\n    tag_368:\n        /* \"contracts/pair.sol\":11290:11300  tokensData */\n      dup9\n        /* \"contracts/pair.sol\":11290:11311  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/pair.sol\":11278:11287  _reserve0 */\n      dup6\n        /* \"contracts/pair.sol\":11278:11311  _reserve0 - tokensData.amount0Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/pair.sol\":11255:11265  tokensData */\n      dup10\n        /* \"contracts/pair.sol\":11255:11274  tokensData.balance0 */\n      0x80\n      add\n      mload\n        /* \"contracts/pair.sol\":11255:11312  tokensData.balance0 - (_reserve0 - tokensData.amount0Out) */\n      sub\n        /* \"contracts/pair.sol\":11197:11316  tokensData.balance0 > _reserve0 - tokensData.amount0Out ? tokensData.balance0 - (_reserve0 - tokensData.amount0Out) : 0 */\n    tag_369:\n        /* \"contracts/pair.sol\":11180:11316  uint amount0In = tokensData.balance0 > _reserve0 - tokensData.amount0Out ? tokensData.balance0 - (_reserve0 - tokensData.amount0Out) : 0 */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":11322:11336  uint amount1In */\n      0x00\n        /* \"contracts/pair.sol\":11373:11383  tokensData */\n      dup10\n        /* \"contracts/pair.sol\":11373:11394  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/pair.sol\":11361:11370  _reserve1 */\n      dup6\n        /* \"contracts/pair.sol\":11361:11394  _reserve1 - tokensData.amount1Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/pair.sol\":11339:11349  tokensData */\n      dup11\n        /* \"contracts/pair.sol\":11339:11358  tokensData.balance1 */\n      0xa0\n      add\n      mload\n        /* \"contracts/pair.sol\":11339:11394  tokensData.balance1 > _reserve1 - tokensData.amount1Out */\n      gt\n        /* \"contracts/pair.sol\":11339:11458  tokensData.balance1 > _reserve1 - tokensData.amount1Out ? tokensData.balance1 - (_reserve1 - tokensData.amount1Out) : 0 */\n      tag_370\n      jumpi\n        /* \"contracts/pair.sol\":11457:11458  0 */\n      0x00\n        /* \"contracts/pair.sol\":11339:11458  tokensData.balance1 > _reserve1 - tokensData.amount1Out ? tokensData.balance1 - (_reserve1 - tokensData.amount1Out) : 0 */\n      jump(tag_371)\n    tag_370:\n        /* \"contracts/pair.sol\":11432:11442  tokensData */\n      dup10\n        /* \"contracts/pair.sol\":11432:11453  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/pair.sol\":11420:11429  _reserve1 */\n      dup6\n        /* \"contracts/pair.sol\":11420:11453  _reserve1 - tokensData.amount1Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/pair.sol\":11397:11407  tokensData */\n      dup11\n        /* \"contracts/pair.sol\":11397:11416  tokensData.balance1 */\n      0xa0\n      add\n      mload\n        /* \"contracts/pair.sol\":11397:11454  tokensData.balance1 - (_reserve1 - tokensData.amount1Out) */\n      sub\n        /* \"contracts/pair.sol\":11339:11458  tokensData.balance1 > _reserve1 - tokensData.amount1Out ? tokensData.balance1 - (_reserve1 - tokensData.amount1Out) : 0 */\n    tag_371:\n        /* \"contracts/pair.sol\":11322:11458  uint amount1In = tokensData.balance1 > _reserve1 - tokensData.amount1Out ? tokensData.balance1 - (_reserve1 - tokensData.amount1Out) : 0 */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":11484:11485  0 */\n      0x00\n        /* \"contracts/pair.sol\":11472:11481  amount0In */\n      dup3\n        /* \"contracts/pair.sol\":11472:11485  amount0In > 0 */\n      gt\n        /* \"contracts/pair.sol\":11472:11502  amount0In > 0 || amount1In > 0 */\n      dup1\n      tag_372\n      jumpi\n      pop\n        /* \"contracts/pair.sol\":11501:11502  0 */\n      0x00\n        /* \"contracts/pair.sol\":11489:11498  amount1In */\n      dup2\n        /* \"contracts/pair.sol\":11489:11502  amount1In > 0 */\n      gt\n        /* \"contracts/pair.sol\":11472:11502  amount0In > 0 || amount1In > 0 */\n    tag_372:\n        /* \"contracts/pair.sol\":11464:11547  require(amount0In > 0 || amount1In > 0, 'eZKaliburPair: INSUFFICIENT_INPUT_AMOUNT') */\n      tag_373\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b31389cdce9c235fb73cf94e115b26cc6b115463d873636778ed56513abefea0\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_373:\n        /* \"contracts/pair.sol\":606:612  100000 */\n      0x0186a0\n        /* \"contracts/pair.sol\":11581:11613  amount0In.mul(_token0FeePercent) */\n      tag_374\n        /* \"contracts/pair.sol\":11595:11612  _token0FeePercent */\n      dup6\n        /* \"contracts/pair.sol\":11581:11613  amount0In.mul(_token0FeePercent) */\n      0xffff\n      and\n        /* \"contracts/pair.sol\":11581:11590  amount0In */\n      dup5\n        /* \"contracts/pair.sol\":11581:11594  amount0In.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":11581:11613  amount0In.mul(_token0FeePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_374:\n        /* \"contracts/pair.sol\":11581:11631  amount0In.mul(_token0FeePercent) / FEE_DENOMINATOR */\n      dup2\n      tag_375\n      jumpi\n      invalid\n    tag_375:\n      div\n        /* \"contracts/pair.sol\":11554:11564  tokensData */\n      dup11\n        /* \"contracts/pair.sol\":11554:11578  tokensData.remainingFee0 */\n      0xc0\n      add\n        /* \"contracts/pair.sol\":11554:11631  tokensData.remainingFee0 = amount0In.mul(_token0FeePercent) / FEE_DENOMINATOR */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/pair.sol\":606:612  100000 */\n      0x0186a0\n        /* \"contracts/pair.sol\":11664:11696  amount1In.mul(_token1FeePercent) */\n      tag_376\n        /* \"contracts/pair.sol\":11678:11695  _token1FeePercent */\n      dup5\n        /* \"contracts/pair.sol\":11664:11696  amount1In.mul(_token1FeePercent) */\n      0xffff\n      and\n        /* \"contracts/pair.sol\":11664:11673  amount1In */\n      dup4\n        /* \"contracts/pair.sol\":11664:11677  amount1In.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":11664:11696  amount1In.mul(_token1FeePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_376:\n        /* \"contracts/pair.sol\":11664:11714  amount1In.mul(_token1FeePercent) / FEE_DENOMINATOR */\n      dup2\n      tag_377\n      jumpi\n      invalid\n    tag_377:\n      div\n        /* \"contracts/pair.sol\":11637:11647  tokensData */\n      dup11\n        /* \"contracts/pair.sol\":11637:11661  tokensData.remainingFee1 */\n      0xe0\n      add\n        /* \"contracts/pair.sol\":11637:11714  tokensData.remainingFee1 = amount1In.mul(_token1FeePercent) / FEE_DENOMINATOR */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/pair.sol\":11772:11780  uint fee */\n      0x00\n        /* \"contracts/pair.sol\":11783:11784  0 */\n      dup1\n        /* \"contracts/pair.sol\":11772:11784  uint fee = 0 */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":11793:11819  uint referrerInputFeeShare */\n      0x00\n        /* \"contracts/pair.sol\":11842:11843  0 */\n      dup1\n        /* \"contracts/pair.sol\":11822:11844  referrer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":11822:11830  referrer */\n      dup10\n        /* \"contracts/pair.sol\":11822:11844  referrer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/pair.sol\":11822:11896  referrer != address(0) ? IFactory(factory).referrersFeeShare(referrer) : 0 */\n      tag_378\n      jumpi\n        /* \"contracts/pair.sol\":11895:11896  0 */\n      0x00\n        /* \"contracts/pair.sol\":11822:11896  referrer != address(0) ? IFactory(factory).referrersFeeShare(referrer) : 0 */\n      jump(tag_379)\n    tag_378:\n        /* \"contracts/pair.sol\":11856:11863  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":11847:11882  IFactory(factory).referrersFeeShare */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7183d47c\n        /* \"contracts/pair.sol\":11883:11891  referrer */\n      dup11\n        /* \"contracts/pair.sol\":11847:11892  IFactory(factory).referrersFeeShare(referrer) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_380\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_380:\n        /* \"contracts/pair.sol\":11847:11892  IFactory(factory).referrersFeeShare(referrer) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_381\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_381:\n        /* \"contracts/pair.sol\":11847:11892  IFactory(factory).referrersFeeShare(referrer) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_382\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_382:\n        /* \"contracts/pair.sol\":11847:11892  IFactory(factory).referrersFeeShare(referrer) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":11822:11896  referrer != address(0) ? IFactory(factory).referrersFeeShare(referrer) : 0 */\n    tag_379:\n        /* \"contracts/pair.sol\":11793:11896  uint referrerInputFeeShare = referrer != address(0) ? IFactory(factory).referrersFeeShare(referrer) : 0 */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":11932:11933  0 */\n      0x00\n        /* \"contracts/pair.sol\":11908:11929  referrerInputFeeShare */\n      dup2\n        /* \"contracts/pair.sol\":11908:11933  referrerInputFeeShare > 0 */\n      gt\n        /* \"contracts/pair.sol\":11904:12488  if (referrerInputFeeShare > 0) {... */\n      iszero\n      tag_383\n      jumpi\n        /* \"contracts/pair.sol\":11961:11962  0 */\n      0x00\n        /* \"contracts/pair.sol\":11949:11958  amount0In */\n      dup5\n        /* \"contracts/pair.sol\":11949:11962  amount0In > 0 */\n      gt\n        /* \"contracts/pair.sol\":11945:12208  if (amount0In > 0) {... */\n      iszero\n      tag_384\n      jumpi\n        /* \"contracts/pair.sol\":12064:12065  2 */\n      0x02\n        /* \"contracts/pair.sol\":606:612  100000 */\n      0x0186a0\n        /* \"contracts/pair.sol\":12045:12065  FEE_DENOMINATOR ** 2 */\n      exp\n        /* \"contracts/pair.sol\":11982:12041  amount0In.mul(referrerInputFeeShare).mul(_token0FeePercent) */\n      tag_385\n        /* \"contracts/pair.sol\":12023:12040  _token0FeePercent */\n      dup8\n        /* \"contracts/pair.sol\":11982:12041  amount0In.mul(referrerInputFeeShare).mul(_token0FeePercent) */\n      0xffff\n      and\n        /* \"contracts/pair.sol\":11982:12018  amount0In.mul(referrerInputFeeShare) */\n      tag_386\n        /* \"contracts/pair.sol\":11996:12017  referrerInputFeeShare */\n      dup5\n        /* \"contracts/pair.sol\":11982:11991  amount0In */\n      dup9\n        /* \"contracts/pair.sol\":11982:11995  amount0In.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":11982:12018  amount0In.mul(referrerInputFeeShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_386:\n        /* \"contracts/pair.sol\":11982:12022  amount0In.mul(referrerInputFeeShare).mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":11982:12041  amount0In.mul(referrerInputFeeShare).mul(_token0FeePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_385:\n        /* \"contracts/pair.sol\":11982:12066  amount0In.mul(referrerInputFeeShare).mul(_token0FeePercent) / (FEE_DENOMINATOR ** 2) */\n      dup2\n      tag_387\n      jumpi\n      invalid\n    tag_387:\n      div\n        /* \"contracts/pair.sol\":11976:12066  fee = amount0In.mul(referrerInputFeeShare).mul(_token0FeePercent) / (FEE_DENOMINATOR ** 2) */\n      swap2\n      pop\n        /* \"contracts/pair.sol\":12105:12138  tokensData.remainingFee0.sub(fee) */\n      tag_388\n        /* \"contracts/pair.sol\":12134:12137  fee */\n      dup3\n        /* \"contracts/pair.sol\":12105:12115  tokensData */\n      dup14\n        /* \"contracts/pair.sol\":12105:12129  tokensData.remainingFee0 */\n      0xc0\n      add\n      mload\n        /* \"contracts/pair.sol\":12105:12133  tokensData.remainingFee0.sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":12105:12138  tokensData.remainingFee0.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_388:\n        /* \"contracts/pair.sol\":12078:12088  tokensData */\n      dup13\n        /* \"contracts/pair.sol\":12078:12102  tokensData.remainingFee0 */\n      0xc0\n      add\n        /* \"contracts/pair.sol\":12078:12138  tokensData.remainingFee0 = tokensData.remainingFee0.sub(fee) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/pair.sol\":12150:12197  _safeTransfer(tokensData.token0, referrer, fee) */\n      tag_389\n        /* \"contracts/pair.sol\":12164:12174  tokensData */\n      dup13\n        /* \"contracts/pair.sol\":12164:12181  tokensData.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/pair.sol\":12183:12191  referrer */\n      dup11\n        /* \"contracts/pair.sol\":12193:12196  fee */\n      dup5\n        /* \"contracts/pair.sol\":12150:12163  _safeTransfer */\n      tag_279\n        /* \"contracts/pair.sol\":12150:12197  _safeTransfer(tokensData.token0, referrer, fee) */\n      jump\t// in\n    tag_389:\n        /* \"contracts/pair.sol\":11945:12208  if (amount0In > 0) {... */\n    tag_384:\n        /* \"contracts/pair.sol\":12233:12234  0 */\n      0x00\n        /* \"contracts/pair.sol\":12221:12230  amount1In */\n      dup4\n        /* \"contracts/pair.sol\":12221:12234  amount1In > 0 */\n      gt\n        /* \"contracts/pair.sol\":12217:12480  if (amount1In > 0) {... */\n      iszero\n      tag_390\n      jumpi\n        /* \"contracts/pair.sol\":12336:12337  2 */\n      0x02\n        /* \"contracts/pair.sol\":606:612  100000 */\n      0x0186a0\n        /* \"contracts/pair.sol\":12317:12337  FEE_DENOMINATOR ** 2 */\n      exp\n        /* \"contracts/pair.sol\":12254:12313  amount1In.mul(referrerInputFeeShare).mul(_token1FeePercent) */\n      tag_391\n        /* \"contracts/pair.sol\":12295:12312  _token1FeePercent */\n      dup7\n        /* \"contracts/pair.sol\":12254:12313  amount1In.mul(referrerInputFeeShare).mul(_token1FeePercent) */\n      0xffff\n      and\n        /* \"contracts/pair.sol\":12254:12290  amount1In.mul(referrerInputFeeShare) */\n      tag_392\n        /* \"contracts/pair.sol\":12268:12289  referrerInputFeeShare */\n      dup5\n        /* \"contracts/pair.sol\":12254:12263  amount1In */\n      dup8\n        /* \"contracts/pair.sol\":12254:12267  amount1In.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":12254:12290  amount1In.mul(referrerInputFeeShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_392:\n        /* \"contracts/pair.sol\":12254:12294  amount1In.mul(referrerInputFeeShare).mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":12254:12313  amount1In.mul(referrerInputFeeShare).mul(_token1FeePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_391:\n        /* \"contracts/pair.sol\":12254:12338  amount1In.mul(referrerInputFeeShare).mul(_token1FeePercent) / (FEE_DENOMINATOR ** 2) */\n      dup2\n      tag_393\n      jumpi\n      invalid\n    tag_393:\n      div\n        /* \"contracts/pair.sol\":12248:12338  fee = amount1In.mul(referrerInputFeeShare).mul(_token1FeePercent) / (FEE_DENOMINATOR ** 2) */\n      swap2\n      pop\n        /* \"contracts/pair.sol\":12377:12410  tokensData.remainingFee1.sub(fee) */\n      tag_394\n        /* \"contracts/pair.sol\":12406:12409  fee */\n      dup3\n        /* \"contracts/pair.sol\":12377:12387  tokensData */\n      dup14\n        /* \"contracts/pair.sol\":12377:12401  tokensData.remainingFee1 */\n      0xe0\n      add\n      mload\n        /* \"contracts/pair.sol\":12377:12405  tokensData.remainingFee1.sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":12377:12410  tokensData.remainingFee1.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_394:\n        /* \"contracts/pair.sol\":12350:12360  tokensData */\n      dup13\n        /* \"contracts/pair.sol\":12350:12374  tokensData.remainingFee1 */\n      0xe0\n      add\n        /* \"contracts/pair.sol\":12350:12410  tokensData.remainingFee1 = tokensData.remainingFee1.sub(fee) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/pair.sol\":12422:12469  _safeTransfer(tokensData.token1, referrer, fee) */\n      tag_395\n        /* \"contracts/pair.sol\":12436:12446  tokensData */\n      dup13\n        /* \"contracts/pair.sol\":12436:12453  tokensData.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/pair.sol\":12455:12463  referrer */\n      dup11\n        /* \"contracts/pair.sol\":12465:12468  fee */\n      dup5\n        /* \"contracts/pair.sol\":12422:12435  _safeTransfer */\n      tag_279\n        /* \"contracts/pair.sol\":12422:12469  _safeTransfer(tokensData.token1, referrer, fee) */\n      jump\t// in\n    tag_395:\n        /* \"contracts/pair.sol\":12217:12480  if (amount1In > 0) {... */\n    tag_390:\n        /* \"contracts/pair.sol\":11904:12488  if (referrerInputFeeShare > 0) {... */\n    tag_383:\n        /* \"contracts/pair.sol\":12499:12509  stableSwap */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/pair.sol\":12496:13269  if(stableSwap){... */\n      iszero\n      tag_396\n      jumpi\n        /* \"contracts/pair.sol\":12521:12539  uint ownerFeeShare */\n      0x00\n        /* \"contracts/pair.sol\":12541:12554  address feeTo */\n      dup1\n        /* \"contracts/pair.sol\":12567:12574  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":12558:12583  IFactory(factory).feeInfo */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x995b5aae\n        /* \"contracts/pair.sol\":12558:12585  IFactory(factory).feeInfo() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_397\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_397:\n        /* \"contracts/pair.sol\":12558:12585  IFactory(factory).feeInfo() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_398\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_398:\n        /* \"contracts/pair.sol\":12558:12585  IFactory(factory).feeInfo() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_399\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_399:\n        /* \"contracts/pair.sol\":12558:12585  IFactory(factory).feeInfo() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":12520:12585  (uint ownerFeeShare, address feeTo) = IFactory(factory).feeInfo() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/pair.sol\":12615:12616  0 */\n      0x00\n        /* \"contracts/pair.sol\":12598:12617  feeTo != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":12598:12603  feeTo */\n      dup2\n        /* \"contracts/pair.sol\":12598:12617  feeTo != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/pair.sol\":12595:13261  if(feeTo != address(0)) {... */\n      tag_400\n      jumpi\n        /* \"contracts/pair.sol\":12647:12708  FEE_DENOMINATOR.sub(referrerInputFeeShare).mul(ownerFeeShare) */\n      tag_401\n        /* \"contracts/pair.sol\":12694:12707  ownerFeeShare */\n      dup3\n        /* \"contracts/pair.sol\":12647:12689  FEE_DENOMINATOR.sub(referrerInputFeeShare) */\n      tag_402\n        /* \"contracts/pair.sol\":12667:12688  referrerInputFeeShare */\n      dup6\n        /* \"contracts/pair.sol\":606:612  100000 */\n      0x0186a0\n        /* \"contracts/pair.sol\":12647:12666  FEE_DENOMINATOR.sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":12647:12689  FEE_DENOMINATOR.sub(referrerInputFeeShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_402:\n        /* \"contracts/pair.sol\":12647:12693  FEE_DENOMINATOR.sub(referrerInputFeeShare).mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":12647:12708  FEE_DENOMINATOR.sub(referrerInputFeeShare).mul(ownerFeeShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_401:\n        /* \"contracts/pair.sol\":12631:12708  ownerFeeShare = FEE_DENOMINATOR.sub(referrerInputFeeShare).mul(ownerFeeShare) */\n      swap2\n      pop\n        /* \"contracts/pair.sol\":12736:12737  0 */\n      0x00\n        /* \"contracts/pair.sol\":12724:12733  amount0In */\n      dup7\n        /* \"contracts/pair.sol\":12724:12737  amount0In > 0 */\n      gt\n        /* \"contracts/pair.sol\":12720:12980  if (amount0In > 0) {... */\n      iszero\n      tag_403\n      jumpi\n        /* \"contracts/pair.sol\":12833:12834  3 */\n      0x03\n        /* \"contracts/pair.sol\":606:612  100000 */\n      0x0186a0\n        /* \"contracts/pair.sol\":12814:12834  FEE_DENOMINATOR ** 3 */\n      exp\n        /* \"contracts/pair.sol\":12759:12810  amount0In.mul(ownerFeeShare).mul(_token0FeePercent) */\n      tag_404\n        /* \"contracts/pair.sol\":12792:12809  _token0FeePercent */\n      dup10\n        /* \"contracts/pair.sol\":12759:12810  amount0In.mul(ownerFeeShare).mul(_token0FeePercent) */\n      0xffff\n      and\n        /* \"contracts/pair.sol\":12759:12787  amount0In.mul(ownerFeeShare) */\n      tag_405\n        /* \"contracts/pair.sol\":12773:12786  ownerFeeShare */\n      dup6\n        /* \"contracts/pair.sol\":12759:12768  amount0In */\n      dup11\n        /* \"contracts/pair.sol\":12759:12772  amount0In.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":12759:12787  amount0In.mul(ownerFeeShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_405:\n        /* \"contracts/pair.sol\":12759:12791  amount0In.mul(ownerFeeShare).mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":12759:12810  amount0In.mul(ownerFeeShare).mul(_token0FeePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_404:\n        /* \"contracts/pair.sol\":12759:12835  amount0In.mul(ownerFeeShare).mul(_token0FeePercent) / (FEE_DENOMINATOR ** 3) */\n      dup2\n      tag_406\n      jumpi\n      invalid\n    tag_406:\n      div\n        /* \"contracts/pair.sol\":12753:12835  fee = amount0In.mul(ownerFeeShare).mul(_token0FeePercent) / (FEE_DENOMINATOR ** 3) */\n      swap4\n      pop\n        /* \"contracts/pair.sol\":12876:12909  tokensData.remainingFee0.sub(fee) */\n      tag_407\n        /* \"contracts/pair.sol\":12905:12908  fee */\n      dup5\n        /* \"contracts/pair.sol\":12876:12886  tokensData */\n      dup16\n        /* \"contracts/pair.sol\":12876:12900  tokensData.remainingFee0 */\n      0xc0\n      add\n      mload\n        /* \"contracts/pair.sol\":12876:12904  tokensData.remainingFee0.sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":12876:12909  tokensData.remainingFee0.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_407:\n        /* \"contracts/pair.sol\":12849:12859  tokensData */\n      dup15\n        /* \"contracts/pair.sol\":12849:12873  tokensData.remainingFee0 */\n      0xc0\n      add\n        /* \"contracts/pair.sol\":12849:12909  tokensData.remainingFee0 = tokensData.remainingFee0.sub(fee) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/pair.sol\":12923:12967  _safeTransfer(tokensData.token0, feeTo, fee) */\n      tag_408\n        /* \"contracts/pair.sol\":12937:12947  tokensData */\n      dup15\n        /* \"contracts/pair.sol\":12937:12954  tokensData.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/pair.sol\":12956:12961  feeTo */\n      dup3\n        /* \"contracts/pair.sol\":12963:12966  fee */\n      dup7\n        /* \"contracts/pair.sol\":12923:12936  _safeTransfer */\n      tag_279\n        /* \"contracts/pair.sol\":12923:12967  _safeTransfer(tokensData.token0, feeTo, fee) */\n      jump\t// in\n    tag_408:\n        /* \"contracts/pair.sol\":12720:12980  if (amount0In > 0) {... */\n    tag_403:\n        /* \"contracts/pair.sol\":13007:13008  0 */\n      0x00\n        /* \"contracts/pair.sol\":12995:13004  amount1In */\n      dup6\n        /* \"contracts/pair.sol\":12995:13008  amount1In > 0 */\n      gt\n        /* \"contracts/pair.sol\":12991:13251  if (amount1In > 0) {... */\n      iszero\n      tag_409\n      jumpi\n        /* \"contracts/pair.sol\":13104:13105  3 */\n      0x03\n        /* \"contracts/pair.sol\":606:612  100000 */\n      0x0186a0\n        /* \"contracts/pair.sol\":13085:13105  FEE_DENOMINATOR ** 3 */\n      exp\n        /* \"contracts/pair.sol\":13030:13081  amount1In.mul(ownerFeeShare).mul(_token1FeePercent) */\n      tag_410\n        /* \"contracts/pair.sol\":13063:13080  _token1FeePercent */\n      dup9\n        /* \"contracts/pair.sol\":13030:13081  amount1In.mul(ownerFeeShare).mul(_token1FeePercent) */\n      0xffff\n      and\n        /* \"contracts/pair.sol\":13030:13058  amount1In.mul(ownerFeeShare) */\n      tag_411\n        /* \"contracts/pair.sol\":13044:13057  ownerFeeShare */\n      dup6\n        /* \"contracts/pair.sol\":13030:13039  amount1In */\n      dup10\n        /* \"contracts/pair.sol\":13030:13043  amount1In.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":13030:13058  amount1In.mul(ownerFeeShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_411:\n        /* \"contracts/pair.sol\":13030:13062  amount1In.mul(ownerFeeShare).mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":13030:13081  amount1In.mul(ownerFeeShare).mul(_token1FeePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_410:\n        /* \"contracts/pair.sol\":13030:13106  amount1In.mul(ownerFeeShare).mul(_token1FeePercent) / (FEE_DENOMINATOR ** 3) */\n      dup2\n      tag_412\n      jumpi\n      invalid\n    tag_412:\n      div\n        /* \"contracts/pair.sol\":13024:13106  fee = amount1In.mul(ownerFeeShare).mul(_token1FeePercent) / (FEE_DENOMINATOR ** 3) */\n      swap4\n      pop\n        /* \"contracts/pair.sol\":13147:13180  tokensData.remainingFee1.sub(fee) */\n      tag_413\n        /* \"contracts/pair.sol\":13176:13179  fee */\n      dup5\n        /* \"contracts/pair.sol\":13147:13157  tokensData */\n      dup16\n        /* \"contracts/pair.sol\":13147:13171  tokensData.remainingFee1 */\n      0xe0\n      add\n      mload\n        /* \"contracts/pair.sol\":13147:13175  tokensData.remainingFee1.sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":13147:13180  tokensData.remainingFee1.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_413:\n        /* \"contracts/pair.sol\":13120:13130  tokensData */\n      dup15\n        /* \"contracts/pair.sol\":13120:13144  tokensData.remainingFee1 */\n      0xe0\n      add\n        /* \"contracts/pair.sol\":13120:13180  tokensData.remainingFee1 = tokensData.remainingFee1.sub(fee) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/pair.sol\":13194:13238  _safeTransfer(tokensData.token1, feeTo, fee) */\n      tag_414\n        /* \"contracts/pair.sol\":13208:13218  tokensData */\n      dup15\n        /* \"contracts/pair.sol\":13208:13225  tokensData.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/pair.sol\":13227:13232  feeTo */\n      dup3\n        /* \"contracts/pair.sol\":13234:13237  fee */\n      dup7\n        /* \"contracts/pair.sol\":13194:13207  _safeTransfer */\n      tag_279\n        /* \"contracts/pair.sol\":13194:13238  _safeTransfer(tokensData.token1, feeTo, fee) */\n      jump\t// in\n    tag_414:\n        /* \"contracts/pair.sol\":12991:13251  if (amount1In > 0) {... */\n    tag_409:\n        /* \"contracts/pair.sol\":12595:13261  if(feeTo != address(0)) {... */\n    tag_400:\n        /* \"contracts/pair.sol\":12496:13269  if(stableSwap){... */\n      pop\n      pop\n    tag_396:\n        /* \"contracts/pair.sol\":13325:13326  0 */\n      0x00\n        /* \"contracts/pair.sol\":13313:13322  amount0In */\n      dup5\n        /* \"contracts/pair.sol\":13313:13326  amount0In > 0 */\n      gt\n        /* \"contracts/pair.sol\":13309:13400  if (amount0In > 0) tokensData.balance0 = IERC20(tokensData.token0).balanceOf(address(this)) */\n      iszero\n      tag_415\n      jumpi\n        /* \"contracts/pair.sol\":13357:13367  tokensData */\n      dup12\n        /* \"contracts/pair.sol\":13357:13374  tokensData.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/pair.sol\":13350:13385  IERC20(tokensData.token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/pair.sol\":13394:13398  this */\n      address\n        /* \"contracts/pair.sol\":13350:13400  IERC20(tokensData.token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_416\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_416:\n        /* \"contracts/pair.sol\":13350:13400  IERC20(tokensData.token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_417\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_417:\n        /* \"contracts/pair.sol\":13350:13400  IERC20(tokensData.token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_418\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_418:\n        /* \"contracts/pair.sol\":13350:13400  IERC20(tokensData.token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":13328:13338  tokensData */\n      dup13\n        /* \"contracts/pair.sol\":13328:13347  tokensData.balance0 */\n      0x80\n      add\n        /* \"contracts/pair.sol\":13328:13400  tokensData.balance0 = IERC20(tokensData.token0).balanceOf(address(this)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/pair.sol\":13309:13400  if (amount0In > 0) tokensData.balance0 = IERC20(tokensData.token0).balanceOf(address(this)) */\n    tag_415:\n        /* \"contracts/pair.sol\":13424:13425  0 */\n      0x00\n        /* \"contracts/pair.sol\":13412:13421  amount1In */\n      dup4\n        /* \"contracts/pair.sol\":13412:13425  amount1In > 0 */\n      gt\n        /* \"contracts/pair.sol\":13408:13499  if (amount1In > 0) tokensData.balance1 = IERC20(tokensData.token1).balanceOf(address(this)) */\n      iszero\n      tag_419\n      jumpi\n        /* \"contracts/pair.sol\":13456:13466  tokensData */\n      dup12\n        /* \"contracts/pair.sol\":13456:13473  tokensData.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/pair.sol\":13449:13484  IERC20(tokensData.token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/pair.sol\":13493:13497  this */\n      address\n        /* \"contracts/pair.sol\":13449:13499  IERC20(tokensData.token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_420\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_420:\n        /* \"contracts/pair.sol\":13449:13499  IERC20(tokensData.token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_421\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_421:\n        /* \"contracts/pair.sol\":13449:13499  IERC20(tokensData.token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_422\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_422:\n        /* \"contracts/pair.sol\":13449:13499  IERC20(tokensData.token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":13427:13437  tokensData */\n      dup13\n        /* \"contracts/pair.sol\":13427:13446  tokensData.balance1 */\n      0xa0\n      add\n        /* \"contracts/pair.sol\":13427:13499  tokensData.balance1 = IERC20(tokensData.token1).balanceOf(address(this)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/pair.sol\":13408:13499  if (amount1In > 0) tokensData.balance1 = IERC20(tokensData.token1).balanceOf(address(this)) */\n    tag_419:\n        /* \"contracts/pair.sol\":1558:1559  _ */\n      pop\n      pop\n        /* \"contracts/pair.sol\":13582:13603  uint balance0Adjusted */\n      0x00\n        /* \"contracts/pair.sol\":13606:13655  tokensData.balance0.sub(tokensData.remainingFee0) */\n      tag_423\n        /* \"contracts/pair.sol\":13630:13640  tokensData */\n      dup12\n        /* \"contracts/pair.sol\":13630:13654  tokensData.remainingFee0 */\n      0xc0\n      add\n      mload\n        /* \"contracts/pair.sol\":13606:13616  tokensData */\n      dup13\n        /* \"contracts/pair.sol\":13606:13625  tokensData.balance0 */\n      0x80\n      add\n      mload\n        /* \"contracts/pair.sol\":13606:13629  tokensData.balance0.sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":13606:13655  tokensData.balance0.sub(tokensData.remainingFee0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_423:\n        /* \"contracts/pair.sol\":13582:13655  uint balance0Adjusted = tokensData.balance0.sub(tokensData.remainingFee0) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":13663:13684  uint balance1Adjusted */\n      0x00\n        /* \"contracts/pair.sol\":13687:13736  tokensData.balance1.sub(tokensData.remainingFee1) */\n      tag_424\n        /* \"contracts/pair.sol\":13711:13721  tokensData */\n      dup13\n        /* \"contracts/pair.sol\":13711:13735  tokensData.remainingFee1 */\n      0xe0\n      add\n      mload\n        /* \"contracts/pair.sol\":13687:13697  tokensData */\n      dup14\n        /* \"contracts/pair.sol\":13687:13706  tokensData.balance1 */\n      0xa0\n      add\n      mload\n        /* \"contracts/pair.sol\":13687:13710  tokensData.balance1.sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":13687:13736  tokensData.balance1.sub(tokensData.remainingFee1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_424:\n        /* \"contracts/pair.sol\":13663:13736  uint balance1Adjusted = tokensData.balance1.sub(tokensData.remainingFee1) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":13794:13830  _k(uint(_reserve0), uint(_reserve1)) */\n      tag_425\n        /* \"contracts/pair.sol\":13802:13811  _reserve0 */\n      dup9\n        /* \"contracts/pair.sol\":13797:13812  uint(_reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":13819:13828  _reserve1 */\n      dup9\n        /* \"contracts/pair.sol\":13814:13829  uint(_reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":13794:13796  _k */\n      tag_193\n        /* \"contracts/pair.sol\":13794:13830  _k(uint(_reserve0), uint(_reserve1)) */\n      jump\t// in\n    tag_425:\n        /* \"contracts/pair.sol\":13752:13790  _k(balance0Adjusted, balance1Adjusted) */\n      tag_426\n        /* \"contracts/pair.sol\":13755:13771  balance0Adjusted */\n      dup4\n        /* \"contracts/pair.sol\":13773:13789  balance1Adjusted */\n      dup4\n        /* \"contracts/pair.sol\":13752:13754  _k */\n      tag_193\n        /* \"contracts/pair.sol\":13752:13790  _k(balance0Adjusted, balance1Adjusted) */\n      jump\t// in\n    tag_426:\n        /* \"contracts/pair.sol\":13752:13830  _k(balance0Adjusted, balance1Adjusted) >= _k(uint(_reserve0), uint(_reserve1)) */\n      lt\n      iszero\n        /* \"contracts/pair.sol\":13744:13851  require(_k(balance0Adjusted, balance1Adjusted) >= _k(uint(_reserve0), uint(_reserve1)), 'eZKaliburPair: K') */\n      tag_427\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a204b00000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_427:\n        /* \"contracts/pair.sol\":1558:1559  _ */\n      pop\n      pop\n        /* \"contracts/pair.sol\":13863:13912  _update(tokensData.balance0, tokensData.balance1) */\n      tag_428\n        /* \"contracts/pair.sol\":13871:13881  tokensData */\n      dup11\n        /* \"contracts/pair.sol\":13871:13890  tokensData.balance0 */\n      0x80\n      add\n      mload\n        /* \"contracts/pair.sol\":13892:13902  tokensData */\n      dup12\n        /* \"contracts/pair.sol\":13892:13911  tokensData.balance1 */\n      0xa0\n      add\n      mload\n        /* \"contracts/pair.sol\":13863:13870  _update */\n      tag_253\n        /* \"contracts/pair.sol\":13863:13912  _update(tokensData.balance0, tokensData.balance1) */\n      jump\t// in\n    tag_428:\n        /* \"contracts/pair.sol\":14008:14010  to */\n      dup9\n        /* \"contracts/pair.sol\":13923:14011  Swap(msg.sender, amount0In, amount1In, tokensData.amount0Out, tokensData.amount1Out, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":13928:13938  msg.sender */\n      caller\n        /* \"contracts/pair.sol\":13923:14011  Swap(msg.sender, amount0In, amount1In, tokensData.amount0Out, tokensData.amount1Out, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822\n        /* \"contracts/pair.sol\":13940:13949  amount0In */\n      dup5\n        /* \"contracts/pair.sol\":13951:13960  amount1In */\n      dup5\n        /* \"contracts/pair.sol\":13962:13972  tokensData */\n      dup15\n        /* \"contracts/pair.sol\":13962:13983  tokensData.amount0Out */\n      0x40\n      add\n      mload\n        /* \"contracts/pair.sol\":13985:13995  tokensData */\n      dup16\n        /* \"contracts/pair.sol\":13985:14006  tokensData.amount1Out */\n      0x60\n      add\n      mload\n        /* \"contracts/pair.sol\":13923:14011  Swap(msg.sender, amount0In, amount1In, tokensData.amount0Out, tokensData.amount1Out, to) */\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/pair.sol\":1558:1559  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":1576:1577  1 */\n      0x01\n        /* \"contracts/pair.sol\":1565:1573  unlocked */\n      0x0d\n        /* \"contracts/pair.sol\":1565:1577  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":10039:14016  function _swap(TokensData memory tokensData, address to, bytes memory data, address referrer) internal lock {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":1785:1951  function _approve(address owner, address spender, uint value) private {... */\n    tag_169:\n        /* \"contracts/UniswapV2ERC20.sol\":1893:1898  value */\n      dup1\n        /* \"contracts/UniswapV2ERC20.sol\":1865:1874  allowance */\n      0x02\n        /* \"contracts/UniswapV2ERC20.sol\":1865:1881  allowance[owner] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":1875:1880  owner */\n      dup6\n        /* \"contracts/UniswapV2ERC20.sol\":1865:1881  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":1865:1890  allowance[owner][spender] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":1882:1889  spender */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":1865:1890  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":1865:1898  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":1929:1936  spender */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":1913:1944  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2ERC20.sol\":1922:1927  owner */\n      dup4\n        /* \"contracts/UniswapV2ERC20.sol\":1913:1944  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/UniswapV2ERC20.sol\":1938:1943  value */\n      dup4\n        /* \"contracts/UniswapV2ERC20.sol\":1913:1944  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/UniswapV2ERC20.sol\":1785:1951  function _approve(address owner, address spender, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":288:415  function sub(uint x, uint y) internal pure returns (uint z) {... */\n    tag_173:\n        /* \"contracts/libraries/SafeMath.sol\":340:346  uint z */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":381:382  x */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":375:376  y */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":371:372  x */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":371:376  x - y */\n      sub\n        /* \"contracts/libraries/SafeMath.sol\":367:376  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":366:382  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":358:408  require((z = x - y) <= x, 'ds-math-sub-underflow') */\n      tag_431\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d7375622d756e646572666c6f770000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_431:\n        /* \"contracts/libraries/SafeMath.sol\":288:415  function sub(uint x, uint y) internal pure returns (uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":1957:2173  function _transfer(address from, address to, uint value) private {... */\n    tag_175:\n        /* \"contracts/UniswapV2ERC20.sol\":2050:2076  balanceOf[from].sub(value) */\n      tag_433\n        /* \"contracts/UniswapV2ERC20.sol\":2070:2075  value */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":2050:2059  balanceOf */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":2050:2065  balanceOf[from] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2060:2064  from */\n      dup7\n        /* \"contracts/UniswapV2ERC20.sol\":2050:2065  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/UniswapV2ERC20.sol\":2050:2069  balanceOf[from].sub */\n      tag_173\n      swap1\n        /* \"contracts/UniswapV2ERC20.sol\":2050:2076  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_433:\n        /* \"contracts/UniswapV2ERC20.sol\":2032:2041  balanceOf */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":2032:2047  balanceOf[from] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2042:2046  from */\n      dup6\n        /* \"contracts/UniswapV2ERC20.sol\":2032:2047  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":2032:2076  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":2102:2126  balanceOf[to].add(value) */\n      tag_434\n        /* \"contracts/UniswapV2ERC20.sol\":2120:2125  value */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":2102:2111  balanceOf */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":2102:2115  balanceOf[to] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2112:2114  to */\n      dup6\n        /* \"contracts/UniswapV2ERC20.sol\":2102:2115  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/UniswapV2ERC20.sol\":2102:2119  balanceOf[to].add */\n      tag_435\n      swap1\n        /* \"contracts/UniswapV2ERC20.sol\":2102:2126  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_434:\n        /* \"contracts/UniswapV2ERC20.sol\":2086:2095  balanceOf */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":2086:2099  balanceOf[to] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":2096:2098  to */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":2086:2099  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":2086:2126  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":2156:2158  to */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":2141:2166  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2ERC20.sol\":2150:2154  from */\n      dup4\n        /* \"contracts/UniswapV2ERC20.sol\":2141:2166  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/UniswapV2ERC20.sol\":2160:2165  value */\n      dup4\n        /* \"contracts/UniswapV2ERC20.sol\":2141:2166  Transfer(from, to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/UniswapV2ERC20.sol\":1957:2173  function _transfer(address from, address to, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":5341:6193  function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {... */\n    tag_188:\n        /* \"contracts/pair.sol\":5414:5424  bool feeOn */\n      0x00\n        /* \"contracts/pair.sol\":5435:5445  stableSwap */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/pair.sol\":5432:5459  if(stableSwap) return false */\n      iszero\n      tag_437\n      jumpi\n        /* \"contracts/pair.sol\":5454:5459  false */\n      0x00\n        /* \"contracts/pair.sol\":5447:5459  return false */\n      swap1\n      pop\n      jump(tag_436)\n        /* \"contracts/pair.sol\":5432:5459  if(stableSwap) return false */\n    tag_437:\n        /* \"contracts/pair.sol\":5467:5485  uint ownerFeeShare */\n      0x00\n        /* \"contracts/pair.sol\":5487:5500  address feeTo */\n      dup1\n        /* \"contracts/pair.sol\":5513:5520  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":5504:5529  IFactory(factory).feeInfo */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x995b5aae\n        /* \"contracts/pair.sol\":5504:5531  IFactory(factory).feeInfo() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_438\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_438:\n        /* \"contracts/pair.sol\":5504:5531  IFactory(factory).feeInfo() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_439\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_439:\n        /* \"contracts/pair.sol\":5504:5531  IFactory(factory).feeInfo() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_440\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_440:\n        /* \"contracts/pair.sol\":5504:5531  IFactory(factory).feeInfo() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":5466:5531  (uint ownerFeeShare, address feeTo) = IFactory(factory).feeInfo() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/pair.sol\":5562:5563  0 */\n      0x00\n        /* \"contracts/pair.sol\":5545:5564  feeTo != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":5545:5550  feeTo */\n      dup2\n        /* \"contracts/pair.sol\":5545:5564  feeTo != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/pair.sol\":5537:5564  feeOn = feeTo != address(0) */\n      swap3\n      pop\n        /* \"contracts/pair.sol\":5570:5581  uint _kLast */\n      0x00\n        /* \"contracts/pair.sol\":5584:5589  kLast */\n      sload(0x0b)\n        /* \"contracts/pair.sol\":5570:5589  uint _kLast = kLast */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":5618:5623  feeOn */\n      dup4\n        /* \"contracts/pair.sol\":5614:6189  if (feeOn) {... */\n      iszero\n      tag_441\n      jumpi\n        /* \"contracts/pair.sol\":5647:5648  0 */\n      0x00\n        /* \"contracts/pair.sol\":5637:5643  _kLast */\n      dup2\n        /* \"contracts/pair.sol\":5637:5648  _kLast != 0 */\n      eq\n        /* \"contracts/pair.sol\":5633:6136  if (_kLast != 0) {... */\n      tag_442\n      jumpi\n        /* \"contracts/pair.sol\":5660:5670  uint rootK */\n      0x00\n        /* \"contracts/pair.sol\":5673:5720  Math.sqrt(_k(uint(_reserve0), uint(_reserve1))) */\n      tag_443\n        /* \"contracts/pair.sol\":5683:5719  _k(uint(_reserve0), uint(_reserve1)) */\n      tag_444\n        /* \"contracts/pair.sol\":5691:5700  _reserve0 */\n      dup9\n        /* \"contracts/pair.sol\":5686:5701  uint(_reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":5708:5717  _reserve1 */\n      dup9\n        /* \"contracts/pair.sol\":5703:5718  uint(_reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":5683:5685  _k */\n      tag_193\n        /* \"contracts/pair.sol\":5683:5719  _k(uint(_reserve0), uint(_reserve1)) */\n      jump\t// in\n    tag_444:\n        /* \"contracts/pair.sol\":5673:5682  Math.sqrt */\n      tag_240\n        /* \"contracts/pair.sol\":5673:5720  Math.sqrt(_k(uint(_reserve0), uint(_reserve1))) */\n      jump\t// in\n    tag_443:\n        /* \"contracts/pair.sol\":5660:5720  uint rootK = Math.sqrt(_k(uint(_reserve0), uint(_reserve1))) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":5730:5744  uint rootKLast */\n      0x00\n        /* \"contracts/pair.sol\":5747:5764  Math.sqrt(_kLast) */\n      tag_445\n        /* \"contracts/pair.sol\":5757:5763  _kLast */\n      dup4\n        /* \"contracts/pair.sol\":5747:5756  Math.sqrt */\n      tag_240\n        /* \"contracts/pair.sol\":5747:5764  Math.sqrt(_kLast) */\n      jump\t// in\n    tag_445:\n        /* \"contracts/pair.sol\":5730:5764  uint rootKLast = Math.sqrt(_kLast) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":5786:5795  rootKLast */\n      dup1\n        /* \"contracts/pair.sol\":5778:5783  rootK */\n      dup3\n        /* \"contracts/pair.sol\":5778:5795  rootK > rootKLast */\n      gt\n        /* \"contracts/pair.sol\":5774:6128  if (rootK > rootKLast) {... */\n      iszero\n      tag_446\n      jumpi\n        /* \"contracts/pair.sol\":5809:5815  uint d */\n      0x00\n        /* \"contracts/pair.sol\":5818:5869  (FEE_DENOMINATOR.mul(100) / ownerFeeShare).sub(100) */\n      tag_447\n        /* \"contracts/pair.sol\":5865:5868  100 */\n      0x64\n        /* \"contracts/pair.sol\":5846:5859  ownerFeeShare */\n      dup8\n        /* \"contracts/pair.sol\":5819:5843  FEE_DENOMINATOR.mul(100) */\n      tag_448\n        /* \"contracts/pair.sol\":5839:5842  100 */\n      0x64\n        /* \"contracts/pair.sol\":606:612  100000 */\n      0x0186a0\n        /* \"contracts/pair.sol\":5819:5838  FEE_DENOMINATOR.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":5819:5843  FEE_DENOMINATOR.mul(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_448:\n        /* \"contracts/pair.sol\":5819:5859  FEE_DENOMINATOR.mul(100) / ownerFeeShare */\n      dup2\n      tag_449\n      jumpi\n      invalid\n    tag_449:\n      div\n        /* \"contracts/pair.sol\":5818:5864  (FEE_DENOMINATOR.mul(100) / ownerFeeShare).sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":5818:5869  (FEE_DENOMINATOR.mul(100) / ownerFeeShare).sub(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_447:\n        /* \"contracts/pair.sol\":5809:5869  uint d = (FEE_DENOMINATOR.mul(100) / ownerFeeShare).sub(100) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":5881:5895  uint numerator */\n      0x00\n        /* \"contracts/pair.sol\":5898:5944  totalSupply.mul(rootK.sub(rootKLast)).mul(100) */\n      tag_450\n        /* \"contracts/pair.sol\":5940:5943  100 */\n      0x64\n        /* \"contracts/pair.sol\":5898:5935  totalSupply.mul(rootK.sub(rootKLast)) */\n      tag_451\n        /* \"contracts/pair.sol\":5914:5934  rootK.sub(rootKLast) */\n      tag_452\n        /* \"contracts/pair.sol\":5924:5933  rootKLast */\n      dup7\n        /* \"contracts/pair.sol\":5914:5919  rootK */\n      dup9\n        /* \"contracts/pair.sol\":5914:5923  rootK.sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":5914:5934  rootK.sub(rootKLast) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_452:\n        /* \"contracts/pair.sol\":5898:5909  totalSupply */\n      sload(0x00)\n        /* \"contracts/pair.sol\":5898:5913  totalSupply.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":5898:5935  totalSupply.mul(rootK.sub(rootKLast)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_451:\n        /* \"contracts/pair.sol\":5898:5939  totalSupply.mul(rootK.sub(rootKLast)).mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":5898:5944  totalSupply.mul(rootK.sub(rootKLast)).mul(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_450:\n        /* \"contracts/pair.sol\":5881:5944  uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(100) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":5956:5972  uint denominator */\n      0x00\n        /* \"contracts/pair.sol\":5975:6011  rootK.mul(d).add(rootKLast.mul(100)) */\n      tag_453\n        /* \"contracts/pair.sol\":5992:6010  rootKLast.mul(100) */\n      tag_454\n        /* \"contracts/pair.sol\":6006:6009  100 */\n      0x64\n        /* \"contracts/pair.sol\":5992:6001  rootKLast */\n      dup7\n        /* \"contracts/pair.sol\":5992:6005  rootKLast.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":5992:6010  rootKLast.mul(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_454:\n        /* \"contracts/pair.sol\":5975:5987  rootK.mul(d) */\n      tag_455\n        /* \"contracts/pair.sol\":5985:5986  d */\n      dup6\n        /* \"contracts/pair.sol\":5975:5980  rootK */\n      dup9\n        /* \"contracts/pair.sol\":5975:5984  rootK.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":5975:5987  rootK.mul(d) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_455:\n        /* \"contracts/pair.sol\":5975:5991  rootK.mul(d).add */\n      tag_435\n      swap1\n        /* \"contracts/pair.sol\":5975:6011  rootK.mul(d).add(rootKLast.mul(100)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_453:\n        /* \"contracts/pair.sol\":5956:6011  uint denominator = rootK.mul(d).add(rootKLast.mul(100)) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":6023:6037  uint liquidity */\n      0x00\n        /* \"contracts/pair.sol\":6052:6063  denominator */\n      dup2\n        /* \"contracts/pair.sol\":6040:6049  numerator */\n      dup4\n        /* \"contracts/pair.sol\":6040:6063  numerator / denominator */\n      dup2\n      tag_456\n      jumpi\n      invalid\n    tag_456:\n      div\n        /* \"contracts/pair.sol\":6023:6063  uint liquidity = numerator / denominator */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":6091:6092  0 */\n      0x00\n        /* \"contracts/pair.sol\":6079:6088  liquidity */\n      dup2\n        /* \"contracts/pair.sol\":6079:6092  liquidity > 0 */\n      gt\n        /* \"contracts/pair.sol\":6075:6117  if (liquidity > 0) _mint(feeTo, liquidity) */\n      iszero\n      tag_457\n      jumpi\n        /* \"contracts/pair.sol\":6094:6117  _mint(feeTo, liquidity) */\n      tag_458\n        /* \"contracts/pair.sol\":6100:6105  feeTo */\n      dup9\n        /* \"contracts/pair.sol\":6107:6116  liquidity */\n      dup3\n        /* \"contracts/pair.sol\":6094:6099  _mint */\n      tag_242\n        /* \"contracts/pair.sol\":6094:6117  _mint(feeTo, liquidity) */\n      jump\t// in\n    tag_458:\n        /* \"contracts/pair.sol\":6075:6117  if (liquidity > 0) _mint(feeTo, liquidity) */\n    tag_457:\n        /* \"contracts/pair.sol\":5774:6128  if (rootK > rootKLast) {... */\n      pop\n      pop\n      pop\n      pop\n    tag_446:\n        /* \"contracts/pair.sol\":5633:6136  if (_kLast != 0) {... */\n      pop\n      pop\n    tag_442:\n        /* \"contracts/pair.sol\":5614:6189  if (feeOn) {... */\n      jump(tag_459)\n    tag_441:\n        /* \"contracts/pair.sol\":6162:6163  0 */\n      0x00\n        /* \"contracts/pair.sol\":6152:6158  _kLast */\n      dup2\n        /* \"contracts/pair.sol\":6152:6163  _kLast != 0 */\n      eq\n        /* \"contracts/pair.sol\":6148:6189  if (_kLast != 0) {... */\n      tag_460\n      jumpi\n        /* \"contracts/pair.sol\":6181:6182  0 */\n      0x00\n        /* \"contracts/pair.sol\":6173:6178  kLast */\n      0x0b\n        /* \"contracts/pair.sol\":6173:6182  kLast = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":6148:6189  if (_kLast != 0) {... */\n    tag_460:\n        /* \"contracts/pair.sol\":5614:6189  if (feeOn) {... */\n    tag_459:\n        /* \"contracts/pair.sol\":5341:6193  function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {... */\n      pop\n      pop\n      pop\n    tag_436:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":14020:14423  function _k(uint balance0, uint balance1) internal view returns (uint) {... */\n    tag_193:\n        /* \"contracts/pair.sol\":14085:14089  uint */\n      0x00\n        /* \"contracts/pair.sol\":14101:14111  stableSwap */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/pair.sol\":14097:14384  if (stableSwap) {... */\n      iszero\n      tag_462\n      jumpi\n        /* \"contracts/pair.sol\":14121:14128  uint _x */\n      0x00\n        /* \"contracts/pair.sol\":14152:14172  precisionMultiplier0 */\n      sload(0x09)\n        /* \"contracts/pair.sol\":14131:14149  balance0.mul(1e18) */\n      tag_463\n        /* \"contracts/pair.sol\":14144:14148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":14131:14139  balance0 */\n      dup7\n        /* \"contracts/pair.sol\":14131:14143  balance0.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":14131:14149  balance0.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_463:\n        /* \"contracts/pair.sol\":14131:14172  balance0.mul(1e18) / precisionMultiplier0 */\n      dup2\n      tag_464\n      jumpi\n      invalid\n    tag_464:\n      div\n        /* \"contracts/pair.sol\":14121:14172  uint _x = balance0.mul(1e18) / precisionMultiplier0 */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":14180:14187  uint _y */\n      0x00\n        /* \"contracts/pair.sol\":14211:14231  precisionMultiplier1 */\n      sload(0x0a)\n        /* \"contracts/pair.sol\":14190:14208  balance1.mul(1e18) */\n      tag_465\n        /* \"contracts/pair.sol\":14203:14207  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":14190:14198  balance1 */\n      dup7\n        /* \"contracts/pair.sol\":14190:14202  balance1.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":14190:14208  balance1.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_465:\n        /* \"contracts/pair.sol\":14190:14231  balance1.mul(1e18) / precisionMultiplier1 */\n      dup2\n      tag_466\n      jumpi\n      invalid\n    tag_466:\n      div\n        /* \"contracts/pair.sol\":14180:14231  uint _y = balance1.mul(1e18) / precisionMultiplier1 */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":14239:14246  uint _a */\n      0x00\n        /* \"contracts/pair.sol\":14264:14268  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":14250:14260  _x.mul(_y) */\n      tag_467\n        /* \"contracts/pair.sol\":14257:14259  _y */\n      dup4\n        /* \"contracts/pair.sol\":14250:14252  _x */\n      dup6\n        /* \"contracts/pair.sol\":14250:14256  _x.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":14250:14260  _x.mul(_y) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_467:\n        /* \"contracts/pair.sol\":14249:14268  (_x.mul(_y)) / 1e18 */\n      dup2\n      tag_468\n      jumpi\n      invalid\n    tag_468:\n      div\n        /* \"contracts/pair.sol\":14239:14268  uint _a = (_x.mul(_y)) / 1e18 */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":14276:14283  uint _b */\n      0x00\n        /* \"contracts/pair.sol\":14286:14328  (_x.mul(_x) / 1e18).add(_y.mul(_y) / 1e18) */\n      tag_469\n        /* \"contracts/pair.sol\":14323:14327  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":14310:14320  _y.mul(_y) */\n      tag_470\n        /* \"contracts/pair.sol\":14317:14319  _y */\n      dup6\n        /* \"contracts/pair.sol\":14310:14312  _y */\n      dup7\n        /* \"contracts/pair.sol\":14310:14316  _y.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":14310:14320  _y.mul(_y) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_470:\n        /* \"contracts/pair.sol\":14310:14327  _y.mul(_y) / 1e18 */\n      dup2\n      tag_471\n      jumpi\n      invalid\n    tag_471:\n      div\n        /* \"contracts/pair.sol\":14300:14304  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":14287:14297  _x.mul(_x) */\n      tag_472\n        /* \"contracts/pair.sol\":14294:14296  _x */\n      dup8\n        /* \"contracts/pair.sol\":14287:14289  _x */\n      dup9\n        /* \"contracts/pair.sol\":14287:14293  _x.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":14287:14297  _x.mul(_x) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_472:\n        /* \"contracts/pair.sol\":14287:14304  _x.mul(_x) / 1e18 */\n      dup2\n      tag_473\n      jumpi\n      invalid\n    tag_473:\n      div\n        /* \"contracts/pair.sol\":14286:14309  (_x.mul(_x) / 1e18).add */\n      tag_435\n      swap1\n        /* \"contracts/pair.sol\":14286:14328  (_x.mul(_x) / 1e18).add(_y.mul(_y) / 1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_469:\n        /* \"contracts/pair.sol\":14276:14328  uint _b = (_x.mul(_x) / 1e18).add(_y.mul(_y) / 1e18) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":14357:14361  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":14344:14354  _a.mul(_b) */\n      tag_474\n        /* \"contracts/pair.sol\":14351:14353  _b */\n      dup3\n        /* \"contracts/pair.sol\":14344:14346  _a */\n      dup5\n        /* \"contracts/pair.sol\":14344:14350  _a.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":14344:14354  _a.mul(_b) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_474:\n        /* \"contracts/pair.sol\":14344:14361  _a.mul(_b) / 1e18 */\n      dup2\n      tag_475\n      jumpi\n      invalid\n    tag_475:\n      div\n        /* \"contracts/pair.sol\":14336:14361  return  _a.mul(_b) / 1e18 */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_461)\n        /* \"contracts/pair.sol\":14097:14384  if (stableSwap) {... */\n    tag_462:\n        /* \"contracts/pair.sol\":14396:14418  balance0.mul(balance1) */\n      tag_476\n        /* \"contracts/pair.sol\":14409:14417  balance1 */\n      dup3\n        /* \"contracts/pair.sol\":14396:14404  balance0 */\n      dup5\n        /* \"contracts/pair.sol\":14396:14408  balance0.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":14396:14418  balance0.mul(balance1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_476:\n        /* \"contracts/pair.sol\":14389:14418  return balance0.mul(balance1) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":14020:14423  function _k(uint balance0, uint balance1) internal view returns (uint) {... */\n    tag_461:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":421:561  function mul(uint x, uint y) internal pure returns (uint z) {... */\n    tag_239:\n        /* \"contracts/libraries/SafeMath.sol\":473:479  uint z */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":504:505  0 */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":499:500  y */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":499:505  y == 0 */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":499:529  y == 0 || (z = x * y) / y == x */\n      dup1\n      tag_478\n      jumpi\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":528:529  x */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":523:524  y */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":518:519  y */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":514:515  x */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":514:519  x * y */\n      mul\n        /* \"contracts/libraries/SafeMath.sol\":510:519  z = x * y */\n      swap3\n      pop\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":509:524  (z = x * y) / y */\n      dup2\n      tag_479\n      jumpi\n      invalid\n    tag_479:\n      div\n        /* \"contracts/libraries/SafeMath.sol\":509:529  (z = x * y) / y == x */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":499:529  y == 0 || (z = x * y) / y == x */\n    tag_478:\n        /* \"contracts/libraries/SafeMath.sol\":491:554  require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow') */\n      tag_480\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_480:\n        /* \"contracts/libraries/SafeMath.sol\":421:561  function mul(uint x, uint y) internal pure returns (uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/Math.sol\":307:599  function sqrt(uint y) internal pure returns (uint z) {... */\n    tag_240:\n        /* \"contracts/libraries/Math.sol\":352:358  uint z */\n      0x00\n        /* \"contracts/libraries/Math.sol\":378:379  3 */\n      0x03\n        /* \"contracts/libraries/Math.sol\":374:375  y */\n      dup3\n        /* \"contracts/libraries/Math.sol\":374:379  y > 3 */\n      gt\n        /* \"contracts/libraries/Math.sol\":370:593  if (y > 3) {... */\n      iszero\n      tag_482\n      jumpi\n        /* \"contracts/libraries/Math.sol\":399:400  y */\n      dup2\n        /* \"contracts/libraries/Math.sol\":395:400  z = y */\n      swap1\n      pop\n        /* \"contracts/libraries/Math.sol\":414:420  uint x */\n      0x00\n        /* \"contracts/libraries/Math.sol\":431:432  1 */\n      0x01\n        /* \"contracts/libraries/Math.sol\":427:428  2 */\n      0x02\n        /* \"contracts/libraries/Math.sol\":423:424  y */\n      dup5\n        /* \"contracts/libraries/Math.sol\":423:428  y / 2 */\n      dup2\n      tag_483\n      jumpi\n      invalid\n    tag_483:\n      div\n        /* \"contracts/libraries/Math.sol\":423:432  y / 2 + 1 */\n      add\n        /* \"contracts/libraries/Math.sol\":414:432  uint x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"contracts/libraries/Math.sol\":446:535  while (x < z) {... */\n    tag_484:\n        /* \"contracts/libraries/Math.sol\":457:458  z */\n      dup2\n        /* \"contracts/libraries/Math.sol\":453:454  x */\n      dup2\n        /* \"contracts/libraries/Math.sol\":453:458  x < z */\n      lt\n        /* \"contracts/libraries/Math.sol\":446:535  while (x < z) {... */\n      iszero\n      tag_485\n      jumpi\n        /* \"contracts/libraries/Math.sol\":482:483  x */\n      dup1\n        /* \"contracts/libraries/Math.sol\":478:483  z = x */\n      swap2\n      pop\n        /* \"contracts/libraries/Math.sol\":519:520  2 */\n      0x02\n        /* \"contracts/libraries/Math.sol\":514:515  x */\n      dup2\n        /* \"contracts/libraries/Math.sol\":510:511  x */\n      dup3\n        /* \"contracts/libraries/Math.sol\":506:507  y */\n      dup6\n        /* \"contracts/libraries/Math.sol\":506:511  y / x */\n      dup2\n      tag_486\n      jumpi\n      invalid\n    tag_486:\n      div\n        /* \"contracts/libraries/Math.sol\":506:515  y / x + x */\n      add\n        /* \"contracts/libraries/Math.sol\":505:520  (y / x + x) / 2 */\n      dup2\n      tag_487\n      jumpi\n      invalid\n    tag_487:\n      div\n        /* \"contracts/libraries/Math.sol\":501:520  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"contracts/libraries/Math.sol\":446:535  while (x < z) {... */\n      jump(tag_484)\n    tag_485:\n        /* \"contracts/libraries/Math.sol\":370:593  if (y > 3) {... */\n      pop\n      jump(tag_488)\n    tag_482:\n        /* \"contracts/libraries/Math.sol\":560:561  0 */\n      0x00\n        /* \"contracts/libraries/Math.sol\":555:556  y */\n      dup3\n        /* \"contracts/libraries/Math.sol\":555:561  y != 0 */\n      eq\n        /* \"contracts/libraries/Math.sol\":551:593  if (y != 0) {... */\n      tag_489\n      jumpi\n        /* \"contracts/libraries/Math.sol\":581:582  1 */\n      0x01\n        /* \"contracts/libraries/Math.sol\":577:582  z = 1 */\n      swap1\n      pop\n        /* \"contracts/libraries/Math.sol\":551:593  if (y != 0) {... */\n    tag_489:\n        /* \"contracts/libraries/Math.sol\":370:593  if (y > 3) {... */\n    tag_488:\n        /* \"contracts/libraries/Math.sol\":307:599  function sqrt(uint y) internal pure returns (uint z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":1371:1568  function _mint(address to, uint value) internal {... */\n    tag_242:\n        /* \"contracts/UniswapV2ERC20.sol\":1443:1465  totalSupply.add(value) */\n      tag_491\n        /* \"contracts/UniswapV2ERC20.sol\":1459:1464  value */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":1443:1454  totalSupply */\n      sload(0x00)\n        /* \"contracts/UniswapV2ERC20.sol\":1443:1458  totalSupply.add */\n      tag_435\n      swap1\n        /* \"contracts/UniswapV2ERC20.sol\":1443:1465  totalSupply.add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_491:\n        /* \"contracts/UniswapV2ERC20.sol\":1429:1440  totalSupply */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":1429:1465  totalSupply = totalSupply.add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":1491:1515  balanceOf[to].add(value) */\n      tag_492\n        /* \"contracts/UniswapV2ERC20.sol\":1509:1514  value */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":1491:1500  balanceOf */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":1491:1504  balanceOf[to] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":1501:1503  to */\n      dup6\n        /* \"contracts/UniswapV2ERC20.sol\":1491:1504  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/UniswapV2ERC20.sol\":1491:1508  balanceOf[to].add */\n      tag_435\n      swap1\n        /* \"contracts/UniswapV2ERC20.sol\":1491:1515  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_492:\n        /* \"contracts/UniswapV2ERC20.sol\":1475:1484  balanceOf */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":1475:1488  balanceOf[to] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":1485:1487  to */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":1475:1488  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":1475:1515  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":1551:1553  to */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":1530:1561  Transfer(address(0), to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2ERC20.sol\":1547:1548  0 */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":1530:1561  Transfer(address(0), to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/UniswapV2ERC20.sol\":1555:1560  value */\n      dup4\n        /* \"contracts/UniswapV2ERC20.sol\":1530:1561  Transfer(address(0), to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/UniswapV2ERC20.sol\":1371:1568  function _mint(address to, uint value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/Math.sol\":98:192  function min(uint x, uint y) internal pure returns (uint z) {... */\n    tag_249:\n        /* \"contracts/libraries/Math.sol\":150:156  uint z */\n      0x00\n        /* \"contracts/libraries/Math.sol\":176:177  y */\n      dup2\n        /* \"contracts/libraries/Math.sol\":172:173  x */\n      dup4\n        /* \"contracts/libraries/Math.sol\":172:177  x < y */\n      lt\n        /* \"contracts/libraries/Math.sol\":172:185  x < y ? x : y */\n      tag_494\n      jumpi\n        /* \"contracts/libraries/Math.sol\":184:185  y */\n      dup2\n        /* \"contracts/libraries/Math.sol\":172:185  x < y ? x : y */\n      jump(tag_495)\n    tag_494:\n        /* \"contracts/libraries/Math.sol\":180:181  x */\n      dup3\n        /* \"contracts/libraries/Math.sol\":172:185  x < y ? x : y */\n    tag_495:\n        /* \"contracts/libraries/Math.sol\":168:185  z = x < y ? x : y */\n      swap1\n      pop\n        /* \"contracts/libraries/Math.sol\":98:192  function min(uint x, uint y) internal pure returns (uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":4930:5206  function _update(uint balance0, uint balance1) private {... */\n    tag_253:\n        /* \"contracts/pair.sol\":5019:5022  - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/pair.sol\":4999:5023  balance0 <= uint112(- 1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":4999:5007  balance0 */\n      dup3\n        /* \"contracts/pair.sol\":4999:5023  balance0 <= uint112(- 1) */\n      gt\n      iszero\n        /* \"contracts/pair.sol\":4999:5051  balance0 <= uint112(- 1) && balance1 <= uint112(- 1) */\n      dup1\n      iszero\n      tag_497\n      jumpi\n      pop\n        /* \"contracts/pair.sol\":5047:5050  - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/pair.sol\":5027:5051  balance1 <= uint112(- 1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":5027:5035  balance1 */\n      dup2\n        /* \"contracts/pair.sol\":5027:5051  balance1 <= uint112(- 1) */\n      gt\n      iszero\n        /* \"contracts/pair.sol\":4999:5051  balance0 <= uint112(- 1) && balance1 <= uint112(- 1) */\n    tag_497:\n        /* \"contracts/pair.sol\":4991:5079  require(balance0 <= uint112(- 1) && balance1 <= uint112(- 1), 'eZKaliburPair: OVERFLOW') */\n      tag_498\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a204f564552464c4f57000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_498:\n        /* \"contracts/pair.sol\":5105:5113  balance0 */\n      dup2\n        /* \"contracts/pair.sol\":5086:5094  reserve0 */\n      0x08\n      0x00\n        /* \"contracts/pair.sol\":5086:5114  reserve0 = uint112(balance0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":5139:5147  balance1 */\n      dup1\n        /* \"contracts/pair.sol\":5120:5128  reserve1 */\n      0x08\n      0x0e\n        /* \"contracts/pair.sol\":5120:5148  reserve1 = uint112(balance1) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/pair.sol\":5159:5201  Sync(uint112(balance0), uint112(balance1)) */\n      0x1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1\n        /* \"contracts/pair.sol\":5172:5180  balance0 */\n      dup3\n        /* \"contracts/pair.sol\":5191:5199  balance1 */\n      dup3\n        /* \"contracts/pair.sol\":5159:5201  Sync(uint112(balance0), uint112(balance1)) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/pair.sol\":4930:5206  function _update(uint balance0, uint balance1) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UniswapV2ERC20.sol\":1574:1779  function _burn(address from, uint value) internal {... */\n    tag_277:\n        /* \"contracts/UniswapV2ERC20.sol\":1652:1678  balanceOf[from].sub(value) */\n      tag_500\n        /* \"contracts/UniswapV2ERC20.sol\":1672:1677  value */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":1652:1661  balanceOf */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":1652:1667  balanceOf[from] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":1662:1666  from */\n      dup6\n        /* \"contracts/UniswapV2ERC20.sol\":1652:1667  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/UniswapV2ERC20.sol\":1652:1671  balanceOf[from].sub */\n      tag_173\n      swap1\n        /* \"contracts/UniswapV2ERC20.sol\":1652:1678  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_500:\n        /* \"contracts/UniswapV2ERC20.sol\":1634:1643  balanceOf */\n      0x01\n        /* \"contracts/UniswapV2ERC20.sol\":1634:1649  balanceOf[from] */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":1644:1648  from */\n      dup5\n        /* \"contracts/UniswapV2ERC20.sol\":1634:1649  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UniswapV2ERC20.sol\":1634:1678  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":1702:1724  totalSupply.sub(value) */\n      tag_501\n        /* \"contracts/UniswapV2ERC20.sol\":1718:1723  value */\n      dup2\n        /* \"contracts/UniswapV2ERC20.sol\":1702:1713  totalSupply */\n      sload(0x00)\n        /* \"contracts/UniswapV2ERC20.sol\":1702:1717  totalSupply.sub */\n      tag_173\n      swap1\n        /* \"contracts/UniswapV2ERC20.sol\":1702:1724  totalSupply.sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_501:\n        /* \"contracts/UniswapV2ERC20.sol\":1688:1699  totalSupply */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":1688:1724  totalSupply = totalSupply.sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UniswapV2ERC20.sol\":1762:1763  0 */\n      0x00\n        /* \"contracts/UniswapV2ERC20.sol\":1739:1772  Transfer(from, address(0), value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UniswapV2ERC20.sol\":1748:1752  from */\n      dup3\n        /* \"contracts/UniswapV2ERC20.sol\":1739:1772  Transfer(from, address(0), value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/UniswapV2ERC20.sol\":1766:1771  value */\n      dup4\n        /* \"contracts/UniswapV2ERC20.sol\":1739:1772  Transfer(from, address(0), value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/UniswapV2ERC20.sol\":1574:1779  function _burn(address from, uint value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":1865:2143  function _safeTransfer(address token, address to, uint value) private {... */\n    tag_279:\n        /* \"contracts/pair.sol\":1942:1954  bool success */\n      0x00\n        /* \"contracts/pair.sol\":1956:1973  bytes memory data */\n      0x60\n        /* \"contracts/pair.sol\":1977:1982  token */\n      dup5\n        /* \"contracts/pair.sol\":1977:1987  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":421:455  bytes('transfer(address,uint256)') */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      0x7472616e7366657228616464726573732c75696e743235362900000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/pair.sol\":411:456  keccak256(bytes('transfer(address,uint256)')) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/pair.sol\":2021:2023  to */\n      dup6\n        /* \"contracts/pair.sol\":2025:2030  value */\n      dup6\n        /* \"contracts/pair.sol\":1988:2031  abi.encodeWithSelector(SELECTOR, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/pair.sol\":1988:2031  abi.encodeWithSelector(SELECTOR, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":1988:2031  abi.encodeWithSelector(SELECTOR, to, value) */\n      pop\n        /* \"contracts/pair.sol\":1977:2032  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_503:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_505\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_503)\n    tag_505:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":1977:2032  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_507\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_506)\n        /* \"--CODEGEN--\":16:47   */\n    tag_507:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_506:\n      pop\n        /* \"contracts/pair.sol\":1941:2032  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/pair.sol\":2046:2053  success */\n      dup2\n        /* \"contracts/pair.sol\":2046:2103  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_508\n      jumpi\n      pop\n        /* \"contracts/pair.sol\":2073:2074  0 */\n      0x00\n        /* \"contracts/pair.sol\":2058:2062  data */\n      dup2\n        /* \"contracts/pair.sol\":2058:2069  data.length */\n      mload\n        /* \"contracts/pair.sol\":2058:2074  data.length == 0 */\n      eq\n        /* \"contracts/pair.sol\":2058:2102  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_509\n      jumpi\n      pop\n        /* \"contracts/pair.sol\":2089:2093  data */\n      dup1\n        /* \"contracts/pair.sol\":2078:2102  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_510\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_510:\n        /* \"contracts/pair.sol\":2078:2102  abi.decode(data, (bool)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":2058:2102  data.length == 0 || abi.decode(data, (bool)) */\n    tag_509:\n        /* \"contracts/pair.sol\":2046:2103  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_508:\n        /* \"contracts/pair.sol\":2038:2138  require(success && (data.length == 0 || abi.decode(data, (bool))), 'eZKaliburPair: TRANSFER_FAILED') */\n      tag_511\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x655a4b616c69627572506169723a205452414e534645525f4641494c45440000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_511:\n        /* \"contracts/pair.sol\":1865:2143  function _safeTransfer(address token, address to, uint value) private {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":15521:16617  function _getAmountOut(uint amountIn, address tokenIn, uint _reserve0, uint _reserve1, uint feePercent) internal view returns (uint) {... */\n    tag_315:\n        /* \"contracts/pair.sol\":15648:15652  uint */\n      0x00\n        /* \"contracts/pair.sol\":15664:15674  stableSwap */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/pair.sol\":15660:16613  if (stableSwap) {... */\n      iszero\n      tag_513\n      jumpi\n        /* \"contracts/pair.sol\":15695:15751  amountIn.sub(amountIn.mul(feePercent) / FEE_DENOMINATOR) */\n      tag_514\n        /* \"contracts/pair.sol\":606:612  100000 */\n      0x0186a0\n        /* \"contracts/pair.sol\":15708:15732  amountIn.mul(feePercent) */\n      tag_515\n        /* \"contracts/pair.sol\":15721:15731  feePercent */\n      dup5\n        /* \"contracts/pair.sol\":15708:15716  amountIn */\n      dup10\n        /* \"contracts/pair.sol\":15708:15720  amountIn.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":15708:15732  amountIn.mul(feePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_515:\n        /* \"contracts/pair.sol\":15708:15750  amountIn.mul(feePercent) / FEE_DENOMINATOR */\n      dup2\n      tag_516\n      jumpi\n      invalid\n    tag_516:\n      div\n        /* \"contracts/pair.sol\":15695:15703  amountIn */\n      dup8\n        /* \"contracts/pair.sol\":15695:15707  amountIn.sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":15695:15751  amountIn.sub(amountIn.mul(feePercent) / FEE_DENOMINATOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_514:\n        /* \"contracts/pair.sol\":15684:15751  amountIn = amountIn.sub(amountIn.mul(feePercent) / FEE_DENOMINATOR) */\n      swap6\n      pop\n        /* \"contracts/pair.sol\":15794:15801  uint xy */\n      0x00\n        /* \"contracts/pair.sol\":15804:15828  _k(_reserve0, _reserve1) */\n      tag_517\n        /* \"contracts/pair.sol\":15807:15816  _reserve0 */\n      dup6\n        /* \"contracts/pair.sol\":15818:15827  _reserve1 */\n      dup6\n        /* \"contracts/pair.sol\":15804:15806  _k */\n      tag_193\n        /* \"contracts/pair.sol\":15804:15828  _k(_reserve0, _reserve1) */\n      jump\t// in\n    tag_517:\n        /* \"contracts/pair.sol\":15794:15828  uint xy = _k(_reserve0, _reserve1) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":15867:15887  precisionMultiplier0 */\n      sload(0x09)\n        /* \"contracts/pair.sol\":15860:15864  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":15848:15857  _reserve0 */\n      dup7\n        /* \"contracts/pair.sol\":15848:15864  _reserve0 * 1e18 */\n      mul\n        /* \"contracts/pair.sol\":15848:15887  _reserve0 * 1e18 / precisionMultiplier0 */\n      dup2\n      tag_518\n      jumpi\n      invalid\n    tag_518:\n      div\n        /* \"contracts/pair.sol\":15836:15887  _reserve0 = _reserve0 * 1e18 / precisionMultiplier0 */\n      swap5\n      pop\n        /* \"contracts/pair.sol\":15926:15946  precisionMultiplier1 */\n      sload(0x0a)\n        /* \"contracts/pair.sol\":15919:15923  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":15907:15916  _reserve1 */\n      dup6\n        /* \"contracts/pair.sol\":15907:15923  _reserve1 * 1e18 */\n      mul\n        /* \"contracts/pair.sol\":15907:15946  _reserve1 * 1e18 / precisionMultiplier1 */\n      dup2\n      tag_519\n      jumpi\n      invalid\n    tag_519:\n      div\n        /* \"contracts/pair.sol\":15895:15946  _reserve1 = _reserve1 * 1e18 / precisionMultiplier1 */\n      swap4\n      pop\n        /* \"contracts/pair.sol\":15956:15969  uint reserveA */\n      0x00\n        /* \"contracts/pair.sol\":15971:15984  uint reserveB */\n      dup1\n        /* \"contracts/pair.sol\":15999:16005  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":15988:16005  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":15988:15995  tokenIn */\n      dup9\n        /* \"contracts/pair.sol\":15988:16005  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/pair.sol\":15988:16055  tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n      tag_520\n      jumpi\n        /* \"contracts/pair.sol\":16034:16043  _reserve1 */\n      dup6\n        /* \"contracts/pair.sol\":16045:16054  _reserve0 */\n      dup8\n        /* \"contracts/pair.sol\":15988:16055  tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n      jump(tag_521)\n    tag_520:\n        /* \"contracts/pair.sol\":16009:16018  _reserve0 */\n      dup7\n        /* \"contracts/pair.sol\":16020:16029  _reserve1 */\n      dup7\n        /* \"contracts/pair.sol\":15988:16055  tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n    tag_521:\n        /* \"contracts/pair.sol\":15955:16055  (uint reserveA, uint reserveB) = tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/pair.sol\":16085:16091  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":16074:16091  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":16074:16081  tokenIn */\n      dup9\n        /* \"contracts/pair.sol\":16074:16091  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/pair.sol\":16074:16173  tokenIn == token0 ? amountIn * 1e18 / precisionMultiplier0 : amountIn * 1e18 / precisionMultiplier1 */\n      tag_522\n      jumpi\n        /* \"contracts/pair.sol\":16153:16173  precisionMultiplier1 */\n      sload(0x0a)\n        /* \"contracts/pair.sol\":16146:16150  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":16135:16143  amountIn */\n      dup11\n        /* \"contracts/pair.sol\":16135:16150  amountIn * 1e18 */\n      mul\n        /* \"contracts/pair.sol\":16135:16173  amountIn * 1e18 / precisionMultiplier1 */\n      dup2\n      tag_523\n      jumpi\n      invalid\n    tag_523:\n      div\n        /* \"contracts/pair.sol\":16074:16173  tokenIn == token0 ? amountIn * 1e18 / precisionMultiplier0 : amountIn * 1e18 / precisionMultiplier1 */\n      jump(tag_524)\n    tag_522:\n        /* \"contracts/pair.sol\":16112:16132  precisionMultiplier0 */\n      sload(0x09)\n        /* \"contracts/pair.sol\":16105:16109  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":16094:16102  amountIn */\n      dup11\n        /* \"contracts/pair.sol\":16094:16109  amountIn * 1e18 */\n      mul\n        /* \"contracts/pair.sol\":16094:16132  amountIn * 1e18 / precisionMultiplier0 */\n      dup2\n      tag_525\n      jumpi\n      invalid\n    tag_525:\n      div\n        /* \"contracts/pair.sol\":16074:16173  tokenIn == token0 ? amountIn * 1e18 / precisionMultiplier0 : amountIn * 1e18 / precisionMultiplier1 */\n    tag_524:\n        /* \"contracts/pair.sol\":16063:16173  amountIn = tokenIn == token0 ? amountIn * 1e18 / precisionMultiplier0 : amountIn * 1e18 / precisionMultiplier1 */\n      swap9\n      pop\n        /* \"contracts/pair.sol\":16181:16187  uint y */\n      0x00\n        /* \"contracts/pair.sol\":16201:16242  _get_y(amountIn + reserveA, xy, reserveB) */\n      tag_526\n        /* \"contracts/pair.sol\":16219:16227  reserveA */\n      dup4\n        /* \"contracts/pair.sol\":16208:16216  amountIn */\n      dup12\n        /* \"contracts/pair.sol\":16208:16227  amountIn + reserveA */\n      add\n        /* \"contracts/pair.sol\":16229:16231  xy */\n      dup6\n        /* \"contracts/pair.sol\":16233:16241  reserveB */\n      dup5\n        /* \"contracts/pair.sol\":16201:16207  _get_y */\n      tag_527\n        /* \"contracts/pair.sol\":16201:16242  _get_y(amountIn + reserveA, xy, reserveB) */\n      jump\t// in\n    tag_526:\n        /* \"contracts/pair.sol\":16190:16198  reserveB */\n      dup3\n        /* \"contracts/pair.sol\":16190:16242  reserveB - _get_y(amountIn + reserveA, xy, reserveB) */\n      sub\n        /* \"contracts/pair.sol\":16181:16242  uint y = reserveB - _get_y(amountIn + reserveA, xy, reserveB) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":16329:16333  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":16273:16279  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":16262:16279  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":16262:16269  tokenIn */\n      dup11\n        /* \"contracts/pair.sol\":16262:16279  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/pair.sol\":16262:16325  tokenIn == token0 ? precisionMultiplier1 : precisionMultiplier0 */\n      tag_528\n      jumpi\n        /* \"contracts/pair.sol\":16305:16325  precisionMultiplier0 */\n      sload(0x09)\n        /* \"contracts/pair.sol\":16262:16325  tokenIn == token0 ? precisionMultiplier1 : precisionMultiplier0 */\n      jump(tag_529)\n    tag_528:\n        /* \"contracts/pair.sol\":16282:16302  precisionMultiplier1 */\n      sload(0x0a)\n        /* \"contracts/pair.sol\":16262:16325  tokenIn == token0 ? precisionMultiplier1 : precisionMultiplier0 */\n    tag_529:\n        /* \"contracts/pair.sol\":16257:16258  y */\n      dup3\n        /* \"contracts/pair.sol\":16257:16326  y * (tokenIn == token0 ? precisionMultiplier1 : precisionMultiplier0) */\n      mul\n        /* \"contracts/pair.sol\":16257:16333  y * (tokenIn == token0 ? precisionMultiplier1 : precisionMultiplier0) / 1e18 */\n      dup2\n      tag_530\n      jumpi\n      invalid\n    tag_530:\n      div\n        /* \"contracts/pair.sol\":16250:16333  return y * (tokenIn == token0 ? precisionMultiplier1 : precisionMultiplier0) / 1e18 */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_512)\n        /* \"contracts/pair.sol\":15660:16613  if (stableSwap) {... */\n    tag_513:\n        /* \"contracts/pair.sol\":16356:16369  uint reserveA */\n      0x00\n        /* \"contracts/pair.sol\":16371:16384  uint reserveB */\n      dup1\n        /* \"contracts/pair.sol\":16399:16405  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":16388:16405  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/pair.sol\":16388:16395  tokenIn */\n      dup8\n        /* \"contracts/pair.sol\":16388:16405  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/pair.sol\":16388:16455  tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n      tag_532\n      jumpi\n        /* \"contracts/pair.sol\":16434:16443  _reserve1 */\n      dup5\n        /* \"contracts/pair.sol\":16445:16454  _reserve0 */\n      dup7\n        /* \"contracts/pair.sol\":16388:16455  tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n      jump(tag_533)\n    tag_532:\n        /* \"contracts/pair.sol\":16409:16418  _reserve0 */\n      dup6\n        /* \"contracts/pair.sol\":16420:16429  _reserve1 */\n      dup6\n        /* \"contracts/pair.sol\":16388:16455  tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n    tag_533:\n        /* \"contracts/pair.sol\":16355:16455  (uint reserveA, uint reserveB) = tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/pair.sol\":16474:16519  amountIn.mul(FEE_DENOMINATOR.sub(feePercent)) */\n      tag_534\n        /* \"contracts/pair.sol\":16487:16518  FEE_DENOMINATOR.sub(feePercent) */\n      tag_535\n        /* \"contracts/pair.sol\":16507:16517  feePercent */\n      dup6\n        /* \"contracts/pair.sol\":606:612  100000 */\n      0x0186a0\n        /* \"contracts/pair.sol\":16487:16506  FEE_DENOMINATOR.sub */\n      tag_173\n      swap1\n        /* \"contracts/pair.sol\":16487:16518  FEE_DENOMINATOR.sub(feePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_535:\n        /* \"contracts/pair.sol\":16474:16482  amountIn */\n      dup10\n        /* \"contracts/pair.sol\":16474:16486  amountIn.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":16474:16519  amountIn.mul(FEE_DENOMINATOR.sub(feePercent)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_534:\n        /* \"contracts/pair.sol\":16463:16519  amountIn = amountIn.mul(FEE_DENOMINATOR.sub(feePercent)) */\n      swap8\n      pop\n        /* \"contracts/pair.sol\":16562:16605  reserveA.mul(FEE_DENOMINATOR).add(amountIn) */\n      tag_536\n        /* \"contracts/pair.sol\":16596:16604  amountIn */\n      dup9\n        /* \"contracts/pair.sol\":16562:16591  reserveA.mul(FEE_DENOMINATOR) */\n      tag_537\n        /* \"contracts/pair.sol\":606:612  100000 */\n      0x0186a0\n        /* \"contracts/pair.sol\":16562:16570  reserveA */\n      dup6\n        /* \"contracts/pair.sol\":16562:16574  reserveA.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":16562:16591  reserveA.mul(FEE_DENOMINATOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_537:\n        /* \"contracts/pair.sol\":16562:16595  reserveA.mul(FEE_DENOMINATOR).add */\n      tag_435\n      swap1\n        /* \"contracts/pair.sol\":16562:16605  reserveA.mul(FEE_DENOMINATOR).add(amountIn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_536:\n        /* \"contracts/pair.sol\":16535:16557  amountIn.mul(reserveB) */\n      tag_538\n        /* \"contracts/pair.sol\":16548:16556  reserveB */\n      dup3\n        /* \"contracts/pair.sol\":16535:16543  amountIn */\n      dup11\n        /* \"contracts/pair.sol\":16535:16547  amountIn.mul */\n      tag_239\n      swap1\n        /* \"contracts/pair.sol\":16535:16557  amountIn.mul(reserveB) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_538:\n        /* \"contracts/pair.sol\":16534:16606  (amountIn.mul(reserveB)) / (reserveA.mul(FEE_DENOMINATOR).add(amountIn)) */\n      dup2\n      tag_539\n      jumpi\n      invalid\n    tag_539:\n      div\n        /* \"contracts/pair.sol\":16527:16606  return (amountIn.mul(reserveB)) / (reserveA.mul(FEE_DENOMINATOR).add(amountIn)) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/pair.sol\":15521:16617  function _getAmountOut(uint amountIn, address tokenIn, uint _reserve0, uint _reserve1, uint feePercent) internal view returns (uint) {... */\n    tag_512:\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":156:282  function add(uint x, uint y) internal pure returns (uint z) {... */\n    tag_435:\n        /* \"contracts/libraries/SafeMath.sol\":208:214  uint z */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":249:250  x */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":243:244  y */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":239:240  x */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":239:244  x + y */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":235:244  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":234:250  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":226:275  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_541\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_541:\n        /* \"contracts/libraries/SafeMath.sol\":156:282  function add(uint x, uint y) internal pure returns (uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":14427:14955  function _get_y(uint x0, uint xy, uint y) internal pure returns (uint) {... */\n    tag_527:\n        /* \"contracts/pair.sol\":14492:14496  uint */\n      0x00\n        /* \"contracts/pair.sol\":14509:14515  uint i */\n      dup1\n        /* \"contracts/pair.sol\":14518:14519  0 */\n      0x00\n        /* \"contracts/pair.sol\":14509:14519  uint i = 0 */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":14504:14937  for (uint i = 0; i < 255; i++) {... */\n    tag_543:\n        /* \"contracts/pair.sol\":14525:14528  255 */\n      0xff\n        /* \"contracts/pair.sol\":14521:14522  i */\n      dup2\n        /* \"contracts/pair.sol\":14521:14528  i < 255 */\n      lt\n        /* \"contracts/pair.sol\":14504:14937  for (uint i = 0; i < 255; i++) {... */\n      iszero\n      tag_544\n      jumpi\n        /* \"contracts/pair.sol\":14543:14554  uint y_prev */\n      0x00\n        /* \"contracts/pair.sol\":14557:14558  y */\n      dup4\n        /* \"contracts/pair.sol\":14543:14558  uint y_prev = y */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":14566:14572  uint k */\n      0x00\n        /* \"contracts/pair.sol\":14575:14584  _f(x0, y) */\n      tag_546\n        /* \"contracts/pair.sol\":14578:14580  x0 */\n      dup8\n        /* \"contracts/pair.sol\":14582:14583  y */\n      dup7\n        /* \"contracts/pair.sol\":14575:14577  _f */\n      tag_547\n        /* \"contracts/pair.sol\":14575:14584  _f(x0, y) */\n      jump\t// in\n    tag_546:\n        /* \"contracts/pair.sol\":14566:14584  uint k = _f(x0, y) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":14600:14602  xy */\n      dup6\n        /* \"contracts/pair.sol\":14596:14597  k */\n      dup2\n        /* \"contracts/pair.sol\":14596:14602  k < xy */\n      lt\n        /* \"contracts/pair.sol\":14592:14762  if (k < xy) {... */\n      iszero\n      tag_548\n      jumpi\n        /* \"contracts/pair.sol\":14614:14621  uint dy */\n      0x00\n        /* \"contracts/pair.sol\":14642:14651  _d(x0, y) */\n      tag_549\n        /* \"contracts/pair.sol\":14645:14647  x0 */\n      dup9\n        /* \"contracts/pair.sol\":14649:14650  y */\n      dup8\n        /* \"contracts/pair.sol\":14642:14644  _d */\n      tag_550\n        /* \"contracts/pair.sol\":14642:14651  _d(x0, y) */\n      jump\t// in\n    tag_549:\n        /* \"contracts/pair.sol\":14635:14639  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":14630:14631  k */\n      dup4\n        /* \"contracts/pair.sol\":14625:14627  xy */\n      dup10\n        /* \"contracts/pair.sol\":14625:14631  xy - k */\n      sub\n        /* \"contracts/pair.sol\":14624:14639  (xy - k) * 1e18 */\n      mul\n        /* \"contracts/pair.sol\":14624:14651  (xy - k) * 1e18 / _d(x0, y) */\n      dup2\n      tag_551\n      jumpi\n      invalid\n    tag_551:\n      div\n        /* \"contracts/pair.sol\":14614:14651  uint dy = (xy - k) * 1e18 / _d(x0, y) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":14669:14671  dy */\n      dup1\n        /* \"contracts/pair.sol\":14665:14666  y */\n      dup7\n        /* \"contracts/pair.sol\":14665:14671  y + dy */\n      add\n        /* \"contracts/pair.sol\":14661:14671  y = y + dy */\n      swap6\n      pop\n        /* \"contracts/pair.sol\":14592:14762  if (k < xy) {... */\n      pop\n      jump(tag_552)\n    tag_548:\n        /* \"contracts/pair.sol\":14696:14703  uint dy */\n      0x00\n        /* \"contracts/pair.sol\":14724:14733  _d(x0, y) */\n      tag_553\n        /* \"contracts/pair.sol\":14727:14729  x0 */\n      dup9\n        /* \"contracts/pair.sol\":14731:14732  y */\n      dup8\n        /* \"contracts/pair.sol\":14724:14726  _d */\n      tag_550\n        /* \"contracts/pair.sol\":14724:14733  _d(x0, y) */\n      jump\t// in\n    tag_553:\n        /* \"contracts/pair.sol\":14717:14721  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":14711:14713  xy */\n      dup9\n        /* \"contracts/pair.sol\":14707:14708  k */\n      dup5\n        /* \"contracts/pair.sol\":14707:14713  k - xy */\n      sub\n        /* \"contracts/pair.sol\":14706:14721  (k - xy) * 1e18 */\n      mul\n        /* \"contracts/pair.sol\":14706:14733  (k - xy) * 1e18 / _d(x0, y) */\n      dup2\n      tag_554\n      jumpi\n      invalid\n    tag_554:\n      div\n        /* \"contracts/pair.sol\":14696:14733  uint dy = (k - xy) * 1e18 / _d(x0, y) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":14751:14753  dy */\n      dup1\n        /* \"contracts/pair.sol\":14747:14748  y */\n      dup7\n        /* \"contracts/pair.sol\":14747:14753  y - dy */\n      sub\n        /* \"contracts/pair.sol\":14743:14753  y = y - dy */\n      swap6\n      pop\n        /* \"contracts/pair.sol\":14592:14762  if (k < xy) {... */\n      pop\n    tag_552:\n        /* \"contracts/pair.sol\":14777:14783  y_prev */\n      dup2\n        /* \"contracts/pair.sol\":14773:14774  y */\n      dup6\n        /* \"contracts/pair.sol\":14773:14783  y > y_prev */\n      gt\n        /* \"contracts/pair.sol\":14769:14931  if (y > y_prev) {... */\n      iszero\n      tag_555\n      jumpi\n        /* \"contracts/pair.sol\":14813:14814  1 */\n      0x01\n        /* \"contracts/pair.sol\":14803:14809  y_prev */\n      dup3\n        /* \"contracts/pair.sol\":14799:14800  y */\n      dup7\n        /* \"contracts/pair.sol\":14799:14809  y - y_prev */\n      sub\n        /* \"contracts/pair.sol\":14799:14814  y - y_prev <= 1 */\n      gt\n        /* \"contracts/pair.sol\":14795:14847  if (y - y_prev <= 1) {... */\n      tag_556\n      jumpi\n        /* \"contracts/pair.sol\":14835:14836  y */\n      dup5\n        /* \"contracts/pair.sol\":14828:14836  return y */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_542)\n        /* \"contracts/pair.sol\":14795:14847  if (y - y_prev <= 1) {... */\n    tag_556:\n        /* \"contracts/pair.sol\":14769:14931  if (y > y_prev) {... */\n      jump(tag_557)\n    tag_555:\n        /* \"contracts/pair.sol\":14889:14890  1 */\n      0x01\n        /* \"contracts/pair.sol\":14884:14885  y */\n      dup6\n        /* \"contracts/pair.sol\":14875:14881  y_prev */\n      dup4\n        /* \"contracts/pair.sol\":14875:14885  y_prev - y */\n      sub\n        /* \"contracts/pair.sol\":14875:14890  y_prev - y <= 1 */\n      gt\n        /* \"contracts/pair.sol\":14871:14923  if (y_prev - y <= 1) {... */\n      tag_558\n      jumpi\n        /* \"contracts/pair.sol\":14911:14912  y */\n      dup5\n        /* \"contracts/pair.sol\":14904:14912  return y */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_542)\n        /* \"contracts/pair.sol\":14871:14923  if (y_prev - y <= 1) {... */\n    tag_558:\n        /* \"contracts/pair.sol\":14769:14931  if (y > y_prev) {... */\n    tag_557:\n        /* \"contracts/pair.sol\":14504:14937  for (uint i = 0; i < 255; i++) {... */\n      pop\n      pop\n        /* \"contracts/pair.sol\":14530:14533  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/pair.sol\":14504:14937  for (uint i = 0; i < 255; i++) {... */\n      jump(tag_543)\n    tag_544:\n      pop\n        /* \"contracts/pair.sol\":14949:14950  y */\n      dup2\n        /* \"contracts/pair.sol\":14942:14950  return y */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":14427:14955  function _get_y(uint x0, uint xy, uint y) internal pure returns (uint) {... */\n    tag_542:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":14959:15114  function _f(uint x0, uint y) internal pure returns (uint) {... */\n    tag_547:\n        /* \"contracts/pair.sol\":15011:15015  uint */\n      0x00\n        /* \"contracts/pair.sol\":15105:15109  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":15101:15102  y */\n      dup3\n        /* \"contracts/pair.sol\":15093:15097  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":15088:15090  x0 */\n      dup6\n        /* \"contracts/pair.sol\":15081:15085  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":15076:15078  x0 */\n      dup8\n        /* \"contracts/pair.sol\":15071:15073  x0 */\n      dup9\n        /* \"contracts/pair.sol\":15071:15078  x0 * x0 */\n      mul\n        /* \"contracts/pair.sol\":15071:15085  x0 * x0 / 1e18 */\n      dup2\n      tag_560\n      jumpi\n      invalid\n    tag_560:\n      div\n        /* \"contracts/pair.sol\":15071:15090  x0 * x0 / 1e18 * x0 */\n      mul\n        /* \"contracts/pair.sol\":15071:15097  x0 * x0 / 1e18 * x0 / 1e18 */\n      dup2\n      tag_561\n      jumpi\n      invalid\n    tag_561:\n      div\n        /* \"contracts/pair.sol\":15070:15102  (x0 * x0 / 1e18 * x0 / 1e18) * y */\n      mul\n        /* \"contracts/pair.sol\":15070:15109  (x0 * x0 / 1e18 * x0 / 1e18) * y / 1e18 */\n      dup2\n      tag_562\n      jumpi\n      invalid\n    tag_562:\n      div\n        /* \"contracts/pair.sol\":15063:15067  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":15055:15059  1e18 */\n      dup1\n        /* \"contracts/pair.sol\":15051:15052  y */\n      dup5\n        /* \"contracts/pair.sol\":15044:15048  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":15040:15041  y */\n      dup7\n        /* \"contracts/pair.sol\":15036:15037  y */\n      dup8\n        /* \"contracts/pair.sol\":15036:15041  y * y */\n      mul\n        /* \"contracts/pair.sol\":15036:15048  y * y / 1e18 */\n      dup2\n      tag_563\n      jumpi\n      invalid\n    tag_563:\n      div\n        /* \"contracts/pair.sol\":15036:15052  y * y / 1e18 * y */\n      mul\n        /* \"contracts/pair.sol\":15036:15059  y * y / 1e18 * y / 1e18 */\n      dup2\n      tag_564\n      jumpi\n      invalid\n    tag_564:\n      div\n        /* \"contracts/pair.sol\":15030:15032  x0 */\n      dup6\n        /* \"contracts/pair.sol\":15030:15060  x0 * (y * y / 1e18 * y / 1e18) */\n      mul\n        /* \"contracts/pair.sol\":15030:15067  x0 * (y * y / 1e18 * y / 1e18) / 1e18 */\n      dup2\n      tag_565\n      jumpi\n      invalid\n    tag_565:\n      div\n        /* \"contracts/pair.sol\":15030:15109  x0 * (y * y / 1e18 * y / 1e18) / 1e18 + (x0 * x0 / 1e18 * x0 / 1e18) * y / 1e18 */\n      add\n        /* \"contracts/pair.sol\":15023:15109  return x0 * (y * y / 1e18 * y / 1e18) / 1e18 + (x0 * x0 / 1e18 * x0 / 1e18) * y / 1e18 */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":14959:15114  function _f(uint x0, uint y) internal pure returns (uint) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":15118:15255  function _d(uint x0, uint y) internal pure returns (uint) {... */\n    tag_550:\n        /* \"contracts/pair.sol\":15170:15174  uint */\n      0x00\n        /* \"contracts/pair.sol\":15245:15249  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":15240:15242  x0 */\n      dup4\n        /* \"contracts/pair.sol\":15233:15237  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":15228:15230  x0 */\n      dup6\n        /* \"contracts/pair.sol\":15223:15225  x0 */\n      dup7\n        /* \"contracts/pair.sol\":15223:15230  x0 * x0 */\n      mul\n        /* \"contracts/pair.sol\":15223:15237  x0 * x0 / 1e18 */\n      dup2\n      tag_567\n      jumpi\n      invalid\n    tag_567:\n      div\n        /* \"contracts/pair.sol\":15223:15242  x0 * x0 / 1e18 * x0 */\n      mul\n        /* \"contracts/pair.sol\":15223:15249  x0 * x0 / 1e18 * x0 / 1e18 */\n      dup2\n      tag_568\n      jumpi\n      invalid\n    tag_568:\n      div\n        /* \"contracts/pair.sol\":15215:15219  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/pair.sol\":15207:15211  1e18 */\n      dup1\n        /* \"contracts/pair.sol\":15203:15204  y */\n      dup5\n        /* \"contracts/pair.sol\":15199:15200  y */\n      dup6\n        /* \"contracts/pair.sol\":15199:15204  y * y */\n      mul\n        /* \"contracts/pair.sol\":15199:15211  y * y / 1e18 */\n      dup2\n      tag_569\n      jumpi\n      invalid\n    tag_569:\n      div\n        /* \"contracts/pair.sol\":15193:15195  x0 */\n      dup6\n        /* \"contracts/pair.sol\":15189:15190  3 */\n      0x03\n        /* \"contracts/pair.sol\":15189:15195  3 * x0 */\n      mul\n        /* \"contracts/pair.sol\":15189:15212  3 * x0 * (y * y / 1e18) */\n      mul\n        /* \"contracts/pair.sol\":15189:15219  3 * x0 * (y * y / 1e18) / 1e18 */\n      dup2\n      tag_570\n      jumpi\n      invalid\n    tag_570:\n      div\n        /* \"contracts/pair.sol\":15189:15250  3 * x0 * (y * y / 1e18) / 1e18 + (x0 * x0 / 1e18 * x0 / 1e18) */\n      add\n        /* \"contracts/pair.sol\":15182:15250  return 3 * x0 * (y * y / 1e18) / 1e18 + (x0 * x0 / 1e18 * x0 / 1e18) */\n      swap1\n      pop\n        /* \"contracts/pair.sol\":15118:15255  function _d(uint x0, uint y) internal pure returns (uint) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/pair.sol\":236:17820  contract EZKaliburPair is IPair, UniswapV2ERC20 {... */\n    tag_163:\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_2be17c6303e0c10da5ff1eb4b266c473ae5fd600c60b6f9faccee86002ad7d5e 655a4b616c69627572506169723a2066656550657263656e74206d7573746e27742065786365656420746865206d6178696d756d\n    data_5c26fe7bac5bd215670303820601ac49f0d4baeb8f47fd314bbc05e382ca9e12 655a4b616c69627572506169723a20494e53554646494349454e545f4c49515549444954595f4255524e4544\n    data_6c8afa2437545964ffee4c84b28541af800177f71a1bad08a0655cae5b8d43e9 655a4b616c69627572506169723a20494e53554646494349454e545f4c4951554944495459\n    data_8ab36b58f19f5658e716652a965572c61ec94ca2b0078cc5663963339a0ef78f 655a4b616c69627572506169723a20494e53554646494349454e545f4c49515549444954595f4d494e544544\n    data_985af2d628585b86a62c2a3e0e095aa532421cf73afcd9f40539c0e984229c9a 655a4b616c69627572506169723a20494e53554646494349454e545f4f55545055545f414d4f554e54\n    data_9ff115c8f228bb5656172ece44e1abafba1eb82b0ff5c74955e92e978f9be43b 655a4b616c69627572506169723a206f6e6c7920666163746f7279277320736574537461626c654f776e6572\n    data_b31389cdce9c235fb73cf94e115b26cc6b115463d873636778ed56513abefea0 655a4b616c69627572506169723a20494e53554646494349454e545f494e5055545f414d4f554e54\n    data_b812a7bb29dec6f526121e1bfdf77da0d9fd5f3d8c74be699d0a2f01be67e231 655a4b616c69627572506169723a206c697175696469747920726174696f206e6f7420696e697469616c697a6564\n    data_d1bf768db97cbb37158f2706c5b1b11ef80704d9d42c88986d88c55d10379282 655a4b616c69627572506169723a2066656550657263656e74206d7573746e27742065786365656420746865206d696e696d756d\n    data_f80fc17e443115161d9ed24aaf21c6e6102496443806d2822fe65bc11fc7a8d3 655a4b616c69627572506169723a206f6e6c7920666163746f7279277320666565416d6f756e744f776e6572\n    data_fd83120603ed4d82de96120f878f97f3eab3d3e5b9b17eb433b2f605b574072d 655a4b616c69627572506169723a206f6e6c7920666163746f72792773206f776e6572\n\n    auxdata: 0xa265627a7a72315820d4194c2de07f2c2ed647fcf04a0959f45ce34d7255041063afc557173c6d096564736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405261012c6008601c6101000a81548161ffff021916908361ffff16021790555061012c6008601e6101000a81548161ffff021916908361ffff1602179055506001600d553480156200005457600080fd5b506000469050604051808062005fe060529139605201905060405180910390206040518060400160405280600c81526020017f655a4b616c69627572204c500000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001206003819055505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550615e2a80620001b66000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c80636a6278421161013b578063ba9a7a56116100b8578063d73792a91161007c578063d73792a914610c9c578063dd62ed3e14610cba578063f140a35a14610d32578063f39ac11f14610d94578063fff6cae914610df857610248565b8063ba9a7a5614610b0d578063bc25cf7714610b2b578063c45a015514610b6f578063d21220a714610bb9578063d505accf14610c0357610248565b806389afcb44116100ff57806389afcb441461098157806395d89b41146109e05780639e548b7f14610a63578063a9059cbb14610a85578063b6200b0714610aeb57610248565b80636a6278421461078e5780636e1fdd7f146107e657806370a08231146108b35780637464fc3d1461090b5780637ecebe001461092957610248565b80633029e5d4116101c95780633ba170771161018d5780633ba170771461069c578063485cc955146106a657806348e5d2601461070a57806362ecec031461074a57806367d817401461077057610248565b80633029e5d4146105ba57806330adf81f1461061e578063313ce5671461063c5780633644e515146106605780633b9f1dc01461067e57610248565b8063158ef93e11610210578063158ef93e146104b057806318160ddd146104d257806323b872dd146104f0578063288e5d02146105765780632fcd16921461059457610248565b8063022c0d9f1461024d57806306fdde03146102fa5780630902f1ac1461037d578063095ea7b3146104005780630dfe168114610466575b600080fd5b6102f86004803603608081101561026357600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102b457600080fd5b8201836020820111156102c657600080fd5b803590602001918460018302840111640100000000831117156102e857600080fd5b9091929391929390505050610e02565b005b610302610f13565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610342578082015181840152602081019050610327565b50505050905090810190601f16801561036f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610385610f4c565b60405180856dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152602001846dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020018361ffff1661ffff1681526020018261ffff1661ffff16815260200194505050505060405180910390f35b61044c6004803603604081101561041657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fbc565b604051808215151515815260200191505060405180910390f35b61046e610fd3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b8610ff9565b604051808215151515815260200191505060405180910390f35b6104da61100c565b6040518082815260200191505060405180910390f35b61055c6004803603606081101561050657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611012565b604051808215151515815260200191505060405180910390f35b61057e611248565b6040518082815260200191505060405180910390f35b61059c61124e565b604051808261ffff1661ffff16815260200191505060405180910390f35b61061c600480360360608110156105d057600080fd5b8101908080351515906020019092919080356dffffffffffffffffffffffffffff16906020019092919080356dffffffffffffffffffffffffffff169060200190929190505050611262565b005b61062661174e565b6040518082815260200191505060405180910390f35b610644611775565b604051808260ff1660ff16815260200191505060405180910390f35b61066861177a565b6040518082815260200191505060405180910390f35b610686611780565b6040518082815260200191505060405180910390f35b6106a4611786565b005b610708600480360360408110156106bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a00565b005b6107486004803603604081101561072057600080fd5b81019080803561ffff169060200190929190803561ffff169060200190929190505050611c97565b005b610752611fb0565b604051808261ffff1661ffff16815260200191505060405180910390f35b610778611fc4565b6040518082815260200191505060405180910390f35b6107d0600480360360208110156107a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fca565b6040518082815260200191505060405180910390f35b6108b1600480360360a08110156107fc57600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561084d57600080fd5b82018360208201111561085f57600080fd5b8035906020019184600183028401116401000000008311171561088157600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612471565b005b6108f5600480360360208110156108c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612582565b6040518082815260200191505060405180910390f35b61091361259a565b6040518082815260200191505060405180910390f35b61096b6004803603602081101561093f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125a0565b6040518082815260200191505060405180910390f35b6109c36004803603602081101561099757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125b8565b604051808381526020018281526020019250505060405180910390f35b6109e8612b9b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a28578082015181840152602081019050610a0d565b50505050905090810190601f168015610a555780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a6b612bd4565b604051808215151515815260200191505060405180910390f35b610ad160048036036040811015610a9b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612be7565b604051808215151515815260200191505060405180910390f35b610af3612bfe565b604051808215151515815260200191505060405180910390f35b610b15612c11565b6040518082815260200191505060405180910390f35b610b6d60048036036020811015610b4157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c17565b005b610b77612f1e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610bc1612f44565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610c9a600480360360e0811015610c1957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050612f6a565b005b610ca46132ae565b6040518082815260200191505060405180910390f35b610d1c60048036036040811015610cd057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132b5565b6040518082815260200191505060405180910390f35b610d7e60048036036040811015610d4857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132da565b6040518082815260200191505060405180910390f35b610df660048036036040811015610daa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506133ce565b005b610e006137da565b005b610e0a615ba5565b604051806101000160405280600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200160008152602001600081526020016000815260200160008152509050610f0b818585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000613a93565b505050505050565b6040518060400160405280600c81526020017f655a4b616c69627572204c50000000000000000000000000000000000000000081525081565b600080600080600860009054906101000a90046dffffffffffffffffffffffffffff1693506008600e9054906101000a90046dffffffffffffffffffffffffffff1692506008601c9054906101000a900461ffff1691506008601e9054906101000a900461ffff16905090919293565b6000610fc9338484614897565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460ff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461123257600061114883600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461498290919063ffffffff16565b905080600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505b61123d848484614a05565b600190509392505050565b600a5481565b6008601e9054906101000a900461ffff1681565b6001600d54146112da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc39026a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561134a57600080fd5b505afa15801561135e573d6000803e3d6000fd5b505050506040513d602081101561137457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611408576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cf1602c913960400191505060405180910390fd5b600c60019054906101000a900460ff161561148b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f655a4b616c69627572506169723a20696d6d757461626c65000000000000000081525060200191505060405180910390fd5b600c60009054906101000a900460ff1615158315151415611514576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f655a4b616c69627572506169723a206e6f20757064617465000000000000000081525060200191505060405180910390fd5b600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16826dffffffffffffffffffffffffffff1614801561159a57506008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16816dffffffffffffffffffffffffffff16145b61160c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a206661696c6564000000000000000000000081525060200191505060405180910390fd5b6000611650600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff16614b99565b90507fb6a86710bde53aa7fb1b3856279e2af5b476d53e2dd0902cf17a0911b5a43a8b600c60009054906101000a900460ff16856040518083151515158152602001821515151581526020019250505060405180910390a183600c60006101000a81548160ff0219169083151502179055508380156116cc5750805b6116d757600061173a565b611739600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16614dfb565b5b600b81905550506001600d81905550505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60095481565b6001600d54146117fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561186e57600080fd5b505afa158015611882573d6000803e3d6000fd5b505050506040513d602081101561189857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461192c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180615dd36023913960400191505060405180910390fd5b600c60019054906101000a900460ff16156119af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f655a4b616c69627572506169723a20616c726561647920696d6d757461626c6581525060200191505060405180910390fd5b6001600c60016101000a81548160ff0219169083151502179055507f09122c41ae733a4d7740324d50e35fbd6ee85be3c1312a45596d8045150ab2f260405160405180910390a16001600d81905550565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015611a6a5750600760149054906101000a900460ff16155b611adc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f655a4b616c69627572506169723a20464f5242494444454e000000000000000081525060200191505060405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611ba457600080fd5b505afa158015611bb8573d6000803e3d6000fd5b505050506040513d6020811015611bce57600080fd5b810190808051906020019092919050505060ff16600a0a6009819055508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611c3157600080fd5b505afa158015611c45573d6000803e3d6000fd5b505050506040513d6020811015611c5b57600080fd5b810190808051906020019092919050505060ff16600a0a600a819055506001600760146101000a81548160ff0219169083151502179055505050565b6001600d5414611d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2177156040518163ffffffff1660e01b815260040160206040518083038186803b158015611d7f57600080fd5b505afa158015611d93573d6000803e3d6000fd5b505050506040513d6020811015611da957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615da7602c913960400191505060405180910390fd5b6107d08261ffff1611158015611e5957506107d08161ffff1611155b611eae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180615c176034913960400191505060405180910390fd5b60008261ffff16118015611ec6575060008161ffff16115b611f1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180615d736034913960400191505060405180910390fd5b816008601c6101000a81548161ffff021916908361ffff160217905550806008601e6101000a81548161ffff021916908361ffff1602179055507fa4877b8ecb5a00ba277e4bceeeb187a669e7113649774dfbea05c259ce27f17b8282604051808361ffff1661ffff1681526020018261ffff1661ffff1681526020019250505060405180910390a16001600d819055505050565b6008601c9054906101000a900461ffff1681565b6107d081565b60006001600d5414612044576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600080612057610f4c565b5050915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156120fe57600080fd5b505afa158015612112573d6000803e3d6000fd5b505050506040513d602081101561212857600080fd5b810190808051906020019092919050505090506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156121dc57600080fd5b505afa1580156121f0573d6000803e3d6000fd5b505050506040513d602081101561220657600080fd5b81019080805190602001909291905050509050600061223e856dffffffffffffffffffffffffffff168461498290919063ffffffff16565b90506000612265856dffffffffffffffffffffffffffff168461498290919063ffffffff16565b905060006122738787614b99565b905060008054905060008114156122c7576122b36103e86122a56122a08688614f3690919063ffffffff16565b614fcb565b61498290919063ffffffff16565b98506122c260006103e861502d565b61232a565b612327886dffffffffffffffffffffffffffff166122ee8387614f3690919063ffffffff16565b816122f557fe5b04886dffffffffffffffffffffffffffff1661231a8487614f3690919063ffffffff16565b8161232157fe5b04615147565b98505b60008911612383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615c9c602c913960400191505060405180910390fd5b61238d8a8a61502d565b6123978686615160565b8115612406576123ff600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16614dfb565b600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f8585604051808381526020018281526020019250505060405180910390a250505050505050506001600d81905550919050565b612479615ba5565b604051806101000160405280600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188815260200187815260200160008152602001600081526020016000815260200160008152509050612579818686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505085613a93565b50505050505050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600d5414612633576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600080612646610f4c565b5050915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561271957600080fd5b505afa15801561272d573d6000803e3d6000fd5b505050506040513d602081101561274357600080fd5b8101908080519060200190929190505050905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156127d557600080fd5b505afa1580156127e9573d6000803e3d6000fd5b505050506040513d60208110156127ff57600080fd5b810190808051906020019092919050505090506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006128628888614b99565b90506000805490508061287e8685614f3690919063ffffffff16565b8161288557fe5b049a508061289c8585614f3690919063ffffffff16565b816128a357fe5b04995060008b1180156128b6575060008a115b61290b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615c4b602c913960400191505060405180910390fd5b612915308461532f565b612920878d8d615449565b61292b868d8c615449565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156129a857600080fd5b505afa1580156129bc573d6000803e3d6000fd5b505050506040513d60208110156129d257600080fd5b810190808051906020019092919050505094508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015612a6257600080fd5b505afa158015612a76573d6000803e3d6000fd5b505050506040513d6020811015612a8c57600080fd5b81019080805190602001909291905050509350612aa98585615160565b8115612b1857612b11600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16614dfb565b600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051808381526020018281526020019250505060405180910390a35050505050505050506001600d81905550915091565b6040518060400160405280600681526020017f655a4b2d4c50000000000000000000000000000000000000000000000000000081525081565b600c60009054906101000a900460ff1681565b6000612bf4338484614a05565b6001905092915050565b600c60019054906101000a900460ff1681565b6103e881565b6001600d5414612c8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050612de58284612de0600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015612d9757600080fd5b505afa158015612dab573d6000803e3d6000fd5b505050506040513d6020811015612dc157600080fd5b810190808051906020019092919050505061498290919063ffffffff16565b615449565b612ee58184612ee06008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015612e9757600080fd5b505afa158015612eab573d6000803e3d6000fd5b505050506040513d6020811015612ec157600080fd5b810190808051906020019092919050505061498290919063ffffffff16565b615449565b7f21ad22495c9c75cd1c94756f91824e779c0c8a8e168b267c790df464fe056b7960405160405180910390a150506001600d8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015612fe0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f556e697377617056323a2045585049524544000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156131b2573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561322657508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b613298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f556e697377617056323a20494e56414c49445f5349474e41545552450000000081525060200191505060405180910390fd5b6132a3898989614897565b505050505050505050565b620186a081565b6002602052816000526040600020602052806000526040600020600091509150505481565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614613348576008601e9054906101000a900461ffff1661335a565b6008601c9054906101000a900461ffff165b90506133c58484600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168561ffff16615696565b91505092915050565b6001600d5414613446576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156134b657600080fd5b505afa1580156134ca573d6000803e3d6000fd5b505050506040513d60208110156134e057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613574576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180615dd36023913960400191505060405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156136205750600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b613692576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f655a4b616c69627572506169723a20696e76616c696420746f6b656e0000000081525060200191505060405180910390fd5b61375482828473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561371457600080fd5b505afa158015613728573d6000803e3d6000fd5b505050506040513d602081101561373e57600080fd5b8101908080519060200190929190505050615449565b8173ffffffffffffffffffffffffffffffffffffffff167f368a9dc863ecb94b5ba32a682e26295b10d9c2666fad7d785ebdf262c3c5241382604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a26001600d819055505050565b6001600d5414613852576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156138fb57600080fd5b505afa15801561390f573d6000803e3d6000fd5b505050506040513d602081101561392557600080fd5b810190808051906020019092919050505090506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156139d957600080fd5b505afa1580156139ed573d6000803e3d6000fd5b505050506040513d6020811015613a0357600080fd5b8101908080519060200190929190505050905060008214158015613a28575060008114155b613a7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d45602e913960400191505060405180910390fd5b613a878282615160565b50506001600d81905550565b6001600d5414613b0b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600084604001511180613b2a575060008460600151115b613b7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180615cc86029913960400191505060405180910390fd5b600080600080613b8d610f4c565b9350935093509350836dffffffffffffffffffffffffffff168860400151108015613bcb5750826dffffffffffffffffffffffffffff168860600151105b613c20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180615c776025913960400191505060405180910390fd5b876000015173ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614158015613c905750876020015173ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614155b613d02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f655a4b616c69627572506169723a20494e56414c49445f544f0000000000000081525060200191505060405180910390fd5b600088604001511115613d2357613d228860000151888a60400151615449565b5b600088606001511115613d4457613d438860200151888a60600151615449565b5b600086511115613e6b578673ffffffffffffffffffffffffffffffffffffffff166310d1e85c338a604001518b606001518a6040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613e03578082015181840152602081019050613de8565b50505050905090810190601f168015613e305780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015613e5257600080fd5b505af1158015613e66573d6000803e3d6000fd5b505050505b876000015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015613eec57600080fd5b505afa158015613f00573d6000803e3d6000fd5b505050506040513d6020811015613f1657600080fd5b8101908080519060200190929190505050886080018181525050876020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015613fb157600080fd5b505afa158015613fc5573d6000803e3d6000fd5b505050506040513d6020811015613fdb57600080fd5b81019080805190602001909291905050508860a001818152505060008860400151856dffffffffffffffffffffffffffff160389608001511161401f57600061403d565b8860400151856dffffffffffffffffffffffffffff16038960800151035b905060008960600151856dffffffffffffffffffffffffffff16038a60a0015111614069576000614087565b8960600151856dffffffffffffffffffffffffffff16038a60a00151035b905060008211806140985750600081115b6140ed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180615d1d6028913960400191505060405180910390fd5b620186a06141088561ffff1684614f3690919063ffffffff16565b8161410f57fe5b048a60c0018181525050620186a06141348461ffff1683614f3690919063ffffffff16565b8161413b57fe5b048a60e0018181525050600080905060008073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415614187576000614262565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637183d47c8a6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561422657600080fd5b505afa15801561423a573d6000803e3d6000fd5b505050506040513d602081101561425057600080fd5b81019080805190602001909291905050505b905060008111156143545760008411156142e0576002620186a00a6142a68761ffff166142988488614f3690919063ffffffff16565b614f3690919063ffffffff16565b816142ad57fe5b0491506142c7828d60c0015161498290919063ffffffff16565b8c60c00181815250506142df8c600001518a84615449565b5b6000831115614353576002620186a00a6143198661ffff1661430b8487614f3690919063ffffffff16565b614f3690919063ffffffff16565b8161432057fe5b04915061433a828d60e0015161498290919063ffffffff16565b8c60e00181815250506143528c602001518a84615449565b5b5b600c60009054906101000a900460ff161561456457600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663995b5aae6040518163ffffffff1660e01b8152600401604080518083038186803b1580156143d357600080fd5b505afa1580156143e7573d6000803e3d6000fd5b505050506040513d60408110156143fd57600080fd5b81019080805190602001909291908051906020019092919050505091509150600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614614561576144788261446a85620186a061498290919063ffffffff16565b614f3690919063ffffffff16565b915060008611156144ed576003620186a00a6144b38961ffff166144a5858a614f3690919063ffffffff16565b614f3690919063ffffffff16565b816144ba57fe5b0493506144d4848f60c0015161498290919063ffffffff16565b8e60c00181815250506144ec8e600001518286615449565b5b6000851115614560576003620186a00a6145268861ffff166145188589614f3690919063ffffffff16565b614f3690919063ffffffff16565b8161452d57fe5b049350614547848f60e0015161498290919063ffffffff16565b8e60e001818152505061455f8e602001518286615449565b5b5b50505b6000841115614633578b6000015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156145ee57600080fd5b505afa158015614602573d6000803e3d6000fd5b505050506040513d602081101561461857600080fd5b81019080805190602001909291905050508c60800181815250505b6000831115614702578b6020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156146bd57600080fd5b505afa1580156146d1573d6000803e3d6000fd5b505050506040513d60208110156146e757600080fd5b81019080805190602001909291905050508c60a00181815250505b505060006147218b60c001518c6080015161498290919063ffffffff16565b905060006147408c60e001518d60a0015161498290919063ffffffff16565b905061476c886dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff16614dfb565b6147768383614dfb565b10156147ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f655a4b616c69627572506169723a204b0000000000000000000000000000000081525060200191505060405180910390fd5b50506147fe8a608001518b60a00151615160565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848e604001518f606001516040518085815260200184815260200183815260200182815260200194505050505060405180910390a35050505050506001600d8190555050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60008282840391508111156149ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b614a5781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461498290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550614aec81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461598090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000600c60009054906101000a900460ff1615614bb95760009050614df5565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663995b5aae6040518163ffffffff1660e01b8152600401604080518083038186803b158015614c2357600080fd5b505afa158015614c37573d6000803e3d6000fd5b505050506040513d6040811015614c4d57600080fd5b81019080805190602001909291908051906020019092919050505091509150600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141592506000600b5490508315614ddf5760008114614dda576000614ce8614ce3886dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff16614dfb565b614fcb565b90506000614cf583614fcb565b905080821115614dd7576000614d34606487614d1e6064620186a0614f3690919063ffffffff16565b81614d2557fe5b0461498290919063ffffffff16565b90506000614d726064614d64614d53868861498290919063ffffffff16565b600054614f3690919063ffffffff16565b614f3690919063ffffffff16565b90506000614dae614d8d606486614f3690919063ffffffff16565b614da08588614f3690919063ffffffff16565b61598090919063ffffffff16565b90506000818381614dbb57fe5b0490506000811115614dd257614dd1888261502d565b5b505050505b50505b614df1565b60008114614df0576000600b819055505b5b5050505b92915050565b6000600c60009054906101000a900460ff1615614f1a576000600954614e32670de0b6b3a764000086614f3690919063ffffffff16565b81614e3957fe5b0490506000600a54614e5c670de0b6b3a764000086614f3690919063ffffffff16565b81614e6357fe5b0490506000670de0b6b3a7640000614e848385614f3690919063ffffffff16565b81614e8b57fe5b0490506000614ee9670de0b6b3a7640000614eaf8586614f3690919063ffffffff16565b81614eb657fe5b04670de0b6b3a7640000614ed38788614f3690919063ffffffff16565b81614eda57fe5b0461598090919063ffffffff16565b9050670de0b6b3a7640000614f078284614f3690919063ffffffff16565b81614f0e57fe5b04945050505050614f30565b614f2d8284614f3690919063ffffffff16565b90505b92915050565b600080821480614f535750828283850292508281614f5057fe5b04145b614fc5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6d756c2d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b6000600382111561501a578190506000600160028481614fe757fe5b040190505b818110156150145780915060028182858161500357fe5b04018161500c57fe5b049050614fec565b50615028565b6000821461502757600190505b5b919050565b6150428160005461598090919063ffffffff16565b60008190555061509a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461598090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008183106151565781615158565b825b905092915050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff1682111580156151d057507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff168111155b615242576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f655a4b616c69627572506169723a204f564552464c4f5700000000000000000081525060200191505060405180910390fd5b81600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550806008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1828260405180836dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152602001826dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b61538181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461498290919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506153d98160005461498290919063ffffffff16565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600060608473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106155765780518252602082019150602081019050602083039250615553565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146155d8576040519150601f19603f3d011682016040523d82523d6000602084013e6155dd565b606091505b509150915081801561561d575060008151148061561c575080806020019051602081101561560a57600080fd5b81019080805190602001909291905050505b5b61568f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f655a4b616c69627572506169723a205452414e534645525f4641494c4544000081525060200191505060405180910390fd5b5050505050565b6000600c60009054906101000a900460ff161561589f576156de620186a06156c78489614f3690919063ffffffff16565b816156ce57fe5b048761498290919063ffffffff16565b955060006156ec8585614dfb565b9050600954670de0b6b3a764000086028161570357fe5b049450600a54670de0b6b3a764000085028161571b57fe5b049350600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461577d578587615780565b86865b91509150600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146157f457600a54670de0b6b3a76400008a02816157ee57fe5b0461580b565b600954670de0b6b3a76400008a028161580957fe5b045b9850600061581c838b018584615a03565b82039050670de0b6b3a7640000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16146158865760095461588a565b600a545b82028161589357fe5b04945050505050615977565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146158fe578486615901565b85855b9150915061592d61591e85620186a061498290919063ffffffff16565b89614f3690919063ffffffff16565b975061595788615949620186a085614f3690919063ffffffff16565b61598090919063ffffffff16565b61596a828a614f3690919063ffffffff16565b8161597157fe5b04925050505b95945050505050565b60008282840191508110156159fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b600080600090505b60ff811015615ace5760008390506000615a258786615ada565b905085811015615a5d576000615a3b8887615b51565b670de0b6b3a76400008389030281615a4f57fe5b049050808601955050615a87565b6000615a698887615b51565b670de0b6b3a76400008884030281615a7d57fe5b0490508086039550505b81851115615aa957600182860311615aa457849350505050615ad3565b615abf565b600185830311615abe57849350505050615ad3565b5b50508080600101915050615a0b565b508190505b9392505050565b6000670de0b6b3a764000082670de0b6b3a764000085670de0b6b3a764000087880281615b0357fe5b040281615b0c57fe5b040281615b1557fe5b04670de0b6b3a76400008084670de0b6b3a764000086870281615b3457fe5b040281615b3d57fe5b04850281615b4757fe5b0401905092915050565b6000670de0b6b3a764000083670de0b6b3a764000085860281615b7057fe5b040281615b7957fe5b04670de0b6b3a76400008084850281615b8e57fe5b04856003020281615b9b57fe5b0401905092915050565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152509056fe655a4b616c69627572506169723a2066656550657263656e74206d7573746e27742065786365656420746865206d6178696d756d655a4b616c69627572506169723a20494e53554646494349454e545f4c49515549444954595f4255524e4544655a4b616c69627572506169723a20494e53554646494349454e545f4c4951554944495459655a4b616c69627572506169723a20494e53554646494349454e545f4c49515549444954595f4d494e544544655a4b616c69627572506169723a20494e53554646494349454e545f4f55545055545f414d4f554e54655a4b616c69627572506169723a206f6e6c7920666163746f7279277320736574537461626c654f776e6572655a4b616c69627572506169723a20494e53554646494349454e545f494e5055545f414d4f554e54655a4b616c69627572506169723a206c697175696469747920726174696f206e6f7420696e697469616c697a6564655a4b616c69627572506169723a2066656550657263656e74206d7573746e27742065786365656420746865206d696e696d756d655a4b616c69627572506169723a206f6e6c7920666163746f7279277320666565416d6f756e744f776e6572655a4b616c69627572506169723a206f6e6c7920666163746f72792773206f776e6572a265627a7a72315820d4194c2de07f2c2ed647fcf04a0959f45ce34d7255041063afc557173c6d096564736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x12C PUSH1 0x8 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x12C PUSH1 0x8 PUSH1 0x1E PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xD SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 CHAINID SWAP1 POP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH3 0x5FE0 PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x655A4B616C69627572204C500000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP CALLER PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x5E2A DUP1 PUSH3 0x1B6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x248 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD73792A9 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD73792A9 EQ PUSH2 0xC9C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xCBA JUMPI DUP1 PUSH4 0xF140A35A EQ PUSH2 0xD32 JUMPI DUP1 PUSH4 0xF39AC11F EQ PUSH2 0xD94 JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0xDF8 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0xB0D JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0xB2B JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xB6F JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0xBB9 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0xC03 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x89AFCB44 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x981 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x9E0 JUMPI DUP1 PUSH4 0x9E548B7F EQ PUSH2 0xA63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xA85 JUMPI DUP1 PUSH4 0xB6200B07 EQ PUSH2 0xAEB JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x78E JUMPI DUP1 PUSH4 0x6E1FDD7F EQ PUSH2 0x7E6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x8B3 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x90B JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x929 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x3029E5D4 GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x3BA17077 GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x3BA17077 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0x48E5D260 EQ PUSH2 0x70A JUMPI DUP1 PUSH4 0x62ECEC03 EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0x67D81740 EQ PUSH2 0x770 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x3029E5D4 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x3B9F1DC0 EQ PUSH2 0x67E JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x158EF93E GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x288E5D02 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0x2FCD1692 EQ PUSH2 0x594 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x466 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xE02 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x342 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x327 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x36F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x385 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46E PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B8 PUSH2 0xFF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DA PUSH2 0x100C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57E PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59C PUSH2 0x124E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1262 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x626 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH2 0x1775 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x668 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x686 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A4 PUSH2 0x1786 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x708 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A00 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x748 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH2 0xFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH2 0xFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C97 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x752 PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x778 PUSH2 0x1FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x7FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2471 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x913 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x96B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E8 PUSH2 0x2B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA28 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA0D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA55 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6B PUSH2 0x2BD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF3 PUSH2 0x2BFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB15 PUSH2 0x2C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2C17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB77 PUSH2 0x2F1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC1 PUSH2 0x2F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0xC19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2F6A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCA4 PUSH2 0x32AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xCD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xDAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x33CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE00 PUSH2 0x37DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0A PUSH2 0x5BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0xF0B DUP2 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x0 PUSH2 0x3A93 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x655A4B616C69627572204C500000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP2 POP PUSH1 0x8 PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC9 CALLER DUP5 DUP5 PUSH2 0x4897 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x1232 JUMPI PUSH1 0x0 PUSH2 0x1148 DUP4 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x123D DUP5 DUP5 DUP5 PUSH2 0x4A05 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC39026A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x134A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x135E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5CF1 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x148B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A20696D6D757461626C650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP4 ISZERO ISZERO EQ ISZERO PUSH2 0x1514 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A206E6F207570646174650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x159A JUMPI POP PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x160C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A206661696C65640000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1650 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4B99 JUMP JUMPDEST SWAP1 POP PUSH32 0xB6A86710BDE53AA7FB1B3856279E2AF5B476D53E2DD0902CF17A0911B5A43A8B PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP4 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP1 ISZERO PUSH2 0x16CC JUMPI POP DUP1 JUMPDEST PUSH2 0x16D7 JUMPI PUSH1 0x0 PUSH2 0x173A JUMP JUMPDEST PUSH2 0x1739 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4DFB JUMP JUMPDEST JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x17FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x186E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1882 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x192C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5DD3 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A20616C726561647920696D6D757461626C65 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x9122C41AE733A4D7740324D50E35FBD6EE85BE3C1312A45596D8045150AB2F2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1A6A JUMPI POP PUSH1 0x7 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1ADC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A20464F5242494444454E0000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x1D0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4C217715 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5DA7 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D0 DUP3 PUSH2 0xFFFF AND GT ISZERO DUP1 ISZERO PUSH2 0x1E59 JUMPI POP PUSH2 0x7D0 DUP2 PUSH2 0xFFFF AND GT ISZERO JUMPDEST PUSH2 0x1EAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5C17 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x1EC6 JUMPI POP PUSH1 0x0 DUP2 PUSH2 0xFFFF AND GT JUMPDEST PUSH2 0x1F1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5D73 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x1E PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA4877B8ECB5A00BA277E4BCEEEB187A669E7113649774DFBEA05C259CE27F17B DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x7D0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x2044 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x2057 PUSH2 0xF4C JUMP JUMPDEST POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2112 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x223E DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2265 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2273 DUP8 DUP8 PUSH2 0x4B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x22C7 JUMPI PUSH2 0x22B3 PUSH2 0x3E8 PUSH2 0x22A5 PUSH2 0x22A0 DUP7 DUP9 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4FCB JUMP JUMPDEST PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 POP PUSH2 0x22C2 PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x502D JUMP JUMPDEST PUSH2 0x232A JUMP JUMPDEST PUSH2 0x2327 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x22EE DUP4 DUP8 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x22F5 JUMPI INVALID JUMPDEST DIV DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x231A DUP5 DUP8 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x2321 JUMPI INVALID JUMPDEST DIV PUSH2 0x5147 JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x2383 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5C9C PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x238D DUP11 DUP11 PUSH2 0x502D JUMP JUMPDEST PUSH2 0x2397 DUP7 DUP7 PUSH2 0x5160 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2406 JUMPI PUSH2 0x23FF PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4DFB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2479 PUSH2 0x5BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2579 DUP2 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP6 PUSH2 0x3A93 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x2633 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x2646 PUSH2 0xF4C JUMP JUMPDEST POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x272D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x2862 DUP9 DUP9 PUSH2 0x4B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP1 PUSH2 0x287E DUP7 DUP6 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x2885 JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x289C DUP6 DUP6 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x28A3 JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x28B6 JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x290B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5C4B PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2915 ADDRESS DUP5 PUSH2 0x532F JUMP JUMPDEST PUSH2 0x2920 DUP8 DUP14 DUP14 PUSH2 0x5449 JUMP JUMPDEST PUSH2 0x292B DUP7 DUP14 DUP13 PUSH2 0x5449 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP5 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP4 POP PUSH2 0x2AA9 DUP6 DUP6 PUSH2 0x5160 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2B18 JUMPI PUSH2 0x2B11 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4DFB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 DUP14 DUP14 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x655A4B2D4C500000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF4 CALLER DUP5 DUP5 PUSH2 0x4A05 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x2C8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x2DE5 DUP3 DUP5 PUSH2 0x2DE0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5449 JUMP JUMPDEST PUSH2 0x2EE5 DUP2 DUP5 PUSH2 0x2EE0 PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5449 JUMP JUMPDEST PUSH32 0x21AD22495C9C75CD1C94756F91824E779C0C8A8E168B267C790DF464FE056B79 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x2FE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20455850495245440000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3226 JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x3298 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x32A3 DUP10 DUP10 DUP10 PUSH2 0x4897 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x186A0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3348 JUMPI PUSH1 0x8 PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x335A JUMP JUMPDEST PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND JUMPDEST SWAP1 POP PUSH2 0x33C5 DUP5 DUP5 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0xFFFF AND PUSH2 0x5696 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x3446 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3574 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5DD3 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3620 JUMPI POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x3692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A20696E76616C696420746F6B656E00000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3754 DUP3 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3728 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x373E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5449 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x368A9DC863ECB94B5BA32A682E26295B10D9C2666FAD7D785EBDF262C3C52413 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x3852 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x38FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x390F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x3A28 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST PUSH2 0x3A7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5D45 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A87 DUP3 DUP3 PUSH2 0x5160 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x3B0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD GT DUP1 PUSH2 0x3B2A JUMPI POP PUSH1 0x0 DUP5 PUSH1 0x60 ADD MLOAD GT JUMPDEST PUSH2 0x3B7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5CC8 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x3B8D PUSH2 0xF4C JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x40 ADD MLOAD LT DUP1 ISZERO PUSH2 0x3BCB JUMPI POP DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x60 ADD MLOAD LT JUMPDEST PUSH2 0x3C20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5C77 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3C90 JUMPI POP DUP8 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x3D02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A20494E56414C49445F544F00000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP9 PUSH1 0x40 ADD MLOAD GT ISZERO PUSH2 0x3D23 JUMPI PUSH2 0x3D22 DUP9 PUSH1 0x0 ADD MLOAD DUP9 DUP11 PUSH1 0x40 ADD MLOAD PUSH2 0x5449 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x3D44 JUMPI PUSH2 0x3D43 DUP9 PUSH1 0x20 ADD MLOAD DUP9 DUP11 PUSH1 0x60 ADD MLOAD PUSH2 0x5449 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 MLOAD GT ISZERO PUSH2 0x3E6B JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x10D1E85C CALLER DUP11 PUSH1 0x40 ADD MLOAD DUP12 PUSH1 0x60 ADD MLOAD DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3E03 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3DE8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E30 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP8 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP9 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP8 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3FB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP9 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP9 PUSH1 0x40 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP10 PUSH1 0x80 ADD MLOAD GT PUSH2 0x401F JUMPI PUSH1 0x0 PUSH2 0x403D JUMP JUMPDEST DUP9 PUSH1 0x40 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP10 PUSH1 0x80 ADD MLOAD SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 PUSH1 0x60 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP11 PUSH1 0xA0 ADD MLOAD GT PUSH2 0x4069 JUMPI PUSH1 0x0 PUSH2 0x4087 JUMP JUMPDEST DUP10 PUSH1 0x60 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP11 PUSH1 0xA0 ADD MLOAD SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x4098 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x40ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5D1D PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x186A0 PUSH2 0x4108 DUP6 PUSH2 0xFFFF AND DUP5 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x410F JUMPI INVALID JUMPDEST DIV DUP11 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH3 0x186A0 PUSH2 0x4134 DUP5 PUSH2 0xFFFF AND DUP4 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x413B JUMPI INVALID JUMPDEST DIV DUP11 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4187 JUMPI PUSH1 0x0 PUSH2 0x4262 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7183D47C DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x423A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x4354 JUMPI PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x42E0 JUMPI PUSH1 0x2 PUSH3 0x186A0 EXP PUSH2 0x42A6 DUP8 PUSH2 0xFFFF AND PUSH2 0x4298 DUP5 DUP9 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x42AD JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH2 0x42C7 DUP3 DUP14 PUSH1 0xC0 ADD MLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP13 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x42DF DUP13 PUSH1 0x0 ADD MLOAD DUP11 DUP5 PUSH2 0x5449 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x4353 JUMPI PUSH1 0x2 PUSH3 0x186A0 EXP PUSH2 0x4319 DUP7 PUSH2 0xFFFF AND PUSH2 0x430B DUP5 DUP8 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4320 JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH2 0x433A DUP3 DUP14 PUSH1 0xE0 ADD MLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP13 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x4352 DUP13 PUSH1 0x20 ADD MLOAD DUP11 DUP5 PUSH2 0x5449 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4564 JUMPI PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x995B5AAE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x43D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x43FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4561 JUMPI PUSH2 0x4478 DUP3 PUSH2 0x446A DUP6 PUSH3 0x186A0 PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP7 GT ISZERO PUSH2 0x44ED JUMPI PUSH1 0x3 PUSH3 0x186A0 EXP PUSH2 0x44B3 DUP10 PUSH2 0xFFFF AND PUSH2 0x44A5 DUP6 DUP11 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x44BA JUMPI INVALID JUMPDEST DIV SWAP4 POP PUSH2 0x44D4 DUP5 DUP16 PUSH1 0xC0 ADD MLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP15 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x44EC DUP15 PUSH1 0x0 ADD MLOAD DUP3 DUP7 PUSH2 0x5449 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0x4560 JUMPI PUSH1 0x3 PUSH3 0x186A0 EXP PUSH2 0x4526 DUP9 PUSH2 0xFFFF AND PUSH2 0x4518 DUP6 DUP10 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x452D JUMPI INVALID JUMPDEST DIV SWAP4 POP PUSH2 0x4547 DUP5 DUP16 PUSH1 0xE0 ADD MLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP15 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x455F DUP15 PUSH1 0x20 ADD MLOAD DUP3 DUP7 PUSH2 0x5449 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x4633 JUMPI DUP12 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4602 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP13 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x4702 JUMPI DUP12 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x46D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP13 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP POP PUSH1 0x0 PUSH2 0x4721 DUP12 PUSH1 0xC0 ADD MLOAD DUP13 PUSH1 0x80 ADD MLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4740 DUP13 PUSH1 0xE0 ADD MLOAD DUP14 PUSH1 0xA0 ADD MLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x476C DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4DFB JUMP JUMPDEST PUSH2 0x4776 DUP4 DUP4 PUSH2 0x4DFB JUMP JUMPDEST LT ISZERO PUSH2 0x47EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204B00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x47FE DUP11 PUSH1 0x80 ADD MLOAD DUP12 PUSH1 0xA0 ADD MLOAD PUSH2 0x5160 JUMP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 DUP5 DUP5 DUP15 PUSH1 0x40 ADD MLOAD DUP16 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0x49FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4A57 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4AEC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x5980 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4BB9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x4DF5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x995B5AAE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4C4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP3 POP PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP DUP4 ISZERO PUSH2 0x4DDF JUMPI PUSH1 0x0 DUP2 EQ PUSH2 0x4DDA JUMPI PUSH1 0x0 PUSH2 0x4CE8 PUSH2 0x4CE3 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4DFB JUMP JUMPDEST PUSH2 0x4FCB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4CF5 DUP4 PUSH2 0x4FCB JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4DD7 JUMPI PUSH1 0x0 PUSH2 0x4D34 PUSH1 0x64 DUP8 PUSH2 0x4D1E PUSH1 0x64 PUSH3 0x186A0 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4D25 JUMPI INVALID JUMPDEST DIV PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D72 PUSH1 0x64 PUSH2 0x4D64 PUSH2 0x4D53 DUP7 DUP9 PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4DAE PUSH2 0x4D8D PUSH1 0x64 DUP7 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4DA0 DUP6 DUP9 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5980 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x4DBB JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x4DD2 JUMPI PUSH2 0x4DD1 DUP9 DUP3 PUSH2 0x502D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x4DF1 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x4DF0 JUMPI PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4F1A JUMPI PUSH1 0x0 PUSH1 0x9 SLOAD PUSH2 0x4E32 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4E39 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH1 0xA SLOAD PUSH2 0x4E5C PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4E63 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4E84 DUP4 DUP6 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4E8B JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x4EE9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4EAF DUP6 DUP7 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4EB6 JUMPI INVALID JUMPDEST DIV PUSH8 0xDE0B6B3A7640000 PUSH2 0x4ED3 DUP8 DUP9 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4EDA JUMPI INVALID JUMPDEST DIV PUSH2 0x5980 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x4F07 DUP3 DUP5 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4F0E JUMPI INVALID JUMPDEST DIV SWAP5 POP POP POP POP POP PUSH2 0x4F30 JUMP JUMPDEST PUSH2 0x4F2D DUP3 DUP5 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ DUP1 PUSH2 0x4F53 JUMPI POP DUP3 DUP3 DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 PUSH2 0x4F50 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x4FC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6D756C2D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x501A JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 DUP2 PUSH2 0x4FE7 JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5014 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x5003 JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x500C JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x4FEC JUMP JUMPDEST POP PUSH2 0x5028 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x5027 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5042 DUP2 PUSH1 0x0 SLOAD PUSH2 0x5980 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x509A DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x5980 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x5156 JUMPI DUP2 PUSH2 0x5158 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x51D0 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 GT ISZERO JUMPDEST PUSH2 0x5242 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204F564552464C4F57000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x5381 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x53D9 DUP2 PUSH1 0x0 SLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x5576 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x5553 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x55D8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x55DD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x561D JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x561C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x560A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST JUMPDEST PUSH2 0x568F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A205452414E534645525F4641494C45440000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x589F JUMPI PUSH2 0x56DE PUSH3 0x186A0 PUSH2 0x56C7 DUP5 DUP10 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x56CE JUMPI INVALID JUMPDEST DIV DUP8 PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP PUSH1 0x0 PUSH2 0x56EC DUP6 DUP6 PUSH2 0x4DFB JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x5703 JUMPI INVALID JUMPDEST DIV SWAP5 POP PUSH1 0xA SLOAD PUSH8 0xDE0B6B3A7640000 DUP6 MUL DUP2 PUSH2 0x571B JUMPI INVALID JUMPDEST DIV SWAP4 POP PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x577D JUMPI DUP6 DUP8 PUSH2 0x5780 JUMP JUMPDEST DUP7 DUP7 JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x57F4 JUMPI PUSH1 0xA SLOAD PUSH8 0xDE0B6B3A7640000 DUP11 MUL DUP2 PUSH2 0x57EE JUMPI INVALID JUMPDEST DIV PUSH2 0x580B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH8 0xDE0B6B3A7640000 DUP11 MUL DUP2 PUSH2 0x5809 JUMPI INVALID JUMPDEST DIV JUMPDEST SWAP9 POP PUSH1 0x0 PUSH2 0x581C DUP4 DUP12 ADD DUP6 DUP5 PUSH2 0x5A03 JUMP JUMPDEST DUP3 SUB SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5886 JUMPI PUSH1 0x9 SLOAD PUSH2 0x588A JUMP JUMPDEST PUSH1 0xA SLOAD JUMPDEST DUP3 MUL DUP2 PUSH2 0x5893 JUMPI INVALID JUMPDEST DIV SWAP5 POP POP POP POP POP PUSH2 0x5977 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x58FE JUMPI DUP5 DUP7 PUSH2 0x5901 JUMP JUMPDEST DUP6 DUP6 JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x592D PUSH2 0x591E DUP6 PUSH3 0x186A0 PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 POP PUSH2 0x5957 DUP9 PUSH2 0x5949 PUSH3 0x186A0 DUP6 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5980 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x596A DUP3 DUP11 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x5971 JUMPI INVALID JUMPDEST DIV SWAP3 POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0x59FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xFF DUP2 LT ISZERO PUSH2 0x5ACE JUMPI PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH2 0x5A25 DUP8 DUP7 PUSH2 0x5ADA JUMP JUMPDEST SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0x5A5D JUMPI PUSH1 0x0 PUSH2 0x5A3B DUP9 DUP8 PUSH2 0x5B51 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP10 SUB MUL DUP2 PUSH2 0x5A4F JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 DUP7 ADD SWAP6 POP POP PUSH2 0x5A87 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A69 DUP9 DUP8 PUSH2 0x5B51 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP9 DUP5 SUB MUL DUP2 PUSH2 0x5A7D JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 DUP7 SUB SWAP6 POP POP JUMPDEST DUP2 DUP6 GT ISZERO PUSH2 0x5AA9 JUMPI PUSH1 0x1 DUP3 DUP7 SUB GT PUSH2 0x5AA4 JUMPI DUP5 SWAP4 POP POP POP POP PUSH2 0x5AD3 JUMP JUMPDEST PUSH2 0x5ABF JUMP JUMPDEST PUSH1 0x1 DUP6 DUP4 SUB GT PUSH2 0x5ABE JUMPI DUP5 SWAP4 POP POP POP POP PUSH2 0x5AD3 JUMP JUMPDEST JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5A0B JUMP JUMPDEST POP DUP2 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH8 0xDE0B6B3A7640000 DUP8 DUP9 MUL DUP2 PUSH2 0x5B03 JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5B0C JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5B15 JUMPI INVALID JUMPDEST DIV PUSH8 0xDE0B6B3A7640000 DUP1 DUP5 PUSH8 0xDE0B6B3A7640000 DUP7 DUP8 MUL DUP2 PUSH2 0x5B34 JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5B3D JUMPI INVALID JUMPDEST DIV DUP6 MUL DUP2 PUSH2 0x5B47 JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH8 0xDE0B6B3A7640000 DUP6 DUP7 MUL DUP2 PUSH2 0x5B70 JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5B79 JUMPI INVALID JUMPDEST DIV PUSH8 0xDE0B6B3A7640000 DUP1 DUP5 DUP6 MUL DUP2 PUSH2 0x5B8E JUMPI INVALID JUMPDEST DIV DUP6 PUSH1 0x3 MUL MUL DUP2 PUSH2 0x5B9B JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID PUSH6 0x5A4B616C6962 PUSH22 0x72506169723A2066656550657263656E74206D757374 PUSH15 0x27742065786365656420746865206D PUSH2 0x7869 PUSH14 0x756D655A4B616C69627572506169 PUSH19 0x3A20494E53554646494349454E545F4C495155 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY PUSH6 0x5A4B616C6962 PUSH22 0x72506169723A20494E53554646494349454E545F4C49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE PUSH6 0x5A4B616C6962 PUSH22 0x72506169723A20494E53554646494349454E545F4C49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY PUSH6 0x5A4B616C6962 PUSH22 0x72506169723A20494E53554646494349454E545F4F55 SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD PUSH6 0x5A4B616C6962 PUSH22 0x72506169723A206F6E6C7920666163746F7279277320 PUSH20 0x6574537461626C654F776E6572655A4B616C6962 PUSH22 0x72506169723A20494E53554646494349454E545F494E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD PUSH6 0x5A4B616C6962 PUSH22 0x72506169723A206C697175696469747920726174696F KECCAK256 PUSH15 0x6F7420696E697469616C697A656465 GAS 0x4B PUSH2 0x6C69 PUSH3 0x757250 PUSH2 0x6972 GASPRICE KECCAK256 PUSH7 0x65655065726365 PUSH15 0x74206D7573746E2774206578636565 PUSH5 0x2074686520 PUSH14 0x696E696D756D655A4B616C696275 PUSH19 0x506169723A206F6E6C7920666163746F727927 PUSH20 0x20666565416D6F756E744F776E6572655A4B616C PUSH10 0x627572506169723A206F PUSH15 0x6C7920666163746F72792773206F77 PUSH15 0x6572A265627A7A72315820D4194C2D 0xE0 PUSH32 0x2C2ED647FCF04A0959F45CE34D7255041063AFC557173C6D096564736F6C6343 STOP SDIV LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "236:17584:8:-;;;893:3;860:36;;;;;;;;;;;;;;;;;;;;1008:3;975:36;;;;;;;;;;;;;;;;;;;;1460:1;1436:25;;2748:52;8:9:-1;5:2;;;30:1;27;20:12;5:2;2748:52:8;952:12:0;1008:7;997:18;;1104:95;;;;;;;;;;;;;;;;;;;1233:4;;;;;;;;;;;;;;;;;1217:22;;;;;;1267:10;;;;;;;;;;;;;;;;;1257:21;;;;;;1296:7;1329:4;1076:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1076:272:0;;;1053:305;;;;;;1034:16;:324;;;;921:444;2785:10:8;2775:7;;:20;;;;;;;;;;;;;;;;;;236:17584;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102485760003560e01c80636a6278421161013b578063ba9a7a56116100b8578063d73792a91161007c578063d73792a914610c9c578063dd62ed3e14610cba578063f140a35a14610d32578063f39ac11f14610d94578063fff6cae914610df857610248565b8063ba9a7a5614610b0d578063bc25cf7714610b2b578063c45a015514610b6f578063d21220a714610bb9578063d505accf14610c0357610248565b806389afcb44116100ff57806389afcb441461098157806395d89b41146109e05780639e548b7f14610a63578063a9059cbb14610a85578063b6200b0714610aeb57610248565b80636a6278421461078e5780636e1fdd7f146107e657806370a08231146108b35780637464fc3d1461090b5780637ecebe001461092957610248565b80633029e5d4116101c95780633ba170771161018d5780633ba170771461069c578063485cc955146106a657806348e5d2601461070a57806362ecec031461074a57806367d817401461077057610248565b80633029e5d4146105ba57806330adf81f1461061e578063313ce5671461063c5780633644e515146106605780633b9f1dc01461067e57610248565b8063158ef93e11610210578063158ef93e146104b057806318160ddd146104d257806323b872dd146104f0578063288e5d02146105765780632fcd16921461059457610248565b8063022c0d9f1461024d57806306fdde03146102fa5780630902f1ac1461037d578063095ea7b3146104005780630dfe168114610466575b600080fd5b6102f86004803603608081101561026357600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102b457600080fd5b8201836020820111156102c657600080fd5b803590602001918460018302840111640100000000831117156102e857600080fd5b9091929391929390505050610e02565b005b610302610f13565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610342578082015181840152602081019050610327565b50505050905090810190601f16801561036f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610385610f4c565b60405180856dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152602001846dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020018361ffff1661ffff1681526020018261ffff1661ffff16815260200194505050505060405180910390f35b61044c6004803603604081101561041657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fbc565b604051808215151515815260200191505060405180910390f35b61046e610fd3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b8610ff9565b604051808215151515815260200191505060405180910390f35b6104da61100c565b6040518082815260200191505060405180910390f35b61055c6004803603606081101561050657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611012565b604051808215151515815260200191505060405180910390f35b61057e611248565b6040518082815260200191505060405180910390f35b61059c61124e565b604051808261ffff1661ffff16815260200191505060405180910390f35b61061c600480360360608110156105d057600080fd5b8101908080351515906020019092919080356dffffffffffffffffffffffffffff16906020019092919080356dffffffffffffffffffffffffffff169060200190929190505050611262565b005b61062661174e565b6040518082815260200191505060405180910390f35b610644611775565b604051808260ff1660ff16815260200191505060405180910390f35b61066861177a565b6040518082815260200191505060405180910390f35b610686611780565b6040518082815260200191505060405180910390f35b6106a4611786565b005b610708600480360360408110156106bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a00565b005b6107486004803603604081101561072057600080fd5b81019080803561ffff169060200190929190803561ffff169060200190929190505050611c97565b005b610752611fb0565b604051808261ffff1661ffff16815260200191505060405180910390f35b610778611fc4565b6040518082815260200191505060405180910390f35b6107d0600480360360208110156107a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fca565b6040518082815260200191505060405180910390f35b6108b1600480360360a08110156107fc57600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561084d57600080fd5b82018360208201111561085f57600080fd5b8035906020019184600183028401116401000000008311171561088157600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612471565b005b6108f5600480360360208110156108c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612582565b6040518082815260200191505060405180910390f35b61091361259a565b6040518082815260200191505060405180910390f35b61096b6004803603602081101561093f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125a0565b6040518082815260200191505060405180910390f35b6109c36004803603602081101561099757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125b8565b604051808381526020018281526020019250505060405180910390f35b6109e8612b9b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a28578082015181840152602081019050610a0d565b50505050905090810190601f168015610a555780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a6b612bd4565b604051808215151515815260200191505060405180910390f35b610ad160048036036040811015610a9b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612be7565b604051808215151515815260200191505060405180910390f35b610af3612bfe565b604051808215151515815260200191505060405180910390f35b610b15612c11565b6040518082815260200191505060405180910390f35b610b6d60048036036020811015610b4157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c17565b005b610b77612f1e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610bc1612f44565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610c9a600480360360e0811015610c1957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050612f6a565b005b610ca46132ae565b6040518082815260200191505060405180910390f35b610d1c60048036036040811015610cd057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132b5565b6040518082815260200191505060405180910390f35b610d7e60048036036040811015610d4857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132da565b6040518082815260200191505060405180910390f35b610df660048036036040811015610daa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506133ce565b005b610e006137da565b005b610e0a615ba5565b604051806101000160405280600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200160008152602001600081526020016000815260200160008152509050610f0b818585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506000613a93565b505050505050565b6040518060400160405280600c81526020017f655a4b616c69627572204c50000000000000000000000000000000000000000081525081565b600080600080600860009054906101000a90046dffffffffffffffffffffffffffff1693506008600e9054906101000a90046dffffffffffffffffffffffffffff1692506008601c9054906101000a900461ffff1691506008601e9054906101000a900461ffff16905090919293565b6000610fc9338484614897565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460ff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461123257600061114883600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461498290919063ffffffff16565b905080600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505b61123d848484614a05565b600190509392505050565b600a5481565b6008601e9054906101000a900461ffff1681565b6001600d54146112da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc39026a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561134a57600080fd5b505afa15801561135e573d6000803e3d6000fd5b505050506040513d602081101561137457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611408576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cf1602c913960400191505060405180910390fd5b600c60019054906101000a900460ff161561148b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f655a4b616c69627572506169723a20696d6d757461626c65000000000000000081525060200191505060405180910390fd5b600c60009054906101000a900460ff1615158315151415611514576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f655a4b616c69627572506169723a206e6f20757064617465000000000000000081525060200191505060405180910390fd5b600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16826dffffffffffffffffffffffffffff1614801561159a57506008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16816dffffffffffffffffffffffffffff16145b61160c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a206661696c6564000000000000000000000081525060200191505060405180910390fd5b6000611650600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff16614b99565b90507fb6a86710bde53aa7fb1b3856279e2af5b476d53e2dd0902cf17a0911b5a43a8b600c60009054906101000a900460ff16856040518083151515158152602001821515151581526020019250505060405180910390a183600c60006101000a81548160ff0219169083151502179055508380156116cc5750805b6116d757600061173a565b611739600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16614dfb565b5b600b81905550506001600d81905550505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60095481565b6001600d54146117fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561186e57600080fd5b505afa158015611882573d6000803e3d6000fd5b505050506040513d602081101561189857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461192c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180615dd36023913960400191505060405180910390fd5b600c60019054906101000a900460ff16156119af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f655a4b616c69627572506169723a20616c726561647920696d6d757461626c6581525060200191505060405180910390fd5b6001600c60016101000a81548160ff0219169083151502179055507f09122c41ae733a4d7740324d50e35fbd6ee85be3c1312a45596d8045150ab2f260405160405180910390a16001600d81905550565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015611a6a5750600760149054906101000a900460ff16155b611adc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f655a4b616c69627572506169723a20464f5242494444454e000000000000000081525060200191505060405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611ba457600080fd5b505afa158015611bb8573d6000803e3d6000fd5b505050506040513d6020811015611bce57600080fd5b810190808051906020019092919050505060ff16600a0a6009819055508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611c3157600080fd5b505afa158015611c45573d6000803e3d6000fd5b505050506040513d6020811015611c5b57600080fd5b810190808051906020019092919050505060ff16600a0a600a819055506001600760146101000a81548160ff0219169083151502179055505050565b6001600d5414611d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2177156040518163ffffffff1660e01b815260040160206040518083038186803b158015611d7f57600080fd5b505afa158015611d93573d6000803e3d6000fd5b505050506040513d6020811015611da957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615da7602c913960400191505060405180910390fd5b6107d08261ffff1611158015611e5957506107d08161ffff1611155b611eae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180615c176034913960400191505060405180910390fd5b60008261ffff16118015611ec6575060008161ffff16115b611f1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180615d736034913960400191505060405180910390fd5b816008601c6101000a81548161ffff021916908361ffff160217905550806008601e6101000a81548161ffff021916908361ffff1602179055507fa4877b8ecb5a00ba277e4bceeeb187a669e7113649774dfbea05c259ce27f17b8282604051808361ffff1661ffff1681526020018261ffff1661ffff1681526020019250505060405180910390a16001600d819055505050565b6008601c9054906101000a900461ffff1681565b6107d081565b60006001600d5414612044576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600080612057610f4c565b5050915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156120fe57600080fd5b505afa158015612112573d6000803e3d6000fd5b505050506040513d602081101561212857600080fd5b810190808051906020019092919050505090506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156121dc57600080fd5b505afa1580156121f0573d6000803e3d6000fd5b505050506040513d602081101561220657600080fd5b81019080805190602001909291905050509050600061223e856dffffffffffffffffffffffffffff168461498290919063ffffffff16565b90506000612265856dffffffffffffffffffffffffffff168461498290919063ffffffff16565b905060006122738787614b99565b905060008054905060008114156122c7576122b36103e86122a56122a08688614f3690919063ffffffff16565b614fcb565b61498290919063ffffffff16565b98506122c260006103e861502d565b61232a565b612327886dffffffffffffffffffffffffffff166122ee8387614f3690919063ffffffff16565b816122f557fe5b04886dffffffffffffffffffffffffffff1661231a8487614f3690919063ffffffff16565b8161232157fe5b04615147565b98505b60008911612383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615c9c602c913960400191505060405180910390fd5b61238d8a8a61502d565b6123978686615160565b8115612406576123ff600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16614dfb565b600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f8585604051808381526020018281526020019250505060405180910390a250505050505050506001600d81905550919050565b612479615ba5565b604051806101000160405280600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188815260200187815260200160008152602001600081526020016000815260200160008152509050612579818686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505085613a93565b50505050505050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600d5414612633576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600080612646610f4c565b5050915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561271957600080fd5b505afa15801561272d573d6000803e3d6000fd5b505050506040513d602081101561274357600080fd5b8101908080519060200190929190505050905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156127d557600080fd5b505afa1580156127e9573d6000803e3d6000fd5b505050506040513d60208110156127ff57600080fd5b810190808051906020019092919050505090506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006128628888614b99565b90506000805490508061287e8685614f3690919063ffffffff16565b8161288557fe5b049a508061289c8585614f3690919063ffffffff16565b816128a357fe5b04995060008b1180156128b6575060008a115b61290b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615c4b602c913960400191505060405180910390fd5b612915308461532f565b612920878d8d615449565b61292b868d8c615449565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156129a857600080fd5b505afa1580156129bc573d6000803e3d6000fd5b505050506040513d60208110156129d257600080fd5b810190808051906020019092919050505094508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015612a6257600080fd5b505afa158015612a76573d6000803e3d6000fd5b505050506040513d6020811015612a8c57600080fd5b81019080805190602001909291905050509350612aa98585615160565b8115612b1857612b11600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16614dfb565b600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051808381526020018281526020019250505060405180910390a35050505050505050506001600d81905550915091565b6040518060400160405280600681526020017f655a4b2d4c50000000000000000000000000000000000000000000000000000081525081565b600c60009054906101000a900460ff1681565b6000612bf4338484614a05565b6001905092915050565b600c60019054906101000a900460ff1681565b6103e881565b6001600d5414612c8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050612de58284612de0600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015612d9757600080fd5b505afa158015612dab573d6000803e3d6000fd5b505050506040513d6020811015612dc157600080fd5b810190808051906020019092919050505061498290919063ffffffff16565b615449565b612ee58184612ee06008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015612e9757600080fd5b505afa158015612eab573d6000803e3d6000fd5b505050506040513d6020811015612ec157600080fd5b810190808051906020019092919050505061498290919063ffffffff16565b615449565b7f21ad22495c9c75cd1c94756f91824e779c0c8a8e168b267c790df464fe056b7960405160405180910390a150506001600d8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015612fe0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f556e697377617056323a2045585049524544000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156131b2573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561322657508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b613298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f556e697377617056323a20494e56414c49445f5349474e41545552450000000081525060200191505060405180910390fd5b6132a3898989614897565b505050505050505050565b620186a081565b6002602052816000526040600020602052806000526040600020600091509150505481565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614613348576008601e9054906101000a900461ffff1661335a565b6008601c9054906101000a900461ffff165b90506133c58484600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168561ffff16615696565b91505092915050565b6001600d5414613446576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156134b657600080fd5b505afa1580156134ca573d6000803e3d6000fd5b505050506040513d60208110156134e057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613574576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180615dd36023913960400191505060405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156136205750600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b613692576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f655a4b616c69627572506169723a20696e76616c696420746f6b656e0000000081525060200191505060405180910390fd5b61375482828473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561371457600080fd5b505afa158015613728573d6000803e3d6000fd5b505050506040513d602081101561373e57600080fd5b8101908080519060200190929190505050615449565b8173ffffffffffffffffffffffffffffffffffffffff167f368a9dc863ecb94b5ba32a682e26295b10d9c2666fad7d785ebdf262c3c5241382604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a26001600d819055505050565b6001600d5414613852576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156138fb57600080fd5b505afa15801561390f573d6000803e3d6000fd5b505050506040513d602081101561392557600080fd5b810190808051906020019092919050505090506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156139d957600080fd5b505afa1580156139ed573d6000803e3d6000fd5b505050506040513d6020811015613a0357600080fd5b8101908080519060200190929190505050905060008214158015613a28575060008114155b613a7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d45602e913960400191505060405180910390fd5b613a878282615160565b50506001600d81905550565b6001600d5414613b0b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f655a4b616c69627572506169723a204c4f434b4544000000000000000000000081525060200191505060405180910390fd5b6000600d81905550600084604001511180613b2a575060008460600151115b613b7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180615cc86029913960400191505060405180910390fd5b600080600080613b8d610f4c565b9350935093509350836dffffffffffffffffffffffffffff168860400151108015613bcb5750826dffffffffffffffffffffffffffff168860600151105b613c20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180615c776025913960400191505060405180910390fd5b876000015173ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614158015613c905750876020015173ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614155b613d02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f655a4b616c69627572506169723a20494e56414c49445f544f0000000000000081525060200191505060405180910390fd5b600088604001511115613d2357613d228860000151888a60400151615449565b5b600088606001511115613d4457613d438860200151888a60600151615449565b5b600086511115613e6b578673ffffffffffffffffffffffffffffffffffffffff166310d1e85c338a604001518b606001518a6040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613e03578082015181840152602081019050613de8565b50505050905090810190601f168015613e305780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015613e5257600080fd5b505af1158015613e66573d6000803e3d6000fd5b505050505b876000015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015613eec57600080fd5b505afa158015613f00573d6000803e3d6000fd5b505050506040513d6020811015613f1657600080fd5b8101908080519060200190929190505050886080018181525050876020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015613fb157600080fd5b505afa158015613fc5573d6000803e3d6000fd5b505050506040513d6020811015613fdb57600080fd5b81019080805190602001909291905050508860a001818152505060008860400151856dffffffffffffffffffffffffffff160389608001511161401f57600061403d565b8860400151856dffffffffffffffffffffffffffff16038960800151035b905060008960600151856dffffffffffffffffffffffffffff16038a60a0015111614069576000614087565b8960600151856dffffffffffffffffffffffffffff16038a60a00151035b905060008211806140985750600081115b6140ed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180615d1d6028913960400191505060405180910390fd5b620186a06141088561ffff1684614f3690919063ffffffff16565b8161410f57fe5b048a60c0018181525050620186a06141348461ffff1683614f3690919063ffffffff16565b8161413b57fe5b048a60e0018181525050600080905060008073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415614187576000614262565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637183d47c8a6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561422657600080fd5b505afa15801561423a573d6000803e3d6000fd5b505050506040513d602081101561425057600080fd5b81019080805190602001909291905050505b905060008111156143545760008411156142e0576002620186a00a6142a68761ffff166142988488614f3690919063ffffffff16565b614f3690919063ffffffff16565b816142ad57fe5b0491506142c7828d60c0015161498290919063ffffffff16565b8c60c00181815250506142df8c600001518a84615449565b5b6000831115614353576002620186a00a6143198661ffff1661430b8487614f3690919063ffffffff16565b614f3690919063ffffffff16565b8161432057fe5b04915061433a828d60e0015161498290919063ffffffff16565b8c60e00181815250506143528c602001518a84615449565b5b5b600c60009054906101000a900460ff161561456457600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663995b5aae6040518163ffffffff1660e01b8152600401604080518083038186803b1580156143d357600080fd5b505afa1580156143e7573d6000803e3d6000fd5b505050506040513d60408110156143fd57600080fd5b81019080805190602001909291908051906020019092919050505091509150600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614614561576144788261446a85620186a061498290919063ffffffff16565b614f3690919063ffffffff16565b915060008611156144ed576003620186a00a6144b38961ffff166144a5858a614f3690919063ffffffff16565b614f3690919063ffffffff16565b816144ba57fe5b0493506144d4848f60c0015161498290919063ffffffff16565b8e60c00181815250506144ec8e600001518286615449565b5b6000851115614560576003620186a00a6145268861ffff166145188589614f3690919063ffffffff16565b614f3690919063ffffffff16565b8161452d57fe5b049350614547848f60e0015161498290919063ffffffff16565b8e60e001818152505061455f8e602001518286615449565b5b5b50505b6000841115614633578b6000015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156145ee57600080fd5b505afa158015614602573d6000803e3d6000fd5b505050506040513d602081101561461857600080fd5b81019080805190602001909291905050508c60800181815250505b6000831115614702578b6020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156146bd57600080fd5b505afa1580156146d1573d6000803e3d6000fd5b505050506040513d60208110156146e757600080fd5b81019080805190602001909291905050508c60a00181815250505b505060006147218b60c001518c6080015161498290919063ffffffff16565b905060006147408c60e001518d60a0015161498290919063ffffffff16565b905061476c886dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff16614dfb565b6147768383614dfb565b10156147ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f655a4b616c69627572506169723a204b0000000000000000000000000000000081525060200191505060405180910390fd5b50506147fe8a608001518b60a00151615160565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848e604001518f606001516040518085815260200184815260200183815260200182815260200194505050505060405180910390a35050505050506001600d8190555050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60008282840391508111156149ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b614a5781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461498290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550614aec81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461598090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000600c60009054906101000a900460ff1615614bb95760009050614df5565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663995b5aae6040518163ffffffff1660e01b8152600401604080518083038186803b158015614c2357600080fd5b505afa158015614c37573d6000803e3d6000fd5b505050506040513d6040811015614c4d57600080fd5b81019080805190602001909291908051906020019092919050505091509150600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141592506000600b5490508315614ddf5760008114614dda576000614ce8614ce3886dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff16614dfb565b614fcb565b90506000614cf583614fcb565b905080821115614dd7576000614d34606487614d1e6064620186a0614f3690919063ffffffff16565b81614d2557fe5b0461498290919063ffffffff16565b90506000614d726064614d64614d53868861498290919063ffffffff16565b600054614f3690919063ffffffff16565b614f3690919063ffffffff16565b90506000614dae614d8d606486614f3690919063ffffffff16565b614da08588614f3690919063ffffffff16565b61598090919063ffffffff16565b90506000818381614dbb57fe5b0490506000811115614dd257614dd1888261502d565b5b505050505b50505b614df1565b60008114614df0576000600b819055505b5b5050505b92915050565b6000600c60009054906101000a900460ff1615614f1a576000600954614e32670de0b6b3a764000086614f3690919063ffffffff16565b81614e3957fe5b0490506000600a54614e5c670de0b6b3a764000086614f3690919063ffffffff16565b81614e6357fe5b0490506000670de0b6b3a7640000614e848385614f3690919063ffffffff16565b81614e8b57fe5b0490506000614ee9670de0b6b3a7640000614eaf8586614f3690919063ffffffff16565b81614eb657fe5b04670de0b6b3a7640000614ed38788614f3690919063ffffffff16565b81614eda57fe5b0461598090919063ffffffff16565b9050670de0b6b3a7640000614f078284614f3690919063ffffffff16565b81614f0e57fe5b04945050505050614f30565b614f2d8284614f3690919063ffffffff16565b90505b92915050565b600080821480614f535750828283850292508281614f5057fe5b04145b614fc5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6d756c2d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b6000600382111561501a578190506000600160028481614fe757fe5b040190505b818110156150145780915060028182858161500357fe5b04018161500c57fe5b049050614fec565b50615028565b6000821461502757600190505b5b919050565b6150428160005461598090919063ffffffff16565b60008190555061509a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461598090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008183106151565781615158565b825b905092915050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff1682111580156151d057507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff168111155b615242576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f655a4b616c69627572506169723a204f564552464c4f5700000000000000000081525060200191505060405180910390fd5b81600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550806008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1828260405180836dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152602001826dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b61538181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461498290919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506153d98160005461498290919063ffffffff16565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600060608473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106155765780518252602082019150602081019050602083039250615553565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146155d8576040519150601f19603f3d011682016040523d82523d6000602084013e6155dd565b606091505b509150915081801561561d575060008151148061561c575080806020019051602081101561560a57600080fd5b81019080805190602001909291905050505b5b61568f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f655a4b616c69627572506169723a205452414e534645525f4641494c4544000081525060200191505060405180910390fd5b5050505050565b6000600c60009054906101000a900460ff161561589f576156de620186a06156c78489614f3690919063ffffffff16565b816156ce57fe5b048761498290919063ffffffff16565b955060006156ec8585614dfb565b9050600954670de0b6b3a764000086028161570357fe5b049450600a54670de0b6b3a764000085028161571b57fe5b049350600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461577d578587615780565b86865b91509150600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146157f457600a54670de0b6b3a76400008a02816157ee57fe5b0461580b565b600954670de0b6b3a76400008a028161580957fe5b045b9850600061581c838b018584615a03565b82039050670de0b6b3a7640000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16146158865760095461588a565b600a545b82028161589357fe5b04945050505050615977565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146158fe578486615901565b85855b9150915061592d61591e85620186a061498290919063ffffffff16565b89614f3690919063ffffffff16565b975061595788615949620186a085614f3690919063ffffffff16565b61598090919063ffffffff16565b61596a828a614f3690919063ffffffff16565b8161597157fe5b04925050505b95945050505050565b60008282840191508110156159fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b600080600090505b60ff811015615ace5760008390506000615a258786615ada565b905085811015615a5d576000615a3b8887615b51565b670de0b6b3a76400008389030281615a4f57fe5b049050808601955050615a87565b6000615a698887615b51565b670de0b6b3a76400008884030281615a7d57fe5b0490508086039550505b81851115615aa957600182860311615aa457849350505050615ad3565b615abf565b600185830311615abe57849350505050615ad3565b5b50508080600101915050615a0b565b508190505b9392505050565b6000670de0b6b3a764000082670de0b6b3a764000085670de0b6b3a764000087880281615b0357fe5b040281615b0c57fe5b040281615b1557fe5b04670de0b6b3a76400008084670de0b6b3a764000086870281615b3457fe5b040281615b3d57fe5b04850281615b4757fe5b0401905092915050565b6000670de0b6b3a764000083670de0b6b3a764000085860281615b7057fe5b040281615b7957fe5b04670de0b6b3a76400008084850281615b8e57fe5b04856003020281615b9b57fe5b0401905092915050565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152509056fe655a4b616c69627572506169723a2066656550657263656e74206d7573746e27742065786365656420746865206d6178696d756d655a4b616c69627572506169723a20494e53554646494349454e545f4c49515549444954595f4255524e4544655a4b616c69627572506169723a20494e53554646494349454e545f4c4951554944495459655a4b616c69627572506169723a20494e53554646494349454e545f4c49515549444954595f4d494e544544655a4b616c69627572506169723a20494e53554646494349454e545f4f55545055545f414d4f554e54655a4b616c69627572506169723a206f6e6c7920666163746f7279277320736574537461626c654f776e6572655a4b616c69627572506169723a20494e53554646494349454e545f494e5055545f414d4f554e54655a4b616c69627572506169723a206c697175696469747920726174696f206e6f7420696e697469616c697a6564655a4b616c69627572506169723a2066656550657263656e74206d7573746e27742065786365656420746865206d696e696d756d655a4b616c69627572506169723a206f6e6c7920666163746f7279277320666565416d6f756e744f776e6572655a4b616c69627572506169723a206f6e6c7920666163746f72792773206f776e6572a265627a7a72315820d4194c2de07f2c2ed647fcf04a0959f45ce34d7255041063afc557173c6d096564736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x248 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD73792A9 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD73792A9 EQ PUSH2 0xC9C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xCBA JUMPI DUP1 PUSH4 0xF140A35A EQ PUSH2 0xD32 JUMPI DUP1 PUSH4 0xF39AC11F EQ PUSH2 0xD94 JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0xDF8 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0xB0D JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0xB2B JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xB6F JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0xBB9 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0xC03 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x89AFCB44 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x981 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x9E0 JUMPI DUP1 PUSH4 0x9E548B7F EQ PUSH2 0xA63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xA85 JUMPI DUP1 PUSH4 0xB6200B07 EQ PUSH2 0xAEB JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x78E JUMPI DUP1 PUSH4 0x6E1FDD7F EQ PUSH2 0x7E6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x8B3 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x90B JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x929 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x3029E5D4 GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x3BA17077 GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x3BA17077 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0x48E5D260 EQ PUSH2 0x70A JUMPI DUP1 PUSH4 0x62ECEC03 EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0x67D81740 EQ PUSH2 0x770 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x3029E5D4 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x3B9F1DC0 EQ PUSH2 0x67E JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x158EF93E GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x288E5D02 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0x2FCD1692 EQ PUSH2 0x594 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x466 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xE02 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x342 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x327 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x36F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x385 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46E PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B8 PUSH2 0xFF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DA PUSH2 0x100C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57E PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59C PUSH2 0x124E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1262 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x626 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH2 0x1775 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x668 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x686 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A4 PUSH2 0x1786 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x708 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A00 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x748 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH2 0xFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH2 0xFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C97 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x752 PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x778 PUSH2 0x1FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x7FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2471 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x913 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x96B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E8 PUSH2 0x2B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA28 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA0D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA55 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6B PUSH2 0x2BD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF3 PUSH2 0x2BFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB15 PUSH2 0x2C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2C17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB77 PUSH2 0x2F1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC1 PUSH2 0x2F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0xC19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2F6A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCA4 PUSH2 0x32AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xCD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xDAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x33CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE00 PUSH2 0x37DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0A PUSH2 0x5BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0xF0B DUP2 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x0 PUSH2 0x3A93 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x655A4B616C69627572204C500000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP2 POP PUSH1 0x8 PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC9 CALLER DUP5 DUP5 PUSH2 0x4897 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x1232 JUMPI PUSH1 0x0 PUSH2 0x1148 DUP4 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x123D DUP5 DUP5 DUP5 PUSH2 0x4A05 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC39026A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x134A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x135E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5CF1 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x148B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A20696D6D757461626C650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP4 ISZERO ISZERO EQ ISZERO PUSH2 0x1514 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A206E6F207570646174650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x159A JUMPI POP PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x160C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A206661696C65640000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1650 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4B99 JUMP JUMPDEST SWAP1 POP PUSH32 0xB6A86710BDE53AA7FB1B3856279E2AF5B476D53E2DD0902CF17A0911B5A43A8B PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP4 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP1 ISZERO PUSH2 0x16CC JUMPI POP DUP1 JUMPDEST PUSH2 0x16D7 JUMPI PUSH1 0x0 PUSH2 0x173A JUMP JUMPDEST PUSH2 0x1739 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4DFB JUMP JUMPDEST JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x17FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x186E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1882 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x192C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5DD3 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A20616C726561647920696D6D757461626C65 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x9122C41AE733A4D7740324D50E35FBD6EE85BE3C1312A45596D8045150AB2F2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1A6A JUMPI POP PUSH1 0x7 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1ADC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A20464F5242494444454E0000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x1D0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4C217715 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5DA7 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D0 DUP3 PUSH2 0xFFFF AND GT ISZERO DUP1 ISZERO PUSH2 0x1E59 JUMPI POP PUSH2 0x7D0 DUP2 PUSH2 0xFFFF AND GT ISZERO JUMPDEST PUSH2 0x1EAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5C17 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x1EC6 JUMPI POP PUSH1 0x0 DUP2 PUSH2 0xFFFF AND GT JUMPDEST PUSH2 0x1F1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5D73 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x1E PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA4877B8ECB5A00BA277E4BCEEEB187A669E7113649774DFBEA05C259CE27F17B DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x7D0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x2044 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x2057 PUSH2 0xF4C JUMP JUMPDEST POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2112 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x223E DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2265 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2273 DUP8 DUP8 PUSH2 0x4B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x22C7 JUMPI PUSH2 0x22B3 PUSH2 0x3E8 PUSH2 0x22A5 PUSH2 0x22A0 DUP7 DUP9 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4FCB JUMP JUMPDEST PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 POP PUSH2 0x22C2 PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x502D JUMP JUMPDEST PUSH2 0x232A JUMP JUMPDEST PUSH2 0x2327 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x22EE DUP4 DUP8 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x22F5 JUMPI INVALID JUMPDEST DIV DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x231A DUP5 DUP8 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x2321 JUMPI INVALID JUMPDEST DIV PUSH2 0x5147 JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x2383 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5C9C PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x238D DUP11 DUP11 PUSH2 0x502D JUMP JUMPDEST PUSH2 0x2397 DUP7 DUP7 PUSH2 0x5160 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2406 JUMPI PUSH2 0x23FF PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4DFB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2479 PUSH2 0x5BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2579 DUP2 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP6 PUSH2 0x3A93 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x2633 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x2646 PUSH2 0xF4C JUMP JUMPDEST POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x272D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x2862 DUP9 DUP9 PUSH2 0x4B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP1 PUSH2 0x287E DUP7 DUP6 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x2885 JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x289C DUP6 DUP6 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x28A3 JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x28B6 JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x290B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5C4B PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2915 ADDRESS DUP5 PUSH2 0x532F JUMP JUMPDEST PUSH2 0x2920 DUP8 DUP14 DUP14 PUSH2 0x5449 JUMP JUMPDEST PUSH2 0x292B DUP7 DUP14 DUP13 PUSH2 0x5449 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP5 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP4 POP PUSH2 0x2AA9 DUP6 DUP6 PUSH2 0x5160 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2B18 JUMPI PUSH2 0x2B11 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4DFB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 DUP14 DUP14 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x655A4B2D4C500000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF4 CALLER DUP5 DUP5 PUSH2 0x4A05 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x2C8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x2DE5 DUP3 DUP5 PUSH2 0x2DE0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5449 JUMP JUMPDEST PUSH2 0x2EE5 DUP2 DUP5 PUSH2 0x2EE0 PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5449 JUMP JUMPDEST PUSH32 0x21AD22495C9C75CD1C94756F91824E779C0C8A8E168B267C790DF464FE056B79 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x2FE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20455850495245440000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3226 JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x3298 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x32A3 DUP10 DUP10 DUP10 PUSH2 0x4897 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x186A0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3348 JUMPI PUSH1 0x8 PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x335A JUMP JUMPDEST PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND JUMPDEST SWAP1 POP PUSH2 0x33C5 DUP5 DUP5 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0xFFFF AND PUSH2 0x5696 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x3446 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3574 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5DD3 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3620 JUMPI POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x3692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A20696E76616C696420746F6B656E00000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3754 DUP3 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3728 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x373E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5449 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x368A9DC863ECB94B5BA32A682E26295B10D9C2666FAD7D785EBDF262C3C52413 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x3852 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x38FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x390F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x3A28 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST PUSH2 0x3A7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5D45 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A87 DUP3 DUP3 PUSH2 0x5160 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SLOAD EQ PUSH2 0x3B0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204C4F434B45440000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD GT DUP1 PUSH2 0x3B2A JUMPI POP PUSH1 0x0 DUP5 PUSH1 0x60 ADD MLOAD GT JUMPDEST PUSH2 0x3B7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5CC8 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x3B8D PUSH2 0xF4C JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x40 ADD MLOAD LT DUP1 ISZERO PUSH2 0x3BCB JUMPI POP DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x60 ADD MLOAD LT JUMPDEST PUSH2 0x3C20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5C77 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3C90 JUMPI POP DUP8 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x3D02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A20494E56414C49445F544F00000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP9 PUSH1 0x40 ADD MLOAD GT ISZERO PUSH2 0x3D23 JUMPI PUSH2 0x3D22 DUP9 PUSH1 0x0 ADD MLOAD DUP9 DUP11 PUSH1 0x40 ADD MLOAD PUSH2 0x5449 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x3D44 JUMPI PUSH2 0x3D43 DUP9 PUSH1 0x20 ADD MLOAD DUP9 DUP11 PUSH1 0x60 ADD MLOAD PUSH2 0x5449 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 MLOAD GT ISZERO PUSH2 0x3E6B JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x10D1E85C CALLER DUP11 PUSH1 0x40 ADD MLOAD DUP12 PUSH1 0x60 ADD MLOAD DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3E03 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3DE8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E30 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP8 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP9 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP8 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3FB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP9 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP9 PUSH1 0x40 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP10 PUSH1 0x80 ADD MLOAD GT PUSH2 0x401F JUMPI PUSH1 0x0 PUSH2 0x403D JUMP JUMPDEST DUP9 PUSH1 0x40 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP10 PUSH1 0x80 ADD MLOAD SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 PUSH1 0x60 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP11 PUSH1 0xA0 ADD MLOAD GT PUSH2 0x4069 JUMPI PUSH1 0x0 PUSH2 0x4087 JUMP JUMPDEST DUP10 PUSH1 0x60 ADD MLOAD DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP11 PUSH1 0xA0 ADD MLOAD SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x4098 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x40ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5D1D PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x186A0 PUSH2 0x4108 DUP6 PUSH2 0xFFFF AND DUP5 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x410F JUMPI INVALID JUMPDEST DIV DUP11 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH3 0x186A0 PUSH2 0x4134 DUP5 PUSH2 0xFFFF AND DUP4 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x413B JUMPI INVALID JUMPDEST DIV DUP11 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4187 JUMPI PUSH1 0x0 PUSH2 0x4262 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7183D47C DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x423A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x4354 JUMPI PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x42E0 JUMPI PUSH1 0x2 PUSH3 0x186A0 EXP PUSH2 0x42A6 DUP8 PUSH2 0xFFFF AND PUSH2 0x4298 DUP5 DUP9 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x42AD JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH2 0x42C7 DUP3 DUP14 PUSH1 0xC0 ADD MLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP13 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x42DF DUP13 PUSH1 0x0 ADD MLOAD DUP11 DUP5 PUSH2 0x5449 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x4353 JUMPI PUSH1 0x2 PUSH3 0x186A0 EXP PUSH2 0x4319 DUP7 PUSH2 0xFFFF AND PUSH2 0x430B DUP5 DUP8 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4320 JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH2 0x433A DUP3 DUP14 PUSH1 0xE0 ADD MLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP13 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x4352 DUP13 PUSH1 0x20 ADD MLOAD DUP11 DUP5 PUSH2 0x5449 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4564 JUMPI PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x995B5AAE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x43D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x43FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4561 JUMPI PUSH2 0x4478 DUP3 PUSH2 0x446A DUP6 PUSH3 0x186A0 PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP7 GT ISZERO PUSH2 0x44ED JUMPI PUSH1 0x3 PUSH3 0x186A0 EXP PUSH2 0x44B3 DUP10 PUSH2 0xFFFF AND PUSH2 0x44A5 DUP6 DUP11 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x44BA JUMPI INVALID JUMPDEST DIV SWAP4 POP PUSH2 0x44D4 DUP5 DUP16 PUSH1 0xC0 ADD MLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP15 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x44EC DUP15 PUSH1 0x0 ADD MLOAD DUP3 DUP7 PUSH2 0x5449 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0x4560 JUMPI PUSH1 0x3 PUSH3 0x186A0 EXP PUSH2 0x4526 DUP9 PUSH2 0xFFFF AND PUSH2 0x4518 DUP6 DUP10 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x452D JUMPI INVALID JUMPDEST DIV SWAP4 POP PUSH2 0x4547 DUP5 DUP16 PUSH1 0xE0 ADD MLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP15 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x455F DUP15 PUSH1 0x20 ADD MLOAD DUP3 DUP7 PUSH2 0x5449 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x4633 JUMPI DUP12 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4602 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP13 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x4702 JUMPI DUP12 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x46D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP13 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP POP PUSH1 0x0 PUSH2 0x4721 DUP12 PUSH1 0xC0 ADD MLOAD DUP13 PUSH1 0x80 ADD MLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4740 DUP13 PUSH1 0xE0 ADD MLOAD DUP14 PUSH1 0xA0 ADD MLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x476C DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4DFB JUMP JUMPDEST PUSH2 0x4776 DUP4 DUP4 PUSH2 0x4DFB JUMP JUMPDEST LT ISZERO PUSH2 0x47EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204B00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x47FE DUP11 PUSH1 0x80 ADD MLOAD DUP12 PUSH1 0xA0 ADD MLOAD PUSH2 0x5160 JUMP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 DUP5 DUP5 DUP15 PUSH1 0x40 ADD MLOAD DUP16 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0x49FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4A57 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4AEC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x5980 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4BB9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x4DF5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x995B5AAE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4C4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP3 POP PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP DUP4 ISZERO PUSH2 0x4DDF JUMPI PUSH1 0x0 DUP2 EQ PUSH2 0x4DDA JUMPI PUSH1 0x0 PUSH2 0x4CE8 PUSH2 0x4CE3 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4DFB JUMP JUMPDEST PUSH2 0x4FCB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4CF5 DUP4 PUSH2 0x4FCB JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4DD7 JUMPI PUSH1 0x0 PUSH2 0x4D34 PUSH1 0x64 DUP8 PUSH2 0x4D1E PUSH1 0x64 PUSH3 0x186A0 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4D25 JUMPI INVALID JUMPDEST DIV PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D72 PUSH1 0x64 PUSH2 0x4D64 PUSH2 0x4D53 DUP7 DUP9 PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4DAE PUSH2 0x4D8D PUSH1 0x64 DUP7 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4DA0 DUP6 DUP9 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5980 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x4DBB JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x4DD2 JUMPI PUSH2 0x4DD1 DUP9 DUP3 PUSH2 0x502D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x4DF1 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x4DF0 JUMPI PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4F1A JUMPI PUSH1 0x0 PUSH1 0x9 SLOAD PUSH2 0x4E32 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4E39 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH1 0xA SLOAD PUSH2 0x4E5C PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4E63 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4E84 DUP4 DUP6 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4E8B JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x4EE9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4EAF DUP6 DUP7 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4EB6 JUMPI INVALID JUMPDEST DIV PUSH8 0xDE0B6B3A7640000 PUSH2 0x4ED3 DUP8 DUP9 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4EDA JUMPI INVALID JUMPDEST DIV PUSH2 0x5980 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x4F07 DUP3 DUP5 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x4F0E JUMPI INVALID JUMPDEST DIV SWAP5 POP POP POP POP POP PUSH2 0x4F30 JUMP JUMPDEST PUSH2 0x4F2D DUP3 DUP5 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ DUP1 PUSH2 0x4F53 JUMPI POP DUP3 DUP3 DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 PUSH2 0x4F50 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x4FC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6D756C2D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x501A JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 DUP2 PUSH2 0x4FE7 JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5014 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x5003 JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x500C JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x4FEC JUMP JUMPDEST POP PUSH2 0x5028 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x5027 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5042 DUP2 PUSH1 0x0 SLOAD PUSH2 0x5980 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x509A DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x5980 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x5156 JUMPI DUP2 PUSH2 0x5158 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x51D0 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 GT ISZERO JUMPDEST PUSH2 0x5242 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A204F564552464C4F57000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x5381 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x53D9 DUP2 PUSH1 0x0 SLOAD PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x5576 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x5553 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x55D8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x55DD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x561D JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x561C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x560A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST JUMPDEST PUSH2 0x568F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x655A4B616C69627572506169723A205452414E534645525F4641494C45440000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x589F JUMPI PUSH2 0x56DE PUSH3 0x186A0 PUSH2 0x56C7 DUP5 DUP10 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x56CE JUMPI INVALID JUMPDEST DIV DUP8 PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP PUSH1 0x0 PUSH2 0x56EC DUP6 DUP6 PUSH2 0x4DFB JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x5703 JUMPI INVALID JUMPDEST DIV SWAP5 POP PUSH1 0xA SLOAD PUSH8 0xDE0B6B3A7640000 DUP6 MUL DUP2 PUSH2 0x571B JUMPI INVALID JUMPDEST DIV SWAP4 POP PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x577D JUMPI DUP6 DUP8 PUSH2 0x5780 JUMP JUMPDEST DUP7 DUP7 JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x57F4 JUMPI PUSH1 0xA SLOAD PUSH8 0xDE0B6B3A7640000 DUP11 MUL DUP2 PUSH2 0x57EE JUMPI INVALID JUMPDEST DIV PUSH2 0x580B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH8 0xDE0B6B3A7640000 DUP11 MUL DUP2 PUSH2 0x5809 JUMPI INVALID JUMPDEST DIV JUMPDEST SWAP9 POP PUSH1 0x0 PUSH2 0x581C DUP4 DUP12 ADD DUP6 DUP5 PUSH2 0x5A03 JUMP JUMPDEST DUP3 SUB SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5886 JUMPI PUSH1 0x9 SLOAD PUSH2 0x588A JUMP JUMPDEST PUSH1 0xA SLOAD JUMPDEST DUP3 MUL DUP2 PUSH2 0x5893 JUMPI INVALID JUMPDEST DIV SWAP5 POP POP POP POP POP PUSH2 0x5977 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x58FE JUMPI DUP5 DUP7 PUSH2 0x5901 JUMP JUMPDEST DUP6 DUP6 JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x592D PUSH2 0x591E DUP6 PUSH3 0x186A0 PUSH2 0x4982 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 POP PUSH2 0x5957 DUP9 PUSH2 0x5949 PUSH3 0x186A0 DUP6 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5980 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x596A DUP3 DUP11 PUSH2 0x4F36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x5971 JUMPI INVALID JUMPDEST DIV SWAP3 POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0x59FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xFF DUP2 LT ISZERO PUSH2 0x5ACE JUMPI PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH2 0x5A25 DUP8 DUP7 PUSH2 0x5ADA JUMP JUMPDEST SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0x5A5D JUMPI PUSH1 0x0 PUSH2 0x5A3B DUP9 DUP8 PUSH2 0x5B51 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP10 SUB MUL DUP2 PUSH2 0x5A4F JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 DUP7 ADD SWAP6 POP POP PUSH2 0x5A87 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A69 DUP9 DUP8 PUSH2 0x5B51 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP9 DUP5 SUB MUL DUP2 PUSH2 0x5A7D JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 DUP7 SUB SWAP6 POP POP JUMPDEST DUP2 DUP6 GT ISZERO PUSH2 0x5AA9 JUMPI PUSH1 0x1 DUP3 DUP7 SUB GT PUSH2 0x5AA4 JUMPI DUP5 SWAP4 POP POP POP POP PUSH2 0x5AD3 JUMP JUMPDEST PUSH2 0x5ABF JUMP JUMPDEST PUSH1 0x1 DUP6 DUP4 SUB GT PUSH2 0x5ABE JUMPI DUP5 SWAP4 POP POP POP POP PUSH2 0x5AD3 JUMP JUMPDEST JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5A0B JUMP JUMPDEST POP DUP2 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH8 0xDE0B6B3A7640000 DUP8 DUP9 MUL DUP2 PUSH2 0x5B03 JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5B0C JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5B15 JUMPI INVALID JUMPDEST DIV PUSH8 0xDE0B6B3A7640000 DUP1 DUP5 PUSH8 0xDE0B6B3A7640000 DUP7 DUP8 MUL DUP2 PUSH2 0x5B34 JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5B3D JUMPI INVALID JUMPDEST DIV DUP6 MUL DUP2 PUSH2 0x5B47 JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH8 0xDE0B6B3A7640000 DUP6 DUP7 MUL DUP2 PUSH2 0x5B70 JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0x5B79 JUMPI INVALID JUMPDEST DIV PUSH8 0xDE0B6B3A7640000 DUP1 DUP5 DUP6 MUL DUP2 PUSH2 0x5B8E JUMPI INVALID JUMPDEST DIV DUP6 PUSH1 0x3 MUL MUL DUP2 PUSH2 0x5B9B JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID PUSH6 0x5A4B616C6962 PUSH22 0x72506169723A2066656550657263656E74206D757374 PUSH15 0x27742065786365656420746865206D PUSH2 0x7869 PUSH14 0x756D655A4B616C69627572506169 PUSH19 0x3A20494E53554646494349454E545F4C495155 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY PUSH6 0x5A4B616C6962 PUSH22 0x72506169723A20494E53554646494349454E545F4C49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE PUSH6 0x5A4B616C6962 PUSH22 0x72506169723A20494E53554646494349454E545F4C49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY PUSH6 0x5A4B616C6962 PUSH22 0x72506169723A20494E53554646494349454E545F4F55 SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD PUSH6 0x5A4B616C6962 PUSH22 0x72506169723A206F6E6C7920666163746F7279277320 PUSH20 0x6574537461626C654F776E6572655A4B616C6962 PUSH22 0x72506169723A20494E53554646494349454E545F494E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD PUSH6 0x5A4B616C6962 PUSH22 0x72506169723A206C697175696469747920726174696F KECCAK256 PUSH15 0x6F7420696E697469616C697A656465 GAS 0x4B PUSH2 0x6C69 PUSH3 0x757250 PUSH2 0x6972 GASPRICE KECCAK256 PUSH7 0x65655065726365 PUSH15 0x74206D7573746E2774206578636565 PUSH5 0x2074686520 PUSH14 0x696E696D756D655A4B616C696275 PUSH19 0x506169723A206F6E6C7920666163746F727927 PUSH20 0x20666565416D6F756E744F776E6572655A4B616C PUSH10 0x627572506169723A206F PUSH15 0x6C7920666163746F72792773206F77 PUSH15 0x6572A265627A7A72315820D4194C2D 0xE0 PUSH32 0x2C2ED647FCF04A0959F45CE34D7255041063AFC557173C6D096564736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "236:17584:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;236:17584:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9143:385;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;9143:385:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;9143:385:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9143:385:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9143:385:8;;;;;;;;;;;;:::i;:::-;;184:44:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;184:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1586:275:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2179:144:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2179:144:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;488:21:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;539:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;321:24:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2471:391;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2471:391:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1127:32:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;975:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3991:633;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3991:633:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;607:108:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;280:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;466:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1091:32:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4628:277;;;:::i;:::-;;2858:376;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2858:376:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3347:640;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3347:640:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;860:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;616:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6298:1147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6298:1147:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9633:401;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;9633:401:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;9633:401:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9633:401:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9633:401:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;351:41:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;351:41:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1164:17:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;721:38:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;721:38:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7550:1293:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7550:1293:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;234:40:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;234:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1266:22:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2329:136:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2329:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1339:29:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;317:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16659:336;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16659:336:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;462:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;513:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2868:662:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2868:662:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;567:45:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;398:61:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;398:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15259:258:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15259:258:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17466:352;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17466:352:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17037:315;;;:::i;:::-;;9143:385;9239:28;;:::i;:::-;9270:208;;;;;;;;9297:6;;;;;;;;;;;9270:208;;;;;;9319:6;;;;;;;;;;;9270:208;;;;;;9345:10;9270:208;;;;9375:10;9270:208;;;;9403:1;9270:208;;;;9422:1;9270:208;;;;9446:1;9270:208;;;;9470:1;9270:208;;;9239:239;;9484:39;9490:10;9502:2;9506:4;;9484:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9484:39:8;;;;;;9520:1;9484:5;:39::i;:::-;9143:385;;;;;;:::o;184:44:0:-;;;;;;;;;;;;;;;;;;;:::o;1586:275:8:-;1630:17;1649;1668:24;1694;1738:8;;;;;;;;;;;1726:20;;1764:8;;;;;;;;;;;1752:20;;1798:16;;;;;;;;;;;1778:36;;1840:16;;;;;;;;;;;1820:36;;1586:275;;;;:::o;2179:144:0:-;2243:4;2259:36;2268:10;2280:7;2289:5;2259:8;:36::i;:::-;2312:4;2305:11;;2179:144;;;;:::o;488:21:8:-;;;;;;;;;;;;;:::o;539:23::-;;;;;;;;;;;;;:::o;321:24:0:-;;;;:::o;2471:391::-;2549:4;2605:2;2569:9;:15;2579:4;2569:15;;;;;;;;;;;;;;;:27;2585:10;2569:27;;;;;;;;;;;;;;;;:39;2565:234;;2624:14;2641:38;2673:5;2641:9;:15;2651:4;2641:15;;;;;;;;;;;;;;;:27;2657:10;2641:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2624:55;;2723:9;2693;:15;2703:4;2693:15;;;;;;;;;;;;;;;:27;2709:10;2693:27;;;;;;;;;;;;;;;:39;;;;2766:10;2751:37;;2760:4;2751:37;;;2778:9;2751:37;;;;;;;;;;;;;;;;;;2565:234;;2808:26;2818:4;2824:2;2828:5;2808:9;:26::i;:::-;2851:4;2844:11;;2471:391;;;;;:::o;1127:32:8:-;;;;:::o;975:36::-;;;;;;;;;;;;;:::o;3991:633::-;1507:1;1495:8;;:13;1487:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:1;1540:8;:12;;;;4130:7;;;;;;;;;;;4121:32;;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4121:34:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4121:34:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4121:34:8;;;;;;;;;;;;;;;;4107:48;;:10;:48;;;4099:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4219:17;;;;;;;;;;;4218:18;4210:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4290:10;;;;;;;;;;;4280:20;;:6;:20;;;;4272:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4363:8;;;;;;;;;;;4343:28;;:16;:28;;;:60;;;;;4395:8;;;;;;;;;;;4375:28;;:16;:28;;;4343:60;4335:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4436:10;4449:28;4458:8;;;;;;;;;;;4468;;;;;;;;;;;4449;:28::i;:::-;4436:41;;4489:33;4503:10;;;;;;;;;;;4515:6;4489:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4541:6;4528:10;;:19;;;;;;;;;;;;;;;;;;4562:6;:15;;;;;4572:5;4562:15;4561:58;;4618:1;4561:58;;;4581:34;4589:8;;;;;;;;;;;4584:14;;4605:8;;;;;;;;;;;4600:14;;4581:2;:34::i;:::-;4561:58;4553:5;:66;;;;1558:1;1576;1565:8;:12;;;;3991:633;;;:::o;607:108:0:-;649:66;607:108;;;:::o;280:35::-;313:2;280:35;:::o;466:31::-;;;;:::o;1091:32:8:-;;;;:::o;4628:277::-;1507:1;1495:8;;:13;1487:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:1;1540:8;:12;;;;4711:7;;;;;;;;;;;4702:23;;;:25;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4702:25:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4702:25:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4702:25:8;;;;;;;;;;;;;;;;4688:39;;:10;:39;;;4680:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4782:17;;;;;;;;;;;4781:18;4773:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4863:4;4843:17;;:24;;;;;;;;;;;;;;;;;;4878:22;;;;;;;;;;1576:1;1565:8;:12;;;;4628:277::o;2858:376::-;2949:7;;;;;;;;;;;2935:21;;:10;:21;;;:37;;;;;2961:11;;;;;;;;;;;2960:12;2935:37;2927:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3040:7;3031:6;;:16;;;;;;;;;;;;;;;;;;3062:7;3053:6;;:16;;;;;;;;;;;;;;;;;;3117:7;3110:24;;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3110:26:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3110:26:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3110:26:8;;;;;;;;;;;;;;;;3105:32;;3099:2;:38;3076:20;:61;;;;3184:7;3177:24;;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3177:26:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3177:26:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3177:26:8;;;;;;;;;;;;;;;;3172:32;;3166:2;:38;3143:20;:61;;;;3225:4;3211:11;;:18;;;;;;;;;;;;;;;;;;2858:376;;:::o;3347:640::-;1507:1;1495:8;;:13;1487:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:1;1540:8;:12;;;;3477:7;;;;;;;;;;;3468:33;;;:35;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3468:35:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3468:35:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3468:35:8;;;;;;;;;;;;;;;;3454:49;;:10;:49;;;3446:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;655:4;3566:19;:38;;;;:80;;;;;655:4;3608:19;:38;;;;3566:80;3558:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3739:1;3717:19;:23;;;:50;;;;;3766:1;3744:19;:23;;;3717:50;3709:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3849:19;3830:16;;:38;;;;;;;;;;;;;;;;;;3893:19;3874:16;;:38;;;;;;;;;;;;;;;;;;3923:59;3941:19;3962;3923:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1576:1;1565:8;:12;;;;3347:640;;:::o;860:36::-;;;;;;;;;;;;;:::o;616:43::-;655:4;616:43;:::o;6298:1147::-;6347:14;1507:1;1495:8;;:13;1487:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:1;1540:8;:12;;;;6370:17;6389;6412:13;:11;:13::i;:::-;6369:56;;;;;;6450:13;6473:6;;;;;;;;;;;6466:24;;;6499:4;6466:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6466:39:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6466:39:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6466:39:8;;;;;;;;;;;;;;;;6450:55;;6511:13;6534:6;;;;;;;;;;;6527:24;;;6560:4;6527:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6527:39:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6527:39:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6527:39:8;;;;;;;;;;;;;;;;6511:55;;6572:12;6587:23;6600:9;6587:23;;:8;:12;;:23;;;;:::i;:::-;6572:38;;6616:12;6631:23;6644:9;6631:23;;:8;:12;;:23;;;;:::i;:::-;6616:38;;6661:10;6674:30;6683:9;6694;6674:8;:30::i;:::-;6661:43;;6710:17;6730:11;;6710:31;;6849:1;6833:12;:17;6829:328;;;6872:54;358:7;6872:31;6882:20;6894:7;6882;:11;;:20;;;;:::i;:::-;6872:9;:31::i;:::-;:35;;:54;;;;:::i;:::-;6860:66;;6934:36;6948:1;358:7;6934:5;:36::i;:::-;6829:328;;;7064:86;7101:9;7073:37;;:25;7085:12;7073:7;:11;;:25;;;;:::i;:::-;:37;;;;;;7140:9;7112:37;;:25;7124:12;7112:7;:11;;:25;;;;:::i;:::-;:37;;;;;;7064:8;:86::i;:::-;7052:98;;6829:328;7182:1;7170:9;:13;7162:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7238:20;7244:2;7248:9;7238:5;:20::i;:::-;7265:27;7273:8;7283;7265:7;:27::i;:::-;7302:5;7298:53;;;7317:34;7325:8;;;;;;;;;;;7320:14;;7341:8;;;;;;;;;;;7336:14;;7317:2;:34::i;:::-;7309:5;:42;;;;7298:53;7411:10;7406:34;;;7423:7;7432;7406:34;;;;;;;;;;;;;;;;;;;;;;;;1558:1;;;;;;;;1576;1565:8;:12;;;;6298:1147;;;:::o;9633:401::-;9747:28;;:::i;:::-;9778:208;;;;;;;;9805:6;;;;;;;;;;;9778:208;;;;;;9827:6;;;;;;;;;;;9778:208;;;;;;9853:10;9778:208;;;;9883:10;9778:208;;;;9911:1;9778:208;;;;9930:1;9778:208;;;;9954:1;9778:208;;;;9978:1;9778:208;;;9747:239;;9992:37;9998:10;10010:2;10014:4;;9992:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9992:37:8;;;;;;10020:8;9992:5;:37::i;:::-;9633:401;;;;;;;:::o;351:41:0:-;;;;;;;;;;;;;;;;;:::o;1164:17:8:-;;;;:::o;721:38:0:-;;;;;;;;;;;;;;;;;:::o;7550:1293:8:-;7599:12;7613;1507:1;1495:8;;:13;1487:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:1;1540:8;:12;;;;7634:17;7653;7676:13;:11;:13::i;:::-;7633:56;;;;;;7710:15;7728:6;;;;;;;;;;;7710:24;;7755:15;7773:6;;;;;;;;;;;7755:24;;7800:13;7823:7;7816:25;;;7850:4;7816:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7816:40:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7816:40:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7816:40:8;;;;;;;;;;;;;;;;7800:56;;7862:13;7885:7;7878:25;;;7912:4;7878:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7878:40:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7878:40:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7878:40:8;;;;;;;;;;;;;;;;7862:56;;7924:14;7941:9;:24;7959:4;7941:24;;;;;;;;;;;;;;;;7924:41;;7972:10;7985:30;7994:9;8005;7985:8;:30::i;:::-;7972:43;;8021:17;8041:11;;8021:31;;8172:12;8146:23;8160:8;8146:9;:13;;:23;;;;:::i;:::-;:38;;;;;;8136:48;;8274:12;8248:23;8262:8;8248:9;:13;;:23;;;;:::i;:::-;:38;;;;;;8238:48;;8358:1;8348:7;:11;:26;;;;;8373:1;8363:7;:11;8348:26;8340:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8429:31;8443:4;8450:9;8429:5;:31::i;:::-;8466:35;8480:7;8489:2;8493:7;8466:13;:35::i;:::-;8507;8521:7;8530:2;8534:7;8507:13;:35::i;:::-;8566:7;8559:25;;;8593:4;8559:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8559:40:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8559:40:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8559:40:8;;;;;;;;;;;;;;;;8548:51;;8623:7;8616:25;;;8650:4;8616:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8616:40:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8616:40:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8616:40:8;;;;;;;;;;;;;;;;8605:51;;8663:27;8671:8;8681;8663:7;:27::i;:::-;8700:5;8696:53;;;8715:34;8723:8;;;;;;;;;;;8718:14;;8739:8;;;;;;;;;;;8734:14;;8715:2;:34::i;:::-;8707:5;:42;;;;8696:53;8835:2;8800:38;;8805:10;8800:38;;;8817:7;8826;8800:38;;;;;;;;;;;;;;;;;;;;;;;;1558:1;;;;;;;;;1576;1565:8;:12;;;;7550:1293;;;:::o;234:40:0:-;;;;;;;;;;;;;;;;;;;:::o;1266:22:8:-;;;;;;;;;;;;;:::o;2329:136:0:-;2389:4;2405:32;2415:10;2427:2;2431:5;2405:9;:32::i;:::-;2454:4;2447:11;;2329:136;;;;:::o;1339:29:8:-;;;;;;;;;;;;;:::o;317:48::-;358:7;317:48;:::o;16659:336::-;1507:1;1495:8;;:13;1487:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:1;1540:8;:12;;;;16705:15;16723:6;;;;;;;;;;;16705:24;;16754:15;16772:6;;;;;;;;;;;16754:24;;16803:82;16817:7;16826:2;16830:54;16875:8;;;;;;;;;;;16830:54;;16837:7;16830:25;;;16864:4;16830:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16830:40:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16830:40:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16830:40:8;;;;;;;;;;;;;;;;:44;;:54;;;;:::i;:::-;16803:13;:82::i;:::-;16891;16905:7;16914:2;16918:54;16963:8;;;;;;;;;;;16918:54;;16925:7;16918:25;;;16952:4;16918:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16918:40:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16918:40:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16918:40:8;;;;;;;;;;;;;;;;:44;;:54;;;;:::i;:::-;16891:13;:82::i;:::-;16984:6;;;;;;;;;;1558:1;;1576;1565:8;:12;;;;16659:336;:::o;462:22::-;;;;;;;;;;;;;:::o;513:21::-;;;;;;;;;;;;;:::o;2868:662:0:-;3013:15;3001:8;:27;;2993:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3061:14;3163:16;;649:66;3218:15;;3235:5;3242:7;3251:5;3258:6;:13;3265:5;3258:13;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;3275:8;3207:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3207:77:0;;;3197:88;;;;;;3101:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3101:198:0;;;3078:231;;;;;;3061:248;;3319:24;3346:26;3356:6;3364:1;3367;3370;3346:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3346:26:0;;;;;;;;3319:53;;3418:1;3390:30;;:16;:30;;;;:59;;;;;3444:5;3424:25;;:16;:25;;;3390:59;3382:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3492:31;3501:5;3508:7;3517:5;3492:8;:31::i;:::-;2868:662;;;;;;;;;:::o;567:45:8:-;606:6;567:45;:::o;398:61:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;15259:258:8:-;15336:4;15348:17;15379:6;;;;;;;;;;;15368:17;;:7;:17;;;:55;;15407:16;;;;;;;;;;;15368:55;;;15388:16;;;;;;;;;;;15368:55;15348:75;;15436:76;15450:8;15460:7;15474:8;;;;;;;;;;;15469:14;;15490:8;;;;;;;;;;;15485:14;;15501:10;15436:76;;:13;:76::i;:::-;15429:83;;;15259:258;;;;:::o;17466:352::-;1507:1;1495:8;;:13;1487:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:1;1540:8;:12;;;;17569:7;;;;;;;;;;;17560:23;;;:25;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17560:25:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17560:25:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17560:25:8;;;;;;;;;;;;;;;;17546:39;;:10;:39;;;17538:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17648:6;;;;;;;;;;;17639:15;;:5;:15;;;;:34;;;;;17667:6;;;;;;;;;;;17658:15;;:5;:15;;;;17639:34;17631:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17712:64;17726:5;17733:2;17744:5;17737:23;;;17769:4;17737:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17737:38:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17737:38:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17737:38:8;;;;;;;;;;;;;;;;17712:13;:64::i;:::-;17803:5;17787:26;;;17810:2;17787:26;;;;;;;;;;;;;;;;;;;;;;1576:1;1565:8;:12;;;;17466:352;;:::o;17037:315::-;1507:1;1495:8;;:13;1487:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:1;1540:8;:12;;;;17073:18;17101:6;;;;;;;;;;;17094:24;;;17127:4;17094:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17094:39:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17094:39:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17094:39:8;;;;;;;;;;;;;;;;17073:60;;17139:18;17167:6;;;;;;;;;;;17160:24;;;17193:4;17160:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17160:39:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17160:39:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17160:39:8;;;;;;;;;;;;;;;;17139:60;;17230:1;17213:13;:18;;:40;;;;;17252:1;17235:13;:18;;17213:40;17205:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17310:37;17318:13;17333;17310:7;:37::i;:::-;1558:1;;1576;1565:8;:12;;;;17037:315::o;10039:3977::-;1507:1;1495:8;;:13;1487:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:1;1540:8;:12;;;;10185:1;10161:10;:21;;;:25;:54;;;;10214:1;10190:10;:21;;;:25;10161:54;10153:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10269:17;10288;10307:24;10333;10361:13;:11;:13::i;:::-;10268:106;;;;;;;;10412:9;10388:33;;:10;:21;;;:33;:70;;;;;10449:9;10425:33;;:10;:21;;;:33;10388:70;10380:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10530:10;:17;;;10524:23;;:2;:23;;;;:50;;;;;10557:10;:17;;;10551:23;;:2;:23;;;;10524:50;10516:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10680:1;10656:10;:21;;;:25;10652:90;;;10683:59;10697:10;:17;;;10716:2;10720:10;:21;;;10683:13;:59::i;:::-;10652:90;10818:1;10794:10;:21;;;:25;10790:90;;;10821:59;10835:10;:17;;;10854:2;10858:10;:21;;;10821:13;:59::i;:::-;10790:90;10906:1;10892:4;:11;:15;10888:119;;;10926:2;10909:34;;;10944:10;10956;:21;;;10979:10;:21;;;11002:4;10909:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10909:98:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10909:98:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10909:98:8;;;;10888:119;11044:10;:17;;;11037:35;;;11081:4;11037:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11037:50:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11037:50:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11037:50:8;;;;;;;;;;;;;;;;11015:10;:19;;:72;;;;;11124:10;:17;;;11117:35;;;11161:4;11117:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11117:50:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11117:50:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11117:50:8;;;;;;;;;;;;;;;;11095:10;:19;;:72;;;;;11180:14;11231:10;:21;;;11219:9;:33;;;11197:10;:19;;;:55;:119;;11315:1;11197:119;;;11290:10;:21;;;11278:9;:33;;;11255:10;:19;;;:57;11197:119;11180:136;;11322:14;11373:10;:21;;;11361:9;:33;;;11339:10;:19;;;:55;:119;;11457:1;11339:119;;;11432:10;:21;;;11420:9;:33;;;11397:10;:19;;;:57;11339:119;11322:136;;11484:1;11472:9;:13;:30;;;;11501:1;11489:9;:13;11472:30;11464:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;606:6;11581:32;11595:17;11581:32;;:9;:13;;:32;;;;:::i;:::-;:50;;;;;;11554:10;:24;;:77;;;;;606:6;11664:32;11678:17;11664:32;;:9;:13;;:32;;;;:::i;:::-;:50;;;;;;11637:10;:24;;:77;;;;;11772:8;11783:1;11772:12;;11793:26;11842:1;11822:22;;:8;:22;;;;:74;;11895:1;11822:74;;;11856:7;;;;;;;;;;;11847:35;;;11883:8;11847:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11847:45:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11847:45:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11847:45:8;;;;;;;;;;;;;;;;11822:74;11793:103;;11932:1;11908:21;:25;11904:584;;;11961:1;11949:9;:13;11945:263;;;12064:1;606:6;12045:20;11982:59;12023:17;11982:59;;:36;11996:21;11982:9;:13;;:36;;;;:::i;:::-;:40;;:59;;;;:::i;:::-;:84;;;;;;11976:90;;12105:33;12134:3;12105:10;:24;;;:28;;:33;;;;:::i;:::-;12078:10;:24;;:60;;;;;12150:47;12164:10;:17;;;12183:8;12193:3;12150:13;:47::i;:::-;11945:263;12233:1;12221:9;:13;12217:263;;;12336:1;606:6;12317:20;12254:59;12295:17;12254:59;;:36;12268:21;12254:9;:13;;:36;;;;:::i;:::-;:40;;:59;;;;:::i;:::-;:84;;;;;;12248:90;;12377:33;12406:3;12377:10;:24;;;:28;;:33;;;;:::i;:::-;12350:10;:24;;:60;;;;;12422:47;12436:10;:17;;;12455:8;12465:3;12422:13;:47::i;:::-;12217:263;11904:584;12499:10;;;;;;;;;;;12496:773;;;12521:18;12541:13;12567:7;;;;;;;;;;;12558:25;;;:27;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12558:27:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12558:27:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12558:27:8;;;;;;;;;;;;;;;;;;;;;;;;;12520:65;;;;12615:1;12598:19;;:5;:19;;;12595:666;;12647:61;12694:13;12647:42;12667:21;606:6;12647:19;;:42;;;;:::i;:::-;:46;;:61;;;;:::i;:::-;12631:77;;12736:1;12724:9;:13;12720:260;;;12833:1;606:6;12814:20;12759:51;12792:17;12759:51;;:28;12773:13;12759:9;:13;;:28;;;;:::i;:::-;:32;;:51;;;;:::i;:::-;:76;;;;;;12753:82;;12876:33;12905:3;12876:10;:24;;;:28;;:33;;;;:::i;:::-;12849:10;:24;;:60;;;;;12923:44;12937:10;:17;;;12956:5;12963:3;12923:13;:44::i;:::-;12720:260;13007:1;12995:9;:13;12991:260;;;13104:1;606:6;13085:20;13030:51;13063:17;13030:51;;:28;13044:13;13030:9;:13;;:28;;;;:::i;:::-;:32;;:51;;;;:::i;:::-;:76;;;;;;13024:82;;13147:33;13176:3;13147:10;:24;;;:28;;:33;;;;:::i;:::-;13120:10;:24;;:60;;;;;13194:44;13208:10;:17;;;13227:5;13234:3;13194:13;:44::i;:::-;12991:260;12595:666;12496:773;;;13325:1;13313:9;:13;13309:91;;;13357:10;:17;;;13350:35;;;13394:4;13350:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13350:50:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13350:50:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13350:50:8;;;;;;;;;;;;;;;;13328:10;:19;;:72;;;;;13309:91;13424:1;13412:9;:13;13408:91;;;13456:10;:17;;;13449:35;;;13493:4;13449:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13449:50:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13449:50:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13449:50:8;;;;;;;;;;;;;;;;13427:10;:19;;:72;;;;;13408:91;1558:1;;13582:21;13606:49;13630:10;:24;;;13606:10;:19;;;:23;;:49;;;;:::i;:::-;13582:73;;13663:21;13687:49;13711:10;:24;;;13687:10;:19;;;:23;;:49;;;;:::i;:::-;13663:73;;13794:36;13802:9;13797:15;;13819:9;13814:15;;13794:2;:36::i;:::-;13752:38;13755:16;13773;13752:2;:38::i;:::-;:78;;13744:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1558:1;;13863:49;13871:10;:19;;;13892:10;:19;;;13863:7;:49::i;:::-;14008:2;13923:88;;13928:10;13923:88;;;13940:9;13951;13962:10;:21;;;13985:10;:21;;;13923:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1558:1;;;;;;1576;1565:8;:12;;;;10039:3977;;;;:::o;1785:166:0:-;1893:5;1865:9;:16;1875:5;1865:16;;;;;;;;;;;;;;;:25;1882:7;1865:25;;;;;;;;;;;;;;;:33;;;;1929:7;1913:31;;1922:5;1913:31;;;1938:5;1913:31;;;;;;;;;;;;;;;;;;1785:166;;;:::o;288:127:7:-;340:6;381:1;375;371;:5;367:9;;;366:16;;358:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;288:127;;;;:::o;1957:216:0:-;2050:26;2070:5;2050:9;:15;2060:4;2050:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;2032:9;:15;2042:4;2032:15;;;;;;;;;;;;;;;:44;;;;2102:24;2120:5;2102:9;:13;2112:2;2102:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;2086:9;:13;2096:2;2086:13;;;;;;;;;;;;;;;:40;;;;2156:2;2141:25;;2150:4;2141:25;;;2160:5;2141:25;;;;;;;;;;;;;;;;;;1957:216;;;:::o;5341:852:8:-;5414:10;5435;;;;;;;;;;;5432:27;;;5454:5;5447:12;;;;5432:27;5467:18;5487:13;5513:7;;;;;;;;;;;5504:25;;;:27;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5504:27:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5504:27:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5504:27:8;;;;;;;;;;;;;;;;;;;;;;;;;5466:65;;;;5562:1;5545:19;;:5;:19;;;;5537:27;;5570:11;5584:5;;5570:19;;5618:5;5614:575;;;5647:1;5637:6;:11;5633:503;;5660:10;5673:47;5683:36;5691:9;5686:15;;5708:9;5703:15;;5683:2;:36::i;:::-;5673:9;:47::i;:::-;5660:60;;5730:14;5747:17;5757:6;5747:9;:17::i;:::-;5730:34;;5786:9;5778:5;:17;5774:354;;;5809:6;5818:51;5865:3;5846:13;5819:24;5839:3;606:6;5819:19;;:24;;;;:::i;:::-;:40;;;;;;5818:46;;:51;;;;:::i;:::-;5809:60;;5881:14;5898:46;5940:3;5898:37;5914:20;5924:9;5914:5;:9;;:20;;;;:::i;:::-;5898:11;;:15;;:37;;;;:::i;:::-;:41;;:46;;;;:::i;:::-;5881:63;;5956:16;5975:36;5992:18;6006:3;5992:9;:13;;:18;;;;:::i;:::-;5975:12;5985:1;5975:5;:9;;:12;;;;:::i;:::-;:16;;:36;;;;:::i;:::-;5956:55;;6023:14;6052:11;6040:9;:23;;;;;;6023:40;;6091:1;6079:9;:13;6075:42;;;6094:23;6100:5;6107:9;6094:5;:23::i;:::-;6075:42;5774:354;;;;;5633:503;;;5614:575;;;6162:1;6152:6;:11;6148:41;;6181:1;6173:5;:9;;;;6148:41;5614:575;5341:852;;;;;;;;:::o;14020:403::-;14085:4;14101:10;;;;;;;;;;;14097:287;;;14121:7;14152:20;;14131:18;14144:4;14131:8;:12;;:18;;;;:::i;:::-;:41;;;;;;14121:51;;14180:7;14211:20;;14190:18;14203:4;14190:8;:12;;:18;;;;:::i;:::-;:41;;;;;;14180:51;;14239:7;14264:4;14250:10;14257:2;14250;:6;;:10;;;;:::i;:::-;14249:19;;;;;;14239:29;;14276:7;14286:42;14323:4;14310:10;14317:2;14310;:6;;:10;;;;:::i;:::-;:17;;;;;;14300:4;14287:10;14294:2;14287;:6;;:10;;;;:::i;:::-;:17;;;;;;14286:23;;:42;;;;:::i;:::-;14276:52;;14357:4;14344:10;14351:2;14344;:6;;:10;;;;:::i;:::-;:17;;;;;;14336:25;;;;;;;;14097:287;14396:22;14409:8;14396;:12;;:22;;;;:::i;:::-;14389:29;;14020:403;;;;;:::o;421:140:7:-;473:6;504:1;499;:6;:30;;;;528:1;523;518;514;:5;510:9;;;509:15;;;;;;:20;499:30;491:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;421:140;;;;:::o;307:292:6:-;352:6;378:1;374;:5;370:223;;;399:1;395:5;;414:6;431:1;427;423;:5;;;;;;:9;414:18;;446:89;457:1;453;:5;446:89;;;482:1;478:5;;519:1;514;510;506;:5;;;;;;:9;505:15;;;;;;501:19;;446:89;;;370:223;;;;560:1;555;:6;551:42;;581:1;577:5;;551:42;370:223;307:292;;;:::o;1371:197:0:-;1443:22;1459:5;1443:11;;:15;;:22;;;;:::i;:::-;1429:11;:36;;;;1491:24;1509:5;1491:9;:13;1501:2;1491:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;1475:9;:13;1485:2;1475:13;;;;;;;;;;;;;;;:40;;;;1551:2;1530:31;;1547:1;1530:31;;;1555:5;1530:31;;;;;;;;;;;;;;;;;;1371:197;;:::o;98:94:6:-;150:6;176:1;172;:5;:13;;184:1;172:13;;;180:1;172:13;168:17;;98:94;;;;:::o;4930:276:8:-;5019:3;4999:24;;:8;:24;;:52;;;;;5047:3;5027:24;;:8;:24;;4999:52;4991:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5105:8;5086;;:28;;;;;;;;;;;;;;;;;;5139:8;5120;;:28;;;;;;;;;;;;;;;;;;5159:42;5172:8;5191;5159:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4930:276;;:::o;1574:205:0:-;1652:26;1672:5;1652:9;:15;1662:4;1652:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;1634:9;:15;1644:4;1634:15;;;;;;;;;;;;;;;:44;;;;1702:22;1718:5;1702:11;;:15;;:22;;;;:::i;:::-;1688:11;:36;;;;1762:1;1739:33;;1748:4;1739:33;;;1766:5;1739:33;;;;;;;;;;;;;;;;;;1574:205;;:::o;1865:278:8:-;1942:12;1956:17;1977:5;:10;;421:34;;;;;;;;;;;;;;;;;411:45;;;;;;2021:2;2025:5;1988:43;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1988:43:8;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;1988:43:8;1977:55;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1977:55:8;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1941:91:8;;;;2046:7;:57;;;;;2073:1;2058:4;:11;:16;:44;;;;2089:4;2078:24;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2078:24:8;;;;;;;;;;;;;;;;2058:44;2046:57;2038:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:278;;;;;:::o;15521:1096::-;15648:4;15664:10;;;;;;;;;;;15660:953;;;15695:56;606:6;15708:24;15721:10;15708:8;:12;;:24;;;;:::i;:::-;:42;;;;;;15695:8;:12;;:56;;;;:::i;:::-;15684:67;;15794:7;15804:24;15807:9;15818;15804:2;:24::i;:::-;15794:34;;15867:20;;15860:4;15848:9;:16;:39;;;;;;15836:51;;15926:20;;15919:4;15907:9;:16;:39;;;;;;15895:51;;15956:13;15971;15999:6;;;;;;;;;;;15988:17;;:7;:17;;;:67;;16034:9;16045;15988:67;;;16009:9;16020;15988:67;15955:100;;;;16085:6;;;;;;;;;;;16074:17;;:7;:17;;;:99;;16153:20;;16146:4;16135:8;:15;:38;;;;;;16074:99;;;16112:20;;16105:4;16094:8;:15;:38;;;;;;16074:99;16063:110;;16181:6;16201:41;16219:8;16208;:19;16229:2;16233:8;16201:6;:41::i;:::-;16190:8;:52;16181:61;;16329:4;16273:6;;;;;;;;;;;16262:17;;:7;:17;;;:63;;16305:20;;16262:63;;;16282:20;;16262:63;16257:1;:69;:76;;;;;;16250:83;;;;;;;;15660:953;16356:13;16371;16399:6;;;;;;;;;;;16388:17;;:7;:17;;;:67;;16434:9;16445;16388:67;;;16409:9;16420;16388:67;16355:100;;;;16474:45;16487:31;16507:10;606:6;16487:19;;:31;;;;:::i;:::-;16474:8;:12;;:45;;;;:::i;:::-;16463:56;;16562:43;16596:8;16562:29;606:6;16562:8;:12;;:29;;;;:::i;:::-;:33;;:43;;;;:::i;:::-;16535:22;16548:8;16535;:12;;:22;;;;:::i;:::-;16534:72;;;;;;16527:79;;;;15521:1096;;;;;;;;:::o;156:126:7:-;208:6;249:1;243;239;:5;235:9;;;234:16;;226:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;156:126;;;;:::o;14427:528:8:-;14492:4;14509:6;14518:1;14509:10;;14504:433;14525:3;14521:1;:7;14504:433;;;14543:11;14557:1;14543:15;;14566:6;14575:9;14578:2;14582:1;14575:2;:9::i;:::-;14566:18;;14600:2;14596:1;:6;14592:170;;;14614:7;14642:9;14645:2;14649:1;14642:2;:9::i;:::-;14635:4;14630:1;14625:2;:6;14624:15;:27;;;;;;14614:37;;14669:2;14665:1;:6;14661:10;;14592:170;;;;14696:7;14724:9;14727:2;14731:1;14724:2;:9::i;:::-;14717:4;14711:2;14707:1;:6;14706:15;:27;;;;;;14696:37;;14751:2;14747:1;:6;14743:10;;14592:170;;14777:6;14773:1;:10;14769:162;;;14813:1;14803:6;14799:1;:10;:15;14795:52;;14835:1;14828:8;;;;;;;14795:52;14769:162;;;14889:1;14884;14875:6;:10;:15;14871:52;;14911:1;14904:8;;;;;;;14871:52;14769:162;14504:433;;14530:3;;;;;;;14504:433;;;;14949:1;14942:8;;14427:528;;;;;;:::o;14959:155::-;15011:4;15105;15101:1;15093:4;15088:2;15081:4;15076:2;15071;:7;:14;;;;;;:19;:26;;;;;;15070:32;:39;;;;;;15063:4;15055;15051:1;15044:4;15040:1;15036;:5;:12;;;;;;:16;:23;;;;;;15030:2;:30;:37;;;;;;:79;15023:86;;14959:155;;;;:::o;15118:137::-;15170:4;15245;15240:2;15233:4;15228:2;15223;:7;:14;;;;;;:19;:26;;;;;;15215:4;15207;15203:1;15199;:5;:12;;;;;;15193:2;15189:1;:6;:23;:30;;;;;;:61;15182:68;;15118:137;;;;:::o;236:17584::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "4821200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1117",
								"FEE_DENOMINATOR()": "249",
								"MAX_FEE_PERCENT()": "338",
								"MINIMUM_LIQUIDITY()": "250",
								"PERMIT_TYPEHASH()": "279",
								"allowance(address,address)": "1333",
								"approve(address,uint256)": "22521",
								"balanceOf(address)": "1259",
								"burn(address)": "infinite",
								"decimals()": "307",
								"drainWrongToken(address,address)": "infinite",
								"factory()": "1142",
								"getAmountOut(uint256,address)": "infinite",
								"getReserves()": "3948",
								"initialize(address,address)": "infinite",
								"initialized()": "1149",
								"kLast()": "1117",
								"mint(address)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1303",
								"pairTypeImmutable()": "1236",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"precisionMultiplier0()": "1139",
								"precisionMultiplier1()": "1117",
								"setFeePercent(uint16,uint16)": "infinite",
								"setPairTypeImmutable()": "infinite",
								"setStableSwap(bool,uint112,uint112)": "infinite",
								"skim(address)": "infinite",
								"stableSwap()": "1142",
								"swap(uint256,uint256,address,bytes)": "infinite",
								"swap(uint256,uint256,address,bytes,address)": "infinite",
								"symbol()": "infinite",
								"sync()": "infinite",
								"token0()": "1188",
								"token0FeePercent()": "1214",
								"token1()": "1164",
								"token1FeePercent()": "1237",
								"totalSupply()": "1073",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_d(uint256,uint256)": "176",
								"_f(uint256,uint256)": "234",
								"_getAmountOut(uint256,address,uint256,uint256,uint256)": "infinite",
								"_get_y(uint256,uint256,uint256)": "infinite",
								"_k(uint256,uint256)": "infinite",
								"_mintFee(uint112,uint112)": "infinite",
								"_safeTransfer(address,address,uint256)": "infinite",
								"_swap(struct EZKaliburPair.TokensData memory,address,bytes memory,address)": "infinite",
								"_update(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 236,
									"end": 17820,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 236,
									"end": 17820,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 236,
									"end": 17820,
									"name": "MSTORE"
								},
								{
									"begin": 893,
									"end": 896,
									"name": "PUSH",
									"value": "12C"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "PUSH",
									"value": "1C"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "EXP"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "DUP2"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "SLOAD"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "DUP2"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "MUL"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "NOT"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "AND"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "SWAP1"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "DUP4"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "AND"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "MUL"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "OR"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "SWAP1"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "SSTORE"
								},
								{
									"begin": 860,
									"end": 896,
									"name": "POP"
								},
								{
									"begin": 1008,
									"end": 1011,
									"name": "PUSH",
									"value": "12C"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "PUSH",
									"value": "1E"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "EXP"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "DUP2"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "SLOAD"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "DUP2"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "MUL"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "NOT"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "AND"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "SWAP1"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "DUP4"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "AND"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "MUL"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "OR"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "SWAP1"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "SSTORE"
								},
								{
									"begin": 975,
									"end": 1011,
									"name": "POP"
								},
								{
									"begin": 1460,
									"end": 1461,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1436,
									"end": 1461,
									"name": "PUSH",
									"value": "D"
								},
								{
									"begin": 1436,
									"end": 1461,
									"name": "SSTORE"
								},
								{
									"begin": 2748,
									"end": 2800,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 2748,
									"end": 2800,
									"name": "POP"
								},
								{
									"begin": 952,
									"end": 964,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1008,
									"end": 1015,
									"name": "CHAINID"
								},
								{
									"begin": 997,
									"end": 1015,
									"name": "SWAP1"
								},
								{
									"begin": 997,
									"end": 1015,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "MLOAD"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "DUP1"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "DUP1"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "SWAP2"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "CODECOPY"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "MLOAD"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "DUP1"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "SWAP2"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "SUB"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1199,
									"name": "KECCAK256"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "MLOAD"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "DUP1"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "ADD"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "MSTORE"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "DUP1"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "PUSH",
									"value": "C"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "DUP2"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "MSTORE"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "ADD"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "PUSH",
									"value": "655A4B616C69627572204C500000000000000000000000000000000000000000"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "DUP2"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "MSTORE"
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "POP"
								},
								{
									"begin": 1217,
									"end": 1239,
									"name": "DUP1"
								},
								{
									"begin": 1217,
									"end": 1239,
									"name": "MLOAD"
								},
								{
									"begin": 1217,
									"end": 1239,
									"name": "SWAP1"
								},
								{
									"begin": 1217,
									"end": 1239,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1217,
									"end": 1239,
									"name": "ADD"
								},
								{
									"begin": 1217,
									"end": 1239,
									"name": "KECCAK256"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "MLOAD"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "DUP1"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "ADD"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "MSTORE"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "DUP1"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "DUP2"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "MSTORE"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "ADD"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "PUSH",
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "DUP2"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "MSTORE"
								},
								{
									"begin": 1267,
									"end": 1277,
									"name": "POP"
								},
								{
									"begin": 1257,
									"end": 1278,
									"name": "DUP1"
								},
								{
									"begin": 1257,
									"end": 1278,
									"name": "MLOAD"
								},
								{
									"begin": 1257,
									"end": 1278,
									"name": "SWAP1"
								},
								{
									"begin": 1257,
									"end": 1278,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1257,
									"end": 1278,
									"name": "ADD"
								},
								{
									"begin": 1257,
									"end": 1278,
									"name": "KECCAK256"
								},
								{
									"begin": 1296,
									"end": 1303,
									"name": "DUP4"
								},
								{
									"begin": 1329,
									"end": 1333,
									"name": "ADDRESS"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MLOAD"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "ADD"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP1"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP7"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP2"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MSTORE"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "ADD"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP6"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP2"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MSTORE"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "ADD"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP5"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP2"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MSTORE"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "ADD"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP4"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP2"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MSTORE"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "ADD"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP3"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "AND"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "AND"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "DUP2"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MSTORE"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "ADD"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "SWAP6"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "POP"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "POP"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "POP"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "POP"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "POP"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "POP"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "SWAP1"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1348,
									"name": "MSTORE"
								},
								{
									"begin": 1053,
									"end": 1358,
									"name": "DUP1"
								},
								{
									"begin": 1053,
									"end": 1358,
									"name": "MLOAD"
								},
								{
									"begin": 1053,
									"end": 1358,
									"name": "SWAP1"
								},
								{
									"begin": 1053,
									"end": 1358,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1053,
									"end": 1358,
									"name": "ADD"
								},
								{
									"begin": 1053,
									"end": 1358,
									"name": "KECCAK256"
								},
								{
									"begin": 1034,
									"end": 1050,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1034,
									"end": 1358,
									"name": "DUP2"
								},
								{
									"begin": 1034,
									"end": 1358,
									"name": "SWAP1"
								},
								{
									"begin": 1034,
									"end": 1358,
									"name": "SSTORE"
								},
								{
									"begin": 1034,
									"end": 1358,
									"name": "POP"
								},
								{
									"begin": 921,
									"end": 1365,
									"name": "POP"
								},
								{
									"begin": 2785,
									"end": 2795,
									"name": "CALLER"
								},
								{
									"begin": 2775,
									"end": 2782,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 2775,
									"end": 2782,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "EXP"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "DUP2"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "SLOAD"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "DUP2"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "MUL"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "NOT"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "AND"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "SWAP1"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "DUP4"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "AND"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "MUL"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "OR"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "SWAP1"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "SSTORE"
								},
								{
									"begin": 2775,
									"end": 2795,
									"name": "POP"
								},
								{
									"begin": 236,
									"end": 17820,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 236,
									"end": 17820,
									"name": "DUP1"
								},
								{
									"begin": 236,
									"end": 17820,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 236,
									"end": 17820,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 236,
									"end": 17820,
									"name": "CODECOPY"
								},
								{
									"begin": 236,
									"end": 17820,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 236,
									"end": 17820,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820d4194c2de07f2c2ed647fcf04a0959f45ce34d7255041063afc557173c6d096564736f6c63430005100032",
									".code": [
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "MSTORE"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "POP"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "LT"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "SHR"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "GT"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "GT"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "D73792A9"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "GT"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "D73792A9"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "F140A35A"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "F39AC11F"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "FFF6CAE9"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMP"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPDEST"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "BC25CF77"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "C45A0155"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "D21220A7"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMP"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPDEST"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "89AFCB44"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "GT"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "89AFCB44"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "9E548B7F"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "B6200B07"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMP"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPDEST"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "6E1FDD7F"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "7464FC3D"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMP"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPDEST"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "3029E5D4"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "GT"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "3BA17077"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "GT"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "3BA17077"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "485CC955"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "48E5D260"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "62ECEC03"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "67D81740"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMP"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPDEST"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "3029E5D4"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "3B9F1DC0"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMP"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPDEST"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "158EF93E"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "GT"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "158EF93E"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "288E5D02"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "2FCD1692"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMP"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPDEST"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "22C0D9F"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "902F1AC"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "DFE1681"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "EQ"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPI"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPDEST"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "REVERT"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "JUMPDEST"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "DUP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "DUP2"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "ADD"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "DUP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "DUP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "ADD"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP3"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP2"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "DUP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "ADD"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP3"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP2"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "DUP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "AND"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "ADD"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP3"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP2"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "DUP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "ADD"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "DUP3"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "DUP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "ADD"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP2"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP3"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP4"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP2"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP3"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP4"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "POP"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "POP"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "POP"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "JUMPDEST"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "STOP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "JUMPDEST"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "JUMPDEST"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MLOAD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP3"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SUB"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP3"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP4"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MLOAD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MLOAD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP4"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "AND"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ISZERO"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "JUMPI"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP3"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SUB"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MLOAD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP4"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SUB"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "EXP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SUB"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "NOT"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "AND"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "JUMPDEST"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP3"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MLOAD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SUB"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "RETURN"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "JUMPDEST"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "JUMPDEST"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "MLOAD"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "DUP6"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "DUP2"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "MSTORE"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "ADD"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "DUP5"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "DUP2"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "MSTORE"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "ADD"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "DUP4"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "DUP2"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "MSTORE"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "ADD"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "DUP3"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "DUP2"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "MSTORE"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "ADD"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "SWAP5"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "POP"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "POP"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "POP"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "POP"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "POP"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "MLOAD"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "SWAP2"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "SUB"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "SWAP1"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "RETURN"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "JUMPDEST"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP2"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ADD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "AND"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ADD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP3"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP2"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ADD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP3"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP2"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "JUMPDEST"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "MLOAD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP3"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ISZERO"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ISZERO"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ISZERO"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ISZERO"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP2"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "MSTORE"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "ADD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP2"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "MLOAD"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "DUP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP2"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SUB"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP1"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "RETURN"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "JUMPDEST"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "JUMPDEST"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "MLOAD"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "DUP1"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "DUP3"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "AND"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "AND"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "DUP2"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "MSTORE"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "ADD"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "SWAP2"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "POP"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "POP"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "MLOAD"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "DUP1"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "SWAP2"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "SUB"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "SWAP1"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "RETURN"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MLOAD"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP3"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ISZERO"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ISZERO"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ISZERO"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ISZERO"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MSTORE"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP2"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MLOAD"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP2"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SUB"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "RETURN"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "MLOAD"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "DUP1"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "DUP3"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "DUP2"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "MSTORE"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "ADD"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SWAP2"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "MLOAD"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "DUP1"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SWAP2"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SUB"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "RETURN"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "JUMPDEST"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP2"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ADD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "AND"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ADD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP3"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP2"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "AND"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ADD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP3"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP2"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ADD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP3"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP2"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "JUMPDEST"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "MLOAD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP3"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ISZERO"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ISZERO"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ISZERO"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ISZERO"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP2"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "MSTORE"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "ADD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP2"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "MLOAD"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "DUP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP2"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SUB"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "RETURN"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "JUMPDEST"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "JUMPDEST"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "MLOAD"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "DUP1"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "DUP3"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "DUP2"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "MSTORE"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "ADD"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "SWAP2"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "POP"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "POP"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "MLOAD"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "DUP1"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "SWAP2"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "SUB"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "SWAP1"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "RETURN"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "JUMPDEST"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "JUMPDEST"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "MLOAD"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "DUP3"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "AND"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "AND"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "MSTORE"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "SWAP2"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "MLOAD"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "SWAP2"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "SUB"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "RETURN"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "JUMPDEST"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "DUP1"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "DUP2"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "ADD"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP1"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "DUP1"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "DUP1"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "ISZERO"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "ISZERO"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP1"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "ADD"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP1"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP3"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP2"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP1"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "DUP1"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "AND"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP1"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "ADD"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP1"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP3"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP2"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP1"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "DUP1"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "AND"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP1"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "ADD"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP1"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP3"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP2"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "SWAP1"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "POP"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "POP"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "POP"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "JUMPDEST"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "STOP"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "JUMPDEST"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "JUMPDEST"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "MLOAD"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "DUP3"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "DUP2"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "MSTORE"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "ADD"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "SWAP2"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "POP"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "POP"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "MLOAD"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "SWAP2"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "SUB"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "SWAP1"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "RETURN"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "JUMPDEST"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "JUMPDEST"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "MLOAD"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "DUP1"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "DUP3"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "AND"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "AND"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "DUP2"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "MSTORE"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "ADD"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "SWAP2"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "POP"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "POP"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "MLOAD"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "DUP1"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "SWAP2"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "SUB"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "SWAP1"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "RETURN"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "MLOAD"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "DUP3"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "MSTORE"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "ADD"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "SWAP2"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "MLOAD"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "SWAP2"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "SUB"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "SWAP1"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "RETURN"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "JUMPDEST"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "JUMPDEST"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "MLOAD"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "DUP1"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "DUP3"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "DUP2"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "MSTORE"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "ADD"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SWAP2"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "POP"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "POP"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "MLOAD"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "DUP1"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SWAP2"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SUB"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "RETURN"
										},
										{
											"begin": 4628,
											"end": 4905,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 4628,
											"end": 4905,
											"name": "JUMPDEST"
										},
										{
											"begin": 4628,
											"end": 4905,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 4628,
											"end": 4905,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 4628,
											"end": 4905,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4628,
											"end": 4905,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 4628,
											"end": 4905,
											"name": "JUMPDEST"
										},
										{
											"begin": 4628,
											"end": 4905,
											"name": "STOP"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "JUMPDEST"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "DUP1"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "DUP2"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "ADD"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "SWAP1"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "DUP1"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "DUP1"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "AND"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "SWAP1"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "ADD"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "SWAP1"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "SWAP3"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "SWAP2"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "SWAP1"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "DUP1"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "AND"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "SWAP1"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "ADD"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "SWAP1"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "SWAP3"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "SWAP2"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "SWAP1"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "POP"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "POP"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "POP"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "JUMPDEST"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "STOP"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "JUMPDEST"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "DUP1"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "DUP2"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "SWAP1"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "DUP1"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "DUP1"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "AND"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "SWAP1"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "SWAP1"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "SWAP3"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "SWAP2"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "SWAP1"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "DUP1"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "AND"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "SWAP1"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "SWAP1"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "SWAP3"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "SWAP2"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "SWAP1"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "JUMPDEST"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "STOP"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "JUMPDEST"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "JUMPDEST"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "MLOAD"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "DUP3"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "AND"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "AND"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "DUP2"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "MSTORE"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "SWAP2"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "MLOAD"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "SWAP2"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "SUB"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "RETURN"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "JUMPDEST"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "JUMPDEST"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "MLOAD"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "DUP1"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "DUP3"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "DUP2"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "MSTORE"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "ADD"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "SWAP2"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "POP"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "POP"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "MLOAD"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "DUP1"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "SWAP2"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "SUB"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "SWAP1"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "RETURN"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "JUMPDEST"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "DUP1"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "DUP2"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "ADD"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "SWAP1"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "DUP1"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "DUP1"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "AND"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "SWAP1"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "ADD"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "SWAP1"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "SWAP3"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "SWAP2"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "SWAP1"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "POP"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "POP"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "POP"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "JUMPDEST"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "MLOAD"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "DUP1"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "DUP3"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "DUP2"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "MSTORE"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "ADD"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "SWAP2"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "POP"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "POP"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "MLOAD"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "DUP1"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "SWAP2"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "SUB"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "SWAP1"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "RETURN"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "JUMPDEST"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "DUP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "DUP2"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "ADD"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "DUP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "DUP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "ADD"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP3"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP2"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "DUP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "ADD"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP3"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP2"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "DUP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "AND"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "ADD"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP3"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP2"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "DUP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "ADD"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "DUP3"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "DUP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "ADD"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP2"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP3"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP4"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP2"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP3"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP4"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "DUP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "AND"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "ADD"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP3"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP2"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "SWAP1"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "POP"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "POP"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "POP"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "JUMPDEST"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "STOP"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "JUMPDEST"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP2"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "ADD"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "AND"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "ADD"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP3"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP2"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "POP"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "POP"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "POP"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "JUMPDEST"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "MLOAD"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP3"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP2"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "MSTORE"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "ADD"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP2"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "POP"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "POP"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "MLOAD"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP2"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SUB"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "RETURN"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "MLOAD"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "DUP1"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "DUP3"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "MSTORE"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "ADD"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "SWAP2"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "MLOAD"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "DUP1"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "SWAP2"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "SUB"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "SWAP1"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "RETURN"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP2"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "ADD"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "AND"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "ADD"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP3"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP2"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "MLOAD"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP3"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP2"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "MSTORE"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "ADD"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP2"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "MLOAD"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP2"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SUB"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "RETURN"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "JUMPDEST"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "DUP1"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "DUP2"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "ADD"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "SWAP1"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "DUP1"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "DUP1"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "AND"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "SWAP1"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "ADD"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "SWAP1"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "SWAP3"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "SWAP2"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "SWAP1"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "POP"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "POP"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "POP"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "JUMPDEST"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "MLOAD"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "DUP1"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "DUP4"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "DUP2"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "MSTORE"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "ADD"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "DUP3"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "DUP2"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "MSTORE"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "ADD"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "SWAP3"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "POP"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "POP"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "POP"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "MLOAD"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "DUP1"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "SWAP2"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "SUB"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "SWAP1"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "RETURN"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP4"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP4"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "AND"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ISZERO"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "JUMPI"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP4"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "EXP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "NOT"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "AND"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP3"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "RETURN"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "JUMPDEST"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "JUMPDEST"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "MLOAD"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "DUP3"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "DUP2"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "MSTORE"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "ADD"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "SWAP2"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "MLOAD"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "SWAP2"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "SUB"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "RETURN"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "JUMPDEST"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP2"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ADD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "AND"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ADD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP3"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP2"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ADD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP3"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP2"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "JUMPDEST"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "MLOAD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP3"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ISZERO"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ISZERO"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ISZERO"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ISZERO"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP2"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "MSTORE"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "ADD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP2"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "MLOAD"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "DUP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP2"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SUB"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "RETURN"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "JUMPDEST"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "JUMPDEST"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "MLOAD"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "DUP1"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "DUP3"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "ISZERO"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "ISZERO"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "ISZERO"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "ISZERO"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "DUP2"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "MSTORE"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "ADD"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "SWAP2"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "POP"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "POP"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "MLOAD"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "DUP1"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "SWAP2"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "SUB"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "SWAP1"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "RETURN"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "JUMPDEST"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "JUMPDEST"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "MLOAD"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "DUP1"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "DUP3"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "DUP2"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "MSTORE"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "ADD"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "SWAP2"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "POP"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "POP"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "MLOAD"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "DUP1"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "SWAP2"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "SUB"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "SWAP1"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "RETURN"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "JUMPDEST"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "DUP1"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "DUP2"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "ADD"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "SWAP1"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "DUP1"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "DUP1"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "AND"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "SWAP1"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "ADD"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "SWAP1"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "SWAP3"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "SWAP2"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "SWAP1"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "POP"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "POP"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "POP"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "JUMPDEST"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "STOP"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "JUMPDEST"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "JUMPDEST"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "MLOAD"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP1"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP3"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "AND"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "AND"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP2"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "MSTORE"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "ADD"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "SWAP2"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "POP"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "POP"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "MLOAD"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP1"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "SWAP2"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "SUB"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "RETURN"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "JUMPDEST"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "JUMPDEST"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "MLOAD"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "DUP1"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "DUP3"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "AND"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "AND"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "DUP2"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "MSTORE"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "ADD"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "SWAP2"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "POP"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "POP"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "MLOAD"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "DUP1"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "SWAP2"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "SUB"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "SWAP1"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "RETURN"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "JUMPDEST"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "AND"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP3"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "AND"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP3"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP3"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP3"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "AND"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP3"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP3"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP3"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "JUMPDEST"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "STOP"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "JUMPDEST"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "JUMPDEST"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "MLOAD"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "DUP1"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "DUP3"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "DUP2"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "MSTORE"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "ADD"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "SWAP2"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "POP"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "POP"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "MLOAD"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "DUP1"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "SWAP2"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "SUB"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "SWAP1"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "RETURN"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "JUMPDEST"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "ADD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "AND"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "ADD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP3"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "AND"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "ADD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP3"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "JUMPDEST"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "MLOAD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP3"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "MSTORE"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "ADD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "MLOAD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SUB"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "RETURN"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "JUMPDEST"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "DUP1"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "DUP2"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "ADD"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP1"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "DUP1"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "DUP1"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP1"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "ADD"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP1"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP3"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP2"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP1"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "DUP1"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "AND"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP1"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "ADD"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP1"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP3"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP2"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP1"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "POP"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "POP"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "POP"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "JUMPDEST"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "MLOAD"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "DUP1"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "DUP3"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "DUP2"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "MSTORE"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "ADD"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP2"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "POP"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "POP"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "MLOAD"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "DUP1"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP2"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SUB"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP1"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "RETURN"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "JUMPDEST"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "DUP1"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "DUP2"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "ADD"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "SWAP1"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "DUP1"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "DUP1"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "AND"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "SWAP1"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "ADD"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "SWAP1"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "SWAP3"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "SWAP2"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "SWAP1"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "DUP1"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "AND"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "SWAP1"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "ADD"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "SWAP1"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "SWAP3"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "SWAP2"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "SWAP1"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "POP"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "POP"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "POP"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "JUMPDEST"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "STOP"
										},
										{
											"begin": 17037,
											"end": 17352,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 17037,
											"end": 17352,
											"name": "JUMPDEST"
										},
										{
											"begin": 17037,
											"end": 17352,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 17037,
											"end": 17352,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 17037,
											"end": 17352,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17037,
											"end": 17352,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 17037,
											"end": 17352,
											"name": "JUMPDEST"
										},
										{
											"begin": 17037,
											"end": 17352,
											"name": "STOP"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "JUMPDEST"
										},
										{
											"begin": 9239,
											"end": 9267,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 9239,
											"end": 9267,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 9239,
											"end": 9267,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9239,
											"end": 9267,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 9239,
											"end": 9267,
											"name": "JUMPDEST"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "MLOAD"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "DUP1"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "ADD"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "MSTORE"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "DUP1"
										},
										{
											"begin": 9297,
											"end": 9303,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9297,
											"end": 9303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 9303,
											"name": "SWAP1"
										},
										{
											"begin": 9297,
											"end": 9303,
											"name": "SLOAD"
										},
										{
											"begin": 9297,
											"end": 9303,
											"name": "SWAP1"
										},
										{
											"begin": 9297,
											"end": 9303,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9297,
											"end": 9303,
											"name": "EXP"
										},
										{
											"begin": 9297,
											"end": 9303,
											"name": "SWAP1"
										},
										{
											"begin": 9297,
											"end": 9303,
											"name": "DIV"
										},
										{
											"begin": 9297,
											"end": 9303,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9297,
											"end": 9303,
											"name": "AND"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "AND"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "DUP2"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "MSTORE"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "ADD"
										},
										{
											"begin": 9319,
											"end": 9325,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9319,
											"end": 9325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9325,
											"name": "SWAP1"
										},
										{
											"begin": 9319,
											"end": 9325,
											"name": "SLOAD"
										},
										{
											"begin": 9319,
											"end": 9325,
											"name": "SWAP1"
										},
										{
											"begin": 9319,
											"end": 9325,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9319,
											"end": 9325,
											"name": "EXP"
										},
										{
											"begin": 9319,
											"end": 9325,
											"name": "SWAP1"
										},
										{
											"begin": 9319,
											"end": 9325,
											"name": "DIV"
										},
										{
											"begin": 9319,
											"end": 9325,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9319,
											"end": 9325,
											"name": "AND"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "AND"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "DUP2"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "MSTORE"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "ADD"
										},
										{
											"begin": 9345,
											"end": 9355,
											"name": "DUP8"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "DUP2"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "MSTORE"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "ADD"
										},
										{
											"begin": 9375,
											"end": 9385,
											"name": "DUP7"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "DUP2"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "MSTORE"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "ADD"
										},
										{
											"begin": 9403,
											"end": 9404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "DUP2"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "MSTORE"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "ADD"
										},
										{
											"begin": 9422,
											"end": 9423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "DUP2"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "MSTORE"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "ADD"
										},
										{
											"begin": 9446,
											"end": 9447,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "DUP2"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "MSTORE"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "ADD"
										},
										{
											"begin": 9470,
											"end": 9471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "DUP2"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "MSTORE"
										},
										{
											"begin": 9270,
											"end": 9478,
											"name": "POP"
										},
										{
											"begin": 9239,
											"end": 9478,
											"name": "SWAP1"
										},
										{
											"begin": 9239,
											"end": 9478,
											"name": "POP"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 9490,
											"end": 9500,
											"name": "DUP2"
										},
										{
											"begin": 9502,
											"end": 9504,
											"name": "DUP6"
										},
										{
											"begin": 9506,
											"end": 9510,
											"name": "DUP6"
										},
										{
											"begin": 9506,
											"end": 9510,
											"name": "DUP6"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "DUP1"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "DUP1"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "ADD"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "DUP1"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "SWAP2"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "DIV"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "MUL"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "ADD"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "MLOAD"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "SWAP1"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "DUP2"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "ADD"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "MSTORE"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "DUP1"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "SWAP4"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "SWAP3"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "SWAP2"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "SWAP1"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "DUP2"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "DUP2"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "MSTORE"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "ADD"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "DUP4"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "POP"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "POP"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "POP"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "POP"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "POP"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "POP"
										},
										{
											"begin": 9520,
											"end": 9521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9484,
											"end": 9489,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 9484,
											"end": 9523,
											"name": "JUMPDEST"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "POP"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "POP"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "POP"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "POP"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "POP"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "POP"
										},
										{
											"begin": 9143,
											"end": 9528,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "JUMPDEST"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MLOAD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "PUSH",
											"value": "655A4B616C69627572204C500000000000000000000000000000000000000000"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 228,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "JUMPDEST"
										},
										{
											"begin": 1630,
											"end": 1647,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1666,
											"name": "DUP1"
										},
										{
											"begin": 1668,
											"end": 1692,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "DUP1"
										},
										{
											"begin": 1738,
											"end": 1746,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1738,
											"end": 1746,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1746,
											"name": "SWAP1"
										},
										{
											"begin": 1738,
											"end": 1746,
											"name": "SLOAD"
										},
										{
											"begin": 1738,
											"end": 1746,
											"name": "SWAP1"
										},
										{
											"begin": 1738,
											"end": 1746,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1738,
											"end": 1746,
											"name": "EXP"
										},
										{
											"begin": 1738,
											"end": 1746,
											"name": "SWAP1"
										},
										{
											"begin": 1738,
											"end": 1746,
											"name": "DIV"
										},
										{
											"begin": 1738,
											"end": 1746,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1738,
											"end": 1746,
											"name": "AND"
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "SWAP4"
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "POP"
										},
										{
											"begin": 1764,
											"end": 1772,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1764,
											"end": 1772,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 1764,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1764,
											"end": 1772,
											"name": "SLOAD"
										},
										{
											"begin": 1764,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1764,
											"end": 1772,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1764,
											"end": 1772,
											"name": "EXP"
										},
										{
											"begin": 1764,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1764,
											"end": 1772,
											"name": "DIV"
										},
										{
											"begin": 1764,
											"end": 1772,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1764,
											"end": 1772,
											"name": "AND"
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "SWAP3"
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "POP"
										},
										{
											"begin": 1798,
											"end": 1814,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1798,
											"end": 1814,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 1798,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1798,
											"end": 1814,
											"name": "SLOAD"
										},
										{
											"begin": 1798,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1798,
											"end": 1814,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1798,
											"end": 1814,
											"name": "EXP"
										},
										{
											"begin": 1798,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1798,
											"end": 1814,
											"name": "DIV"
										},
										{
											"begin": 1798,
											"end": 1814,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1798,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "SWAP2"
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1840,
											"end": 1856,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1840,
											"end": 1856,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1840,
											"end": 1856,
											"name": "SWAP1"
										},
										{
											"begin": 1840,
											"end": 1856,
											"name": "SLOAD"
										},
										{
											"begin": 1840,
											"end": 1856,
											"name": "SWAP1"
										},
										{
											"begin": 1840,
											"end": 1856,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1840,
											"end": 1856,
											"name": "EXP"
										},
										{
											"begin": 1840,
											"end": 1856,
											"name": "SWAP1"
										},
										{
											"begin": 1840,
											"end": 1856,
											"name": "DIV"
										},
										{
											"begin": 1840,
											"end": 1856,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1840,
											"end": 1856,
											"name": "AND"
										},
										{
											"begin": 1820,
											"end": 1856,
											"name": "SWAP1"
										},
										{
											"begin": 1820,
											"end": 1856,
											"name": "POP"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "SWAP1"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "SWAP2"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "SWAP3"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "SWAP4"
										},
										{
											"begin": 1586,
											"end": 1861,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "JUMPDEST"
										},
										{
											"begin": 2243,
											"end": 2247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2295,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 2268,
											"end": 2278,
											"name": "CALLER"
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "DUP5"
										},
										{
											"begin": 2289,
											"end": 2294,
											"name": "DUP5"
										},
										{
											"begin": 2259,
											"end": 2267,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 2259,
											"end": 2295,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2259,
											"end": 2295,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 2259,
											"end": 2295,
											"name": "JUMPDEST"
										},
										{
											"begin": 2312,
											"end": 2316,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2305,
											"end": 2316,
											"name": "SWAP1"
										},
										{
											"begin": 2305,
											"end": 2316,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP3"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "SWAP2"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2323,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "JUMPDEST"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "SWAP1"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "SLOAD"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "SWAP1"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "EXP"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "SWAP1"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "DIV"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "AND"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "DUP2"
										},
										{
											"begin": 488,
											"end": 509,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SLOAD"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "EXP"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DIV"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "AND"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SLOAD"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "DUP2"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "JUMPDEST"
										},
										{
											"begin": 2549,
											"end": 2553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2607,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2578,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2583,
											"name": "DUP7"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "AND"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "AND"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "DUP2"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "MSTORE"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "ADD"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "SWAP1"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "DUP2"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "MSTORE"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "ADD"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "KECCAK256"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2595,
											"name": "CALLER"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "AND"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "AND"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "DUP2"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "MSTORE"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "ADD"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "SWAP1"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "DUP2"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "MSTORE"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "ADD"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "KECCAK256"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "SLOAD"
										},
										{
											"begin": 2569,
											"end": 2608,
											"name": "EQ"
										},
										{
											"begin": 2565,
											"end": 2799,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 2565,
											"end": 2799,
											"name": "JUMPI"
										},
										{
											"begin": 2624,
											"end": 2638,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 2673,
											"end": 2678,
											"name": "DUP4"
										},
										{
											"begin": 2641,
											"end": 2650,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2655,
											"name": "DUP9"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "AND"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "AND"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "DUP2"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "ADD"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "SWAP1"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "DUP2"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "ADD"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "KECCAK256"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2667,
											"name": "CALLER"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "AND"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "AND"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "DUP2"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "ADD"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "SWAP1"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "DUP2"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "ADD"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "KECCAK256"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "SLOAD"
										},
										{
											"begin": 2641,
											"end": 2672,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 2641,
											"end": 2672,
											"name": "SWAP1"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "SWAP2"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "SWAP1"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "AND"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "JUMPDEST"
										},
										{
											"begin": 2624,
											"end": 2679,
											"name": "SWAP1"
										},
										{
											"begin": 2624,
											"end": 2679,
											"name": "POP"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP1"
										},
										{
											"begin": 2693,
											"end": 2702,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2707,
											"name": "DUP8"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "AND"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "AND"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "DUP2"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "MSTORE"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "ADD"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "SWAP1"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "DUP2"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "MSTORE"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "ADD"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "KECCAK256"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2719,
											"name": "CALLER"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "AND"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "AND"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "DUP2"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "MSTORE"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "ADD"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "SWAP1"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "DUP2"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "MSTORE"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "ADD"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2720,
											"name": "KECCAK256"
										},
										{
											"begin": 2693,
											"end": 2732,
											"name": "DUP2"
										},
										{
											"begin": 2693,
											"end": 2732,
											"name": "SWAP1"
										},
										{
											"begin": 2693,
											"end": 2732,
											"name": "SSTORE"
										},
										{
											"begin": 2693,
											"end": 2732,
											"name": "POP"
										},
										{
											"begin": 2766,
											"end": 2776,
											"name": "CALLER"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "AND"
										},
										{
											"begin": 2760,
											"end": 2764,
											"name": "DUP6"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "AND"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2778,
											"end": 2787,
											"name": "DUP4"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "MLOAD"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "DUP1"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "DUP3"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "DUP2"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "MSTORE"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "ADD"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "SWAP2"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "POP"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "POP"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "MLOAD"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "DUP1"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "SWAP2"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "SUB"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "SWAP1"
										},
										{
											"begin": 2751,
											"end": 2788,
											"name": "LOG3"
										},
										{
											"begin": 2565,
											"end": 2799,
											"name": "POP"
										},
										{
											"begin": 2565,
											"end": 2799,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 2565,
											"end": 2799,
											"name": "JUMPDEST"
										},
										{
											"begin": 2808,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 2818,
											"end": 2822,
											"name": "DUP5"
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "DUP5"
										},
										{
											"begin": 2828,
											"end": 2833,
											"name": "DUP5"
										},
										{
											"begin": 2808,
											"end": 2817,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 2808,
											"end": 2834,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2808,
											"end": 2834,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 2808,
											"end": 2834,
											"name": "JUMPDEST"
										},
										{
											"begin": 2851,
											"end": 2855,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2844,
											"end": 2855,
											"name": "SWAP1"
										},
										{
											"begin": 2844,
											"end": 2855,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP4"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "SWAP3"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2471,
											"end": 2862,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "JUMPDEST"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "SLOAD"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "DUP2"
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "JUMPDEST"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "SLOAD"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "EXP"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "DIV"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "AND"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 975,
											"end": 1011,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "JUMPDEST"
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SLOAD"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "EQ"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPI"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A204C4F434B45440000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "REVERT"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPDEST"
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1548,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "DUP2"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SSTORE"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "SWAP1"
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "SLOAD"
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "SWAP1"
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "EXP"
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "SWAP1"
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "DIV"
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "AND"
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "AND"
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "PUSH",
											"value": "FC39026A"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "MLOAD"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "DUP2"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "AND"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "SHL"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "DUP2"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "MSTORE"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "ADD"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "MLOAD"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "DUP1"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "DUP4"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "SUB"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "DUP2"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "DUP7"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "DUP1"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "POP"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "GAS"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "STATICCALL"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "POP"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "POP"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "POP"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "POP"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "MLOAD"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "DUP2"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "ADD"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "SWAP1"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "DUP1"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "DUP1"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "MLOAD"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "SWAP1"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "ADD"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "SWAP1"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "SWAP3"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "SWAP2"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "SWAP1"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "POP"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "POP"
										},
										{
											"begin": 4121,
											"end": 4155,
											"name": "POP"
										},
										{
											"begin": 4107,
											"end": 4155,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4107,
											"end": 4155,
											"name": "AND"
										},
										{
											"begin": 4107,
											"end": 4117,
											"name": "CALLER"
										},
										{
											"begin": 4107,
											"end": 4155,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4107,
											"end": 4155,
											"name": "AND"
										},
										{
											"begin": 4107,
											"end": 4155,
											"name": "EQ"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "JUMPI"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "MLOAD"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "DUP2"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "MSTORE"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "ADD"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "DUP1"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "DUP1"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "ADD"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "DUP3"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "DUP2"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "SUB"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "DUP3"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "MSTORE"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "PUSH",
											"value": "2C"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "DUP2"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "MSTORE"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "ADD"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "DUP1"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "PUSH data",
											"value": "9FF115C8F228BB5656172ECE44E1ABAFBA1EB82B0FF5C74955E92E978F9BE43B"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "PUSH",
											"value": "2C"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "SWAP2"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "CODECOPY"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "ADD"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "SWAP2"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "POP"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "POP"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "MLOAD"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "DUP1"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "SWAP2"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "SUB"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "SWAP1"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "REVERT"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 4099,
											"end": 4204,
											"name": "JUMPDEST"
										},
										{
											"begin": 4219,
											"end": 4236,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4219,
											"end": 4236,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4219,
											"end": 4236,
											"name": "SWAP1"
										},
										{
											"begin": 4219,
											"end": 4236,
											"name": "SLOAD"
										},
										{
											"begin": 4219,
											"end": 4236,
											"name": "SWAP1"
										},
										{
											"begin": 4219,
											"end": 4236,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4219,
											"end": 4236,
											"name": "EXP"
										},
										{
											"begin": 4219,
											"end": 4236,
											"name": "SWAP1"
										},
										{
											"begin": 4219,
											"end": 4236,
											"name": "DIV"
										},
										{
											"begin": 4219,
											"end": 4236,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4219,
											"end": 4236,
											"name": "AND"
										},
										{
											"begin": 4218,
											"end": 4236,
											"name": "ISZERO"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "JUMPI"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "MLOAD"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "DUP2"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "MSTORE"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "ADD"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "DUP1"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "DUP1"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "ADD"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "DUP3"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "DUP2"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "SUB"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "DUP3"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "MSTORE"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "DUP2"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "MSTORE"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "ADD"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "DUP1"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A20696D6D757461626C650000000000000000"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "DUP2"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "MSTORE"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "POP"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "ADD"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "SWAP2"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "POP"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "POP"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "MLOAD"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "DUP1"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "SWAP2"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "SUB"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "SWAP1"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "REVERT"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 4210,
											"end": 4265,
											"name": "JUMPDEST"
										},
										{
											"begin": 4290,
											"end": 4300,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4290,
											"end": 4300,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4290,
											"end": 4300,
											"name": "SWAP1"
										},
										{
											"begin": 4290,
											"end": 4300,
											"name": "SLOAD"
										},
										{
											"begin": 4290,
											"end": 4300,
											"name": "SWAP1"
										},
										{
											"begin": 4290,
											"end": 4300,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4290,
											"end": 4300,
											"name": "EXP"
										},
										{
											"begin": 4290,
											"end": 4300,
											"name": "SWAP1"
										},
										{
											"begin": 4290,
											"end": 4300,
											"name": "DIV"
										},
										{
											"begin": 4290,
											"end": 4300,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4290,
											"end": 4300,
											"name": "AND"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "ISZERO"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "ISZERO"
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "DUP4"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "ISZERO"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "ISZERO"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "EQ"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "ISZERO"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "JUMPI"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "MLOAD"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "DUP2"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "MSTORE"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "ADD"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "DUP1"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "DUP1"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "ADD"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "DUP3"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "DUP2"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "SUB"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "DUP3"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "MSTORE"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "DUP2"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "MSTORE"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "ADD"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "DUP1"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A206E6F207570646174650000000000000000"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "DUP2"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "MSTORE"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "POP"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "ADD"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "SWAP2"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "POP"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "POP"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "MLOAD"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "DUP1"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "SWAP2"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "SUB"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "SWAP1"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "REVERT"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 4272,
											"end": 4329,
											"name": "JUMPDEST"
										},
										{
											"begin": 4363,
											"end": 4371,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4363,
											"end": 4371,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4363,
											"end": 4371,
											"name": "SWAP1"
										},
										{
											"begin": 4363,
											"end": 4371,
											"name": "SLOAD"
										},
										{
											"begin": 4363,
											"end": 4371,
											"name": "SWAP1"
										},
										{
											"begin": 4363,
											"end": 4371,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4363,
											"end": 4371,
											"name": "EXP"
										},
										{
											"begin": 4363,
											"end": 4371,
											"name": "SWAP1"
										},
										{
											"begin": 4363,
											"end": 4371,
											"name": "DIV"
										},
										{
											"begin": 4363,
											"end": 4371,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4363,
											"end": 4371,
											"name": "AND"
										},
										{
											"begin": 4343,
											"end": 4371,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4343,
											"end": 4371,
											"name": "AND"
										},
										{
											"begin": 4343,
											"end": 4359,
											"name": "DUP3"
										},
										{
											"begin": 4343,
											"end": 4371,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4343,
											"end": 4371,
											"name": "AND"
										},
										{
											"begin": 4343,
											"end": 4371,
											"name": "EQ"
										},
										{
											"begin": 4343,
											"end": 4403,
											"name": "DUP1"
										},
										{
											"begin": 4343,
											"end": 4403,
											"name": "ISZERO"
										},
										{
											"begin": 4343,
											"end": 4403,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 4343,
											"end": 4403,
											"name": "JUMPI"
										},
										{
											"begin": 4343,
											"end": 4403,
											"name": "POP"
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "SWAP1"
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "SLOAD"
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "SWAP1"
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "EXP"
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "SWAP1"
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "DIV"
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "AND"
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "AND"
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "DUP2"
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "AND"
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "EQ"
										},
										{
											"begin": 4343,
											"end": 4403,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 4343,
											"end": 4403,
											"name": "JUMPDEST"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "JUMPI"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "MLOAD"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "DUP2"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "MSTORE"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "ADD"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "DUP1"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "DUP1"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "ADD"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "DUP3"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "DUP2"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "SUB"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "DUP3"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "MSTORE"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "DUP2"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "MSTORE"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "ADD"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "DUP1"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A206661696C65640000000000000000000000"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "DUP2"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "MSTORE"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "POP"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "ADD"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "SWAP2"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "POP"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "POP"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "MLOAD"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "DUP1"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "SWAP2"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "SUB"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "SWAP1"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "REVERT"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 4335,
											"end": 4429,
											"name": "JUMPDEST"
										},
										{
											"begin": 4436,
											"end": 4446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4449,
											"end": 4477,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 4458,
											"end": 4466,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4458,
											"end": 4466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4466,
											"name": "SWAP1"
										},
										{
											"begin": 4458,
											"end": 4466,
											"name": "SLOAD"
										},
										{
											"begin": 4458,
											"end": 4466,
											"name": "SWAP1"
										},
										{
											"begin": 4458,
											"end": 4466,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4458,
											"end": 4466,
											"name": "EXP"
										},
										{
											"begin": 4458,
											"end": 4466,
											"name": "SWAP1"
										},
										{
											"begin": 4458,
											"end": 4466,
											"name": "DIV"
										},
										{
											"begin": 4458,
											"end": 4466,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4458,
											"end": 4466,
											"name": "AND"
										},
										{
											"begin": 4468,
											"end": 4476,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4468,
											"end": 4476,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4468,
											"end": 4476,
											"name": "SWAP1"
										},
										{
											"begin": 4468,
											"end": 4476,
											"name": "SLOAD"
										},
										{
											"begin": 4468,
											"end": 4476,
											"name": "SWAP1"
										},
										{
											"begin": 4468,
											"end": 4476,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4468,
											"end": 4476,
											"name": "EXP"
										},
										{
											"begin": 4468,
											"end": 4476,
											"name": "SWAP1"
										},
										{
											"begin": 4468,
											"end": 4476,
											"name": "DIV"
										},
										{
											"begin": 4468,
											"end": 4476,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4468,
											"end": 4476,
											"name": "AND"
										},
										{
											"begin": 4449,
											"end": 4457,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 4449,
											"end": 4477,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4449,
											"end": 4477,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 4449,
											"end": 4477,
											"name": "JUMPDEST"
										},
										{
											"begin": 4436,
											"end": 4477,
											"name": "SWAP1"
										},
										{
											"begin": 4436,
											"end": 4477,
											"name": "POP"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "PUSH",
											"value": "B6A86710BDE53AA7FB1B3856279E2AF5B476D53E2DD0902CF17A0911B5A43A8B"
										},
										{
											"begin": 4503,
											"end": 4513,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4503,
											"end": 4513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4513,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4513,
											"name": "SLOAD"
										},
										{
											"begin": 4503,
											"end": 4513,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4513,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4503,
											"end": 4513,
											"name": "EXP"
										},
										{
											"begin": 4503,
											"end": 4513,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4513,
											"name": "DIV"
										},
										{
											"begin": 4503,
											"end": 4513,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4503,
											"end": 4513,
											"name": "AND"
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP6"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "MLOAD"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "DUP1"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "DUP4"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "ISZERO"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "ISZERO"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "ISZERO"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "ISZERO"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "DUP2"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "MSTORE"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "ADD"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "DUP3"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "ISZERO"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "ISZERO"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "ISZERO"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "ISZERO"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "DUP2"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "MSTORE"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "ADD"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "SWAP3"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "POP"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "POP"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "POP"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "MLOAD"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "DUP1"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "SWAP2"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "SUB"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "SWAP1"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "LOG1"
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "DUP4"
										},
										{
											"begin": 4528,
											"end": 4538,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4528,
											"end": 4538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "EXP"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "DUP2"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "SLOAD"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "DUP2"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "MUL"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "NOT"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "AND"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "DUP4"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "ISZERO"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "ISZERO"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "MUL"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "OR"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "SSTORE"
										},
										{
											"begin": 4528,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4562,
											"end": 4568,
											"name": "DUP4"
										},
										{
											"begin": 4562,
											"end": 4577,
											"name": "DUP1"
										},
										{
											"begin": 4562,
											"end": 4577,
											"name": "ISZERO"
										},
										{
											"begin": 4562,
											"end": 4577,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 4562,
											"end": 4577,
											"name": "JUMPI"
										},
										{
											"begin": 4562,
											"end": 4577,
											"name": "POP"
										},
										{
											"begin": 4572,
											"end": 4577,
											"name": "DUP1"
										},
										{
											"begin": 4562,
											"end": 4577,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 4562,
											"end": 4577,
											"name": "JUMPDEST"
										},
										{
											"begin": 4561,
											"end": 4619,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 4561,
											"end": 4619,
											"name": "JUMPI"
										},
										{
											"begin": 4618,
											"end": 4619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4561,
											"end": 4619,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 4561,
											"end": 4619,
											"name": "JUMP"
										},
										{
											"begin": 4561,
											"end": 4619,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 4561,
											"end": 4619,
											"name": "JUMPDEST"
										},
										{
											"begin": 4581,
											"end": 4615,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 4589,
											"end": 4597,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4589,
											"end": 4597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4589,
											"end": 4597,
											"name": "SWAP1"
										},
										{
											"begin": 4589,
											"end": 4597,
											"name": "SLOAD"
										},
										{
											"begin": 4589,
											"end": 4597,
											"name": "SWAP1"
										},
										{
											"begin": 4589,
											"end": 4597,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4589,
											"end": 4597,
											"name": "EXP"
										},
										{
											"begin": 4589,
											"end": 4597,
											"name": "SWAP1"
										},
										{
											"begin": 4589,
											"end": 4597,
											"name": "DIV"
										},
										{
											"begin": 4589,
											"end": 4597,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4589,
											"end": 4597,
											"name": "AND"
										},
										{
											"begin": 4584,
											"end": 4598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4584,
											"end": 4598,
											"name": "AND"
										},
										{
											"begin": 4605,
											"end": 4613,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4605,
											"end": 4613,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4605,
											"end": 4613,
											"name": "SWAP1"
										},
										{
											"begin": 4605,
											"end": 4613,
											"name": "SLOAD"
										},
										{
											"begin": 4605,
											"end": 4613,
											"name": "SWAP1"
										},
										{
											"begin": 4605,
											"end": 4613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4605,
											"end": 4613,
											"name": "EXP"
										},
										{
											"begin": 4605,
											"end": 4613,
											"name": "SWAP1"
										},
										{
											"begin": 4605,
											"end": 4613,
											"name": "DIV"
										},
										{
											"begin": 4605,
											"end": 4613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4605,
											"end": 4613,
											"name": "AND"
										},
										{
											"begin": 4600,
											"end": 4614,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4600,
											"end": 4614,
											"name": "AND"
										},
										{
											"begin": 4581,
											"end": 4583,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 4581,
											"end": 4615,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4581,
											"end": 4615,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 4581,
											"end": 4615,
											"name": "JUMPDEST"
										},
										{
											"begin": 4561,
											"end": 4619,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 4561,
											"end": 4619,
											"name": "JUMPDEST"
										},
										{
											"begin": 4553,
											"end": 4558,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 4553,
											"end": 4619,
											"name": "DUP2"
										},
										{
											"begin": 4553,
											"end": 4619,
											"name": "SWAP1"
										},
										{
											"begin": 4553,
											"end": 4619,
											"name": "SSTORE"
										},
										{
											"begin": 4553,
											"end": 4619,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1565,
											"end": 1573,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "DUP2"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SWAP1"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SSTORE"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "POP"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "POP"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "POP"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "POP"
										},
										{
											"begin": 3991,
											"end": 4624,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "JUMPDEST"
										},
										{
											"begin": 649,
											"end": 715,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "SHL"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "DUP2"
										},
										{
											"begin": 607,
											"end": 715,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "JUMPDEST"
										},
										{
											"begin": 313,
											"end": 315,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "DUP2"
										},
										{
											"begin": 280,
											"end": 315,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "SLOAD"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "JUMPDEST"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SLOAD"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "DUP2"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4628,
											"end": 4905,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 4628,
											"end": 4905,
											"name": "JUMPDEST"
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SLOAD"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "EQ"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPI"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A204C4F434B45440000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "REVERT"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPDEST"
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1548,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "DUP2"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SSTORE"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 4711,
											"end": 4718,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4711,
											"end": 4718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4711,
											"end": 4718,
											"name": "SWAP1"
										},
										{
											"begin": 4711,
											"end": 4718,
											"name": "SLOAD"
										},
										{
											"begin": 4711,
											"end": 4718,
											"name": "SWAP1"
										},
										{
											"begin": 4711,
											"end": 4718,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4711,
											"end": 4718,
											"name": "EXP"
										},
										{
											"begin": 4711,
											"end": 4718,
											"name": "SWAP1"
										},
										{
											"begin": 4711,
											"end": 4718,
											"name": "DIV"
										},
										{
											"begin": 4711,
											"end": 4718,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4711,
											"end": 4718,
											"name": "AND"
										},
										{
											"begin": 4702,
											"end": 4725,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4702,
											"end": 4725,
											"name": "AND"
										},
										{
											"begin": 4702,
											"end": 4725,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "MLOAD"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "DUP2"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "AND"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "SHL"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "DUP2"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "MSTORE"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "ADD"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "MLOAD"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "DUP1"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "DUP4"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "SUB"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "DUP2"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "DUP7"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "DUP1"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "POP"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "GAS"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "STATICCALL"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "POP"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "POP"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "POP"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "POP"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "MLOAD"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "DUP2"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "ADD"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "SWAP1"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "DUP1"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "DUP1"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "MLOAD"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "SWAP1"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "ADD"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "SWAP1"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "SWAP3"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "SWAP2"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "SWAP1"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "POP"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "POP"
										},
										{
											"begin": 4702,
											"end": 4727,
											"name": "POP"
										},
										{
											"begin": 4688,
											"end": 4727,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4688,
											"end": 4727,
											"name": "AND"
										},
										{
											"begin": 4688,
											"end": 4698,
											"name": "CALLER"
										},
										{
											"begin": 4688,
											"end": 4727,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4688,
											"end": 4727,
											"name": "AND"
										},
										{
											"begin": 4688,
											"end": 4727,
											"name": "EQ"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "JUMPI"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "MLOAD"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "DUP2"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "MSTORE"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "ADD"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "DUP1"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "DUP1"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "ADD"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "DUP3"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "DUP2"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "SUB"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "DUP3"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "MSTORE"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "DUP2"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "MSTORE"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "ADD"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "DUP1"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "PUSH data",
											"value": "FD83120603ED4D82DE96120F878F97F3EAB3D3E5B9B17EB433B2F605B574072D"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "SWAP2"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "CODECOPY"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "ADD"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "SWAP2"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "POP"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "POP"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "MLOAD"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "DUP1"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "SWAP2"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "SUB"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "SWAP1"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "REVERT"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 4680,
											"end": 4767,
											"name": "JUMPDEST"
										},
										{
											"begin": 4782,
											"end": 4799,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4782,
											"end": 4799,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4782,
											"end": 4799,
											"name": "SWAP1"
										},
										{
											"begin": 4782,
											"end": 4799,
											"name": "SLOAD"
										},
										{
											"begin": 4782,
											"end": 4799,
											"name": "SWAP1"
										},
										{
											"begin": 4782,
											"end": 4799,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4782,
											"end": 4799,
											"name": "EXP"
										},
										{
											"begin": 4782,
											"end": 4799,
											"name": "SWAP1"
										},
										{
											"begin": 4782,
											"end": 4799,
											"name": "DIV"
										},
										{
											"begin": 4782,
											"end": 4799,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4782,
											"end": 4799,
											"name": "AND"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "ISZERO"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "JUMPI"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "MLOAD"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "DUP2"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "DUP1"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "DUP1"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "DUP3"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "DUP2"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "SUB"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "DUP3"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "DUP2"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "DUP1"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A20616C726561647920696D6D757461626C65"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "DUP2"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "POP"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "SWAP2"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "POP"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "POP"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "MLOAD"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "DUP1"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "SWAP2"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "SUB"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "SWAP1"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "REVERT"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 4773,
											"end": 4836,
											"name": "JUMPDEST"
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4843,
											"end": 4860,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4843,
											"end": 4860,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "EXP"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "DUP2"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "SLOAD"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "DUP2"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "MUL"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "NOT"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "AND"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "SWAP1"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "DUP4"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "ISZERO"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "ISZERO"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "MUL"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "OR"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "SWAP1"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "SSTORE"
										},
										{
											"begin": 4843,
											"end": 4867,
											"name": "POP"
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "PUSH",
											"value": "9122C41AE733A4D7740324D50E35FBD6EE85BE3C1312A45596D8045150AB2F2"
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "MLOAD"
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "MLOAD"
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "DUP1"
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "SWAP2"
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "SUB"
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "SWAP1"
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "LOG1"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1565,
											"end": 1573,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "DUP2"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SWAP1"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SSTORE"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "POP"
										},
										{
											"begin": 4628,
											"end": 4905,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "JUMPDEST"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "SWAP1"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "SLOAD"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "SWAP1"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "EXP"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "SWAP1"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "DIV"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "AND"
										},
										{
											"begin": 2935,
											"end": 2956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2935,
											"end": 2956,
											"name": "AND"
										},
										{
											"begin": 2935,
											"end": 2945,
											"name": "CALLER"
										},
										{
											"begin": 2935,
											"end": 2956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2935,
											"end": 2956,
											"name": "AND"
										},
										{
											"begin": 2935,
											"end": 2956,
											"name": "EQ"
										},
										{
											"begin": 2935,
											"end": 2972,
											"name": "DUP1"
										},
										{
											"begin": 2935,
											"end": 2972,
											"name": "ISZERO"
										},
										{
											"begin": 2935,
											"end": 2972,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 2935,
											"end": 2972,
											"name": "JUMPI"
										},
										{
											"begin": 2935,
											"end": 2972,
											"name": "POP"
										},
										{
											"begin": 2961,
											"end": 2972,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2961,
											"end": 2972,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2961,
											"end": 2972,
											"name": "SWAP1"
										},
										{
											"begin": 2961,
											"end": 2972,
											"name": "SLOAD"
										},
										{
											"begin": 2961,
											"end": 2972,
											"name": "SWAP1"
										},
										{
											"begin": 2961,
											"end": 2972,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2961,
											"end": 2972,
											"name": "EXP"
										},
										{
											"begin": 2961,
											"end": 2972,
											"name": "SWAP1"
										},
										{
											"begin": 2961,
											"end": 2972,
											"name": "DIV"
										},
										{
											"begin": 2961,
											"end": 2972,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2961,
											"end": 2972,
											"name": "AND"
										},
										{
											"begin": 2960,
											"end": 2972,
											"name": "ISZERO"
										},
										{
											"begin": 2935,
											"end": 2972,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 2935,
											"end": 2972,
											"name": "JUMPDEST"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "JUMPI"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "MLOAD"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "DUP2"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "MSTORE"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "ADD"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "DUP1"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "DUP1"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "ADD"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "DUP3"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "DUP2"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "SUB"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "DUP3"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "MSTORE"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "DUP2"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "MSTORE"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "ADD"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "DUP1"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A20464F5242494444454E0000000000000000"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "DUP2"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "MSTORE"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "POP"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "ADD"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "SWAP2"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "POP"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "POP"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "MLOAD"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "DUP1"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "SWAP2"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "SUB"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "SWAP1"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "REVERT"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 2927,
											"end": 3001,
											"name": "JUMPDEST"
										},
										{
											"begin": 3040,
											"end": 3047,
											"name": "DUP2"
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "EXP"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "DUP2"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "SLOAD"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "DUP2"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "MUL"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "NOT"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "AND"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "SWAP1"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "DUP4"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "AND"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "MUL"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "OR"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "SWAP1"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "SSTORE"
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "POP"
										},
										{
											"begin": 3062,
											"end": 3069,
											"name": "DUP1"
										},
										{
											"begin": 3053,
											"end": 3059,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3053,
											"end": 3059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "EXP"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "DUP2"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "SLOAD"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "DUP2"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "MUL"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "NOT"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "AND"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "SWAP1"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "DUP4"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "AND"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "MUL"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "OR"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "SWAP1"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "SSTORE"
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "POP"
										},
										{
											"begin": 3117,
											"end": 3124,
											"name": "DUP2"
										},
										{
											"begin": 3110,
											"end": 3134,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3110,
											"end": 3134,
											"name": "AND"
										},
										{
											"begin": 3110,
											"end": 3134,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "MLOAD"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "DUP2"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "AND"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "SHL"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "DUP2"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "MSTORE"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "ADD"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "MLOAD"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "DUP1"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "DUP4"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "SUB"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "DUP2"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "DUP7"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "DUP1"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "POP"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "GAS"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "STATICCALL"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "POP"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "POP"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "POP"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "POP"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "MLOAD"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "DUP2"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "ADD"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "SWAP1"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "DUP1"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "DUP1"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "MLOAD"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "SWAP1"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "ADD"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "SWAP1"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "SWAP3"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "SWAP2"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "SWAP1"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "POP"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "POP"
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "POP"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "AND"
										},
										{
											"begin": 3099,
											"end": 3101,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3099,
											"end": 3137,
											"name": "EXP"
										},
										{
											"begin": 3076,
											"end": 3096,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 3076,
											"end": 3137,
											"name": "DUP2"
										},
										{
											"begin": 3076,
											"end": 3137,
											"name": "SWAP1"
										},
										{
											"begin": 3076,
											"end": 3137,
											"name": "SSTORE"
										},
										{
											"begin": 3076,
											"end": 3137,
											"name": "POP"
										},
										{
											"begin": 3184,
											"end": 3191,
											"name": "DUP1"
										},
										{
											"begin": 3177,
											"end": 3201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3177,
											"end": 3201,
											"name": "AND"
										},
										{
											"begin": 3177,
											"end": 3201,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "MLOAD"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "DUP2"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "AND"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "SHL"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "DUP2"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "MSTORE"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "ADD"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "MLOAD"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "DUP1"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "DUP4"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "SUB"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "DUP2"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "DUP7"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "DUP1"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "POP"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "GAS"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "STATICCALL"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "POP"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "POP"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "POP"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "POP"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "MLOAD"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "DUP2"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "ADD"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "SWAP1"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "DUP1"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "DUP1"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "MLOAD"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "SWAP1"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "ADD"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "SWAP1"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "SWAP3"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "SWAP2"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "SWAP1"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "POP"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "POP"
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "POP"
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "AND"
										},
										{
											"begin": 3166,
											"end": 3168,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3166,
											"end": 3204,
											"name": "EXP"
										},
										{
											"begin": 3143,
											"end": 3163,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3143,
											"end": 3204,
											"name": "DUP2"
										},
										{
											"begin": 3143,
											"end": 3204,
											"name": "SWAP1"
										},
										{
											"begin": 3143,
											"end": 3204,
											"name": "SSTORE"
										},
										{
											"begin": 3143,
											"end": 3204,
											"name": "POP"
										},
										{
											"begin": 3225,
											"end": 3229,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3211,
											"end": 3222,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3211,
											"end": 3222,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "EXP"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "DUP2"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "SLOAD"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "DUP2"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "MUL"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "NOT"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "AND"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "SWAP1"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "DUP4"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "ISZERO"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "ISZERO"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "MUL"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "OR"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "SWAP1"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "SSTORE"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "POP"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "POP"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "POP"
										},
										{
											"begin": 2858,
											"end": 3234,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "JUMPDEST"
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SLOAD"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "EQ"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPI"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A204C4F434B45440000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "REVERT"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPDEST"
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1548,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "DUP2"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SSTORE"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "SWAP1"
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "SLOAD"
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "SWAP1"
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "EXP"
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "SWAP1"
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "DIV"
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "AND"
										},
										{
											"begin": 3468,
											"end": 3501,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3468,
											"end": 3501,
											"name": "AND"
										},
										{
											"begin": 3468,
											"end": 3501,
											"name": "PUSH",
											"value": "4C217715"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "MLOAD"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "DUP2"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "AND"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "SHL"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "DUP2"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "MSTORE"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "ADD"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "MLOAD"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "DUP1"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "DUP4"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "SUB"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "DUP2"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "DUP7"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "DUP1"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "GAS"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "STATICCALL"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "MLOAD"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "DUP2"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "ADD"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "SWAP1"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "DUP1"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "DUP1"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "MLOAD"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "SWAP1"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "ADD"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "SWAP1"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "SWAP3"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "SWAP2"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "SWAP1"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "POP"
										},
										{
											"begin": 3468,
											"end": 3503,
											"name": "POP"
										},
										{
											"begin": 3454,
											"end": 3503,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3454,
											"end": 3503,
											"name": "AND"
										},
										{
											"begin": 3454,
											"end": 3464,
											"name": "CALLER"
										},
										{
											"begin": 3454,
											"end": 3503,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3454,
											"end": 3503,
											"name": "AND"
										},
										{
											"begin": 3454,
											"end": 3503,
											"name": "EQ"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "JUMPI"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "MLOAD"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "DUP2"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "MSTORE"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "ADD"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "DUP1"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "DUP1"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "ADD"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "DUP3"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "DUP2"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "SUB"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "DUP3"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "MSTORE"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "PUSH",
											"value": "2C"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "DUP2"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "MSTORE"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "ADD"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "DUP1"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "PUSH data",
											"value": "F80FC17E443115161D9ED24AAF21C6E6102496443806D2822FE65BC11FC7A8D3"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "PUSH",
											"value": "2C"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "SWAP2"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "CODECOPY"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "ADD"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "SWAP2"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "POP"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "POP"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "MLOAD"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "DUP1"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "SWAP2"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "SUB"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "SWAP1"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "REVERT"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 3446,
											"end": 3552,
											"name": "JUMPDEST"
										},
										{
											"begin": 655,
											"end": 659,
											"name": "PUSH",
											"value": "7D0"
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "DUP3"
										},
										{
											"begin": 3566,
											"end": 3604,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3566,
											"end": 3604,
											"name": "AND"
										},
										{
											"begin": 3566,
											"end": 3604,
											"name": "GT"
										},
										{
											"begin": 3566,
											"end": 3604,
											"name": "ISZERO"
										},
										{
											"begin": 3566,
											"end": 3646,
											"name": "DUP1"
										},
										{
											"begin": 3566,
											"end": 3646,
											"name": "ISZERO"
										},
										{
											"begin": 3566,
											"end": 3646,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 3566,
											"end": 3646,
											"name": "JUMPI"
										},
										{
											"begin": 3566,
											"end": 3646,
											"name": "POP"
										},
										{
											"begin": 655,
											"end": 659,
											"name": "PUSH",
											"value": "7D0"
										},
										{
											"begin": 3608,
											"end": 3627,
											"name": "DUP2"
										},
										{
											"begin": 3608,
											"end": 3646,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3608,
											"end": 3646,
											"name": "AND"
										},
										{
											"begin": 3608,
											"end": 3646,
											"name": "GT"
										},
										{
											"begin": 3608,
											"end": 3646,
											"name": "ISZERO"
										},
										{
											"begin": 3566,
											"end": 3646,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 3566,
											"end": 3646,
											"name": "JUMPDEST"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "JUMPI"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "MLOAD"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "DUP2"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "MSTORE"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "ADD"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "DUP1"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "DUP1"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "ADD"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "DUP3"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "DUP2"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "SUB"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "DUP3"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "MSTORE"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "DUP2"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "MSTORE"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "ADD"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "DUP1"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "PUSH data",
											"value": "2BE17C6303E0C10DA5FF1EB4B266C473AE5FD600C60B6F9FACCEE86002AD7D5E"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "SWAP2"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "CODECOPY"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "ADD"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "SWAP2"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "POP"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "POP"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "MLOAD"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "DUP1"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "SWAP2"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "SUB"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "SWAP1"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "REVERT"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 3558,
											"end": 3703,
											"name": "JUMPDEST"
										},
										{
											"begin": 3739,
											"end": 3740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "DUP3"
										},
										{
											"begin": 3717,
											"end": 3740,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3717,
											"end": 3740,
											"name": "AND"
										},
										{
											"begin": 3717,
											"end": 3740,
											"name": "GT"
										},
										{
											"begin": 3717,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3717,
											"end": 3767,
											"name": "ISZERO"
										},
										{
											"begin": 3717,
											"end": 3767,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 3717,
											"end": 3767,
											"name": "JUMPI"
										},
										{
											"begin": 3717,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3766,
											"end": 3767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3763,
											"name": "DUP2"
										},
										{
											"begin": 3744,
											"end": 3767,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3744,
											"end": 3767,
											"name": "AND"
										},
										{
											"begin": 3744,
											"end": 3767,
											"name": "GT"
										},
										{
											"begin": 3717,
											"end": 3767,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 3717,
											"end": 3767,
											"name": "JUMPDEST"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "JUMPI"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "MLOAD"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "DUP2"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "MSTORE"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "ADD"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "DUP1"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "DUP1"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "ADD"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "DUP3"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "DUP2"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "SUB"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "DUP3"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "MSTORE"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "DUP2"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "MSTORE"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "ADD"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "DUP1"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "PUSH data",
											"value": "D1BF768DB97CBB37158F2706C5B1B11EF80704D9D42C88986D88C55D10379282"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "SWAP2"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "CODECOPY"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "ADD"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "SWAP2"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "POP"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "POP"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "MLOAD"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "DUP1"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "SWAP2"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "SUB"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "SWAP1"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "REVERT"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 3709,
											"end": 3824,
											"name": "JUMPDEST"
										},
										{
											"begin": 3849,
											"end": 3868,
											"name": "DUP2"
										},
										{
											"begin": 3830,
											"end": 3846,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3830,
											"end": 3846,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "EXP"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "DUP2"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "SLOAD"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "DUP2"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "MUL"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "NOT"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "AND"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "SWAP1"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "DUP4"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "AND"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "MUL"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "OR"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "SWAP1"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "SSTORE"
										},
										{
											"begin": 3830,
											"end": 3868,
											"name": "POP"
										},
										{
											"begin": 3893,
											"end": 3912,
											"name": "DUP1"
										},
										{
											"begin": 3874,
											"end": 3890,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3874,
											"end": 3890,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "EXP"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "DUP2"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "SLOAD"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "DUP2"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "MUL"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "NOT"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "AND"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "SWAP1"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "DUP4"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "AND"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "MUL"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "OR"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "SWAP1"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "SSTORE"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "POP"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "PUSH",
											"value": "A4877B8ECB5A00BA277E4BCEEEB187A669E7113649774DFBEA05C259CE27F17B"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3"
										},
										{
											"begin": 3962,
											"end": 3981,
											"name": "DUP3"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "MLOAD"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "DUP1"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "DUP4"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "AND"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "AND"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "DUP2"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "MSTORE"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "ADD"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "DUP3"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "AND"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "AND"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "DUP2"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "MSTORE"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "ADD"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "SWAP3"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "POP"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "POP"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "POP"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "MLOAD"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "DUP1"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "SWAP2"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "SUB"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "SWAP1"
										},
										{
											"begin": 3923,
											"end": 3982,
											"name": "LOG1"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1565,
											"end": 1573,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "DUP2"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SWAP1"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SSTORE"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3987,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "JUMPDEST"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "SLOAD"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "EXP"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "DIV"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "AND"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "DUP2"
										},
										{
											"begin": 860,
											"end": 896,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "JUMPDEST"
										},
										{
											"begin": 655,
											"end": 659,
											"name": "PUSH",
											"value": "7D0"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "DUP2"
										},
										{
											"begin": 616,
											"end": 659,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "JUMPDEST"
										},
										{
											"begin": 6347,
											"end": 6361,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SLOAD"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "EQ"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPI"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A204C4F434B45440000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "REVERT"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPDEST"
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1548,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "DUP2"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SSTORE"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 6370,
											"end": 6387,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6389,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 6412,
											"end": 6425,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 6412,
											"end": 6423,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 6412,
											"end": 6425,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6412,
											"end": 6425,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 6412,
											"end": 6425,
											"name": "JUMPDEST"
										},
										{
											"begin": 6369,
											"end": 6425,
											"name": "POP"
										},
										{
											"begin": 6369,
											"end": 6425,
											"name": "POP"
										},
										{
											"begin": 6369,
											"end": 6425,
											"name": "SWAP2"
										},
										{
											"begin": 6369,
											"end": 6425,
											"name": "POP"
										},
										{
											"begin": 6369,
											"end": 6425,
											"name": "SWAP2"
										},
										{
											"begin": 6369,
											"end": 6425,
											"name": "POP"
										},
										{
											"begin": 6450,
											"end": 6463,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "SWAP1"
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "SLOAD"
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "SWAP1"
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "EXP"
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "SWAP1"
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "DIV"
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "AND"
										},
										{
											"begin": 6466,
											"end": 6490,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6466,
											"end": 6490,
											"name": "AND"
										},
										{
											"begin": 6466,
											"end": 6490,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6499,
											"end": 6503,
											"name": "ADDRESS"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "MLOAD"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "DUP3"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "AND"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "SHL"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "DUP2"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "MSTORE"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "ADD"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "DUP1"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "DUP3"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "AND"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "AND"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "DUP2"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "MSTORE"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "ADD"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "SWAP2"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "POP"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "POP"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "MLOAD"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "DUP1"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "DUP4"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "SUB"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "DUP2"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "DUP7"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "DUP1"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "POP"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "GAS"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "STATICCALL"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "POP"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "POP"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "POP"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "POP"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "MLOAD"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "DUP2"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "ADD"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "SWAP1"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "DUP1"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "DUP1"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "MLOAD"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "SWAP1"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "ADD"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "SWAP1"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "SWAP3"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "SWAP2"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "SWAP1"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "POP"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "POP"
										},
										{
											"begin": 6466,
											"end": 6505,
											"name": "POP"
										},
										{
											"begin": 6450,
											"end": 6505,
											"name": "SWAP1"
										},
										{
											"begin": 6450,
											"end": 6505,
											"name": "POP"
										},
										{
											"begin": 6511,
											"end": 6524,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6534,
											"end": 6540,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6534,
											"end": 6540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6534,
											"end": 6540,
											"name": "SWAP1"
										},
										{
											"begin": 6534,
											"end": 6540,
											"name": "SLOAD"
										},
										{
											"begin": 6534,
											"end": 6540,
											"name": "SWAP1"
										},
										{
											"begin": 6534,
											"end": 6540,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6534,
											"end": 6540,
											"name": "EXP"
										},
										{
											"begin": 6534,
											"end": 6540,
											"name": "SWAP1"
										},
										{
											"begin": 6534,
											"end": 6540,
											"name": "DIV"
										},
										{
											"begin": 6534,
											"end": 6540,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6534,
											"end": 6540,
											"name": "AND"
										},
										{
											"begin": 6527,
											"end": 6551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6527,
											"end": 6551,
											"name": "AND"
										},
										{
											"begin": 6527,
											"end": 6551,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6560,
											"end": 6564,
											"name": "ADDRESS"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "MLOAD"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "DUP3"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "AND"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "SHL"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "DUP2"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "MSTORE"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "ADD"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "DUP1"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "DUP3"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "AND"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "AND"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "DUP2"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "MSTORE"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "ADD"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "SWAP2"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "POP"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "POP"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "MLOAD"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "DUP1"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "DUP4"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "SUB"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "DUP2"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "DUP7"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "DUP1"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "POP"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "GAS"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "STATICCALL"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "POP"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "POP"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "POP"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "POP"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "MLOAD"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "DUP2"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "ADD"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "SWAP1"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "DUP1"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "DUP1"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "MLOAD"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "SWAP1"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "ADD"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "SWAP1"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "SWAP3"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "SWAP2"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "SWAP1"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "POP"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "POP"
										},
										{
											"begin": 6527,
											"end": 6566,
											"name": "POP"
										},
										{
											"begin": 6511,
											"end": 6566,
											"name": "SWAP1"
										},
										{
											"begin": 6511,
											"end": 6566,
											"name": "POP"
										},
										{
											"begin": 6572,
											"end": 6584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 6600,
											"end": 6609,
											"name": "DUP6"
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "AND"
										},
										{
											"begin": 6587,
											"end": 6595,
											"name": "DUP5"
										},
										{
											"begin": 6587,
											"end": 6599,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 6587,
											"end": 6599,
											"name": "SWAP1"
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "SWAP2"
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "SWAP1"
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "AND"
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 6587,
											"end": 6610,
											"name": "JUMPDEST"
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "SWAP1"
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "POP"
										},
										{
											"begin": 6616,
											"end": 6628,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 6654,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 6644,
											"end": 6653,
											"name": "DUP6"
										},
										{
											"begin": 6631,
											"end": 6654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6631,
											"end": 6654,
											"name": "AND"
										},
										{
											"begin": 6631,
											"end": 6639,
											"name": "DUP5"
										},
										{
											"begin": 6631,
											"end": 6643,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 6631,
											"end": 6643,
											"name": "SWAP1"
										},
										{
											"begin": 6631,
											"end": 6654,
											"name": "SWAP2"
										},
										{
											"begin": 6631,
											"end": 6654,
											"name": "SWAP1"
										},
										{
											"begin": 6631,
											"end": 6654,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6631,
											"end": 6654,
											"name": "AND"
										},
										{
											"begin": 6631,
											"end": 6654,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6631,
											"end": 6654,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 6631,
											"end": 6654,
											"name": "JUMPDEST"
										},
										{
											"begin": 6616,
											"end": 6654,
											"name": "SWAP1"
										},
										{
											"begin": 6616,
											"end": 6654,
											"name": "POP"
										},
										{
											"begin": 6661,
											"end": 6671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6674,
											"end": 6704,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 6683,
											"end": 6692,
											"name": "DUP8"
										},
										{
											"begin": 6694,
											"end": 6703,
											"name": "DUP8"
										},
										{
											"begin": 6674,
											"end": 6682,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 6674,
											"end": 6704,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6674,
											"end": 6704,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 6674,
											"end": 6704,
											"name": "JUMPDEST"
										},
										{
											"begin": 6661,
											"end": 6704,
											"name": "SWAP1"
										},
										{
											"begin": 6661,
											"end": 6704,
											"name": "POP"
										},
										{
											"begin": 6710,
											"end": 6727,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6730,
											"end": 6741,
											"name": "DUP1"
										},
										{
											"begin": 6730,
											"end": 6741,
											"name": "SLOAD"
										},
										{
											"begin": 6710,
											"end": 6741,
											"name": "SWAP1"
										},
										{
											"begin": 6710,
											"end": 6741,
											"name": "POP"
										},
										{
											"begin": 6849,
											"end": 6850,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6845,
											"name": "DUP2"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "EQ"
										},
										{
											"begin": 6829,
											"end": 7157,
											"name": "ISZERO"
										},
										{
											"begin": 6829,
											"end": 7157,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 6829,
											"end": 7157,
											"name": "JUMPI"
										},
										{
											"begin": 6872,
											"end": 6926,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 358,
											"end": 365,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 6872,
											"end": 6903,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 6894,
											"end": 6901,
											"name": "DUP7"
										},
										{
											"begin": 6882,
											"end": 6889,
											"name": "DUP9"
										},
										{
											"begin": 6882,
											"end": 6893,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 6882,
											"end": 6893,
											"name": "SWAP1"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "SWAP2"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "SWAP1"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "AND"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "JUMPDEST"
										},
										{
											"begin": 6872,
											"end": 6881,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 6872,
											"end": 6903,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6872,
											"end": 6903,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 6872,
											"end": 6903,
											"name": "JUMPDEST"
										},
										{
											"begin": 6872,
											"end": 6907,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 6872,
											"end": 6907,
											"name": "SWAP1"
										},
										{
											"begin": 6872,
											"end": 6926,
											"name": "SWAP2"
										},
										{
											"begin": 6872,
											"end": 6926,
											"name": "SWAP1"
										},
										{
											"begin": 6872,
											"end": 6926,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6872,
											"end": 6926,
											"name": "AND"
										},
										{
											"begin": 6872,
											"end": 6926,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6872,
											"end": 6926,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 6872,
											"end": 6926,
											"name": "JUMPDEST"
										},
										{
											"begin": 6860,
											"end": 6926,
											"name": "SWAP9"
										},
										{
											"begin": 6860,
											"end": 6926,
											"name": "POP"
										},
										{
											"begin": 6934,
											"end": 6970,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 6948,
											"end": 6949,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 358,
											"end": 365,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 6934,
											"end": 6939,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 6934,
											"end": 6970,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6934,
											"end": 6970,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 6934,
											"end": 6970,
											"name": "JUMPDEST"
										},
										{
											"begin": 6829,
											"end": 7157,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 6829,
											"end": 7157,
											"name": "JUMP"
										},
										{
											"begin": 6829,
											"end": 7157,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 6829,
											"end": 7157,
											"name": "JUMPDEST"
										},
										{
											"begin": 7064,
											"end": 7150,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 7101,
											"end": 7110,
											"name": "DUP9"
										},
										{
											"begin": 7073,
											"end": 7110,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7073,
											"end": 7110,
											"name": "AND"
										},
										{
											"begin": 7073,
											"end": 7098,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 7085,
											"end": 7097,
											"name": "DUP4"
										},
										{
											"begin": 7073,
											"end": 7080,
											"name": "DUP8"
										},
										{
											"begin": 7073,
											"end": 7084,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 7073,
											"end": 7084,
											"name": "SWAP1"
										},
										{
											"begin": 7073,
											"end": 7098,
											"name": "SWAP2"
										},
										{
											"begin": 7073,
											"end": 7098,
											"name": "SWAP1"
										},
										{
											"begin": 7073,
											"end": 7098,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7073,
											"end": 7098,
											"name": "AND"
										},
										{
											"begin": 7073,
											"end": 7098,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7073,
											"end": 7098,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 7073,
											"end": 7098,
											"name": "JUMPDEST"
										},
										{
											"begin": 7073,
											"end": 7110,
											"name": "DUP2"
										},
										{
											"begin": 7073,
											"end": 7110,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 7073,
											"end": 7110,
											"name": "JUMPI"
										},
										{
											"begin": 7073,
											"end": 7110,
											"name": "INVALID"
										},
										{
											"begin": 7073,
											"end": 7110,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 7073,
											"end": 7110,
											"name": "JUMPDEST"
										},
										{
											"begin": 7073,
											"end": 7110,
											"name": "DIV"
										},
										{
											"begin": 7140,
											"end": 7149,
											"name": "DUP9"
										},
										{
											"begin": 7112,
											"end": 7149,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7112,
											"end": 7149,
											"name": "AND"
										},
										{
											"begin": 7112,
											"end": 7137,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 7124,
											"end": 7136,
											"name": "DUP5"
										},
										{
											"begin": 7112,
											"end": 7119,
											"name": "DUP8"
										},
										{
											"begin": 7112,
											"end": 7123,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 7112,
											"end": 7123,
											"name": "SWAP1"
										},
										{
											"begin": 7112,
											"end": 7137,
											"name": "SWAP2"
										},
										{
											"begin": 7112,
											"end": 7137,
											"name": "SWAP1"
										},
										{
											"begin": 7112,
											"end": 7137,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7112,
											"end": 7137,
											"name": "AND"
										},
										{
											"begin": 7112,
											"end": 7137,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7112,
											"end": 7137,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 7112,
											"end": 7137,
											"name": "JUMPDEST"
										},
										{
											"begin": 7112,
											"end": 7149,
											"name": "DUP2"
										},
										{
											"begin": 7112,
											"end": 7149,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 7112,
											"end": 7149,
											"name": "JUMPI"
										},
										{
											"begin": 7112,
											"end": 7149,
											"name": "INVALID"
										},
										{
											"begin": 7112,
											"end": 7149,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 7112,
											"end": 7149,
											"name": "JUMPDEST"
										},
										{
											"begin": 7112,
											"end": 7149,
											"name": "DIV"
										},
										{
											"begin": 7064,
											"end": 7072,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 7064,
											"end": 7150,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7064,
											"end": 7150,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 7064,
											"end": 7150,
											"name": "JUMPDEST"
										},
										{
											"begin": 7052,
											"end": 7150,
											"name": "SWAP9"
										},
										{
											"begin": 7052,
											"end": 7150,
											"name": "POP"
										},
										{
											"begin": 6829,
											"end": 7157,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 6829,
											"end": 7157,
											"name": "JUMPDEST"
										},
										{
											"begin": 7182,
											"end": 7183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7170,
											"end": 7179,
											"name": "DUP10"
										},
										{
											"begin": 7170,
											"end": 7183,
											"name": "GT"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "JUMPI"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "MLOAD"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "DUP2"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "MSTORE"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "ADD"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "DUP1"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "DUP1"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "ADD"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "DUP3"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "DUP2"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "SUB"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "DUP3"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "MSTORE"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "PUSH",
											"value": "2C"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "DUP2"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "MSTORE"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "ADD"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "DUP1"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "PUSH data",
											"value": "8AB36B58F19F5658E716652A965572C61EC94CA2B0078CC5663963339A0EF78F"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "PUSH",
											"value": "2C"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "SWAP2"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "CODECOPY"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "ADD"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "SWAP2"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "POP"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "POP"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "MLOAD"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "DUP1"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "SWAP2"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "SUB"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "SWAP1"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "REVERT"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 7162,
											"end": 7232,
											"name": "JUMPDEST"
										},
										{
											"begin": 7238,
											"end": 7258,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 7244,
											"end": 7246,
											"name": "DUP11"
										},
										{
											"begin": 7248,
											"end": 7257,
											"name": "DUP11"
										},
										{
											"begin": 7238,
											"end": 7243,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 7238,
											"end": 7258,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7238,
											"end": 7258,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 7238,
											"end": 7258,
											"name": "JUMPDEST"
										},
										{
											"begin": 7265,
											"end": 7292,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 7273,
											"end": 7281,
											"name": "DUP7"
										},
										{
											"begin": 7283,
											"end": 7291,
											"name": "DUP7"
										},
										{
											"begin": 7265,
											"end": 7272,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 7265,
											"end": 7292,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7265,
											"end": 7292,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 7265,
											"end": 7292,
											"name": "JUMPDEST"
										},
										{
											"begin": 7302,
											"end": 7307,
											"name": "DUP2"
										},
										{
											"begin": 7298,
											"end": 7351,
											"name": "ISZERO"
										},
										{
											"begin": 7298,
											"end": 7351,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 7298,
											"end": 7351,
											"name": "JUMPI"
										},
										{
											"begin": 7317,
											"end": 7351,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 7325,
											"end": 7333,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7325,
											"end": 7333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7325,
											"end": 7333,
											"name": "SWAP1"
										},
										{
											"begin": 7325,
											"end": 7333,
											"name": "SLOAD"
										},
										{
											"begin": 7325,
											"end": 7333,
											"name": "SWAP1"
										},
										{
											"begin": 7325,
											"end": 7333,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7325,
											"end": 7333,
											"name": "EXP"
										},
										{
											"begin": 7325,
											"end": 7333,
											"name": "SWAP1"
										},
										{
											"begin": 7325,
											"end": 7333,
											"name": "DIV"
										},
										{
											"begin": 7325,
											"end": 7333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7325,
											"end": 7333,
											"name": "AND"
										},
										{
											"begin": 7320,
											"end": 7334,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7320,
											"end": 7334,
											"name": "AND"
										},
										{
											"begin": 7341,
											"end": 7349,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7341,
											"end": 7349,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 7341,
											"end": 7349,
											"name": "SWAP1"
										},
										{
											"begin": 7341,
											"end": 7349,
											"name": "SLOAD"
										},
										{
											"begin": 7341,
											"end": 7349,
											"name": "SWAP1"
										},
										{
											"begin": 7341,
											"end": 7349,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7341,
											"end": 7349,
											"name": "EXP"
										},
										{
											"begin": 7341,
											"end": 7349,
											"name": "SWAP1"
										},
										{
											"begin": 7341,
											"end": 7349,
											"name": "DIV"
										},
										{
											"begin": 7341,
											"end": 7349,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7341,
											"end": 7349,
											"name": "AND"
										},
										{
											"begin": 7336,
											"end": 7350,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7336,
											"end": 7350,
											"name": "AND"
										},
										{
											"begin": 7317,
											"end": 7319,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 7317,
											"end": 7351,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7317,
											"end": 7351,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 7317,
											"end": 7351,
											"name": "JUMPDEST"
										},
										{
											"begin": 7309,
											"end": 7314,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 7309,
											"end": 7351,
											"name": "DUP2"
										},
										{
											"begin": 7309,
											"end": 7351,
											"name": "SWAP1"
										},
										{
											"begin": 7309,
											"end": 7351,
											"name": "SSTORE"
										},
										{
											"begin": 7309,
											"end": 7351,
											"name": "POP"
										},
										{
											"begin": 7298,
											"end": 7351,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 7298,
											"end": 7351,
											"name": "JUMPDEST"
										},
										{
											"begin": 7411,
											"end": 7421,
											"name": "CALLER"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "AND"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "PUSH",
											"value": "4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F"
										},
										{
											"begin": 7423,
											"end": 7430,
											"name": "DUP6"
										},
										{
											"begin": 7432,
											"end": 7439,
											"name": "DUP6"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "MLOAD"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "DUP1"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "DUP4"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "DUP2"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "MSTORE"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "ADD"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "DUP3"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "DUP2"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "MSTORE"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "ADD"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "SWAP3"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "POP"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "POP"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "POP"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "MLOAD"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "DUP1"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "SWAP2"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "SUB"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "SWAP1"
										},
										{
											"begin": 7406,
											"end": 7440,
											"name": "LOG2"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1565,
											"end": 1573,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "DUP2"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SWAP1"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SSTORE"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "POP"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "SWAP2"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "SWAP1"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "POP"
										},
										{
											"begin": 6298,
											"end": 7445,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "JUMPDEST"
										},
										{
											"begin": 9747,
											"end": 9775,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 9747,
											"end": 9775,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 9747,
											"end": 9775,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9747,
											"end": 9775,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 9747,
											"end": 9775,
											"name": "JUMPDEST"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "MLOAD"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "DUP1"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "ADD"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "MSTORE"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "DUP1"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "SWAP1"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "SLOAD"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "SWAP1"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "EXP"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "SWAP1"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DIV"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "AND"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "AND"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "DUP2"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "MSTORE"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "ADD"
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "SWAP1"
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "SLOAD"
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "SWAP1"
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "EXP"
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "SWAP1"
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "DIV"
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "AND"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "AND"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "DUP2"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "MSTORE"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "ADD"
										},
										{
											"begin": 9853,
											"end": 9863,
											"name": "DUP9"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "DUP2"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "MSTORE"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "ADD"
										},
										{
											"begin": 9883,
											"end": 9893,
											"name": "DUP8"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "DUP2"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "MSTORE"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "ADD"
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "DUP2"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "MSTORE"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "ADD"
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "DUP2"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "MSTORE"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 9955,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "DUP2"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "MSTORE"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "ADD"
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "DUP2"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "MSTORE"
										},
										{
											"begin": 9778,
											"end": 9986,
											"name": "POP"
										},
										{
											"begin": 9747,
											"end": 9986,
											"name": "SWAP1"
										},
										{
											"begin": 9747,
											"end": 9986,
											"name": "POP"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 9998,
											"end": 10008,
											"name": "DUP2"
										},
										{
											"begin": 10010,
											"end": 10012,
											"name": "DUP7"
										},
										{
											"begin": 10014,
											"end": 10018,
											"name": "DUP7"
										},
										{
											"begin": 10014,
											"end": 10018,
											"name": "DUP7"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "DUP1"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "DUP1"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "ADD"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "DUP1"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "SWAP2"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "DIV"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "MUL"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "ADD"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "MLOAD"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "SWAP1"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "DUP2"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "ADD"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "MSTORE"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "DUP1"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "SWAP4"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "SWAP3"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "SWAP2"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "SWAP1"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "DUP2"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "DUP2"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "MSTORE"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "ADD"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "DUP4"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "POP"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "POP"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "POP"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "POP"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "POP"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "POP"
										},
										{
											"begin": 10020,
											"end": 10028,
											"name": "DUP6"
										},
										{
											"begin": 9992,
											"end": 9997,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 9992,
											"end": 10029,
											"name": "JUMPDEST"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "POP"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "POP"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "POP"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "POP"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "POP"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "POP"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "POP"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "JUMPDEST"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "MSTORE"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "MSTORE"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "KECCAK256"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP2"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "POP"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SWAP1"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "POP"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "SLOAD"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "DUP2"
										},
										{
											"begin": 351,
											"end": 392,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "SLOAD"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1181,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "MSTORE"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "MSTORE"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "KECCAK256"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP2"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SWAP1"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "SLOAD"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "DUP2"
										},
										{
											"begin": 721,
											"end": 759,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "JUMPDEST"
										},
										{
											"begin": 7599,
											"end": 7611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7625,
											"name": "DUP1"
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SLOAD"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "EQ"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPI"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A204C4F434B45440000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "REVERT"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPDEST"
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1548,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "DUP2"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SSTORE"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 7634,
											"end": 7651,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7653,
											"end": 7670,
											"name": "DUP1"
										},
										{
											"begin": 7676,
											"end": 7689,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 7676,
											"end": 7687,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 7676,
											"end": 7689,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7676,
											"end": 7689,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 7676,
											"end": 7689,
											"name": "JUMPDEST"
										},
										{
											"begin": 7633,
											"end": 7689,
											"name": "POP"
										},
										{
											"begin": 7633,
											"end": 7689,
											"name": "POP"
										},
										{
											"begin": 7633,
											"end": 7689,
											"name": "SWAP2"
										},
										{
											"begin": 7633,
											"end": 7689,
											"name": "POP"
										},
										{
											"begin": 7633,
											"end": 7689,
											"name": "SWAP2"
										},
										{
											"begin": 7633,
											"end": 7689,
											"name": "POP"
										},
										{
											"begin": 7710,
											"end": 7725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "SWAP1"
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "SLOAD"
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "SWAP1"
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "EXP"
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "SWAP1"
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "DIV"
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "AND"
										},
										{
											"begin": 7710,
											"end": 7734,
											"name": "SWAP1"
										},
										{
											"begin": 7710,
											"end": 7734,
											"name": "POP"
										},
										{
											"begin": 7755,
											"end": 7770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "SWAP1"
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "SLOAD"
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "SWAP1"
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "EXP"
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "SWAP1"
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "DIV"
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "AND"
										},
										{
											"begin": 7755,
											"end": 7779,
											"name": "SWAP1"
										},
										{
											"begin": 7755,
											"end": 7779,
											"name": "POP"
										},
										{
											"begin": 7800,
											"end": 7813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 7830,
											"name": "DUP3"
										},
										{
											"begin": 7816,
											"end": 7841,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7816,
											"end": 7841,
											"name": "AND"
										},
										{
											"begin": 7816,
											"end": 7841,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 7850,
											"end": 7854,
											"name": "ADDRESS"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "MLOAD"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "DUP3"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "AND"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "SHL"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "DUP2"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "MSTORE"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "ADD"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "DUP1"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "DUP3"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "AND"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "AND"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "DUP2"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "MSTORE"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "ADD"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "SWAP2"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "POP"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "POP"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "MLOAD"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "DUP1"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "DUP4"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "SUB"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "DUP2"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "DUP7"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "DUP1"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "POP"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "GAS"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "STATICCALL"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "POP"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "POP"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "POP"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "POP"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "MLOAD"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "DUP2"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "ADD"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "SWAP1"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "DUP1"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "DUP1"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "MLOAD"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "SWAP1"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "ADD"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "SWAP1"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "SWAP3"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "SWAP2"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "SWAP1"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "POP"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "POP"
										},
										{
											"begin": 7816,
											"end": 7856,
											"name": "POP"
										},
										{
											"begin": 7800,
											"end": 7856,
											"name": "SWAP1"
										},
										{
											"begin": 7800,
											"end": 7856,
											"name": "POP"
										},
										{
											"begin": 7862,
											"end": 7875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7885,
											"end": 7892,
											"name": "DUP3"
										},
										{
											"begin": 7878,
											"end": 7903,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7878,
											"end": 7903,
											"name": "AND"
										},
										{
											"begin": 7878,
											"end": 7903,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 7912,
											"end": 7916,
											"name": "ADDRESS"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "MLOAD"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "DUP3"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "AND"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "SHL"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "DUP2"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "MSTORE"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "ADD"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "DUP1"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "DUP3"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "AND"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "AND"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "DUP2"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "MSTORE"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "ADD"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "SWAP2"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "POP"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "POP"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "MLOAD"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "DUP1"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "DUP4"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "SUB"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "DUP2"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "DUP7"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "DUP1"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "POP"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "GAS"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "STATICCALL"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "POP"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "POP"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "POP"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "POP"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "MLOAD"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "DUP2"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "ADD"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "SWAP1"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "DUP1"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "DUP1"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "MLOAD"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "SWAP1"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "ADD"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "SWAP1"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "SWAP3"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "SWAP2"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "SWAP1"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "POP"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "POP"
										},
										{
											"begin": 7878,
											"end": 7918,
											"name": "POP"
										},
										{
											"begin": 7862,
											"end": 7918,
											"name": "SWAP1"
										},
										{
											"begin": 7862,
											"end": 7918,
											"name": "POP"
										},
										{
											"begin": 7924,
											"end": 7938,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7950,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7959,
											"end": 7963,
											"name": "ADDRESS"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "AND"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "AND"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "DUP2"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "MSTORE"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "ADD"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "SWAP1"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "DUP2"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "MSTORE"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "ADD"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "KECCAK256"
										},
										{
											"begin": 7941,
											"end": 7965,
											"name": "SLOAD"
										},
										{
											"begin": 7924,
											"end": 7965,
											"name": "SWAP1"
										},
										{
											"begin": 7924,
											"end": 7965,
											"name": "POP"
										},
										{
											"begin": 7972,
											"end": 7982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7985,
											"end": 8015,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 7994,
											"end": 8003,
											"name": "DUP9"
										},
										{
											"begin": 8005,
											"end": 8014,
											"name": "DUP9"
										},
										{
											"begin": 7985,
											"end": 7993,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 7985,
											"end": 8015,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7985,
											"end": 8015,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 7985,
											"end": 8015,
											"name": "JUMPDEST"
										},
										{
											"begin": 7972,
											"end": 8015,
											"name": "SWAP1"
										},
										{
											"begin": 7972,
											"end": 8015,
											"name": "POP"
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8041,
											"end": 8052,
											"name": "DUP1"
										},
										{
											"begin": 8041,
											"end": 8052,
											"name": "SLOAD"
										},
										{
											"begin": 8021,
											"end": 8052,
											"name": "SWAP1"
										},
										{
											"begin": 8021,
											"end": 8052,
											"name": "POP"
										},
										{
											"begin": 8172,
											"end": 8184,
											"name": "DUP1"
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 8160,
											"end": 8168,
											"name": "DUP7"
										},
										{
											"begin": 8146,
											"end": 8155,
											"name": "DUP6"
										},
										{
											"begin": 8146,
											"end": 8159,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 8146,
											"end": 8159,
											"name": "SWAP1"
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "SWAP2"
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "SWAP1"
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "AND"
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "JUMPDEST"
										},
										{
											"begin": 8146,
											"end": 8184,
											"name": "DUP2"
										},
										{
											"begin": 8146,
											"end": 8184,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 8146,
											"end": 8184,
											"name": "JUMPI"
										},
										{
											"begin": 8146,
											"end": 8184,
											"name": "INVALID"
										},
										{
											"begin": 8146,
											"end": 8184,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 8146,
											"end": 8184,
											"name": "JUMPDEST"
										},
										{
											"begin": 8146,
											"end": 8184,
											"name": "DIV"
										},
										{
											"begin": 8136,
											"end": 8184,
											"name": "SWAP11"
										},
										{
											"begin": 8136,
											"end": 8184,
											"name": "POP"
										},
										{
											"begin": 8274,
											"end": 8286,
											"name": "DUP1"
										},
										{
											"begin": 8248,
											"end": 8271,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 8262,
											"end": 8270,
											"name": "DUP6"
										},
										{
											"begin": 8248,
											"end": 8257,
											"name": "DUP6"
										},
										{
											"begin": 8248,
											"end": 8261,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 8248,
											"end": 8261,
											"name": "SWAP1"
										},
										{
											"begin": 8248,
											"end": 8271,
											"name": "SWAP2"
										},
										{
											"begin": 8248,
											"end": 8271,
											"name": "SWAP1"
										},
										{
											"begin": 8248,
											"end": 8271,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8248,
											"end": 8271,
											"name": "AND"
										},
										{
											"begin": 8248,
											"end": 8271,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8248,
											"end": 8271,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 8248,
											"end": 8271,
											"name": "JUMPDEST"
										},
										{
											"begin": 8248,
											"end": 8286,
											"name": "DUP2"
										},
										{
											"begin": 8248,
											"end": 8286,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 8248,
											"end": 8286,
											"name": "JUMPI"
										},
										{
											"begin": 8248,
											"end": 8286,
											"name": "INVALID"
										},
										{
											"begin": 8248,
											"end": 8286,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 8248,
											"end": 8286,
											"name": "JUMPDEST"
										},
										{
											"begin": 8248,
											"end": 8286,
											"name": "DIV"
										},
										{
											"begin": 8238,
											"end": 8286,
											"name": "SWAP10"
										},
										{
											"begin": 8238,
											"end": 8286,
											"name": "POP"
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8348,
											"end": 8355,
											"name": "DUP12"
										},
										{
											"begin": 8348,
											"end": 8359,
											"name": "GT"
										},
										{
											"begin": 8348,
											"end": 8374,
											"name": "DUP1"
										},
										{
											"begin": 8348,
											"end": 8374,
											"name": "ISZERO"
										},
										{
											"begin": 8348,
											"end": 8374,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 8348,
											"end": 8374,
											"name": "JUMPI"
										},
										{
											"begin": 8348,
											"end": 8374,
											"name": "POP"
										},
										{
											"begin": 8373,
											"end": 8374,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8363,
											"end": 8370,
											"name": "DUP11"
										},
										{
											"begin": 8363,
											"end": 8374,
											"name": "GT"
										},
										{
											"begin": 8348,
											"end": 8374,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 8348,
											"end": 8374,
											"name": "JUMPDEST"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "JUMPI"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "MLOAD"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "DUP2"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "MSTORE"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "ADD"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "DUP1"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "DUP1"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "ADD"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "DUP3"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "DUP2"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "SUB"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "DUP3"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "MSTORE"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "PUSH",
											"value": "2C"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "DUP2"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "MSTORE"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "ADD"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "DUP1"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "PUSH data",
											"value": "5C26FE7BAC5BD215670303820601AC49F0D4BAEB8F47FD314BBC05E382CA9E12"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "PUSH",
											"value": "2C"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "SWAP2"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "CODECOPY"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "ADD"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "SWAP2"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "POP"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "POP"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "MLOAD"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "DUP1"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "SWAP2"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "SUB"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "SWAP1"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "REVERT"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 8340,
											"end": 8423,
											"name": "JUMPDEST"
										},
										{
											"begin": 8429,
											"end": 8460,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 8443,
											"end": 8447,
											"name": "ADDRESS"
										},
										{
											"begin": 8450,
											"end": 8459,
											"name": "DUP5"
										},
										{
											"begin": 8429,
											"end": 8434,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 8429,
											"end": 8460,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8429,
											"end": 8460,
											"name": "tag",
											"value": "276"
										},
										{
											"begin": 8429,
											"end": 8460,
											"name": "JUMPDEST"
										},
										{
											"begin": 8466,
											"end": 8501,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 8480,
											"end": 8487,
											"name": "DUP8"
										},
										{
											"begin": 8489,
											"end": 8491,
											"name": "DUP14"
										},
										{
											"begin": 8493,
											"end": 8500,
											"name": "DUP14"
										},
										{
											"begin": 8466,
											"end": 8479,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 8466,
											"end": 8501,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8466,
											"end": 8501,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 8466,
											"end": 8501,
											"name": "JUMPDEST"
										},
										{
											"begin": 8507,
											"end": 8542,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 8521,
											"end": 8528,
											"name": "DUP7"
										},
										{
											"begin": 8530,
											"end": 8532,
											"name": "DUP14"
										},
										{
											"begin": 8534,
											"end": 8541,
											"name": "DUP13"
										},
										{
											"begin": 8507,
											"end": 8520,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 8507,
											"end": 8542,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8507,
											"end": 8542,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 8507,
											"end": 8542,
											"name": "JUMPDEST"
										},
										{
											"begin": 8566,
											"end": 8573,
											"name": "DUP7"
										},
										{
											"begin": 8559,
											"end": 8584,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8559,
											"end": 8584,
											"name": "AND"
										},
										{
											"begin": 8559,
											"end": 8584,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "ADDRESS"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "MLOAD"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "DUP3"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "AND"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "SHL"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "DUP2"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "MSTORE"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "ADD"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "DUP1"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "DUP3"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "AND"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "AND"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "DUP2"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "MSTORE"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "ADD"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "SWAP2"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "POP"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "POP"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "MLOAD"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "DUP1"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "DUP4"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "SUB"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "DUP2"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "DUP7"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "DUP1"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "281"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "POP"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "GAS"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "STATICCALL"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "POP"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "POP"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "POP"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "POP"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "MLOAD"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "DUP2"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "ADD"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "SWAP1"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "DUP1"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "DUP1"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "MLOAD"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "SWAP1"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "ADD"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "SWAP1"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "SWAP3"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "SWAP2"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "SWAP1"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "POP"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "POP"
										},
										{
											"begin": 8559,
											"end": 8599,
											"name": "POP"
										},
										{
											"begin": 8548,
											"end": 8599,
											"name": "SWAP5"
										},
										{
											"begin": 8548,
											"end": 8599,
											"name": "POP"
										},
										{
											"begin": 8623,
											"end": 8630,
											"name": "DUP6"
										},
										{
											"begin": 8616,
											"end": 8641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8616,
											"end": 8641,
											"name": "AND"
										},
										{
											"begin": 8616,
											"end": 8641,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8650,
											"end": 8654,
											"name": "ADDRESS"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "MLOAD"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "DUP3"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "AND"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "SHL"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "DUP2"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "MSTORE"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "ADD"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "DUP1"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "DUP3"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "AND"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "AND"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "DUP2"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "MSTORE"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "ADD"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "SWAP2"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "POP"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "POP"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "MLOAD"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "DUP1"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "DUP4"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "SUB"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "DUP2"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "DUP7"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "DUP1"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "POP"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "GAS"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "STATICCALL"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "285"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "POP"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "POP"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "POP"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "POP"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "MLOAD"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "DUP2"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "ADD"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "SWAP1"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "DUP1"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "DUP1"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "MLOAD"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "SWAP1"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "ADD"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "SWAP1"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "SWAP3"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "SWAP2"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "SWAP1"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "POP"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "POP"
										},
										{
											"begin": 8616,
											"end": 8656,
											"name": "POP"
										},
										{
											"begin": 8605,
											"end": 8656,
											"name": "SWAP4"
										},
										{
											"begin": 8605,
											"end": 8656,
											"name": "POP"
										},
										{
											"begin": 8663,
											"end": 8690,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 8671,
											"end": 8679,
											"name": "DUP6"
										},
										{
											"begin": 8681,
											"end": 8689,
											"name": "DUP6"
										},
										{
											"begin": 8663,
											"end": 8670,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 8663,
											"end": 8690,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8663,
											"end": 8690,
											"name": "tag",
											"value": "287"
										},
										{
											"begin": 8663,
											"end": 8690,
											"name": "JUMPDEST"
										},
										{
											"begin": 8700,
											"end": 8705,
											"name": "DUP2"
										},
										{
											"begin": 8696,
											"end": 8749,
											"name": "ISZERO"
										},
										{
											"begin": 8696,
											"end": 8749,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 8696,
											"end": 8749,
											"name": "JUMPI"
										},
										{
											"begin": 8715,
											"end": 8749,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 8723,
											"end": 8731,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 8723,
											"end": 8731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8731,
											"name": "SWAP1"
										},
										{
											"begin": 8723,
											"end": 8731,
											"name": "SLOAD"
										},
										{
											"begin": 8723,
											"end": 8731,
											"name": "SWAP1"
										},
										{
											"begin": 8723,
											"end": 8731,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8723,
											"end": 8731,
											"name": "EXP"
										},
										{
											"begin": 8723,
											"end": 8731,
											"name": "SWAP1"
										},
										{
											"begin": 8723,
											"end": 8731,
											"name": "DIV"
										},
										{
											"begin": 8723,
											"end": 8731,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8723,
											"end": 8731,
											"name": "AND"
										},
										{
											"begin": 8718,
											"end": 8732,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8718,
											"end": 8732,
											"name": "AND"
										},
										{
											"begin": 8739,
											"end": 8747,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 8739,
											"end": 8747,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 8739,
											"end": 8747,
											"name": "SWAP1"
										},
										{
											"begin": 8739,
											"end": 8747,
											"name": "SLOAD"
										},
										{
											"begin": 8739,
											"end": 8747,
											"name": "SWAP1"
										},
										{
											"begin": 8739,
											"end": 8747,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8739,
											"end": 8747,
											"name": "EXP"
										},
										{
											"begin": 8739,
											"end": 8747,
											"name": "SWAP1"
										},
										{
											"begin": 8739,
											"end": 8747,
											"name": "DIV"
										},
										{
											"begin": 8739,
											"end": 8747,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8739,
											"end": 8747,
											"name": "AND"
										},
										{
											"begin": 8734,
											"end": 8748,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8734,
											"end": 8748,
											"name": "AND"
										},
										{
											"begin": 8715,
											"end": 8717,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 8715,
											"end": 8749,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8715,
											"end": 8749,
											"name": "tag",
											"value": "289"
										},
										{
											"begin": 8715,
											"end": 8749,
											"name": "JUMPDEST"
										},
										{
											"begin": 8707,
											"end": 8712,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 8707,
											"end": 8749,
											"name": "DUP2"
										},
										{
											"begin": 8707,
											"end": 8749,
											"name": "SWAP1"
										},
										{
											"begin": 8707,
											"end": 8749,
											"name": "SSTORE"
										},
										{
											"begin": 8707,
											"end": 8749,
											"name": "POP"
										},
										{
											"begin": 8696,
											"end": 8749,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 8696,
											"end": 8749,
											"name": "JUMPDEST"
										},
										{
											"begin": 8835,
											"end": 8837,
											"name": "DUP12"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "AND"
										},
										{
											"begin": 8805,
											"end": 8815,
											"name": "CALLER"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "AND"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "PUSH",
											"value": "DCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496"
										},
										{
											"begin": 8817,
											"end": 8824,
											"name": "DUP14"
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP14"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "MLOAD"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "DUP1"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "DUP4"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "DUP2"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "MSTORE"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "ADD"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "DUP3"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "DUP2"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "MSTORE"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "ADD"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "SWAP3"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "POP"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "POP"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "POP"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "MLOAD"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "DUP1"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "SWAP2"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "SUB"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "SWAP1"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "LOG3"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1565,
											"end": 1573,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "DUP2"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SWAP1"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SSTORE"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "POP"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "SWAP2"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "POP"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "SWAP2"
										},
										{
											"begin": 7550,
											"end": 8843,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "PUSH",
											"value": "655A4B2D4C500000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 274,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "JUMPDEST"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "SLOAD"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "EXP"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "DIV"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "AND"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "DUP2"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "JUMPDEST"
										},
										{
											"begin": 2389,
											"end": 2393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2437,
											"name": "PUSH [tag]",
											"value": "291"
										},
										{
											"begin": 2415,
											"end": 2425,
											"name": "CALLER"
										},
										{
											"begin": 2427,
											"end": 2429,
											"name": "DUP5"
										},
										{
											"begin": 2431,
											"end": 2436,
											"name": "DUP5"
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 2405,
											"end": 2437,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2405,
											"end": 2437,
											"name": "tag",
											"value": "291"
										},
										{
											"begin": 2405,
											"end": 2437,
											"name": "JUMPDEST"
										},
										{
											"begin": 2454,
											"end": 2458,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2447,
											"end": 2458,
											"name": "SWAP1"
										},
										{
											"begin": 2447,
											"end": 2458,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP3"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "SWAP2"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2329,
											"end": 2465,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "JUMPDEST"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "SWAP1"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "SLOAD"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "SWAP1"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "EXP"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "SWAP1"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "DIV"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "AND"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "DUP2"
										},
										{
											"begin": 1339,
											"end": 1368,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "JUMPDEST"
										},
										{
											"begin": 358,
											"end": 365,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "DUP2"
										},
										{
											"begin": 317,
											"end": 365,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "JUMPDEST"
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SLOAD"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "EQ"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH [tag]",
											"value": "293"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPI"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A204C4F434B45440000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "REVERT"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "tag",
											"value": "293"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPDEST"
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1548,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "DUP2"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SSTORE"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 16705,
											"end": 16720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16723,
											"end": 16729,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16723,
											"end": 16729,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16723,
											"end": 16729,
											"name": "SWAP1"
										},
										{
											"begin": 16723,
											"end": 16729,
											"name": "SLOAD"
										},
										{
											"begin": 16723,
											"end": 16729,
											"name": "SWAP1"
										},
										{
											"begin": 16723,
											"end": 16729,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16723,
											"end": 16729,
											"name": "EXP"
										},
										{
											"begin": 16723,
											"end": 16729,
											"name": "SWAP1"
										},
										{
											"begin": 16723,
											"end": 16729,
											"name": "DIV"
										},
										{
											"begin": 16723,
											"end": 16729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16723,
											"end": 16729,
											"name": "AND"
										},
										{
											"begin": 16705,
											"end": 16729,
											"name": "SWAP1"
										},
										{
											"begin": 16705,
											"end": 16729,
											"name": "POP"
										},
										{
											"begin": 16754,
											"end": 16769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16772,
											"end": 16778,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 16772,
											"end": 16778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16772,
											"end": 16778,
											"name": "SWAP1"
										},
										{
											"begin": 16772,
											"end": 16778,
											"name": "SLOAD"
										},
										{
											"begin": 16772,
											"end": 16778,
											"name": "SWAP1"
										},
										{
											"begin": 16772,
											"end": 16778,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16772,
											"end": 16778,
											"name": "EXP"
										},
										{
											"begin": 16772,
											"end": 16778,
											"name": "SWAP1"
										},
										{
											"begin": 16772,
											"end": 16778,
											"name": "DIV"
										},
										{
											"begin": 16772,
											"end": 16778,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16772,
											"end": 16778,
											"name": "AND"
										},
										{
											"begin": 16754,
											"end": 16778,
											"name": "SWAP1"
										},
										{
											"begin": 16754,
											"end": 16778,
											"name": "POP"
										},
										{
											"begin": 16803,
											"end": 16885,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 16817,
											"end": 16824,
											"name": "DUP3"
										},
										{
											"begin": 16826,
											"end": 16828,
											"name": "DUP5"
										},
										{
											"begin": 16830,
											"end": 16884,
											"name": "PUSH [tag]",
											"value": "296"
										},
										{
											"begin": 16875,
											"end": 16883,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 16875,
											"end": 16883,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16875,
											"end": 16883,
											"name": "SWAP1"
										},
										{
											"begin": 16875,
											"end": 16883,
											"name": "SLOAD"
										},
										{
											"begin": 16875,
											"end": 16883,
											"name": "SWAP1"
										},
										{
											"begin": 16875,
											"end": 16883,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16875,
											"end": 16883,
											"name": "EXP"
										},
										{
											"begin": 16875,
											"end": 16883,
											"name": "SWAP1"
										},
										{
											"begin": 16875,
											"end": 16883,
											"name": "DIV"
										},
										{
											"begin": 16875,
											"end": 16883,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16875,
											"end": 16883,
											"name": "AND"
										},
										{
											"begin": 16830,
											"end": 16884,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16830,
											"end": 16884,
											"name": "AND"
										},
										{
											"begin": 16837,
											"end": 16844,
											"name": "DUP7"
										},
										{
											"begin": 16830,
											"end": 16855,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16830,
											"end": 16855,
											"name": "AND"
										},
										{
											"begin": 16830,
											"end": 16855,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 16864,
											"end": 16868,
											"name": "ADDRESS"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "MLOAD"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "DUP3"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "AND"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "SHL"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "DUP2"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "MSTORE"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "ADD"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "DUP1"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "DUP3"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "AND"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "AND"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "DUP2"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "MSTORE"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "ADD"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "SWAP2"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "POP"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "POP"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "MLOAD"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "DUP1"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "DUP4"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "SUB"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "DUP2"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "DUP7"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "DUP1"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "297"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "297"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "POP"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "GAS"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "STATICCALL"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "298"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "POP"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "POP"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "POP"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "POP"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "MLOAD"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "299"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "DUP2"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "ADD"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "SWAP1"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "DUP1"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "DUP1"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "MLOAD"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "SWAP1"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "ADD"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "SWAP1"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "SWAP3"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "SWAP2"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "SWAP1"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "POP"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "POP"
										},
										{
											"begin": 16830,
											"end": 16870,
											"name": "POP"
										},
										{
											"begin": 16830,
											"end": 16874,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 16830,
											"end": 16874,
											"name": "SWAP1"
										},
										{
											"begin": 16830,
											"end": 16884,
											"name": "SWAP2"
										},
										{
											"begin": 16830,
											"end": 16884,
											"name": "SWAP1"
										},
										{
											"begin": 16830,
											"end": 16884,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16830,
											"end": 16884,
											"name": "AND"
										},
										{
											"begin": 16830,
											"end": 16884,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16830,
											"end": 16884,
											"name": "tag",
											"value": "296"
										},
										{
											"begin": 16830,
											"end": 16884,
											"name": "JUMPDEST"
										},
										{
											"begin": 16803,
											"end": 16816,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 16803,
											"end": 16885,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16803,
											"end": 16885,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 16803,
											"end": 16885,
											"name": "JUMPDEST"
										},
										{
											"begin": 16891,
											"end": 16973,
											"name": "PUSH [tag]",
											"value": "300"
										},
										{
											"begin": 16905,
											"end": 16912,
											"name": "DUP2"
										},
										{
											"begin": 16914,
											"end": 16916,
											"name": "DUP5"
										},
										{
											"begin": 16918,
											"end": 16972,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 16963,
											"end": 16971,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 16963,
											"end": 16971,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 16963,
											"end": 16971,
											"name": "SWAP1"
										},
										{
											"begin": 16963,
											"end": 16971,
											"name": "SLOAD"
										},
										{
											"begin": 16963,
											"end": 16971,
											"name": "SWAP1"
										},
										{
											"begin": 16963,
											"end": 16971,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16963,
											"end": 16971,
											"name": "EXP"
										},
										{
											"begin": 16963,
											"end": 16971,
											"name": "SWAP1"
										},
										{
											"begin": 16963,
											"end": 16971,
											"name": "DIV"
										},
										{
											"begin": 16963,
											"end": 16971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16963,
											"end": 16971,
											"name": "AND"
										},
										{
											"begin": 16918,
											"end": 16972,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16918,
											"end": 16972,
											"name": "AND"
										},
										{
											"begin": 16925,
											"end": 16932,
											"name": "DUP6"
										},
										{
											"begin": 16918,
											"end": 16943,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16918,
											"end": 16943,
											"name": "AND"
										},
										{
											"begin": 16918,
											"end": 16943,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 16952,
											"end": 16956,
											"name": "ADDRESS"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "MLOAD"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "DUP3"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "AND"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "SHL"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "DUP2"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "MSTORE"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "ADD"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "DUP1"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "DUP3"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "AND"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "AND"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "DUP2"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "MSTORE"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "ADD"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "SWAP2"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "POP"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "POP"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "MLOAD"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "DUP1"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "DUP4"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "SUB"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "DUP2"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "DUP7"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "DUP1"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "302"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "POP"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "GAS"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "STATICCALL"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "303"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "303"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "POP"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "POP"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "POP"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "POP"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "MLOAD"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "304"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "DUP2"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "ADD"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "SWAP1"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "DUP1"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "DUP1"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "MLOAD"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "SWAP1"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "ADD"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "SWAP1"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "SWAP3"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "SWAP2"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "SWAP1"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "POP"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "POP"
										},
										{
											"begin": 16918,
											"end": 16958,
											"name": "POP"
										},
										{
											"begin": 16918,
											"end": 16962,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 16918,
											"end": 16962,
											"name": "SWAP1"
										},
										{
											"begin": 16918,
											"end": 16972,
											"name": "SWAP2"
										},
										{
											"begin": 16918,
											"end": 16972,
											"name": "SWAP1"
										},
										{
											"begin": 16918,
											"end": 16972,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16918,
											"end": 16972,
											"name": "AND"
										},
										{
											"begin": 16918,
											"end": 16972,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16918,
											"end": 16972,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 16918,
											"end": 16972,
											"name": "JUMPDEST"
										},
										{
											"begin": 16891,
											"end": 16904,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 16891,
											"end": 16973,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16891,
											"end": 16973,
											"name": "tag",
											"value": "300"
										},
										{
											"begin": 16891,
											"end": 16973,
											"name": "JUMPDEST"
										},
										{
											"begin": 16984,
											"end": 16990,
											"name": "PUSH",
											"value": "21AD22495C9C75CD1C94756F91824E779C0C8A8E168B267C790DF464FE056B79"
										},
										{
											"begin": 16984,
											"end": 16990,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16984,
											"end": 16990,
											"name": "MLOAD"
										},
										{
											"begin": 16984,
											"end": 16990,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16984,
											"end": 16990,
											"name": "MLOAD"
										},
										{
											"begin": 16984,
											"end": 16990,
											"name": "DUP1"
										},
										{
											"begin": 16984,
											"end": 16990,
											"name": "SWAP2"
										},
										{
											"begin": 16984,
											"end": 16990,
											"name": "SUB"
										},
										{
											"begin": 16984,
											"end": 16990,
											"name": "SWAP1"
										},
										{
											"begin": 16984,
											"end": 16990,
											"name": "LOG1"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1565,
											"end": 1573,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "DUP2"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SWAP1"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SSTORE"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "POP"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "POP"
										},
										{
											"begin": 16659,
											"end": 16995,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "JUMPDEST"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "SLOAD"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "EXP"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DIV"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "AND"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP2"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "JUMPDEST"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "SWAP1"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "SLOAD"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "SWAP1"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "EXP"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "SWAP1"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "DIV"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "AND"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "DUP2"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "JUMPDEST"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3001,
											"end": 3009,
											"name": "DUP5"
										},
										{
											"begin": 3001,
											"end": 3028,
											"name": "LT"
										},
										{
											"begin": 3001,
											"end": 3028,
											"name": "ISZERO"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH [tag]",
											"value": "306"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "JUMPI"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "MLOAD"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP2"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "MSTORE"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "ADD"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP1"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP1"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "ADD"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP3"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP2"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "SUB"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP3"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "MSTORE"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP2"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "MSTORE"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "ADD"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP1"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "556E697377617056323A20455850495245440000000000000000000000000000"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP2"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "MSTORE"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "POP"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "ADD"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "SWAP2"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "POP"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "POP"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "MLOAD"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "DUP1"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "SWAP2"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "SUB"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "SWAP1"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "REVERT"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "tag",
											"value": "306"
										},
										{
											"begin": 2993,
											"end": 3051,
											"name": "JUMPDEST"
										},
										{
											"begin": 3061,
											"end": 3075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3179,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3163,
											"end": 3179,
											"name": "SLOAD"
										},
										{
											"begin": 649,
											"end": 715,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3218,
											"end": 3233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3233,
											"name": "SHL"
										},
										{
											"begin": 3235,
											"end": 3240,
											"name": "DUP10"
										},
										{
											"begin": 3242,
											"end": 3249,
											"name": "DUP10"
										},
										{
											"begin": 3251,
											"end": 3256,
											"name": "DUP10"
										},
										{
											"begin": 3258,
											"end": 3264,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3270,
											"name": "DUP15"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "AND"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "AND"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "DUP2"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "MSTORE"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "ADD"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "SWAP1"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "DUP2"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "MSTORE"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "ADD"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "KECCAK256"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "DUP2"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "SLOAD"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "DUP1"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "SWAP3"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "SWAP2"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "SWAP1"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "SWAP2"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "SWAP1"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "POP"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "SSTORE"
										},
										{
											"begin": 3275,
											"end": 3283,
											"name": "DUP11"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MLOAD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP1"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP8"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP2"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP7"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "AND"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "AND"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP2"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP6"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "AND"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "AND"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP2"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP5"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP2"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP4"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP2"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP3"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "DUP2"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "SWAP7"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "SWAP1"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3197,
											"end": 3285,
											"name": "DUP1"
										},
										{
											"begin": 3197,
											"end": 3285,
											"name": "MLOAD"
										},
										{
											"begin": 3197,
											"end": 3285,
											"name": "SWAP1"
										},
										{
											"begin": 3197,
											"end": 3285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3197,
											"end": 3285,
											"name": "ADD"
										},
										{
											"begin": 3197,
											"end": 3285,
											"name": "KECCAK256"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "MLOAD"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "ADD"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "DUP1"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "DUP1"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "DUP2"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "MSTORE"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "POP"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "ADD"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "DUP4"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "DUP2"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "MSTORE"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "ADD"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "DUP3"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "DUP2"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "MSTORE"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "ADD"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "SWAP3"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "POP"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "POP"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "POP"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "SWAP1"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3101,
											"end": 3299,
											"name": "MSTORE"
										},
										{
											"begin": 3078,
											"end": 3309,
											"name": "DUP1"
										},
										{
											"begin": 3078,
											"end": 3309,
											"name": "MLOAD"
										},
										{
											"begin": 3078,
											"end": 3309,
											"name": "SWAP1"
										},
										{
											"begin": 3078,
											"end": 3309,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3078,
											"end": 3309,
											"name": "ADD"
										},
										{
											"begin": 3078,
											"end": 3309,
											"name": "KECCAK256"
										},
										{
											"begin": 3061,
											"end": 3309,
											"name": "SWAP1"
										},
										{
											"begin": 3061,
											"end": 3309,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3356,
											"end": 3362,
											"name": "DUP3"
										},
										{
											"begin": 3364,
											"end": 3365,
											"name": "DUP7"
										},
										{
											"begin": 3367,
											"end": 3368,
											"name": "DUP7"
										},
										{
											"begin": 3370,
											"end": 3371,
											"name": "DUP7"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP1"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP6"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP5"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "AND"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "AND"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP4"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP3"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "SWAP5"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "SUB"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "SWAP1"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP1"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP5"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "SUB"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "SWAP1"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "DUP6"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "GAS"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "STATICCALL"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "307"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "307"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "SUB"
										},
										{
											"begin": 3346,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 3319,
											"end": 3372,
											"name": "SWAP1"
										},
										{
											"begin": 3319,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3418,
											"end": 3419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3420,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3420,
											"name": "AND"
										},
										{
											"begin": 3390,
											"end": 3406,
											"name": "DUP2"
										},
										{
											"begin": 3390,
											"end": 3420,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3420,
											"name": "AND"
										},
										{
											"begin": 3390,
											"end": 3420,
											"name": "EQ"
										},
										{
											"begin": 3390,
											"end": 3420,
											"name": "ISZERO"
										},
										{
											"begin": 3390,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 3390,
											"end": 3449,
											"name": "ISZERO"
										},
										{
											"begin": 3390,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "308"
										},
										{
											"begin": 3390,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 3390,
											"end": 3449,
											"name": "POP"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP9"
										},
										{
											"begin": 3424,
											"end": 3449,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3424,
											"end": 3449,
											"name": "AND"
										},
										{
											"begin": 3424,
											"end": 3440,
											"name": "DUP2"
										},
										{
											"begin": 3424,
											"end": 3449,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3424,
											"end": 3449,
											"name": "AND"
										},
										{
											"begin": 3424,
											"end": 3449,
											"name": "EQ"
										},
										{
											"begin": 3390,
											"end": 3449,
											"name": "tag",
											"value": "308"
										},
										{
											"begin": 3390,
											"end": 3449,
											"name": "JUMPDEST"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH [tag]",
											"value": "309"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "JUMPI"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "MLOAD"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP2"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "MSTORE"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "ADD"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP1"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP1"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "ADD"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP3"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP2"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "SUB"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP3"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "MSTORE"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP2"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "MSTORE"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "ADD"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP1"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "556E697377617056323A20494E56414C49445F5349474E415455524500000000"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP2"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "MSTORE"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "ADD"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "SWAP2"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "MLOAD"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "DUP1"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "SWAP2"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "SUB"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "SWAP1"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "REVERT"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "tag",
											"value": "309"
										},
										{
											"begin": 3382,
											"end": 3482,
											"name": "JUMPDEST"
										},
										{
											"begin": 3492,
											"end": 3523,
											"name": "PUSH [tag]",
											"value": "310"
										},
										{
											"begin": 3501,
											"end": 3506,
											"name": "DUP10"
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "DUP10"
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "DUP10"
										},
										{
											"begin": 3492,
											"end": 3500,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 3492,
											"end": 3523,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3492,
											"end": 3523,
											"name": "tag",
											"value": "310"
										},
										{
											"begin": 3492,
											"end": 3523,
											"name": "JUMPDEST"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 3530,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "JUMPDEST"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "DUP2"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "JUMPDEST"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "MSTORE"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "MSTORE"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "KECCAK256"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "MSTORE"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "MSTORE"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "KECCAK256"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SWAP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "SLOAD"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "DUP2"
										},
										{
											"begin": 398,
											"end": 459,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "JUMPDEST"
										},
										{
											"begin": 15336,
											"end": 15340,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15348,
											"end": 15365,
											"name": "DUP1"
										},
										{
											"begin": 15379,
											"end": 15385,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 15379,
											"end": 15385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15379,
											"end": 15385,
											"name": "SWAP1"
										},
										{
											"begin": 15379,
											"end": 15385,
											"name": "SLOAD"
										},
										{
											"begin": 15379,
											"end": 15385,
											"name": "SWAP1"
										},
										{
											"begin": 15379,
											"end": 15385,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15379,
											"end": 15385,
											"name": "EXP"
										},
										{
											"begin": 15379,
											"end": 15385,
											"name": "SWAP1"
										},
										{
											"begin": 15379,
											"end": 15385,
											"name": "DIV"
										},
										{
											"begin": 15379,
											"end": 15385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15379,
											"end": 15385,
											"name": "AND"
										},
										{
											"begin": 15368,
											"end": 15385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15368,
											"end": 15385,
											"name": "AND"
										},
										{
											"begin": 15368,
											"end": 15375,
											"name": "DUP4"
										},
										{
											"begin": 15368,
											"end": 15385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15368,
											"end": 15385,
											"name": "AND"
										},
										{
											"begin": 15368,
											"end": 15385,
											"name": "EQ"
										},
										{
											"begin": 15368,
											"end": 15423,
											"name": "PUSH [tag]",
											"value": "312"
										},
										{
											"begin": 15368,
											"end": 15423,
											"name": "JUMPI"
										},
										{
											"begin": 15407,
											"end": 15423,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 15407,
											"end": 15423,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 15407,
											"end": 15423,
											"name": "SWAP1"
										},
										{
											"begin": 15407,
											"end": 15423,
											"name": "SLOAD"
										},
										{
											"begin": 15407,
											"end": 15423,
											"name": "SWAP1"
										},
										{
											"begin": 15407,
											"end": 15423,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15407,
											"end": 15423,
											"name": "EXP"
										},
										{
											"begin": 15407,
											"end": 15423,
											"name": "SWAP1"
										},
										{
											"begin": 15407,
											"end": 15423,
											"name": "DIV"
										},
										{
											"begin": 15407,
											"end": 15423,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 15407,
											"end": 15423,
											"name": "AND"
										},
										{
											"begin": 15368,
											"end": 15423,
											"name": "PUSH [tag]",
											"value": "313"
										},
										{
											"begin": 15368,
											"end": 15423,
											"name": "JUMP"
										},
										{
											"begin": 15368,
											"end": 15423,
											"name": "tag",
											"value": "312"
										},
										{
											"begin": 15368,
											"end": 15423,
											"name": "JUMPDEST"
										},
										{
											"begin": 15388,
											"end": 15404,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 15388,
											"end": 15404,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 15388,
											"end": 15404,
											"name": "SWAP1"
										},
										{
											"begin": 15388,
											"end": 15404,
											"name": "SLOAD"
										},
										{
											"begin": 15388,
											"end": 15404,
											"name": "SWAP1"
										},
										{
											"begin": 15388,
											"end": 15404,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15388,
											"end": 15404,
											"name": "EXP"
										},
										{
											"begin": 15388,
											"end": 15404,
											"name": "SWAP1"
										},
										{
											"begin": 15388,
											"end": 15404,
											"name": "DIV"
										},
										{
											"begin": 15388,
											"end": 15404,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 15388,
											"end": 15404,
											"name": "AND"
										},
										{
											"begin": 15368,
											"end": 15423,
											"name": "tag",
											"value": "313"
										},
										{
											"begin": 15368,
											"end": 15423,
											"name": "JUMPDEST"
										},
										{
											"begin": 15348,
											"end": 15423,
											"name": "SWAP1"
										},
										{
											"begin": 15348,
											"end": 15423,
											"name": "POP"
										},
										{
											"begin": 15436,
											"end": 15512,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 15450,
											"end": 15458,
											"name": "DUP5"
										},
										{
											"begin": 15460,
											"end": 15467,
											"name": "DUP5"
										},
										{
											"begin": 15474,
											"end": 15482,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 15474,
											"end": 15482,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15474,
											"end": 15482,
											"name": "SWAP1"
										},
										{
											"begin": 15474,
											"end": 15482,
											"name": "SLOAD"
										},
										{
											"begin": 15474,
											"end": 15482,
											"name": "SWAP1"
										},
										{
											"begin": 15474,
											"end": 15482,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15474,
											"end": 15482,
											"name": "EXP"
										},
										{
											"begin": 15474,
											"end": 15482,
											"name": "SWAP1"
										},
										{
											"begin": 15474,
											"end": 15482,
											"name": "DIV"
										},
										{
											"begin": 15474,
											"end": 15482,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15474,
											"end": 15482,
											"name": "AND"
										},
										{
											"begin": 15469,
											"end": 15483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15469,
											"end": 15483,
											"name": "AND"
										},
										{
											"begin": 15490,
											"end": 15498,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 15490,
											"end": 15498,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 15490,
											"end": 15498,
											"name": "SWAP1"
										},
										{
											"begin": 15490,
											"end": 15498,
											"name": "SLOAD"
										},
										{
											"begin": 15490,
											"end": 15498,
											"name": "SWAP1"
										},
										{
											"begin": 15490,
											"end": 15498,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15490,
											"end": 15498,
											"name": "EXP"
										},
										{
											"begin": 15490,
											"end": 15498,
											"name": "SWAP1"
										},
										{
											"begin": 15490,
											"end": 15498,
											"name": "DIV"
										},
										{
											"begin": 15490,
											"end": 15498,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15490,
											"end": 15498,
											"name": "AND"
										},
										{
											"begin": 15485,
											"end": 15499,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15485,
											"end": 15499,
											"name": "AND"
										},
										{
											"begin": 15501,
											"end": 15511,
											"name": "DUP6"
										},
										{
											"begin": 15436,
											"end": 15512,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 15436,
											"end": 15512,
											"name": "AND"
										},
										{
											"begin": 15436,
											"end": 15449,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 15436,
											"end": 15512,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15436,
											"end": 15512,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 15436,
											"end": 15512,
											"name": "JUMPDEST"
										},
										{
											"begin": 15429,
											"end": 15512,
											"name": "SWAP2"
										},
										{
											"begin": 15429,
											"end": 15512,
											"name": "POP"
										},
										{
											"begin": 15429,
											"end": 15512,
											"name": "POP"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP3"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "SWAP2"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "POP"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "POP"
										},
										{
											"begin": 15259,
											"end": 15517,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "JUMPDEST"
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SLOAD"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "EQ"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH [tag]",
											"value": "317"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPI"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A204C4F434B45440000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "REVERT"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "tag",
											"value": "317"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPDEST"
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1548,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "DUP2"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SSTORE"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 17569,
											"end": 17576,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 17569,
											"end": 17576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17569,
											"end": 17576,
											"name": "SWAP1"
										},
										{
											"begin": 17569,
											"end": 17576,
											"name": "SLOAD"
										},
										{
											"begin": 17569,
											"end": 17576,
											"name": "SWAP1"
										},
										{
											"begin": 17569,
											"end": 17576,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17569,
											"end": 17576,
											"name": "EXP"
										},
										{
											"begin": 17569,
											"end": 17576,
											"name": "SWAP1"
										},
										{
											"begin": 17569,
											"end": 17576,
											"name": "DIV"
										},
										{
											"begin": 17569,
											"end": 17576,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17569,
											"end": 17576,
											"name": "AND"
										},
										{
											"begin": 17560,
											"end": 17583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17560,
											"end": 17583,
											"name": "AND"
										},
										{
											"begin": 17560,
											"end": 17583,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "MLOAD"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "DUP2"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "AND"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "SHL"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "DUP2"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "MSTORE"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "ADD"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "MLOAD"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "DUP1"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "DUP4"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "SUB"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "DUP2"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "DUP7"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "DUP1"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "319"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "319"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "POP"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "GAS"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "STATICCALL"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "320"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "320"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "POP"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "POP"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "POP"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "POP"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "MLOAD"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "321"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "DUP2"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "ADD"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "SWAP1"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "DUP1"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "DUP1"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "MLOAD"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "SWAP1"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "ADD"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "SWAP1"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "SWAP3"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "SWAP2"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "SWAP1"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "POP"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "POP"
										},
										{
											"begin": 17560,
											"end": 17585,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17585,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17546,
											"end": 17585,
											"name": "AND"
										},
										{
											"begin": 17546,
											"end": 17556,
											"name": "CALLER"
										},
										{
											"begin": 17546,
											"end": 17585,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17546,
											"end": 17585,
											"name": "AND"
										},
										{
											"begin": 17546,
											"end": 17585,
											"name": "EQ"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "JUMPI"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "MLOAD"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "DUP2"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "MSTORE"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "ADD"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "DUP1"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "DUP1"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "ADD"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "DUP3"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "DUP2"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "SUB"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "DUP3"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "MSTORE"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "DUP2"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "MSTORE"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "ADD"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "DUP1"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "PUSH data",
											"value": "FD83120603ED4D82DE96120F878F97F3EAB3D3E5B9B17EB433B2F605B574072D"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "SWAP2"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "CODECOPY"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "ADD"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "SWAP2"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "POP"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "POP"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "MLOAD"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "DUP1"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "SWAP2"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "SUB"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "SWAP1"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "REVERT"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "tag",
											"value": "322"
										},
										{
											"begin": 17538,
											"end": 17625,
											"name": "JUMPDEST"
										},
										{
											"begin": 17648,
											"end": 17654,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 17648,
											"end": 17654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17648,
											"end": 17654,
											"name": "SWAP1"
										},
										{
											"begin": 17648,
											"end": 17654,
											"name": "SLOAD"
										},
										{
											"begin": 17648,
											"end": 17654,
											"name": "SWAP1"
										},
										{
											"begin": 17648,
											"end": 17654,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17648,
											"end": 17654,
											"name": "EXP"
										},
										{
											"begin": 17648,
											"end": 17654,
											"name": "SWAP1"
										},
										{
											"begin": 17648,
											"end": 17654,
											"name": "DIV"
										},
										{
											"begin": 17648,
											"end": 17654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17648,
											"end": 17654,
											"name": "AND"
										},
										{
											"begin": 17639,
											"end": 17654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17639,
											"end": 17654,
											"name": "AND"
										},
										{
											"begin": 17639,
											"end": 17644,
											"name": "DUP3"
										},
										{
											"begin": 17639,
											"end": 17654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17639,
											"end": 17654,
											"name": "AND"
										},
										{
											"begin": 17639,
											"end": 17654,
											"name": "EQ"
										},
										{
											"begin": 17639,
											"end": 17654,
											"name": "ISZERO"
										},
										{
											"begin": 17639,
											"end": 17673,
											"name": "DUP1"
										},
										{
											"begin": 17639,
											"end": 17673,
											"name": "ISZERO"
										},
										{
											"begin": 17639,
											"end": 17673,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 17639,
											"end": 17673,
											"name": "JUMPI"
										},
										{
											"begin": 17639,
											"end": 17673,
											"name": "POP"
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "SWAP1"
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "SLOAD"
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "SWAP1"
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "EXP"
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "SWAP1"
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "DIV"
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "AND"
										},
										{
											"begin": 17658,
											"end": 17673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17658,
											"end": 17673,
											"name": "AND"
										},
										{
											"begin": 17658,
											"end": 17663,
											"name": "DUP3"
										},
										{
											"begin": 17658,
											"end": 17673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17658,
											"end": 17673,
											"name": "AND"
										},
										{
											"begin": 17658,
											"end": 17673,
											"name": "EQ"
										},
										{
											"begin": 17658,
											"end": 17673,
											"name": "ISZERO"
										},
										{
											"begin": 17639,
											"end": 17673,
											"name": "tag",
											"value": "323"
										},
										{
											"begin": 17639,
											"end": 17673,
											"name": "JUMPDEST"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "JUMPI"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "MLOAD"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "DUP2"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "MSTORE"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "ADD"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "DUP1"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "DUP1"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "ADD"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "DUP3"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "DUP2"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "SUB"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "DUP3"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "MSTORE"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "DUP2"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "MSTORE"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "ADD"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "DUP1"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A20696E76616C696420746F6B656E00000000"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "DUP2"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "MSTORE"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "POP"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "ADD"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "SWAP2"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "POP"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "POP"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "MLOAD"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "DUP1"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "SWAP2"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "SUB"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "SWAP1"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "REVERT"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "tag",
											"value": "324"
										},
										{
											"begin": 17631,
											"end": 17706,
											"name": "JUMPDEST"
										},
										{
											"begin": 17712,
											"end": 17776,
											"name": "PUSH [tag]",
											"value": "325"
										},
										{
											"begin": 17726,
											"end": 17731,
											"name": "DUP3"
										},
										{
											"begin": 17733,
											"end": 17735,
											"name": "DUP3"
										},
										{
											"begin": 17744,
											"end": 17749,
											"name": "DUP5"
										},
										{
											"begin": 17737,
											"end": 17760,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17737,
											"end": 17760,
											"name": "AND"
										},
										{
											"begin": 17737,
											"end": 17760,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 17769,
											"end": 17773,
											"name": "ADDRESS"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "MLOAD"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "DUP3"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "AND"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "SHL"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "DUP2"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "MSTORE"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "ADD"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "DUP1"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "DUP3"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "AND"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "AND"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "DUP2"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "MSTORE"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "ADD"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "SWAP2"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "POP"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "POP"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "MLOAD"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "DUP1"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "DUP4"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "SUB"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "DUP2"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "DUP7"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "DUP1"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "326"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "326"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "POP"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "GAS"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "STATICCALL"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "327"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "327"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "POP"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "POP"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "POP"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "POP"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "MLOAD"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "328"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "328"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "DUP2"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "ADD"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "SWAP1"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "DUP1"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "DUP1"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "MLOAD"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "SWAP1"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "ADD"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "SWAP1"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "SWAP3"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "SWAP2"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "SWAP1"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "POP"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "POP"
										},
										{
											"begin": 17737,
											"end": 17775,
											"name": "POP"
										},
										{
											"begin": 17712,
											"end": 17725,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 17712,
											"end": 17776,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17712,
											"end": 17776,
											"name": "tag",
											"value": "325"
										},
										{
											"begin": 17712,
											"end": 17776,
											"name": "JUMPDEST"
										},
										{
											"begin": 17803,
											"end": 17808,
											"name": "DUP2"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "AND"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "PUSH",
											"value": "368A9DC863ECB94B5BA32A682E26295B10D9C2666FAD7D785EBDF262C3C52413"
										},
										{
											"begin": 17810,
											"end": 17812,
											"name": "DUP3"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "MLOAD"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "DUP1"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "DUP3"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "AND"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "AND"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "DUP2"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "MSTORE"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "ADD"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "SWAP2"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "POP"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "POP"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "MLOAD"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "DUP1"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "SWAP2"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "SUB"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "SWAP1"
										},
										{
											"begin": 17787,
											"end": 17813,
											"name": "LOG2"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1565,
											"end": 1573,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "DUP2"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SWAP1"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SSTORE"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "POP"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "POP"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "POP"
										},
										{
											"begin": 17466,
											"end": 17818,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17037,
											"end": 17352,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 17037,
											"end": 17352,
											"name": "JUMPDEST"
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SLOAD"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "EQ"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH [tag]",
											"value": "330"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPI"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A204C4F434B45440000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "REVERT"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "tag",
											"value": "330"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPDEST"
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1548,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "DUP2"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SSTORE"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 17073,
											"end": 17091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "SWAP1"
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "SLOAD"
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "SWAP1"
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "EXP"
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "SWAP1"
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "DIV"
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "AND"
										},
										{
											"begin": 17094,
											"end": 17118,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17094,
											"end": 17118,
											"name": "AND"
										},
										{
											"begin": 17094,
											"end": 17118,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 17127,
											"end": 17131,
											"name": "ADDRESS"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "MLOAD"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "DUP3"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "AND"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "SHL"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "DUP2"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "MSTORE"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "ADD"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "DUP1"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "DUP3"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "AND"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "AND"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "DUP2"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "MSTORE"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "ADD"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "SWAP2"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "POP"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "POP"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "MLOAD"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "DUP1"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "DUP4"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "SUB"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "DUP2"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "DUP7"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "DUP1"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "332"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "332"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "POP"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "GAS"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "STATICCALL"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "POP"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "POP"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "POP"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "POP"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "MLOAD"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "334"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "334"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "DUP2"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "ADD"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "SWAP1"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "DUP1"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "DUP1"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "MLOAD"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "SWAP1"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "ADD"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "SWAP1"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "SWAP3"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "SWAP2"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "SWAP1"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "POP"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "POP"
										},
										{
											"begin": 17094,
											"end": 17133,
											"name": "POP"
										},
										{
											"begin": 17073,
											"end": 17133,
											"name": "SWAP1"
										},
										{
											"begin": 17073,
											"end": 17133,
											"name": "POP"
										},
										{
											"begin": 17139,
											"end": 17157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17167,
											"end": 17173,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 17167,
											"end": 17173,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17167,
											"end": 17173,
											"name": "SWAP1"
										},
										{
											"begin": 17167,
											"end": 17173,
											"name": "SLOAD"
										},
										{
											"begin": 17167,
											"end": 17173,
											"name": "SWAP1"
										},
										{
											"begin": 17167,
											"end": 17173,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17167,
											"end": 17173,
											"name": "EXP"
										},
										{
											"begin": 17167,
											"end": 17173,
											"name": "SWAP1"
										},
										{
											"begin": 17167,
											"end": 17173,
											"name": "DIV"
										},
										{
											"begin": 17167,
											"end": 17173,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17167,
											"end": 17173,
											"name": "AND"
										},
										{
											"begin": 17160,
											"end": 17184,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17160,
											"end": 17184,
											"name": "AND"
										},
										{
											"begin": 17160,
											"end": 17184,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 17193,
											"end": 17197,
											"name": "ADDRESS"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "MLOAD"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "DUP3"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "AND"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "SHL"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "DUP2"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "MSTORE"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "ADD"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "DUP1"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "DUP3"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "AND"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "AND"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "DUP2"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "MSTORE"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "ADD"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "SWAP2"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "POP"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "POP"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "MLOAD"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "DUP1"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "DUP4"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "SUB"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "DUP2"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "DUP7"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "DUP1"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "335"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "335"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "POP"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "GAS"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "STATICCALL"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "336"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "336"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "POP"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "POP"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "POP"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "POP"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "MLOAD"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "DUP2"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "ADD"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "SWAP1"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "DUP1"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "DUP1"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "MLOAD"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "SWAP1"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "ADD"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "SWAP1"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "SWAP3"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "SWAP2"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "SWAP1"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "POP"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "POP"
										},
										{
											"begin": 17160,
											"end": 17199,
											"name": "POP"
										},
										{
											"begin": 17139,
											"end": 17199,
											"name": "SWAP1"
										},
										{
											"begin": 17139,
											"end": 17199,
											"name": "POP"
										},
										{
											"begin": 17230,
											"end": 17231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17213,
											"end": 17226,
											"name": "DUP3"
										},
										{
											"begin": 17213,
											"end": 17231,
											"name": "EQ"
										},
										{
											"begin": 17213,
											"end": 17231,
											"name": "ISZERO"
										},
										{
											"begin": 17213,
											"end": 17253,
											"name": "DUP1"
										},
										{
											"begin": 17213,
											"end": 17253,
											"name": "ISZERO"
										},
										{
											"begin": 17213,
											"end": 17253,
											"name": "PUSH [tag]",
											"value": "338"
										},
										{
											"begin": 17213,
											"end": 17253,
											"name": "JUMPI"
										},
										{
											"begin": 17213,
											"end": 17253,
											"name": "POP"
										},
										{
											"begin": 17252,
											"end": 17253,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17235,
											"end": 17248,
											"name": "DUP2"
										},
										{
											"begin": 17235,
											"end": 17253,
											"name": "EQ"
										},
										{
											"begin": 17235,
											"end": 17253,
											"name": "ISZERO"
										},
										{
											"begin": 17213,
											"end": 17253,
											"name": "tag",
											"value": "338"
										},
										{
											"begin": 17213,
											"end": 17253,
											"name": "JUMPDEST"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "PUSH [tag]",
											"value": "339"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "JUMPI"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "MLOAD"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "DUP2"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "MSTORE"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "ADD"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "DUP1"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "DUP1"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "ADD"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "DUP3"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "DUP2"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "SUB"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "DUP3"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "MSTORE"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "PUSH",
											"value": "2E"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "DUP2"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "MSTORE"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "ADD"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "DUP1"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "PUSH data",
											"value": "B812A7BB29DEC6F526121E1BFDF77DA0D9FD5F3D8C74BE699D0A2F01BE67E231"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "PUSH",
											"value": "2E"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "SWAP2"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "CODECOPY"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "ADD"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "SWAP2"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "POP"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "POP"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "MLOAD"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "DUP1"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "SWAP2"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "SUB"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "SWAP1"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "REVERT"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "tag",
											"value": "339"
										},
										{
											"begin": 17205,
											"end": 17304,
											"name": "JUMPDEST"
										},
										{
											"begin": 17310,
											"end": 17347,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 17318,
											"end": 17331,
											"name": "DUP3"
										},
										{
											"begin": 17333,
											"end": 17346,
											"name": "DUP3"
										},
										{
											"begin": 17310,
											"end": 17317,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 17310,
											"end": 17347,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17310,
											"end": 17347,
											"name": "tag",
											"value": "340"
										},
										{
											"begin": 17310,
											"end": 17347,
											"name": "JUMPDEST"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1565,
											"end": 1573,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "DUP2"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SWAP1"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SSTORE"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "POP"
										},
										{
											"begin": 17037,
											"end": 17352,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10039,
											"end": 14016,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 10039,
											"end": 14016,
											"name": "JUMPDEST"
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "SLOAD"
										},
										{
											"begin": 1495,
											"end": 1508,
											"name": "EQ"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH [tag]",
											"value": "342"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPI"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A204C4F434B45440000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "SWAP1"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "REVERT"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "tag",
											"value": "342"
										},
										{
											"begin": 1487,
											"end": 1534,
											"name": "JUMPDEST"
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1548,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "DUP2"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SWAP1"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "SSTORE"
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "POP"
										},
										{
											"begin": 10185,
											"end": 10186,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10161,
											"end": 10171,
											"name": "DUP5"
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "ADD"
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "MLOAD"
										},
										{
											"begin": 10161,
											"end": 10186,
											"name": "GT"
										},
										{
											"begin": 10161,
											"end": 10215,
											"name": "DUP1"
										},
										{
											"begin": 10161,
											"end": 10215,
											"name": "PUSH [tag]",
											"value": "344"
										},
										{
											"begin": 10161,
											"end": 10215,
											"name": "JUMPI"
										},
										{
											"begin": 10161,
											"end": 10215,
											"name": "POP"
										},
										{
											"begin": 10214,
											"end": 10215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10190,
											"end": 10200,
											"name": "DUP5"
										},
										{
											"begin": 10190,
											"end": 10211,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10190,
											"end": 10211,
											"name": "ADD"
										},
										{
											"begin": 10190,
											"end": 10211,
											"name": "MLOAD"
										},
										{
											"begin": 10190,
											"end": 10215,
											"name": "GT"
										},
										{
											"begin": 10161,
											"end": 10215,
											"name": "tag",
											"value": "344"
										},
										{
											"begin": 10161,
											"end": 10215,
											"name": "JUMPDEST"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "PUSH [tag]",
											"value": "345"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "JUMPI"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "MLOAD"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "DUP2"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "MSTORE"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "DUP1"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "DUP1"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "DUP3"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "DUP2"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "SUB"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "DUP3"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "MSTORE"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "DUP2"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "MSTORE"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "DUP1"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "PUSH data",
											"value": "985AF2D628585B86A62C2A3E0E095AA532421CF73AFCD9F40539C0E984229C9A"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "SWAP2"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "CODECOPY"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "SWAP2"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "POP"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "POP"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "MLOAD"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "DUP1"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "SWAP2"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "SUB"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "REVERT"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "tag",
											"value": "345"
										},
										{
											"begin": 10153,
											"end": 10261,
											"name": "JUMPDEST"
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10288,
											"end": 10305,
											"name": "DUP1"
										},
										{
											"begin": 10307,
											"end": 10331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10333,
											"end": 10357,
											"name": "DUP1"
										},
										{
											"begin": 10361,
											"end": 10374,
											"name": "PUSH [tag]",
											"value": "346"
										},
										{
											"begin": 10361,
											"end": 10372,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 10361,
											"end": 10374,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10361,
											"end": 10374,
											"name": "tag",
											"value": "346"
										},
										{
											"begin": 10361,
											"end": 10374,
											"name": "JUMPDEST"
										},
										{
											"begin": 10268,
											"end": 10374,
											"name": "SWAP4"
										},
										{
											"begin": 10268,
											"end": 10374,
											"name": "POP"
										},
										{
											"begin": 10268,
											"end": 10374,
											"name": "SWAP4"
										},
										{
											"begin": 10268,
											"end": 10374,
											"name": "POP"
										},
										{
											"begin": 10268,
											"end": 10374,
											"name": "SWAP4"
										},
										{
											"begin": 10268,
											"end": 10374,
											"name": "POP"
										},
										{
											"begin": 10268,
											"end": 10374,
											"name": "SWAP4"
										},
										{
											"begin": 10268,
											"end": 10374,
											"name": "POP"
										},
										{
											"begin": 10412,
											"end": 10421,
											"name": "DUP4"
										},
										{
											"begin": 10388,
											"end": 10421,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10388,
											"end": 10421,
											"name": "AND"
										},
										{
											"begin": 10388,
											"end": 10398,
											"name": "DUP9"
										},
										{
											"begin": 10388,
											"end": 10409,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10388,
											"end": 10409,
											"name": "ADD"
										},
										{
											"begin": 10388,
											"end": 10409,
											"name": "MLOAD"
										},
										{
											"begin": 10388,
											"end": 10421,
											"name": "LT"
										},
										{
											"begin": 10388,
											"end": 10458,
											"name": "DUP1"
										},
										{
											"begin": 10388,
											"end": 10458,
											"name": "ISZERO"
										},
										{
											"begin": 10388,
											"end": 10458,
											"name": "PUSH [tag]",
											"value": "347"
										},
										{
											"begin": 10388,
											"end": 10458,
											"name": "JUMPI"
										},
										{
											"begin": 10388,
											"end": 10458,
											"name": "POP"
										},
										{
											"begin": 10449,
											"end": 10458,
											"name": "DUP3"
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "AND"
										},
										{
											"begin": 10425,
											"end": 10435,
											"name": "DUP9"
										},
										{
											"begin": 10425,
											"end": 10446,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10425,
											"end": 10446,
											"name": "ADD"
										},
										{
											"begin": 10425,
											"end": 10446,
											"name": "MLOAD"
										},
										{
											"begin": 10425,
											"end": 10458,
											"name": "LT"
										},
										{
											"begin": 10388,
											"end": 10458,
											"name": "tag",
											"value": "347"
										},
										{
											"begin": 10388,
											"end": 10458,
											"name": "JUMPDEST"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "JUMPI"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "MLOAD"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "DUP2"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "MSTORE"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "ADD"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "DUP1"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "DUP1"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "ADD"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "DUP3"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "DUP2"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "SUB"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "DUP3"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "MSTORE"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "DUP2"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "MSTORE"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "ADD"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "DUP1"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "PUSH data",
											"value": "6C8AFA2437545964FFEE4C84B28541AF800177F71A1BAD08A0655CAE5B8D43E9"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "SWAP2"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "CODECOPY"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "ADD"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "SWAP2"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "POP"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "POP"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "MLOAD"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "DUP1"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "SWAP2"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "SUB"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "SWAP1"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "REVERT"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "tag",
											"value": "348"
										},
										{
											"begin": 10380,
											"end": 10500,
											"name": "JUMPDEST"
										},
										{
											"begin": 10530,
											"end": 10540,
											"name": "DUP8"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "ADD"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "MLOAD"
										},
										{
											"begin": 10524,
											"end": 10547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10524,
											"end": 10547,
											"name": "AND"
										},
										{
											"begin": 10524,
											"end": 10526,
											"name": "DUP8"
										},
										{
											"begin": 10524,
											"end": 10547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10524,
											"end": 10547,
											"name": "AND"
										},
										{
											"begin": 10524,
											"end": 10547,
											"name": "EQ"
										},
										{
											"begin": 10524,
											"end": 10547,
											"name": "ISZERO"
										},
										{
											"begin": 10524,
											"end": 10574,
											"name": "DUP1"
										},
										{
											"begin": 10524,
											"end": 10574,
											"name": "ISZERO"
										},
										{
											"begin": 10524,
											"end": 10574,
											"name": "PUSH [tag]",
											"value": "349"
										},
										{
											"begin": 10524,
											"end": 10574,
											"name": "JUMPI"
										},
										{
											"begin": 10524,
											"end": 10574,
											"name": "POP"
										},
										{
											"begin": 10557,
											"end": 10567,
											"name": "DUP8"
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "ADD"
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "MLOAD"
										},
										{
											"begin": 10551,
											"end": 10574,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10551,
											"end": 10574,
											"name": "AND"
										},
										{
											"begin": 10551,
											"end": 10553,
											"name": "DUP8"
										},
										{
											"begin": 10551,
											"end": 10574,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10551,
											"end": 10574,
											"name": "AND"
										},
										{
											"begin": 10551,
											"end": 10574,
											"name": "EQ"
										},
										{
											"begin": 10551,
											"end": 10574,
											"name": "ISZERO"
										},
										{
											"begin": 10524,
											"end": 10574,
											"name": "tag",
											"value": "349"
										},
										{
											"begin": 10524,
											"end": 10574,
											"name": "JUMPDEST"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "PUSH [tag]",
											"value": "350"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "JUMPI"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "MLOAD"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "DUP2"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "MSTORE"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "ADD"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "DUP1"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "DUP1"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "ADD"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "DUP3"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "DUP2"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "SUB"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "DUP3"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "MSTORE"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "DUP2"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "MSTORE"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "ADD"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "DUP1"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A20494E56414C49445F544F00000000000000"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "DUP2"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "MSTORE"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "POP"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "ADD"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "SWAP2"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "POP"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "POP"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "MLOAD"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "DUP1"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "SWAP2"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "SUB"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "SWAP1"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "REVERT"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "tag",
											"value": "350"
										},
										{
											"begin": 10516,
											"end": 10604,
											"name": "JUMPDEST"
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10656,
											"end": 10666,
											"name": "DUP9"
										},
										{
											"begin": 10656,
											"end": 10677,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10656,
											"end": 10677,
											"name": "ADD"
										},
										{
											"begin": 10656,
											"end": 10677,
											"name": "MLOAD"
										},
										{
											"begin": 10656,
											"end": 10681,
											"name": "GT"
										},
										{
											"begin": 10652,
											"end": 10742,
											"name": "ISZERO"
										},
										{
											"begin": 10652,
											"end": 10742,
											"name": "PUSH [tag]",
											"value": "351"
										},
										{
											"begin": 10652,
											"end": 10742,
											"name": "JUMPI"
										},
										{
											"begin": 10683,
											"end": 10742,
											"name": "PUSH [tag]",
											"value": "352"
										},
										{
											"begin": 10697,
											"end": 10707,
											"name": "DUP9"
										},
										{
											"begin": 10697,
											"end": 10714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10697,
											"end": 10714,
											"name": "ADD"
										},
										{
											"begin": 10697,
											"end": 10714,
											"name": "MLOAD"
										},
										{
											"begin": 10716,
											"end": 10718,
											"name": "DUP9"
										},
										{
											"begin": 10720,
											"end": 10730,
											"name": "DUP11"
										},
										{
											"begin": 10720,
											"end": 10741,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10720,
											"end": 10741,
											"name": "ADD"
										},
										{
											"begin": 10720,
											"end": 10741,
											"name": "MLOAD"
										},
										{
											"begin": 10683,
											"end": 10696,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 10683,
											"end": 10742,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10683,
											"end": 10742,
											"name": "tag",
											"value": "352"
										},
										{
											"begin": 10683,
											"end": 10742,
											"name": "JUMPDEST"
										},
										{
											"begin": 10652,
											"end": 10742,
											"name": "tag",
											"value": "351"
										},
										{
											"begin": 10652,
											"end": 10742,
											"name": "JUMPDEST"
										},
										{
											"begin": 10818,
											"end": 10819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10794,
											"end": 10804,
											"name": "DUP9"
										},
										{
											"begin": 10794,
											"end": 10815,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10794,
											"end": 10815,
											"name": "ADD"
										},
										{
											"begin": 10794,
											"end": 10815,
											"name": "MLOAD"
										},
										{
											"begin": 10794,
											"end": 10819,
											"name": "GT"
										},
										{
											"begin": 10790,
											"end": 10880,
											"name": "ISZERO"
										},
										{
											"begin": 10790,
											"end": 10880,
											"name": "PUSH [tag]",
											"value": "353"
										},
										{
											"begin": 10790,
											"end": 10880,
											"name": "JUMPI"
										},
										{
											"begin": 10821,
											"end": 10880,
											"name": "PUSH [tag]",
											"value": "354"
										},
										{
											"begin": 10835,
											"end": 10845,
											"name": "DUP9"
										},
										{
											"begin": 10835,
											"end": 10852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10835,
											"end": 10852,
											"name": "ADD"
										},
										{
											"begin": 10835,
											"end": 10852,
											"name": "MLOAD"
										},
										{
											"begin": 10854,
											"end": 10856,
											"name": "DUP9"
										},
										{
											"begin": 10858,
											"end": 10868,
											"name": "DUP11"
										},
										{
											"begin": 10858,
											"end": 10879,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10858,
											"end": 10879,
											"name": "ADD"
										},
										{
											"begin": 10858,
											"end": 10879,
											"name": "MLOAD"
										},
										{
											"begin": 10821,
											"end": 10834,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 10821,
											"end": 10880,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10821,
											"end": 10880,
											"name": "tag",
											"value": "354"
										},
										{
											"begin": 10821,
											"end": 10880,
											"name": "JUMPDEST"
										},
										{
											"begin": 10790,
											"end": 10880,
											"name": "tag",
											"value": "353"
										},
										{
											"begin": 10790,
											"end": 10880,
											"name": "JUMPDEST"
										},
										{
											"begin": 10906,
											"end": 10907,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10892,
											"end": 10896,
											"name": "DUP7"
										},
										{
											"begin": 10892,
											"end": 10903,
											"name": "MLOAD"
										},
										{
											"begin": 10892,
											"end": 10907,
											"name": "GT"
										},
										{
											"begin": 10888,
											"end": 11007,
											"name": "ISZERO"
										},
										{
											"begin": 10888,
											"end": 11007,
											"name": "PUSH [tag]",
											"value": "355"
										},
										{
											"begin": 10888,
											"end": 11007,
											"name": "JUMPI"
										},
										{
											"begin": 10926,
											"end": 10928,
											"name": "DUP7"
										},
										{
											"begin": 10909,
											"end": 10943,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10909,
											"end": 10943,
											"name": "AND"
										},
										{
											"begin": 10909,
											"end": 10943,
											"name": "PUSH",
											"value": "10D1E85C"
										},
										{
											"begin": 10944,
											"end": 10954,
											"name": "CALLER"
										},
										{
											"begin": 10956,
											"end": 10966,
											"name": "DUP11"
										},
										{
											"begin": 10956,
											"end": 10977,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10956,
											"end": 10977,
											"name": "ADD"
										},
										{
											"begin": 10956,
											"end": 10977,
											"name": "MLOAD"
										},
										{
											"begin": 10979,
											"end": 10989,
											"name": "DUP12"
										},
										{
											"begin": 10979,
											"end": 11000,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10979,
											"end": 11000,
											"name": "ADD"
										},
										{
											"begin": 10979,
											"end": 11000,
											"name": "MLOAD"
										},
										{
											"begin": 11002,
											"end": 11006,
											"name": "DUP11"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "MLOAD"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP6"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "AND"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "SHL"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP2"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "MSTORE"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "ADD"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP1"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP6"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "AND"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "AND"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP2"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "MSTORE"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "ADD"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP5"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP2"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "MSTORE"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "ADD"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP4"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP2"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "MSTORE"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "ADD"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP1"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "ADD"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP3"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP2"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "SUB"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP3"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "MSTORE"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP4"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP2"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP2"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "MLOAD"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP2"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "MSTORE"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "ADD"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "SWAP2"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP1"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "MLOAD"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "SWAP1"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "ADD"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "SWAP1"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP1"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP4"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "356"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "358"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "356"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "358"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "SWAP1"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "SWAP1"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP2"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "ADD"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "SWAP1"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "AND"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP1"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "ISZERO"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH [tag]",
											"value": "359"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "JUMPI"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP1"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP3"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "SUB"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP1"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "MLOAD"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP4"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "SUB"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "EXP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "SUB"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "NOT"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "AND"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP2"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "MSTORE"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "ADD"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "SWAP2"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "tag",
											"value": "359"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "JUMPDEST"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "SWAP6"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "MLOAD"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP1"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP4"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "SUB"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP2"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP8"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "DUP1"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "360"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "360"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "GAS"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "CALL"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "361"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "361"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10909,
											"end": 11007,
											"name": "POP"
										},
										{
											"begin": 10888,
											"end": 11007,
											"name": "tag",
											"value": "355"
										},
										{
											"begin": 10888,
											"end": 11007,
											"name": "JUMPDEST"
										},
										{
											"begin": 11044,
											"end": 11054,
											"name": "DUP8"
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "ADD"
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "MLOAD"
										},
										{
											"begin": 11037,
											"end": 11072,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11037,
											"end": 11072,
											"name": "AND"
										},
										{
											"begin": 11037,
											"end": 11072,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11081,
											"end": 11085,
											"name": "ADDRESS"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "MLOAD"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "DUP3"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "AND"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "SHL"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "DUP2"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "MSTORE"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "ADD"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "DUP1"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "DUP3"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "AND"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "AND"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "DUP2"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "MSTORE"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "ADD"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "SWAP2"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "POP"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "POP"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "MLOAD"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "DUP1"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "DUP4"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "SUB"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "DUP2"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "DUP7"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "DUP1"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "362"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "362"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "POP"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "GAS"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "STATICCALL"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "363"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "363"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "POP"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "POP"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "POP"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "POP"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "MLOAD"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "364"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "364"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "DUP2"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "ADD"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "SWAP1"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "DUP1"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "DUP1"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "MLOAD"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "SWAP1"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "ADD"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "SWAP1"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "SWAP3"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "SWAP2"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "SWAP1"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "POP"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "POP"
										},
										{
											"begin": 11037,
											"end": 11087,
											"name": "POP"
										},
										{
											"begin": 11015,
											"end": 11025,
											"name": "DUP9"
										},
										{
											"begin": 11015,
											"end": 11034,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11015,
											"end": 11034,
											"name": "ADD"
										},
										{
											"begin": 11015,
											"end": 11087,
											"name": "DUP2"
										},
										{
											"begin": 11015,
											"end": 11087,
											"name": "DUP2"
										},
										{
											"begin": 11015,
											"end": 11087,
											"name": "MSTORE"
										},
										{
											"begin": 11015,
											"end": 11087,
											"name": "POP"
										},
										{
											"begin": 11015,
											"end": 11087,
											"name": "POP"
										},
										{
											"begin": 11124,
											"end": 11134,
											"name": "DUP8"
										},
										{
											"begin": 11124,
											"end": 11141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11124,
											"end": 11141,
											"name": "ADD"
										},
										{
											"begin": 11124,
											"end": 11141,
											"name": "MLOAD"
										},
										{
											"begin": 11117,
											"end": 11152,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11117,
											"end": 11152,
											"name": "AND"
										},
										{
											"begin": 11117,
											"end": 11152,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11161,
											"end": 11165,
											"name": "ADDRESS"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "MLOAD"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "DUP3"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "AND"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "SHL"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "DUP2"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "MSTORE"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "ADD"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "DUP1"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "DUP3"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "AND"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "AND"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "DUP2"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "MSTORE"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "ADD"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "SWAP2"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "POP"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "POP"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "MLOAD"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "DUP1"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "DUP4"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "SUB"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "DUP2"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "DUP7"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "DUP1"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "365"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "365"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "POP"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "GAS"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "STATICCALL"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "366"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "366"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "POP"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "POP"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "POP"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "POP"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "MLOAD"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "367"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "367"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "DUP2"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "ADD"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "SWAP1"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "DUP1"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "DUP1"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "MLOAD"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "SWAP1"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "ADD"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "SWAP1"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "SWAP3"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "SWAP2"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "SWAP1"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "POP"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "POP"
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "POP"
										},
										{
											"begin": 11095,
											"end": 11105,
											"name": "DUP9"
										},
										{
											"begin": 11095,
											"end": 11114,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 11095,
											"end": 11114,
											"name": "ADD"
										},
										{
											"begin": 11095,
											"end": 11167,
											"name": "DUP2"
										},
										{
											"begin": 11095,
											"end": 11167,
											"name": "DUP2"
										},
										{
											"begin": 11095,
											"end": 11167,
											"name": "MSTORE"
										},
										{
											"begin": 11095,
											"end": 11167,
											"name": "POP"
										},
										{
											"begin": 11095,
											"end": 11167,
											"name": "POP"
										},
										{
											"begin": 11180,
											"end": 11194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11231,
											"end": 11241,
											"name": "DUP9"
										},
										{
											"begin": 11231,
											"end": 11252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11231,
											"end": 11252,
											"name": "ADD"
										},
										{
											"begin": 11231,
											"end": 11252,
											"name": "MLOAD"
										},
										{
											"begin": 11219,
											"end": 11228,
											"name": "DUP6"
										},
										{
											"begin": 11219,
											"end": 11252,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11219,
											"end": 11252,
											"name": "AND"
										},
										{
											"begin": 11219,
											"end": 11252,
											"name": "SUB"
										},
										{
											"begin": 11197,
											"end": 11207,
											"name": "DUP10"
										},
										{
											"begin": 11197,
											"end": 11216,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11197,
											"end": 11216,
											"name": "ADD"
										},
										{
											"begin": 11197,
											"end": 11216,
											"name": "MLOAD"
										},
										{
											"begin": 11197,
											"end": 11252,
											"name": "GT"
										},
										{
											"begin": 11197,
											"end": 11316,
											"name": "PUSH [tag]",
											"value": "368"
										},
										{
											"begin": 11197,
											"end": 11316,
											"name": "JUMPI"
										},
										{
											"begin": 11315,
											"end": 11316,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11197,
											"end": 11316,
											"name": "PUSH [tag]",
											"value": "369"
										},
										{
											"begin": 11197,
											"end": 11316,
											"name": "JUMP"
										},
										{
											"begin": 11197,
											"end": 11316,
											"name": "tag",
											"value": "368"
										},
										{
											"begin": 11197,
											"end": 11316,
											"name": "JUMPDEST"
										},
										{
											"begin": 11290,
											"end": 11300,
											"name": "DUP9"
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "ADD"
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "MLOAD"
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "DUP6"
										},
										{
											"begin": 11278,
											"end": 11311,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11278,
											"end": 11311,
											"name": "AND"
										},
										{
											"begin": 11278,
											"end": 11311,
											"name": "SUB"
										},
										{
											"begin": 11255,
											"end": 11265,
											"name": "DUP10"
										},
										{
											"begin": 11255,
											"end": 11274,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11255,
											"end": 11274,
											"name": "ADD"
										},
										{
											"begin": 11255,
											"end": 11274,
											"name": "MLOAD"
										},
										{
											"begin": 11255,
											"end": 11312,
											"name": "SUB"
										},
										{
											"begin": 11197,
											"end": 11316,
											"name": "tag",
											"value": "369"
										},
										{
											"begin": 11197,
											"end": 11316,
											"name": "JUMPDEST"
										},
										{
											"begin": 11180,
											"end": 11316,
											"name": "SWAP1"
										},
										{
											"begin": 11180,
											"end": 11316,
											"name": "POP"
										},
										{
											"begin": 11322,
											"end": 11336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11373,
											"end": 11383,
											"name": "DUP10"
										},
										{
											"begin": 11373,
											"end": 11394,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11373,
											"end": 11394,
											"name": "ADD"
										},
										{
											"begin": 11373,
											"end": 11394,
											"name": "MLOAD"
										},
										{
											"begin": 11361,
											"end": 11370,
											"name": "DUP6"
										},
										{
											"begin": 11361,
											"end": 11394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11361,
											"end": 11394,
											"name": "AND"
										},
										{
											"begin": 11361,
											"end": 11394,
											"name": "SUB"
										},
										{
											"begin": 11339,
											"end": 11349,
											"name": "DUP11"
										},
										{
											"begin": 11339,
											"end": 11358,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 11339,
											"end": 11358,
											"name": "ADD"
										},
										{
											"begin": 11339,
											"end": 11358,
											"name": "MLOAD"
										},
										{
											"begin": 11339,
											"end": 11394,
											"name": "GT"
										},
										{
											"begin": 11339,
											"end": 11458,
											"name": "PUSH [tag]",
											"value": "370"
										},
										{
											"begin": 11339,
											"end": 11458,
											"name": "JUMPI"
										},
										{
											"begin": 11457,
											"end": 11458,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11339,
											"end": 11458,
											"name": "PUSH [tag]",
											"value": "371"
										},
										{
											"begin": 11339,
											"end": 11458,
											"name": "JUMP"
										},
										{
											"begin": 11339,
											"end": 11458,
											"name": "tag",
											"value": "370"
										},
										{
											"begin": 11339,
											"end": 11458,
											"name": "JUMPDEST"
										},
										{
											"begin": 11432,
											"end": 11442,
											"name": "DUP10"
										},
										{
											"begin": 11432,
											"end": 11453,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11432,
											"end": 11453,
											"name": "ADD"
										},
										{
											"begin": 11432,
											"end": 11453,
											"name": "MLOAD"
										},
										{
											"begin": 11420,
											"end": 11429,
											"name": "DUP6"
										},
										{
											"begin": 11420,
											"end": 11453,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11420,
											"end": 11453,
											"name": "AND"
										},
										{
											"begin": 11420,
											"end": 11453,
											"name": "SUB"
										},
										{
											"begin": 11397,
											"end": 11407,
											"name": "DUP11"
										},
										{
											"begin": 11397,
											"end": 11416,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 11397,
											"end": 11416,
											"name": "ADD"
										},
										{
											"begin": 11397,
											"end": 11416,
											"name": "MLOAD"
										},
										{
											"begin": 11397,
											"end": 11454,
											"name": "SUB"
										},
										{
											"begin": 11339,
											"end": 11458,
											"name": "tag",
											"value": "371"
										},
										{
											"begin": 11339,
											"end": 11458,
											"name": "JUMPDEST"
										},
										{
											"begin": 11322,
											"end": 11458,
											"name": "SWAP1"
										},
										{
											"begin": 11322,
											"end": 11458,
											"name": "POP"
										},
										{
											"begin": 11484,
											"end": 11485,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11472,
											"end": 11481,
											"name": "DUP3"
										},
										{
											"begin": 11472,
											"end": 11485,
											"name": "GT"
										},
										{
											"begin": 11472,
											"end": 11502,
											"name": "DUP1"
										},
										{
											"begin": 11472,
											"end": 11502,
											"name": "PUSH [tag]",
											"value": "372"
										},
										{
											"begin": 11472,
											"end": 11502,
											"name": "JUMPI"
										},
										{
											"begin": 11472,
											"end": 11502,
											"name": "POP"
										},
										{
											"begin": 11501,
											"end": 11502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11489,
											"end": 11498,
											"name": "DUP2"
										},
										{
											"begin": 11489,
											"end": 11502,
											"name": "GT"
										},
										{
											"begin": 11472,
											"end": 11502,
											"name": "tag",
											"value": "372"
										},
										{
											"begin": 11472,
											"end": 11502,
											"name": "JUMPDEST"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "PUSH [tag]",
											"value": "373"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "JUMPI"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "MLOAD"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "DUP2"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "MSTORE"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "ADD"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "DUP1"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "DUP1"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "ADD"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "DUP3"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "DUP2"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "SUB"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "DUP3"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "MSTORE"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "DUP2"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "MSTORE"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "ADD"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "DUP1"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "PUSH data",
											"value": "B31389CDCE9C235FB73CF94E115B26CC6B115463D873636778ED56513ABEFEA0"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "SWAP2"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "CODECOPY"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "ADD"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "SWAP2"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "POP"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "POP"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "MLOAD"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "DUP1"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "SWAP2"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "SUB"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "SWAP1"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "REVERT"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "tag",
											"value": "373"
										},
										{
											"begin": 11464,
											"end": 11547,
											"name": "JUMPDEST"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 11581,
											"end": 11613,
											"name": "PUSH [tag]",
											"value": "374"
										},
										{
											"begin": 11595,
											"end": 11612,
											"name": "DUP6"
										},
										{
											"begin": 11581,
											"end": 11613,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 11581,
											"end": 11613,
											"name": "AND"
										},
										{
											"begin": 11581,
											"end": 11590,
											"name": "DUP5"
										},
										{
											"begin": 11581,
											"end": 11594,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 11581,
											"end": 11594,
											"name": "SWAP1"
										},
										{
											"begin": 11581,
											"end": 11613,
											"name": "SWAP2"
										},
										{
											"begin": 11581,
											"end": 11613,
											"name": "SWAP1"
										},
										{
											"begin": 11581,
											"end": 11613,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11581,
											"end": 11613,
											"name": "AND"
										},
										{
											"begin": 11581,
											"end": 11613,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11581,
											"end": 11613,
											"name": "tag",
											"value": "374"
										},
										{
											"begin": 11581,
											"end": 11613,
											"name": "JUMPDEST"
										},
										{
											"begin": 11581,
											"end": 11631,
											"name": "DUP2"
										},
										{
											"begin": 11581,
											"end": 11631,
											"name": "PUSH [tag]",
											"value": "375"
										},
										{
											"begin": 11581,
											"end": 11631,
											"name": "JUMPI"
										},
										{
											"begin": 11581,
											"end": 11631,
											"name": "INVALID"
										},
										{
											"begin": 11581,
											"end": 11631,
											"name": "tag",
											"value": "375"
										},
										{
											"begin": 11581,
											"end": 11631,
											"name": "JUMPDEST"
										},
										{
											"begin": 11581,
											"end": 11631,
											"name": "DIV"
										},
										{
											"begin": 11554,
											"end": 11564,
											"name": "DUP11"
										},
										{
											"begin": 11554,
											"end": 11578,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 11554,
											"end": 11578,
											"name": "ADD"
										},
										{
											"begin": 11554,
											"end": 11631,
											"name": "DUP2"
										},
										{
											"begin": 11554,
											"end": 11631,
											"name": "DUP2"
										},
										{
											"begin": 11554,
											"end": 11631,
											"name": "MSTORE"
										},
										{
											"begin": 11554,
											"end": 11631,
											"name": "POP"
										},
										{
											"begin": 11554,
											"end": 11631,
											"name": "POP"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 11664,
											"end": 11696,
											"name": "PUSH [tag]",
											"value": "376"
										},
										{
											"begin": 11678,
											"end": 11695,
											"name": "DUP5"
										},
										{
											"begin": 11664,
											"end": 11696,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 11664,
											"end": 11696,
											"name": "AND"
										},
										{
											"begin": 11664,
											"end": 11673,
											"name": "DUP4"
										},
										{
											"begin": 11664,
											"end": 11677,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 11664,
											"end": 11677,
											"name": "SWAP1"
										},
										{
											"begin": 11664,
											"end": 11696,
											"name": "SWAP2"
										},
										{
											"begin": 11664,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11664,
											"end": 11696,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11664,
											"end": 11696,
											"name": "AND"
										},
										{
											"begin": 11664,
											"end": 11696,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11664,
											"end": 11696,
											"name": "tag",
											"value": "376"
										},
										{
											"begin": 11664,
											"end": 11696,
											"name": "JUMPDEST"
										},
										{
											"begin": 11664,
											"end": 11714,
											"name": "DUP2"
										},
										{
											"begin": 11664,
											"end": 11714,
											"name": "PUSH [tag]",
											"value": "377"
										},
										{
											"begin": 11664,
											"end": 11714,
											"name": "JUMPI"
										},
										{
											"begin": 11664,
											"end": 11714,
											"name": "INVALID"
										},
										{
											"begin": 11664,
											"end": 11714,
											"name": "tag",
											"value": "377"
										},
										{
											"begin": 11664,
											"end": 11714,
											"name": "JUMPDEST"
										},
										{
											"begin": 11664,
											"end": 11714,
											"name": "DIV"
										},
										{
											"begin": 11637,
											"end": 11647,
											"name": "DUP11"
										},
										{
											"begin": 11637,
											"end": 11661,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11637,
											"end": 11661,
											"name": "ADD"
										},
										{
											"begin": 11637,
											"end": 11714,
											"name": "DUP2"
										},
										{
											"begin": 11637,
											"end": 11714,
											"name": "DUP2"
										},
										{
											"begin": 11637,
											"end": 11714,
											"name": "MSTORE"
										},
										{
											"begin": 11637,
											"end": 11714,
											"name": "POP"
										},
										{
											"begin": 11637,
											"end": 11714,
											"name": "POP"
										},
										{
											"begin": 11772,
											"end": 11780,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11783,
											"end": 11784,
											"name": "DUP1"
										},
										{
											"begin": 11772,
											"end": 11784,
											"name": "SWAP1"
										},
										{
											"begin": 11772,
											"end": 11784,
											"name": "POP"
										},
										{
											"begin": 11793,
											"end": 11819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11842,
											"end": 11843,
											"name": "DUP1"
										},
										{
											"begin": 11822,
											"end": 11844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11822,
											"end": 11844,
											"name": "AND"
										},
										{
											"begin": 11822,
											"end": 11830,
											"name": "DUP10"
										},
										{
											"begin": 11822,
											"end": 11844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11822,
											"end": 11844,
											"name": "AND"
										},
										{
											"begin": 11822,
											"end": 11844,
											"name": "EQ"
										},
										{
											"begin": 11822,
											"end": 11844,
											"name": "ISZERO"
										},
										{
											"begin": 11822,
											"end": 11896,
											"name": "PUSH [tag]",
											"value": "378"
										},
										{
											"begin": 11822,
											"end": 11896,
											"name": "JUMPI"
										},
										{
											"begin": 11895,
											"end": 11896,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11822,
											"end": 11896,
											"name": "PUSH [tag]",
											"value": "379"
										},
										{
											"begin": 11822,
											"end": 11896,
											"name": "JUMP"
										},
										{
											"begin": 11822,
											"end": 11896,
											"name": "tag",
											"value": "378"
										},
										{
											"begin": 11822,
											"end": 11896,
											"name": "JUMPDEST"
										},
										{
											"begin": 11856,
											"end": 11863,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11856,
											"end": 11863,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11856,
											"end": 11863,
											"name": "SWAP1"
										},
										{
											"begin": 11856,
											"end": 11863,
											"name": "SLOAD"
										},
										{
											"begin": 11856,
											"end": 11863,
											"name": "SWAP1"
										},
										{
											"begin": 11856,
											"end": 11863,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11856,
											"end": 11863,
											"name": "EXP"
										},
										{
											"begin": 11856,
											"end": 11863,
											"name": "SWAP1"
										},
										{
											"begin": 11856,
											"end": 11863,
											"name": "DIV"
										},
										{
											"begin": 11856,
											"end": 11863,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11856,
											"end": 11863,
											"name": "AND"
										},
										{
											"begin": 11847,
											"end": 11882,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11847,
											"end": 11882,
											"name": "AND"
										},
										{
											"begin": 11847,
											"end": 11882,
											"name": "PUSH",
											"value": "7183D47C"
										},
										{
											"begin": 11883,
											"end": 11891,
											"name": "DUP11"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "MLOAD"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "DUP3"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "AND"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "SHL"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "DUP2"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "MSTORE"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "ADD"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "DUP1"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "DUP3"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "AND"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "AND"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "DUP2"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "MSTORE"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "ADD"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "SWAP2"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "POP"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "POP"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "MLOAD"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "DUP1"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "DUP4"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "SUB"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "DUP2"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "DUP7"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "DUP1"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "380"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "380"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "POP"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "GAS"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "STATICCALL"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "381"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "381"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "POP"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "POP"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "POP"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "POP"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "MLOAD"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "382"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "382"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "DUP2"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "ADD"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "SWAP1"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "DUP1"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "DUP1"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "MLOAD"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "SWAP1"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "ADD"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "SWAP1"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "SWAP3"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "SWAP2"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "SWAP1"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "POP"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "POP"
										},
										{
											"begin": 11847,
											"end": 11892,
											"name": "POP"
										},
										{
											"begin": 11822,
											"end": 11896,
											"name": "tag",
											"value": "379"
										},
										{
											"begin": 11822,
											"end": 11896,
											"name": "JUMPDEST"
										},
										{
											"begin": 11793,
											"end": 11896,
											"name": "SWAP1"
										},
										{
											"begin": 11793,
											"end": 11896,
											"name": "POP"
										},
										{
											"begin": 11932,
											"end": 11933,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11908,
											"end": 11929,
											"name": "DUP2"
										},
										{
											"begin": 11908,
											"end": 11933,
											"name": "GT"
										},
										{
											"begin": 11904,
											"end": 12488,
											"name": "ISZERO"
										},
										{
											"begin": 11904,
											"end": 12488,
											"name": "PUSH [tag]",
											"value": "383"
										},
										{
											"begin": 11904,
											"end": 12488,
											"name": "JUMPI"
										},
										{
											"begin": 11961,
											"end": 11962,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11949,
											"end": 11958,
											"name": "DUP5"
										},
										{
											"begin": 11949,
											"end": 11962,
											"name": "GT"
										},
										{
											"begin": 11945,
											"end": 12208,
											"name": "ISZERO"
										},
										{
											"begin": 11945,
											"end": 12208,
											"name": "PUSH [tag]",
											"value": "384"
										},
										{
											"begin": 11945,
											"end": 12208,
											"name": "JUMPI"
										},
										{
											"begin": 12064,
											"end": 12065,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 12045,
											"end": 12065,
											"name": "EXP"
										},
										{
											"begin": 11982,
											"end": 12041,
											"name": "PUSH [tag]",
											"value": "385"
										},
										{
											"begin": 12023,
											"end": 12040,
											"name": "DUP8"
										},
										{
											"begin": 11982,
											"end": 12041,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 11982,
											"end": 12041,
											"name": "AND"
										},
										{
											"begin": 11982,
											"end": 12018,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 11996,
											"end": 12017,
											"name": "DUP5"
										},
										{
											"begin": 11982,
											"end": 11991,
											"name": "DUP9"
										},
										{
											"begin": 11982,
											"end": 11995,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 11982,
											"end": 11995,
											"name": "SWAP1"
										},
										{
											"begin": 11982,
											"end": 12018,
											"name": "SWAP2"
										},
										{
											"begin": 11982,
											"end": 12018,
											"name": "SWAP1"
										},
										{
											"begin": 11982,
											"end": 12018,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11982,
											"end": 12018,
											"name": "AND"
										},
										{
											"begin": 11982,
											"end": 12018,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11982,
											"end": 12018,
											"name": "tag",
											"value": "386"
										},
										{
											"begin": 11982,
											"end": 12018,
											"name": "JUMPDEST"
										},
										{
											"begin": 11982,
											"end": 12022,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 11982,
											"end": 12022,
											"name": "SWAP1"
										},
										{
											"begin": 11982,
											"end": 12041,
											"name": "SWAP2"
										},
										{
											"begin": 11982,
											"end": 12041,
											"name": "SWAP1"
										},
										{
											"begin": 11982,
											"end": 12041,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11982,
											"end": 12041,
											"name": "AND"
										},
										{
											"begin": 11982,
											"end": 12041,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11982,
											"end": 12041,
											"name": "tag",
											"value": "385"
										},
										{
											"begin": 11982,
											"end": 12041,
											"name": "JUMPDEST"
										},
										{
											"begin": 11982,
											"end": 12066,
											"name": "DUP2"
										},
										{
											"begin": 11982,
											"end": 12066,
											"name": "PUSH [tag]",
											"value": "387"
										},
										{
											"begin": 11982,
											"end": 12066,
											"name": "JUMPI"
										},
										{
											"begin": 11982,
											"end": 12066,
											"name": "INVALID"
										},
										{
											"begin": 11982,
											"end": 12066,
											"name": "tag",
											"value": "387"
										},
										{
											"begin": 11982,
											"end": 12066,
											"name": "JUMPDEST"
										},
										{
											"begin": 11982,
											"end": 12066,
											"name": "DIV"
										},
										{
											"begin": 11976,
											"end": 12066,
											"name": "SWAP2"
										},
										{
											"begin": 11976,
											"end": 12066,
											"name": "POP"
										},
										{
											"begin": 12105,
											"end": 12138,
											"name": "PUSH [tag]",
											"value": "388"
										},
										{
											"begin": 12134,
											"end": 12137,
											"name": "DUP3"
										},
										{
											"begin": 12105,
											"end": 12115,
											"name": "DUP14"
										},
										{
											"begin": 12105,
											"end": 12129,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 12105,
											"end": 12129,
											"name": "ADD"
										},
										{
											"begin": 12105,
											"end": 12129,
											"name": "MLOAD"
										},
										{
											"begin": 12105,
											"end": 12133,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 12105,
											"end": 12133,
											"name": "SWAP1"
										},
										{
											"begin": 12105,
											"end": 12138,
											"name": "SWAP2"
										},
										{
											"begin": 12105,
											"end": 12138,
											"name": "SWAP1"
										},
										{
											"begin": 12105,
											"end": 12138,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12105,
											"end": 12138,
											"name": "AND"
										},
										{
											"begin": 12105,
											"end": 12138,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12105,
											"end": 12138,
											"name": "tag",
											"value": "388"
										},
										{
											"begin": 12105,
											"end": 12138,
											"name": "JUMPDEST"
										},
										{
											"begin": 12078,
											"end": 12088,
											"name": "DUP13"
										},
										{
											"begin": 12078,
											"end": 12102,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 12078,
											"end": 12102,
											"name": "ADD"
										},
										{
											"begin": 12078,
											"end": 12138,
											"name": "DUP2"
										},
										{
											"begin": 12078,
											"end": 12138,
											"name": "DUP2"
										},
										{
											"begin": 12078,
											"end": 12138,
											"name": "MSTORE"
										},
										{
											"begin": 12078,
											"end": 12138,
											"name": "POP"
										},
										{
											"begin": 12078,
											"end": 12138,
											"name": "POP"
										},
										{
											"begin": 12150,
											"end": 12197,
											"name": "PUSH [tag]",
											"value": "389"
										},
										{
											"begin": 12164,
											"end": 12174,
											"name": "DUP13"
										},
										{
											"begin": 12164,
											"end": 12181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12164,
											"end": 12181,
											"name": "ADD"
										},
										{
											"begin": 12164,
											"end": 12181,
											"name": "MLOAD"
										},
										{
											"begin": 12183,
											"end": 12191,
											"name": "DUP11"
										},
										{
											"begin": 12193,
											"end": 12196,
											"name": "DUP5"
										},
										{
											"begin": 12150,
											"end": 12163,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 12150,
											"end": 12197,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12150,
											"end": 12197,
											"name": "tag",
											"value": "389"
										},
										{
											"begin": 12150,
											"end": 12197,
											"name": "JUMPDEST"
										},
										{
											"begin": 11945,
											"end": 12208,
											"name": "tag",
											"value": "384"
										},
										{
											"begin": 11945,
											"end": 12208,
											"name": "JUMPDEST"
										},
										{
											"begin": 12233,
											"end": 12234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12221,
											"end": 12230,
											"name": "DUP4"
										},
										{
											"begin": 12221,
											"end": 12234,
											"name": "GT"
										},
										{
											"begin": 12217,
											"end": 12480,
											"name": "ISZERO"
										},
										{
											"begin": 12217,
											"end": 12480,
											"name": "PUSH [tag]",
											"value": "390"
										},
										{
											"begin": 12217,
											"end": 12480,
											"name": "JUMPI"
										},
										{
											"begin": 12336,
											"end": 12337,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 12317,
											"end": 12337,
											"name": "EXP"
										},
										{
											"begin": 12254,
											"end": 12313,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 12295,
											"end": 12312,
											"name": "DUP7"
										},
										{
											"begin": 12254,
											"end": 12313,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 12254,
											"end": 12313,
											"name": "AND"
										},
										{
											"begin": 12254,
											"end": 12290,
											"name": "PUSH [tag]",
											"value": "392"
										},
										{
											"begin": 12268,
											"end": 12289,
											"name": "DUP5"
										},
										{
											"begin": 12254,
											"end": 12263,
											"name": "DUP8"
										},
										{
											"begin": 12254,
											"end": 12267,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 12254,
											"end": 12267,
											"name": "SWAP1"
										},
										{
											"begin": 12254,
											"end": 12290,
											"name": "SWAP2"
										},
										{
											"begin": 12254,
											"end": 12290,
											"name": "SWAP1"
										},
										{
											"begin": 12254,
											"end": 12290,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12254,
											"end": 12290,
											"name": "AND"
										},
										{
											"begin": 12254,
											"end": 12290,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12254,
											"end": 12290,
											"name": "tag",
											"value": "392"
										},
										{
											"begin": 12254,
											"end": 12290,
											"name": "JUMPDEST"
										},
										{
											"begin": 12254,
											"end": 12294,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 12254,
											"end": 12294,
											"name": "SWAP1"
										},
										{
											"begin": 12254,
											"end": 12313,
											"name": "SWAP2"
										},
										{
											"begin": 12254,
											"end": 12313,
											"name": "SWAP1"
										},
										{
											"begin": 12254,
											"end": 12313,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12254,
											"end": 12313,
											"name": "AND"
										},
										{
											"begin": 12254,
											"end": 12313,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12254,
											"end": 12313,
											"name": "tag",
											"value": "391"
										},
										{
											"begin": 12254,
											"end": 12313,
											"name": "JUMPDEST"
										},
										{
											"begin": 12254,
											"end": 12338,
											"name": "DUP2"
										},
										{
											"begin": 12254,
											"end": 12338,
											"name": "PUSH [tag]",
											"value": "393"
										},
										{
											"begin": 12254,
											"end": 12338,
											"name": "JUMPI"
										},
										{
											"begin": 12254,
											"end": 12338,
											"name": "INVALID"
										},
										{
											"begin": 12254,
											"end": 12338,
											"name": "tag",
											"value": "393"
										},
										{
											"begin": 12254,
											"end": 12338,
											"name": "JUMPDEST"
										},
										{
											"begin": 12254,
											"end": 12338,
											"name": "DIV"
										},
										{
											"begin": 12248,
											"end": 12338,
											"name": "SWAP2"
										},
										{
											"begin": 12248,
											"end": 12338,
											"name": "POP"
										},
										{
											"begin": 12377,
											"end": 12410,
											"name": "PUSH [tag]",
											"value": "394"
										},
										{
											"begin": 12406,
											"end": 12409,
											"name": "DUP3"
										},
										{
											"begin": 12377,
											"end": 12387,
											"name": "DUP14"
										},
										{
											"begin": 12377,
											"end": 12401,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12377,
											"end": 12401,
											"name": "ADD"
										},
										{
											"begin": 12377,
											"end": 12401,
											"name": "MLOAD"
										},
										{
											"begin": 12377,
											"end": 12405,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 12377,
											"end": 12405,
											"name": "SWAP1"
										},
										{
											"begin": 12377,
											"end": 12410,
											"name": "SWAP2"
										},
										{
											"begin": 12377,
											"end": 12410,
											"name": "SWAP1"
										},
										{
											"begin": 12377,
											"end": 12410,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12377,
											"end": 12410,
											"name": "AND"
										},
										{
											"begin": 12377,
											"end": 12410,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12377,
											"end": 12410,
											"name": "tag",
											"value": "394"
										},
										{
											"begin": 12377,
											"end": 12410,
											"name": "JUMPDEST"
										},
										{
											"begin": 12350,
											"end": 12360,
											"name": "DUP13"
										},
										{
											"begin": 12350,
											"end": 12374,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12350,
											"end": 12374,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12410,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12410,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12410,
											"name": "MSTORE"
										},
										{
											"begin": 12350,
											"end": 12410,
											"name": "POP"
										},
										{
											"begin": 12350,
											"end": 12410,
											"name": "POP"
										},
										{
											"begin": 12422,
											"end": 12469,
											"name": "PUSH [tag]",
											"value": "395"
										},
										{
											"begin": 12436,
											"end": 12446,
											"name": "DUP13"
										},
										{
											"begin": 12436,
											"end": 12453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12436,
											"end": 12453,
											"name": "ADD"
										},
										{
											"begin": 12436,
											"end": 12453,
											"name": "MLOAD"
										},
										{
											"begin": 12455,
											"end": 12463,
											"name": "DUP11"
										},
										{
											"begin": 12465,
											"end": 12468,
											"name": "DUP5"
										},
										{
											"begin": 12422,
											"end": 12435,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 12422,
											"end": 12469,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12422,
											"end": 12469,
											"name": "tag",
											"value": "395"
										},
										{
											"begin": 12422,
											"end": 12469,
											"name": "JUMPDEST"
										},
										{
											"begin": 12217,
											"end": 12480,
											"name": "tag",
											"value": "390"
										},
										{
											"begin": 12217,
											"end": 12480,
											"name": "JUMPDEST"
										},
										{
											"begin": 11904,
											"end": 12488,
											"name": "tag",
											"value": "383"
										},
										{
											"begin": 11904,
											"end": 12488,
											"name": "JUMPDEST"
										},
										{
											"begin": 12499,
											"end": 12509,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 12499,
											"end": 12509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12499,
											"end": 12509,
											"name": "SWAP1"
										},
										{
											"begin": 12499,
											"end": 12509,
											"name": "SLOAD"
										},
										{
											"begin": 12499,
											"end": 12509,
											"name": "SWAP1"
										},
										{
											"begin": 12499,
											"end": 12509,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12499,
											"end": 12509,
											"name": "EXP"
										},
										{
											"begin": 12499,
											"end": 12509,
											"name": "SWAP1"
										},
										{
											"begin": 12499,
											"end": 12509,
											"name": "DIV"
										},
										{
											"begin": 12499,
											"end": 12509,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12499,
											"end": 12509,
											"name": "AND"
										},
										{
											"begin": 12496,
											"end": 13269,
											"name": "ISZERO"
										},
										{
											"begin": 12496,
											"end": 13269,
											"name": "PUSH [tag]",
											"value": "396"
										},
										{
											"begin": 12496,
											"end": 13269,
											"name": "JUMPI"
										},
										{
											"begin": 12521,
											"end": 12539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12541,
											"end": 12554,
											"name": "DUP1"
										},
										{
											"begin": 12567,
											"end": 12574,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12567,
											"end": 12574,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12567,
											"end": 12574,
											"name": "SWAP1"
										},
										{
											"begin": 12567,
											"end": 12574,
											"name": "SLOAD"
										},
										{
											"begin": 12567,
											"end": 12574,
											"name": "SWAP1"
										},
										{
											"begin": 12567,
											"end": 12574,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12567,
											"end": 12574,
											"name": "EXP"
										},
										{
											"begin": 12567,
											"end": 12574,
											"name": "SWAP1"
										},
										{
											"begin": 12567,
											"end": 12574,
											"name": "DIV"
										},
										{
											"begin": 12567,
											"end": 12574,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12567,
											"end": 12574,
											"name": "AND"
										},
										{
											"begin": 12558,
											"end": 12583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12558,
											"end": 12583,
											"name": "AND"
										},
										{
											"begin": 12558,
											"end": 12583,
											"name": "PUSH",
											"value": "995B5AAE"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "MLOAD"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "DUP2"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "AND"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "SHL"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "DUP2"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "MSTORE"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "ADD"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "MLOAD"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "DUP4"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "SUB"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "DUP2"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "DUP7"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "397"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "397"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "GAS"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "STATICCALL"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "398"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "398"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "MLOAD"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "399"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "399"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "DUP2"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "ADD"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "MLOAD"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "ADD"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "SWAP3"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "SWAP2"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "MLOAD"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "ADD"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "SWAP3"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "SWAP2"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12585,
											"name": "POP"
										},
										{
											"begin": 12520,
											"end": 12585,
											"name": "SWAP2"
										},
										{
											"begin": 12520,
											"end": 12585,
											"name": "POP"
										},
										{
											"begin": 12520,
											"end": 12585,
											"name": "SWAP2"
										},
										{
											"begin": 12520,
											"end": 12585,
											"name": "POP"
										},
										{
											"begin": 12615,
											"end": 12616,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12598,
											"end": 12617,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12598,
											"end": 12617,
											"name": "AND"
										},
										{
											"begin": 12598,
											"end": 12603,
											"name": "DUP2"
										},
										{
											"begin": 12598,
											"end": 12617,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12598,
											"end": 12617,
											"name": "AND"
										},
										{
											"begin": 12598,
											"end": 12617,
											"name": "EQ"
										},
										{
											"begin": 12595,
											"end": 13261,
											"name": "PUSH [tag]",
											"value": "400"
										},
										{
											"begin": 12595,
											"end": 13261,
											"name": "JUMPI"
										},
										{
											"begin": 12647,
											"end": 12708,
											"name": "PUSH [tag]",
											"value": "401"
										},
										{
											"begin": 12694,
											"end": 12707,
											"name": "DUP3"
										},
										{
											"begin": 12647,
											"end": 12689,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 12667,
											"end": 12688,
											"name": "DUP6"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 12647,
											"end": 12666,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 12647,
											"end": 12666,
											"name": "SWAP1"
										},
										{
											"begin": 12647,
											"end": 12689,
											"name": "SWAP2"
										},
										{
											"begin": 12647,
											"end": 12689,
											"name": "SWAP1"
										},
										{
											"begin": 12647,
											"end": 12689,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12647,
											"end": 12689,
											"name": "AND"
										},
										{
											"begin": 12647,
											"end": 12689,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12647,
											"end": 12689,
											"name": "tag",
											"value": "402"
										},
										{
											"begin": 12647,
											"end": 12689,
											"name": "JUMPDEST"
										},
										{
											"begin": 12647,
											"end": 12693,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 12647,
											"end": 12693,
											"name": "SWAP1"
										},
										{
											"begin": 12647,
											"end": 12708,
											"name": "SWAP2"
										},
										{
											"begin": 12647,
											"end": 12708,
											"name": "SWAP1"
										},
										{
											"begin": 12647,
											"end": 12708,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12647,
											"end": 12708,
											"name": "AND"
										},
										{
											"begin": 12647,
											"end": 12708,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12647,
											"end": 12708,
											"name": "tag",
											"value": "401"
										},
										{
											"begin": 12647,
											"end": 12708,
											"name": "JUMPDEST"
										},
										{
											"begin": 12631,
											"end": 12708,
											"name": "SWAP2"
										},
										{
											"begin": 12631,
											"end": 12708,
											"name": "POP"
										},
										{
											"begin": 12736,
											"end": 12737,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12724,
											"end": 12733,
											"name": "DUP7"
										},
										{
											"begin": 12724,
											"end": 12737,
											"name": "GT"
										},
										{
											"begin": 12720,
											"end": 12980,
											"name": "ISZERO"
										},
										{
											"begin": 12720,
											"end": 12980,
											"name": "PUSH [tag]",
											"value": "403"
										},
										{
											"begin": 12720,
											"end": 12980,
											"name": "JUMPI"
										},
										{
											"begin": 12833,
											"end": 12834,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 12814,
											"end": 12834,
											"name": "EXP"
										},
										{
											"begin": 12759,
											"end": 12810,
											"name": "PUSH [tag]",
											"value": "404"
										},
										{
											"begin": 12792,
											"end": 12809,
											"name": "DUP10"
										},
										{
											"begin": 12759,
											"end": 12810,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 12759,
											"end": 12810,
											"name": "AND"
										},
										{
											"begin": 12759,
											"end": 12787,
											"name": "PUSH [tag]",
											"value": "405"
										},
										{
											"begin": 12773,
											"end": 12786,
											"name": "DUP6"
										},
										{
											"begin": 12759,
											"end": 12768,
											"name": "DUP11"
										},
										{
											"begin": 12759,
											"end": 12772,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 12759,
											"end": 12772,
											"name": "SWAP1"
										},
										{
											"begin": 12759,
											"end": 12787,
											"name": "SWAP2"
										},
										{
											"begin": 12759,
											"end": 12787,
											"name": "SWAP1"
										},
										{
											"begin": 12759,
											"end": 12787,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12759,
											"end": 12787,
											"name": "AND"
										},
										{
											"begin": 12759,
											"end": 12787,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12759,
											"end": 12787,
											"name": "tag",
											"value": "405"
										},
										{
											"begin": 12759,
											"end": 12787,
											"name": "JUMPDEST"
										},
										{
											"begin": 12759,
											"end": 12791,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 12759,
											"end": 12791,
											"name": "SWAP1"
										},
										{
											"begin": 12759,
											"end": 12810,
											"name": "SWAP2"
										},
										{
											"begin": 12759,
											"end": 12810,
											"name": "SWAP1"
										},
										{
											"begin": 12759,
											"end": 12810,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12759,
											"end": 12810,
											"name": "AND"
										},
										{
											"begin": 12759,
											"end": 12810,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12759,
											"end": 12810,
											"name": "tag",
											"value": "404"
										},
										{
											"begin": 12759,
											"end": 12810,
											"name": "JUMPDEST"
										},
										{
											"begin": 12759,
											"end": 12835,
											"name": "DUP2"
										},
										{
											"begin": 12759,
											"end": 12835,
											"name": "PUSH [tag]",
											"value": "406"
										},
										{
											"begin": 12759,
											"end": 12835,
											"name": "JUMPI"
										},
										{
											"begin": 12759,
											"end": 12835,
											"name": "INVALID"
										},
										{
											"begin": 12759,
											"end": 12835,
											"name": "tag",
											"value": "406"
										},
										{
											"begin": 12759,
											"end": 12835,
											"name": "JUMPDEST"
										},
										{
											"begin": 12759,
											"end": 12835,
											"name": "DIV"
										},
										{
											"begin": 12753,
											"end": 12835,
											"name": "SWAP4"
										},
										{
											"begin": 12753,
											"end": 12835,
											"name": "POP"
										},
										{
											"begin": 12876,
											"end": 12909,
											"name": "PUSH [tag]",
											"value": "407"
										},
										{
											"begin": 12905,
											"end": 12908,
											"name": "DUP5"
										},
										{
											"begin": 12876,
											"end": 12886,
											"name": "DUP16"
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "ADD"
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "MLOAD"
										},
										{
											"begin": 12876,
											"end": 12904,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 12876,
											"end": 12904,
											"name": "SWAP1"
										},
										{
											"begin": 12876,
											"end": 12909,
											"name": "SWAP2"
										},
										{
											"begin": 12876,
											"end": 12909,
											"name": "SWAP1"
										},
										{
											"begin": 12876,
											"end": 12909,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12876,
											"end": 12909,
											"name": "AND"
										},
										{
											"begin": 12876,
											"end": 12909,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12876,
											"end": 12909,
											"name": "tag",
											"value": "407"
										},
										{
											"begin": 12876,
											"end": 12909,
											"name": "JUMPDEST"
										},
										{
											"begin": 12849,
											"end": 12859,
											"name": "DUP15"
										},
										{
											"begin": 12849,
											"end": 12873,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 12849,
											"end": 12873,
											"name": "ADD"
										},
										{
											"begin": 12849,
											"end": 12909,
											"name": "DUP2"
										},
										{
											"begin": 12849,
											"end": 12909,
											"name": "DUP2"
										},
										{
											"begin": 12849,
											"end": 12909,
											"name": "MSTORE"
										},
										{
											"begin": 12849,
											"end": 12909,
											"name": "POP"
										},
										{
											"begin": 12849,
											"end": 12909,
											"name": "POP"
										},
										{
											"begin": 12923,
											"end": 12967,
											"name": "PUSH [tag]",
											"value": "408"
										},
										{
											"begin": 12937,
											"end": 12947,
											"name": "DUP15"
										},
										{
											"begin": 12937,
											"end": 12954,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12937,
											"end": 12954,
											"name": "ADD"
										},
										{
											"begin": 12937,
											"end": 12954,
											"name": "MLOAD"
										},
										{
											"begin": 12956,
											"end": 12961,
											"name": "DUP3"
										},
										{
											"begin": 12963,
											"end": 12966,
											"name": "DUP7"
										},
										{
											"begin": 12923,
											"end": 12936,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 12923,
											"end": 12967,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12923,
											"end": 12967,
											"name": "tag",
											"value": "408"
										},
										{
											"begin": 12923,
											"end": 12967,
											"name": "JUMPDEST"
										},
										{
											"begin": 12720,
											"end": 12980,
											"name": "tag",
											"value": "403"
										},
										{
											"begin": 12720,
											"end": 12980,
											"name": "JUMPDEST"
										},
										{
											"begin": 13007,
											"end": 13008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12995,
											"end": 13004,
											"name": "DUP6"
										},
										{
											"begin": 12995,
											"end": 13008,
											"name": "GT"
										},
										{
											"begin": 12991,
											"end": 13251,
											"name": "ISZERO"
										},
										{
											"begin": 12991,
											"end": 13251,
											"name": "PUSH [tag]",
											"value": "409"
										},
										{
											"begin": 12991,
											"end": 13251,
											"name": "JUMPI"
										},
										{
											"begin": 13104,
											"end": 13105,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 13085,
											"end": 13105,
											"name": "EXP"
										},
										{
											"begin": 13030,
											"end": 13081,
											"name": "PUSH [tag]",
											"value": "410"
										},
										{
											"begin": 13063,
											"end": 13080,
											"name": "DUP9"
										},
										{
											"begin": 13030,
											"end": 13081,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 13030,
											"end": 13081,
											"name": "AND"
										},
										{
											"begin": 13030,
											"end": 13058,
											"name": "PUSH [tag]",
											"value": "411"
										},
										{
											"begin": 13044,
											"end": 13057,
											"name": "DUP6"
										},
										{
											"begin": 13030,
											"end": 13039,
											"name": "DUP10"
										},
										{
											"begin": 13030,
											"end": 13043,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 13030,
											"end": 13043,
											"name": "SWAP1"
										},
										{
											"begin": 13030,
											"end": 13058,
											"name": "SWAP2"
										},
										{
											"begin": 13030,
											"end": 13058,
											"name": "SWAP1"
										},
										{
											"begin": 13030,
											"end": 13058,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13030,
											"end": 13058,
											"name": "AND"
										},
										{
											"begin": 13030,
											"end": 13058,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13030,
											"end": 13058,
											"name": "tag",
											"value": "411"
										},
										{
											"begin": 13030,
											"end": 13058,
											"name": "JUMPDEST"
										},
										{
											"begin": 13030,
											"end": 13062,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 13030,
											"end": 13062,
											"name": "SWAP1"
										},
										{
											"begin": 13030,
											"end": 13081,
											"name": "SWAP2"
										},
										{
											"begin": 13030,
											"end": 13081,
											"name": "SWAP1"
										},
										{
											"begin": 13030,
											"end": 13081,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13030,
											"end": 13081,
											"name": "AND"
										},
										{
											"begin": 13030,
											"end": 13081,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13030,
											"end": 13081,
											"name": "tag",
											"value": "410"
										},
										{
											"begin": 13030,
											"end": 13081,
											"name": "JUMPDEST"
										},
										{
											"begin": 13030,
											"end": 13106,
											"name": "DUP2"
										},
										{
											"begin": 13030,
											"end": 13106,
											"name": "PUSH [tag]",
											"value": "412"
										},
										{
											"begin": 13030,
											"end": 13106,
											"name": "JUMPI"
										},
										{
											"begin": 13030,
											"end": 13106,
											"name": "INVALID"
										},
										{
											"begin": 13030,
											"end": 13106,
											"name": "tag",
											"value": "412"
										},
										{
											"begin": 13030,
											"end": 13106,
											"name": "JUMPDEST"
										},
										{
											"begin": 13030,
											"end": 13106,
											"name": "DIV"
										},
										{
											"begin": 13024,
											"end": 13106,
											"name": "SWAP4"
										},
										{
											"begin": 13024,
											"end": 13106,
											"name": "POP"
										},
										{
											"begin": 13147,
											"end": 13180,
											"name": "PUSH [tag]",
											"value": "413"
										},
										{
											"begin": 13176,
											"end": 13179,
											"name": "DUP5"
										},
										{
											"begin": 13147,
											"end": 13157,
											"name": "DUP16"
										},
										{
											"begin": 13147,
											"end": 13171,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13147,
											"end": 13171,
											"name": "ADD"
										},
										{
											"begin": 13147,
											"end": 13171,
											"name": "MLOAD"
										},
										{
											"begin": 13147,
											"end": 13175,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 13147,
											"end": 13175,
											"name": "SWAP1"
										},
										{
											"begin": 13147,
											"end": 13180,
											"name": "SWAP2"
										},
										{
											"begin": 13147,
											"end": 13180,
											"name": "SWAP1"
										},
										{
											"begin": 13147,
											"end": 13180,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13147,
											"end": 13180,
											"name": "AND"
										},
										{
											"begin": 13147,
											"end": 13180,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13147,
											"end": 13180,
											"name": "tag",
											"value": "413"
										},
										{
											"begin": 13147,
											"end": 13180,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13130,
											"name": "DUP15"
										},
										{
											"begin": 13120,
											"end": 13144,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13120,
											"end": 13144,
											"name": "ADD"
										},
										{
											"begin": 13120,
											"end": 13180,
											"name": "DUP2"
										},
										{
											"begin": 13120,
											"end": 13180,
											"name": "DUP2"
										},
										{
											"begin": 13120,
											"end": 13180,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13180,
											"name": "POP"
										},
										{
											"begin": 13120,
											"end": 13180,
											"name": "POP"
										},
										{
											"begin": 13194,
											"end": 13238,
											"name": "PUSH [tag]",
											"value": "414"
										},
										{
											"begin": 13208,
											"end": 13218,
											"name": "DUP15"
										},
										{
											"begin": 13208,
											"end": 13225,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13208,
											"end": 13225,
											"name": "ADD"
										},
										{
											"begin": 13208,
											"end": 13225,
											"name": "MLOAD"
										},
										{
											"begin": 13227,
											"end": 13232,
											"name": "DUP3"
										},
										{
											"begin": 13234,
											"end": 13237,
											"name": "DUP7"
										},
										{
											"begin": 13194,
											"end": 13207,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 13194,
											"end": 13238,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13194,
											"end": 13238,
											"name": "tag",
											"value": "414"
										},
										{
											"begin": 13194,
											"end": 13238,
											"name": "JUMPDEST"
										},
										{
											"begin": 12991,
											"end": 13251,
											"name": "tag",
											"value": "409"
										},
										{
											"begin": 12991,
											"end": 13251,
											"name": "JUMPDEST"
										},
										{
											"begin": 12595,
											"end": 13261,
											"name": "tag",
											"value": "400"
										},
										{
											"begin": 12595,
											"end": 13261,
											"name": "JUMPDEST"
										},
										{
											"begin": 12496,
											"end": 13269,
											"name": "POP"
										},
										{
											"begin": 12496,
											"end": 13269,
											"name": "POP"
										},
										{
											"begin": 12496,
											"end": 13269,
											"name": "tag",
											"value": "396"
										},
										{
											"begin": 12496,
											"end": 13269,
											"name": "JUMPDEST"
										},
										{
											"begin": 13325,
											"end": 13326,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13313,
											"end": 13322,
											"name": "DUP5"
										},
										{
											"begin": 13313,
											"end": 13326,
											"name": "GT"
										},
										{
											"begin": 13309,
											"end": 13400,
											"name": "ISZERO"
										},
										{
											"begin": 13309,
											"end": 13400,
											"name": "PUSH [tag]",
											"value": "415"
										},
										{
											"begin": 13309,
											"end": 13400,
											"name": "JUMPI"
										},
										{
											"begin": 13357,
											"end": 13367,
											"name": "DUP12"
										},
										{
											"begin": 13357,
											"end": 13374,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13357,
											"end": 13374,
											"name": "ADD"
										},
										{
											"begin": 13357,
											"end": 13374,
											"name": "MLOAD"
										},
										{
											"begin": 13350,
											"end": 13385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13350,
											"end": 13385,
											"name": "AND"
										},
										{
											"begin": 13350,
											"end": 13385,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 13394,
											"end": 13398,
											"name": "ADDRESS"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "MLOAD"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "DUP3"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "AND"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "SHL"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "DUP2"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "MSTORE"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "ADD"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "DUP1"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "DUP3"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "AND"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "AND"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "DUP2"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "MSTORE"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "ADD"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "SWAP2"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "POP"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "POP"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "MLOAD"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "DUP1"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "DUP4"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "SUB"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "DUP2"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "DUP7"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "DUP1"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "416"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "416"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "POP"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "GAS"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "STATICCALL"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "417"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "417"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "POP"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "POP"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "POP"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "POP"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "MLOAD"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "418"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "418"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "DUP2"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "ADD"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "SWAP1"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "DUP1"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "DUP1"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "MLOAD"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "SWAP1"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "ADD"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "SWAP1"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "SWAP3"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "SWAP2"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "SWAP1"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "POP"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "POP"
										},
										{
											"begin": 13350,
											"end": 13400,
											"name": "POP"
										},
										{
											"begin": 13328,
											"end": 13338,
											"name": "DUP13"
										},
										{
											"begin": 13328,
											"end": 13347,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 13328,
											"end": 13347,
											"name": "ADD"
										},
										{
											"begin": 13328,
											"end": 13400,
											"name": "DUP2"
										},
										{
											"begin": 13328,
											"end": 13400,
											"name": "DUP2"
										},
										{
											"begin": 13328,
											"end": 13400,
											"name": "MSTORE"
										},
										{
											"begin": 13328,
											"end": 13400,
											"name": "POP"
										},
										{
											"begin": 13328,
											"end": 13400,
											"name": "POP"
										},
										{
											"begin": 13309,
											"end": 13400,
											"name": "tag",
											"value": "415"
										},
										{
											"begin": 13309,
											"end": 13400,
											"name": "JUMPDEST"
										},
										{
											"begin": 13424,
											"end": 13425,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13412,
											"end": 13421,
											"name": "DUP4"
										},
										{
											"begin": 13412,
											"end": 13425,
											"name": "GT"
										},
										{
											"begin": 13408,
											"end": 13499,
											"name": "ISZERO"
										},
										{
											"begin": 13408,
											"end": 13499,
											"name": "PUSH [tag]",
											"value": "419"
										},
										{
											"begin": 13408,
											"end": 13499,
											"name": "JUMPI"
										},
										{
											"begin": 13456,
											"end": 13466,
											"name": "DUP12"
										},
										{
											"begin": 13456,
											"end": 13473,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13456,
											"end": 13473,
											"name": "ADD"
										},
										{
											"begin": 13456,
											"end": 13473,
											"name": "MLOAD"
										},
										{
											"begin": 13449,
											"end": 13484,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13449,
											"end": 13484,
											"name": "AND"
										},
										{
											"begin": 13449,
											"end": 13484,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 13493,
											"end": 13497,
											"name": "ADDRESS"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "MLOAD"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "DUP3"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "AND"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "SHL"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "DUP2"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "MSTORE"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "ADD"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "DUP1"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "DUP3"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "AND"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "AND"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "DUP2"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "MSTORE"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "ADD"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "SWAP2"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "POP"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "POP"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "MLOAD"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "DUP1"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "DUP4"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "SUB"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "DUP2"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "DUP7"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "DUP1"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "420"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "420"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "POP"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "GAS"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "STATICCALL"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "421"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "421"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "POP"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "POP"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "POP"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "POP"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "MLOAD"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "422"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "422"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "DUP2"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "ADD"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "SWAP1"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "DUP1"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "DUP1"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "MLOAD"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "SWAP1"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "ADD"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "SWAP1"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "SWAP3"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "SWAP2"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "SWAP1"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "POP"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "POP"
										},
										{
											"begin": 13449,
											"end": 13499,
											"name": "POP"
										},
										{
											"begin": 13427,
											"end": 13437,
											"name": "DUP13"
										},
										{
											"begin": 13427,
											"end": 13446,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 13427,
											"end": 13446,
											"name": "ADD"
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "DUP2"
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "DUP2"
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "MSTORE"
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "POP"
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "POP"
										},
										{
											"begin": 13408,
											"end": 13499,
											"name": "tag",
											"value": "419"
										},
										{
											"begin": 13408,
											"end": 13499,
											"name": "JUMPDEST"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 13582,
											"end": 13603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13606,
											"end": 13655,
											"name": "PUSH [tag]",
											"value": "423"
										},
										{
											"begin": 13630,
											"end": 13640,
											"name": "DUP12"
										},
										{
											"begin": 13630,
											"end": 13654,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 13630,
											"end": 13654,
											"name": "ADD"
										},
										{
											"begin": 13630,
											"end": 13654,
											"name": "MLOAD"
										},
										{
											"begin": 13606,
											"end": 13616,
											"name": "DUP13"
										},
										{
											"begin": 13606,
											"end": 13625,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 13606,
											"end": 13625,
											"name": "ADD"
										},
										{
											"begin": 13606,
											"end": 13625,
											"name": "MLOAD"
										},
										{
											"begin": 13606,
											"end": 13629,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 13606,
											"end": 13629,
											"name": "SWAP1"
										},
										{
											"begin": 13606,
											"end": 13655,
											"name": "SWAP2"
										},
										{
											"begin": 13606,
											"end": 13655,
											"name": "SWAP1"
										},
										{
											"begin": 13606,
											"end": 13655,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13606,
											"end": 13655,
											"name": "AND"
										},
										{
											"begin": 13606,
											"end": 13655,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13606,
											"end": 13655,
											"name": "tag",
											"value": "423"
										},
										{
											"begin": 13606,
											"end": 13655,
											"name": "JUMPDEST"
										},
										{
											"begin": 13582,
											"end": 13655,
											"name": "SWAP1"
										},
										{
											"begin": 13582,
											"end": 13655,
											"name": "POP"
										},
										{
											"begin": 13663,
											"end": 13684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13687,
											"end": 13736,
											"name": "PUSH [tag]",
											"value": "424"
										},
										{
											"begin": 13711,
											"end": 13721,
											"name": "DUP13"
										},
										{
											"begin": 13711,
											"end": 13735,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13711,
											"end": 13735,
											"name": "ADD"
										},
										{
											"begin": 13711,
											"end": 13735,
											"name": "MLOAD"
										},
										{
											"begin": 13687,
											"end": 13697,
											"name": "DUP14"
										},
										{
											"begin": 13687,
											"end": 13706,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 13687,
											"end": 13706,
											"name": "ADD"
										},
										{
											"begin": 13687,
											"end": 13706,
											"name": "MLOAD"
										},
										{
											"begin": 13687,
											"end": 13710,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 13687,
											"end": 13710,
											"name": "SWAP1"
										},
										{
											"begin": 13687,
											"end": 13736,
											"name": "SWAP2"
										},
										{
											"begin": 13687,
											"end": 13736,
											"name": "SWAP1"
										},
										{
											"begin": 13687,
											"end": 13736,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13687,
											"end": 13736,
											"name": "AND"
										},
										{
											"begin": 13687,
											"end": 13736,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13687,
											"end": 13736,
											"name": "tag",
											"value": "424"
										},
										{
											"begin": 13687,
											"end": 13736,
											"name": "JUMPDEST"
										},
										{
											"begin": 13663,
											"end": 13736,
											"name": "SWAP1"
										},
										{
											"begin": 13663,
											"end": 13736,
											"name": "POP"
										},
										{
											"begin": 13794,
											"end": 13830,
											"name": "PUSH [tag]",
											"value": "425"
										},
										{
											"begin": 13802,
											"end": 13811,
											"name": "DUP9"
										},
										{
											"begin": 13797,
											"end": 13812,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13797,
											"end": 13812,
											"name": "AND"
										},
										{
											"begin": 13819,
											"end": 13828,
											"name": "DUP9"
										},
										{
											"begin": 13814,
											"end": 13829,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13814,
											"end": 13829,
											"name": "AND"
										},
										{
											"begin": 13794,
											"end": 13796,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 13794,
											"end": 13830,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13794,
											"end": 13830,
											"name": "tag",
											"value": "425"
										},
										{
											"begin": 13794,
											"end": 13830,
											"name": "JUMPDEST"
										},
										{
											"begin": 13752,
											"end": 13790,
											"name": "PUSH [tag]",
											"value": "426"
										},
										{
											"begin": 13755,
											"end": 13771,
											"name": "DUP4"
										},
										{
											"begin": 13773,
											"end": 13789,
											"name": "DUP4"
										},
										{
											"begin": 13752,
											"end": 13754,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 13752,
											"end": 13790,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13752,
											"end": 13790,
											"name": "tag",
											"value": "426"
										},
										{
											"begin": 13752,
											"end": 13790,
											"name": "JUMPDEST"
										},
										{
											"begin": 13752,
											"end": 13830,
											"name": "LT"
										},
										{
											"begin": 13752,
											"end": 13830,
											"name": "ISZERO"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "PUSH [tag]",
											"value": "427"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "JUMPI"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "MLOAD"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "DUP2"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "MSTORE"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "ADD"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "DUP1"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "DUP1"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "ADD"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "DUP3"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "DUP2"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "SUB"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "DUP3"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "MSTORE"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "DUP2"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "MSTORE"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "ADD"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "DUP1"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A204B00000000000000000000000000000000"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "DUP2"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "MSTORE"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "POP"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "ADD"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "SWAP2"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "POP"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "POP"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "MLOAD"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "DUP1"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "SWAP2"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "SUB"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "SWAP1"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "REVERT"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "tag",
											"value": "427"
										},
										{
											"begin": 13744,
											"end": 13851,
											"name": "JUMPDEST"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 13863,
											"end": 13912,
											"name": "PUSH [tag]",
											"value": "428"
										},
										{
											"begin": 13871,
											"end": 13881,
											"name": "DUP11"
										},
										{
											"begin": 13871,
											"end": 13890,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 13871,
											"end": 13890,
											"name": "ADD"
										},
										{
											"begin": 13871,
											"end": 13890,
											"name": "MLOAD"
										},
										{
											"begin": 13892,
											"end": 13902,
											"name": "DUP12"
										},
										{
											"begin": 13892,
											"end": 13911,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 13892,
											"end": 13911,
											"name": "ADD"
										},
										{
											"begin": 13892,
											"end": 13911,
											"name": "MLOAD"
										},
										{
											"begin": 13863,
											"end": 13870,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 13863,
											"end": 13912,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13863,
											"end": 13912,
											"name": "tag",
											"value": "428"
										},
										{
											"begin": 13863,
											"end": 13912,
											"name": "JUMPDEST"
										},
										{
											"begin": 14008,
											"end": 14010,
											"name": "DUP9"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "AND"
										},
										{
											"begin": 13928,
											"end": 13938,
											"name": "CALLER"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "AND"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "PUSH",
											"value": "D78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822"
										},
										{
											"begin": 13940,
											"end": 13949,
											"name": "DUP5"
										},
										{
											"begin": 13951,
											"end": 13960,
											"name": "DUP5"
										},
										{
											"begin": 13962,
											"end": 13972,
											"name": "DUP15"
										},
										{
											"begin": 13962,
											"end": 13983,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13962,
											"end": 13983,
											"name": "ADD"
										},
										{
											"begin": 13962,
											"end": 13983,
											"name": "MLOAD"
										},
										{
											"begin": 13985,
											"end": 13995,
											"name": "DUP16"
										},
										{
											"begin": 13985,
											"end": 14006,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13985,
											"end": 14006,
											"name": "ADD"
										},
										{
											"begin": 13985,
											"end": 14006,
											"name": "MLOAD"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "MLOAD"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "DUP1"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "DUP6"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "DUP2"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "MSTORE"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "ADD"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "DUP5"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "DUP2"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "MSTORE"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "ADD"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "DUP4"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "DUP2"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "MSTORE"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "ADD"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "DUP3"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "DUP2"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "MSTORE"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "ADD"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "SWAP5"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "POP"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "POP"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "POP"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "POP"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "POP"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "MLOAD"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "DUP1"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "SWAP2"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "SUB"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "SWAP1"
										},
										{
											"begin": 13923,
											"end": 14011,
											"name": "LOG3"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1565,
											"end": 1573,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "DUP2"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SWAP1"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "SSTORE"
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "POP"
										},
										{
											"begin": 10039,
											"end": 14016,
											"name": "POP"
										},
										{
											"begin": 10039,
											"end": 14016,
											"name": "POP"
										},
										{
											"begin": 10039,
											"end": 14016,
											"name": "POP"
										},
										{
											"begin": 10039,
											"end": 14016,
											"name": "POP"
										},
										{
											"begin": 10039,
											"end": 14016,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1785,
											"end": 1951,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 1785,
											"end": 1951,
											"name": "JUMPDEST"
										},
										{
											"begin": 1893,
											"end": 1898,
											"name": "DUP1"
										},
										{
											"begin": 1865,
											"end": 1874,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP6"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "AND"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "AND"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "DUP2"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "MSTORE"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "ADD"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "SWAP1"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "DUP2"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "MSTORE"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "ADD"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1881,
											"name": "KECCAK256"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1889,
											"name": "DUP5"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "AND"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "AND"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "DUP2"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "MSTORE"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "ADD"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "SWAP1"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "DUP2"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "MSTORE"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "ADD"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "KECCAK256"
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "DUP2"
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "SWAP1"
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "SSTORE"
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "POP"
										},
										{
											"begin": 1929,
											"end": 1936,
											"name": "DUP2"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "AND"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "DUP4"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "AND"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1938,
											"end": 1943,
											"name": "DUP4"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "MLOAD"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "DUP1"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "DUP3"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "DUP2"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "MSTORE"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "ADD"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "SWAP2"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "POP"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "POP"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "MLOAD"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "DUP1"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "SWAP2"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "SUB"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "SWAP1"
										},
										{
											"begin": 1913,
											"end": 1944,
											"name": "LOG3"
										},
										{
											"begin": 1785,
											"end": 1951,
											"name": "POP"
										},
										{
											"begin": 1785,
											"end": 1951,
											"name": "POP"
										},
										{
											"begin": 1785,
											"end": 1951,
											"name": "POP"
										},
										{
											"begin": 1785,
											"end": 1951,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "JUMPDEST"
										},
										{
											"begin": 340,
											"end": 346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 381,
											"end": 382,
											"name": "DUP3"
										},
										{
											"begin": 375,
											"end": 376,
											"name": "DUP3"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "DUP5"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "SUB"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "SWAP2"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "POP"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "DUP2"
										},
										{
											"begin": 366,
											"end": 382,
											"name": "GT"
										},
										{
											"begin": 366,
											"end": 382,
											"name": "ISZERO"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH [tag]",
											"value": "431"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "JUMPI"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MLOAD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP3"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "SUB"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP3"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F770000000000000000000000"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "POP"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "SWAP2"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "POP"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "POP"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MLOAD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "SWAP2"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "SUB"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "SWAP1"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "REVERT"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "tag",
											"value": "431"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "SWAP3"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "SWAP2"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "POP"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "POP"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1957,
											"end": 2173,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 1957,
											"end": 2173,
											"name": "JUMPDEST"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "PUSH [tag]",
											"value": "433"
										},
										{
											"begin": 2070,
											"end": 2075,
											"name": "DUP2"
										},
										{
											"begin": 2050,
											"end": 2059,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2064,
											"name": "DUP7"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "AND"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "AND"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "DUP2"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "MSTORE"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "ADD"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "SWAP1"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "DUP2"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "MSTORE"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "ADD"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "KECCAK256"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "SLOAD"
										},
										{
											"begin": 2050,
											"end": 2069,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 2050,
											"end": 2069,
											"name": "SWAP1"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "SWAP2"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "SWAP1"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "AND"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "tag",
											"value": "433"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "JUMPDEST"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "DUP6"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "AND"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "AND"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "DUP2"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "MSTORE"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "ADD"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "DUP2"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "MSTORE"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "ADD"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "KECCAK256"
										},
										{
											"begin": 2032,
											"end": 2076,
											"name": "DUP2"
										},
										{
											"begin": 2032,
											"end": 2076,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2076,
											"name": "SSTORE"
										},
										{
											"begin": 2032,
											"end": 2076,
											"name": "POP"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "PUSH [tag]",
											"value": "434"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "DUP2"
										},
										{
											"begin": 2102,
											"end": 2111,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "DUP6"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "AND"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "AND"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "DUP2"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "MSTORE"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "ADD"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "DUP2"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "MSTORE"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "ADD"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "KECCAK256"
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "SLOAD"
										},
										{
											"begin": 2102,
											"end": 2119,
											"name": "PUSH [tag]",
											"value": "435"
										},
										{
											"begin": 2102,
											"end": 2119,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "SWAP2"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "AND"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "tag",
											"value": "434"
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "JUMPDEST"
										},
										{
											"begin": 2086,
											"end": 2095,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2098,
											"name": "DUP5"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "AND"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "AND"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "DUP2"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "MSTORE"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "ADD"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "SWAP1"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "DUP2"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "MSTORE"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "ADD"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2099,
											"name": "KECCAK256"
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "DUP2"
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "SWAP1"
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "SSTORE"
										},
										{
											"begin": 2086,
											"end": 2126,
											"name": "POP"
										},
										{
											"begin": 2156,
											"end": 2158,
											"name": "DUP2"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "AND"
										},
										{
											"begin": 2150,
											"end": 2154,
											"name": "DUP4"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "AND"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2160,
											"end": 2165,
											"name": "DUP4"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "MLOAD"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "DUP1"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "DUP3"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "DUP2"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "MSTORE"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "ADD"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "SWAP2"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "POP"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "POP"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "MLOAD"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "DUP1"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "SWAP2"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "SUB"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "SWAP1"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "LOG3"
										},
										{
											"begin": 1957,
											"end": 2173,
											"name": "POP"
										},
										{
											"begin": 1957,
											"end": 2173,
											"name": "POP"
										},
										{
											"begin": 1957,
											"end": 2173,
											"name": "POP"
										},
										{
											"begin": 1957,
											"end": 2173,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5341,
											"end": 6193,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 5341,
											"end": 6193,
											"name": "JUMPDEST"
										},
										{
											"begin": 5414,
											"end": 5424,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5435,
											"end": 5445,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 5435,
											"end": 5445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5435,
											"end": 5445,
											"name": "SWAP1"
										},
										{
											"begin": 5435,
											"end": 5445,
											"name": "SLOAD"
										},
										{
											"begin": 5435,
											"end": 5445,
											"name": "SWAP1"
										},
										{
											"begin": 5435,
											"end": 5445,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5435,
											"end": 5445,
											"name": "EXP"
										},
										{
											"begin": 5435,
											"end": 5445,
											"name": "SWAP1"
										},
										{
											"begin": 5435,
											"end": 5445,
											"name": "DIV"
										},
										{
											"begin": 5435,
											"end": 5445,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5435,
											"end": 5445,
											"name": "AND"
										},
										{
											"begin": 5432,
											"end": 5459,
											"name": "ISZERO"
										},
										{
											"begin": 5432,
											"end": 5459,
											"name": "PUSH [tag]",
											"value": "437"
										},
										{
											"begin": 5432,
											"end": 5459,
											"name": "JUMPI"
										},
										{
											"begin": 5454,
											"end": 5459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5459,
											"name": "SWAP1"
										},
										{
											"begin": 5447,
											"end": 5459,
											"name": "POP"
										},
										{
											"begin": 5447,
											"end": 5459,
											"name": "PUSH [tag]",
											"value": "436"
										},
										{
											"begin": 5447,
											"end": 5459,
											"name": "JUMP"
										},
										{
											"begin": 5432,
											"end": 5459,
											"name": "tag",
											"value": "437"
										},
										{
											"begin": 5432,
											"end": 5459,
											"name": "JUMPDEST"
										},
										{
											"begin": 5467,
											"end": 5485,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5500,
											"name": "DUP1"
										},
										{
											"begin": 5513,
											"end": 5520,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5513,
											"end": 5520,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5520,
											"name": "SWAP1"
										},
										{
											"begin": 5513,
											"end": 5520,
											"name": "SLOAD"
										},
										{
											"begin": 5513,
											"end": 5520,
											"name": "SWAP1"
										},
										{
											"begin": 5513,
											"end": 5520,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5513,
											"end": 5520,
											"name": "EXP"
										},
										{
											"begin": 5513,
											"end": 5520,
											"name": "SWAP1"
										},
										{
											"begin": 5513,
											"end": 5520,
											"name": "DIV"
										},
										{
											"begin": 5513,
											"end": 5520,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5513,
											"end": 5520,
											"name": "AND"
										},
										{
											"begin": 5504,
											"end": 5529,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5504,
											"end": 5529,
											"name": "AND"
										},
										{
											"begin": 5504,
											"end": 5529,
											"name": "PUSH",
											"value": "995B5AAE"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "MLOAD"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "DUP2"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "AND"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "SHL"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "DUP2"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "MSTORE"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "ADD"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "DUP1"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "MLOAD"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "DUP1"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "DUP4"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "SUB"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "DUP2"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "DUP7"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "DUP1"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "438"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "438"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "POP"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "GAS"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "STATICCALL"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "439"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "439"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "POP"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "POP"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "POP"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "POP"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "MLOAD"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "440"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "440"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "DUP2"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "ADD"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "SWAP1"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "DUP1"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "DUP1"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "MLOAD"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "SWAP1"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "ADD"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "SWAP1"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "SWAP3"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "SWAP2"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "SWAP1"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "DUP1"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "MLOAD"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "SWAP1"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "ADD"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "SWAP1"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "SWAP3"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "SWAP2"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "SWAP1"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "POP"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "POP"
										},
										{
											"begin": 5504,
											"end": 5531,
											"name": "POP"
										},
										{
											"begin": 5466,
											"end": 5531,
											"name": "SWAP2"
										},
										{
											"begin": 5466,
											"end": 5531,
											"name": "POP"
										},
										{
											"begin": 5466,
											"end": 5531,
											"name": "SWAP2"
										},
										{
											"begin": 5466,
											"end": 5531,
											"name": "POP"
										},
										{
											"begin": 5562,
											"end": 5563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5545,
											"end": 5564,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5545,
											"end": 5564,
											"name": "AND"
										},
										{
											"begin": 5545,
											"end": 5550,
											"name": "DUP2"
										},
										{
											"begin": 5545,
											"end": 5564,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5545,
											"end": 5564,
											"name": "AND"
										},
										{
											"begin": 5545,
											"end": 5564,
											"name": "EQ"
										},
										{
											"begin": 5545,
											"end": 5564,
											"name": "ISZERO"
										},
										{
											"begin": 5537,
											"end": 5564,
											"name": "SWAP3"
										},
										{
											"begin": 5537,
											"end": 5564,
											"name": "POP"
										},
										{
											"begin": 5570,
											"end": 5581,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "SLOAD"
										},
										{
											"begin": 5570,
											"end": 5589,
											"name": "SWAP1"
										},
										{
											"begin": 5570,
											"end": 5589,
											"name": "POP"
										},
										{
											"begin": 5618,
											"end": 5623,
											"name": "DUP4"
										},
										{
											"begin": 5614,
											"end": 6189,
											"name": "ISZERO"
										},
										{
											"begin": 5614,
											"end": 6189,
											"name": "PUSH [tag]",
											"value": "441"
										},
										{
											"begin": 5614,
											"end": 6189,
											"name": "JUMPI"
										},
										{
											"begin": 5647,
											"end": 5648,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5637,
											"end": 5643,
											"name": "DUP2"
										},
										{
											"begin": 5637,
											"end": 5648,
											"name": "EQ"
										},
										{
											"begin": 5633,
											"end": 6136,
											"name": "PUSH [tag]",
											"value": "442"
										},
										{
											"begin": 5633,
											"end": 6136,
											"name": "JUMPI"
										},
										{
											"begin": 5660,
											"end": 5670,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5673,
											"end": 5720,
											"name": "PUSH [tag]",
											"value": "443"
										},
										{
											"begin": 5683,
											"end": 5719,
											"name": "PUSH [tag]",
											"value": "444"
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "DUP9"
										},
										{
											"begin": 5686,
											"end": 5701,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5686,
											"end": 5701,
											"name": "AND"
										},
										{
											"begin": 5708,
											"end": 5717,
											"name": "DUP9"
										},
										{
											"begin": 5703,
											"end": 5718,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5703,
											"end": 5718,
											"name": "AND"
										},
										{
											"begin": 5683,
											"end": 5685,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 5683,
											"end": 5719,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5683,
											"end": 5719,
											"name": "tag",
											"value": "444"
										},
										{
											"begin": 5683,
											"end": 5719,
											"name": "JUMPDEST"
										},
										{
											"begin": 5673,
											"end": 5682,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 5673,
											"end": 5720,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5673,
											"end": 5720,
											"name": "tag",
											"value": "443"
										},
										{
											"begin": 5673,
											"end": 5720,
											"name": "JUMPDEST"
										},
										{
											"begin": 5660,
											"end": 5720,
											"name": "SWAP1"
										},
										{
											"begin": 5660,
											"end": 5720,
											"name": "POP"
										},
										{
											"begin": 5730,
											"end": 5744,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5747,
											"end": 5764,
											"name": "PUSH [tag]",
											"value": "445"
										},
										{
											"begin": 5757,
											"end": 5763,
											"name": "DUP4"
										},
										{
											"begin": 5747,
											"end": 5756,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 5747,
											"end": 5764,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5747,
											"end": 5764,
											"name": "tag",
											"value": "445"
										},
										{
											"begin": 5747,
											"end": 5764,
											"name": "JUMPDEST"
										},
										{
											"begin": 5730,
											"end": 5764,
											"name": "SWAP1"
										},
										{
											"begin": 5730,
											"end": 5764,
											"name": "POP"
										},
										{
											"begin": 5786,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5778,
											"end": 5783,
											"name": "DUP3"
										},
										{
											"begin": 5778,
											"end": 5795,
											"name": "GT"
										},
										{
											"begin": 5774,
											"end": 6128,
											"name": "ISZERO"
										},
										{
											"begin": 5774,
											"end": 6128,
											"name": "PUSH [tag]",
											"value": "446"
										},
										{
											"begin": 5774,
											"end": 6128,
											"name": "JUMPI"
										},
										{
											"begin": 5809,
											"end": 5815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "PUSH [tag]",
											"value": "447"
										},
										{
											"begin": 5865,
											"end": 5868,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 5846,
											"end": 5859,
											"name": "DUP8"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "PUSH [tag]",
											"value": "448"
										},
										{
											"begin": 5839,
											"end": 5842,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 5819,
											"end": 5838,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 5819,
											"end": 5838,
											"name": "SWAP1"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "SWAP2"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "SWAP1"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "AND"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "tag",
											"value": "448"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "JUMPDEST"
										},
										{
											"begin": 5819,
											"end": 5859,
											"name": "DUP2"
										},
										{
											"begin": 5819,
											"end": 5859,
											"name": "PUSH [tag]",
											"value": "449"
										},
										{
											"begin": 5819,
											"end": 5859,
											"name": "JUMPI"
										},
										{
											"begin": 5819,
											"end": 5859,
											"name": "INVALID"
										},
										{
											"begin": 5819,
											"end": 5859,
											"name": "tag",
											"value": "449"
										},
										{
											"begin": 5819,
											"end": 5859,
											"name": "JUMPDEST"
										},
										{
											"begin": 5819,
											"end": 5859,
											"name": "DIV"
										},
										{
											"begin": 5818,
											"end": 5864,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 5818,
											"end": 5864,
											"name": "SWAP1"
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "SWAP2"
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "SWAP1"
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "AND"
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "tag",
											"value": "447"
										},
										{
											"begin": 5818,
											"end": 5869,
											"name": "JUMPDEST"
										},
										{
											"begin": 5809,
											"end": 5869,
											"name": "SWAP1"
										},
										{
											"begin": 5809,
											"end": 5869,
											"name": "POP"
										},
										{
											"begin": 5881,
											"end": 5895,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5944,
											"name": "PUSH [tag]",
											"value": "450"
										},
										{
											"begin": 5940,
											"end": 5943,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 5898,
											"end": 5935,
											"name": "PUSH [tag]",
											"value": "451"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "PUSH [tag]",
											"value": "452"
										},
										{
											"begin": 5924,
											"end": 5933,
											"name": "DUP7"
										},
										{
											"begin": 5914,
											"end": 5919,
											"name": "DUP9"
										},
										{
											"begin": 5914,
											"end": 5923,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 5914,
											"end": 5923,
											"name": "SWAP1"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "SWAP2"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "SWAP1"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "AND"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "tag",
											"value": "452"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "JUMPDEST"
										},
										{
											"begin": 5898,
											"end": 5909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5909,
											"name": "SLOAD"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "SWAP1"
										},
										{
											"begin": 5898,
											"end": 5935,
											"name": "SWAP2"
										},
										{
											"begin": 5898,
											"end": 5935,
											"name": "SWAP1"
										},
										{
											"begin": 5898,
											"end": 5935,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5898,
											"end": 5935,
											"name": "AND"
										},
										{
											"begin": 5898,
											"end": 5935,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5898,
											"end": 5935,
											"name": "tag",
											"value": "451"
										},
										{
											"begin": 5898,
											"end": 5935,
											"name": "JUMPDEST"
										},
										{
											"begin": 5898,
											"end": 5939,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 5898,
											"end": 5939,
											"name": "SWAP1"
										},
										{
											"begin": 5898,
											"end": 5944,
											"name": "SWAP2"
										},
										{
											"begin": 5898,
											"end": 5944,
											"name": "SWAP1"
										},
										{
											"begin": 5898,
											"end": 5944,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5898,
											"end": 5944,
											"name": "AND"
										},
										{
											"begin": 5898,
											"end": 5944,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5898,
											"end": 5944,
											"name": "tag",
											"value": "450"
										},
										{
											"begin": 5898,
											"end": 5944,
											"name": "JUMPDEST"
										},
										{
											"begin": 5881,
											"end": 5944,
											"name": "SWAP1"
										},
										{
											"begin": 5881,
											"end": 5944,
											"name": "POP"
										},
										{
											"begin": 5956,
											"end": 5972,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 6011,
											"name": "PUSH [tag]",
											"value": "453"
										},
										{
											"begin": 5992,
											"end": 6010,
											"name": "PUSH [tag]",
											"value": "454"
										},
										{
											"begin": 6006,
											"end": 6009,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 5992,
											"end": 6001,
											"name": "DUP7"
										},
										{
											"begin": 5992,
											"end": 6005,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 5992,
											"end": 6005,
											"name": "SWAP1"
										},
										{
											"begin": 5992,
											"end": 6010,
											"name": "SWAP2"
										},
										{
											"begin": 5992,
											"end": 6010,
											"name": "SWAP1"
										},
										{
											"begin": 5992,
											"end": 6010,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5992,
											"end": 6010,
											"name": "AND"
										},
										{
											"begin": 5992,
											"end": 6010,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5992,
											"end": 6010,
											"name": "tag",
											"value": "454"
										},
										{
											"begin": 5992,
											"end": 6010,
											"name": "JUMPDEST"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "PUSH [tag]",
											"value": "455"
										},
										{
											"begin": 5985,
											"end": 5986,
											"name": "DUP6"
										},
										{
											"begin": 5975,
											"end": 5980,
											"name": "DUP9"
										},
										{
											"begin": 5975,
											"end": 5984,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 5975,
											"end": 5984,
											"name": "SWAP1"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "SWAP2"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "SWAP1"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "AND"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "tag",
											"value": "455"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "JUMPDEST"
										},
										{
											"begin": 5975,
											"end": 5991,
											"name": "PUSH [tag]",
											"value": "435"
										},
										{
											"begin": 5975,
											"end": 5991,
											"name": "SWAP1"
										},
										{
											"begin": 5975,
											"end": 6011,
											"name": "SWAP2"
										},
										{
											"begin": 5975,
											"end": 6011,
											"name": "SWAP1"
										},
										{
											"begin": 5975,
											"end": 6011,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5975,
											"end": 6011,
											"name": "AND"
										},
										{
											"begin": 5975,
											"end": 6011,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5975,
											"end": 6011,
											"name": "tag",
											"value": "453"
										},
										{
											"begin": 5975,
											"end": 6011,
											"name": "JUMPDEST"
										},
										{
											"begin": 5956,
											"end": 6011,
											"name": "SWAP1"
										},
										{
											"begin": 5956,
											"end": 6011,
											"name": "POP"
										},
										{
											"begin": 6023,
											"end": 6037,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6052,
											"end": 6063,
											"name": "DUP2"
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "DUP4"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "DUP2"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH [tag]",
											"value": "456"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "JUMPI"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "INVALID"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "tag",
											"value": "456"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "JUMPDEST"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "DIV"
										},
										{
											"begin": 6023,
											"end": 6063,
											"name": "SWAP1"
										},
										{
											"begin": 6023,
											"end": 6063,
											"name": "POP"
										},
										{
											"begin": 6091,
											"end": 6092,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6079,
											"end": 6088,
											"name": "DUP2"
										},
										{
											"begin": 6079,
											"end": 6092,
											"name": "GT"
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "ISZERO"
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "PUSH [tag]",
											"value": "457"
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "JUMPI"
										},
										{
											"begin": 6094,
											"end": 6117,
											"name": "PUSH [tag]",
											"value": "458"
										},
										{
											"begin": 6100,
											"end": 6105,
											"name": "DUP9"
										},
										{
											"begin": 6107,
											"end": 6116,
											"name": "DUP3"
										},
										{
											"begin": 6094,
											"end": 6099,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 6094,
											"end": 6117,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6094,
											"end": 6117,
											"name": "tag",
											"value": "458"
										},
										{
											"begin": 6094,
											"end": 6117,
											"name": "JUMPDEST"
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "tag",
											"value": "457"
										},
										{
											"begin": 6075,
											"end": 6117,
											"name": "JUMPDEST"
										},
										{
											"begin": 5774,
											"end": 6128,
											"name": "POP"
										},
										{
											"begin": 5774,
											"end": 6128,
											"name": "POP"
										},
										{
											"begin": 5774,
											"end": 6128,
											"name": "POP"
										},
										{
											"begin": 5774,
											"end": 6128,
											"name": "POP"
										},
										{
											"begin": 5774,
											"end": 6128,
											"name": "tag",
											"value": "446"
										},
										{
											"begin": 5774,
											"end": 6128,
											"name": "JUMPDEST"
										},
										{
											"begin": 5633,
											"end": 6136,
											"name": "POP"
										},
										{
											"begin": 5633,
											"end": 6136,
											"name": "POP"
										},
										{
											"begin": 5633,
											"end": 6136,
											"name": "tag",
											"value": "442"
										},
										{
											"begin": 5633,
											"end": 6136,
											"name": "JUMPDEST"
										},
										{
											"begin": 5614,
											"end": 6189,
											"name": "PUSH [tag]",
											"value": "459"
										},
										{
											"begin": 5614,
											"end": 6189,
											"name": "JUMP"
										},
										{
											"begin": 5614,
											"end": 6189,
											"name": "tag",
											"value": "441"
										},
										{
											"begin": 5614,
											"end": 6189,
											"name": "JUMPDEST"
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6152,
											"end": 6158,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6163,
											"name": "EQ"
										},
										{
											"begin": 6148,
											"end": 6189,
											"name": "PUSH [tag]",
											"value": "460"
										},
										{
											"begin": 6148,
											"end": 6189,
											"name": "JUMPI"
										},
										{
											"begin": 6181,
											"end": 6182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6173,
											"end": 6178,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 6173,
											"end": 6182,
											"name": "DUP2"
										},
										{
											"begin": 6173,
											"end": 6182,
											"name": "SWAP1"
										},
										{
											"begin": 6173,
											"end": 6182,
											"name": "SSTORE"
										},
										{
											"begin": 6173,
											"end": 6182,
											"name": "POP"
										},
										{
											"begin": 6148,
											"end": 6189,
											"name": "tag",
											"value": "460"
										},
										{
											"begin": 6148,
											"end": 6189,
											"name": "JUMPDEST"
										},
										{
											"begin": 5614,
											"end": 6189,
											"name": "tag",
											"value": "459"
										},
										{
											"begin": 5614,
											"end": 6189,
											"name": "JUMPDEST"
										},
										{
											"begin": 5341,
											"end": 6193,
											"name": "POP"
										},
										{
											"begin": 5341,
											"end": 6193,
											"name": "POP"
										},
										{
											"begin": 5341,
											"end": 6193,
											"name": "POP"
										},
										{
											"begin": 5341,
											"end": 6193,
											"name": "tag",
											"value": "436"
										},
										{
											"begin": 5341,
											"end": 6193,
											"name": "JUMPDEST"
										},
										{
											"begin": 5341,
											"end": 6193,
											"name": "SWAP3"
										},
										{
											"begin": 5341,
											"end": 6193,
											"name": "SWAP2"
										},
										{
											"begin": 5341,
											"end": 6193,
											"name": "POP"
										},
										{
											"begin": 5341,
											"end": 6193,
											"name": "POP"
										},
										{
											"begin": 5341,
											"end": 6193,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14020,
											"end": 14423,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 14020,
											"end": 14423,
											"name": "JUMPDEST"
										},
										{
											"begin": 14085,
											"end": 14089,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14101,
											"end": 14111,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 14101,
											"end": 14111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14101,
											"end": 14111,
											"name": "SWAP1"
										},
										{
											"begin": 14101,
											"end": 14111,
											"name": "SLOAD"
										},
										{
											"begin": 14101,
											"end": 14111,
											"name": "SWAP1"
										},
										{
											"begin": 14101,
											"end": 14111,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14101,
											"end": 14111,
											"name": "EXP"
										},
										{
											"begin": 14101,
											"end": 14111,
											"name": "SWAP1"
										},
										{
											"begin": 14101,
											"end": 14111,
											"name": "DIV"
										},
										{
											"begin": 14101,
											"end": 14111,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 14101,
											"end": 14111,
											"name": "AND"
										},
										{
											"begin": 14097,
											"end": 14384,
											"name": "ISZERO"
										},
										{
											"begin": 14097,
											"end": 14384,
											"name": "PUSH [tag]",
											"value": "462"
										},
										{
											"begin": 14097,
											"end": 14384,
											"name": "JUMPI"
										},
										{
											"begin": 14121,
											"end": 14128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14152,
											"end": 14172,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 14152,
											"end": 14172,
											"name": "SLOAD"
										},
										{
											"begin": 14131,
											"end": 14149,
											"name": "PUSH [tag]",
											"value": "463"
										},
										{
											"begin": 14144,
											"end": 14148,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14131,
											"end": 14139,
											"name": "DUP7"
										},
										{
											"begin": 14131,
											"end": 14143,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 14131,
											"end": 14143,
											"name": "SWAP1"
										},
										{
											"begin": 14131,
											"end": 14149,
											"name": "SWAP2"
										},
										{
											"begin": 14131,
											"end": 14149,
											"name": "SWAP1"
										},
										{
											"begin": 14131,
											"end": 14149,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14131,
											"end": 14149,
											"name": "AND"
										},
										{
											"begin": 14131,
											"end": 14149,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14131,
											"end": 14149,
											"name": "tag",
											"value": "463"
										},
										{
											"begin": 14131,
											"end": 14149,
											"name": "JUMPDEST"
										},
										{
											"begin": 14131,
											"end": 14172,
											"name": "DUP2"
										},
										{
											"begin": 14131,
											"end": 14172,
											"name": "PUSH [tag]",
											"value": "464"
										},
										{
											"begin": 14131,
											"end": 14172,
											"name": "JUMPI"
										},
										{
											"begin": 14131,
											"end": 14172,
											"name": "INVALID"
										},
										{
											"begin": 14131,
											"end": 14172,
											"name": "tag",
											"value": "464"
										},
										{
											"begin": 14131,
											"end": 14172,
											"name": "JUMPDEST"
										},
										{
											"begin": 14131,
											"end": 14172,
											"name": "DIV"
										},
										{
											"begin": 14121,
											"end": 14172,
											"name": "SWAP1"
										},
										{
											"begin": 14121,
											"end": 14172,
											"name": "POP"
										},
										{
											"begin": 14180,
											"end": 14187,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14211,
											"end": 14231,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 14211,
											"end": 14231,
											"name": "SLOAD"
										},
										{
											"begin": 14190,
											"end": 14208,
											"name": "PUSH [tag]",
											"value": "465"
										},
										{
											"begin": 14203,
											"end": 14207,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14190,
											"end": 14198,
											"name": "DUP7"
										},
										{
											"begin": 14190,
											"end": 14202,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 14190,
											"end": 14202,
											"name": "SWAP1"
										},
										{
											"begin": 14190,
											"end": 14208,
											"name": "SWAP2"
										},
										{
											"begin": 14190,
											"end": 14208,
											"name": "SWAP1"
										},
										{
											"begin": 14190,
											"end": 14208,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14190,
											"end": 14208,
											"name": "AND"
										},
										{
											"begin": 14190,
											"end": 14208,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14190,
											"end": 14208,
											"name": "tag",
											"value": "465"
										},
										{
											"begin": 14190,
											"end": 14208,
											"name": "JUMPDEST"
										},
										{
											"begin": 14190,
											"end": 14231,
											"name": "DUP2"
										},
										{
											"begin": 14190,
											"end": 14231,
											"name": "PUSH [tag]",
											"value": "466"
										},
										{
											"begin": 14190,
											"end": 14231,
											"name": "JUMPI"
										},
										{
											"begin": 14190,
											"end": 14231,
											"name": "INVALID"
										},
										{
											"begin": 14190,
											"end": 14231,
											"name": "tag",
											"value": "466"
										},
										{
											"begin": 14190,
											"end": 14231,
											"name": "JUMPDEST"
										},
										{
											"begin": 14190,
											"end": 14231,
											"name": "DIV"
										},
										{
											"begin": 14180,
											"end": 14231,
											"name": "SWAP1"
										},
										{
											"begin": 14180,
											"end": 14231,
											"name": "POP"
										},
										{
											"begin": 14239,
											"end": 14246,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14264,
											"end": 14268,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14250,
											"end": 14260,
											"name": "PUSH [tag]",
											"value": "467"
										},
										{
											"begin": 14257,
											"end": 14259,
											"name": "DUP4"
										},
										{
											"begin": 14250,
											"end": 14252,
											"name": "DUP6"
										},
										{
											"begin": 14250,
											"end": 14256,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 14250,
											"end": 14256,
											"name": "SWAP1"
										},
										{
											"begin": 14250,
											"end": 14260,
											"name": "SWAP2"
										},
										{
											"begin": 14250,
											"end": 14260,
											"name": "SWAP1"
										},
										{
											"begin": 14250,
											"end": 14260,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14250,
											"end": 14260,
											"name": "AND"
										},
										{
											"begin": 14250,
											"end": 14260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14250,
											"end": 14260,
											"name": "tag",
											"value": "467"
										},
										{
											"begin": 14250,
											"end": 14260,
											"name": "JUMPDEST"
										},
										{
											"begin": 14249,
											"end": 14268,
											"name": "DUP2"
										},
										{
											"begin": 14249,
											"end": 14268,
											"name": "PUSH [tag]",
											"value": "468"
										},
										{
											"begin": 14249,
											"end": 14268,
											"name": "JUMPI"
										},
										{
											"begin": 14249,
											"end": 14268,
											"name": "INVALID"
										},
										{
											"begin": 14249,
											"end": 14268,
											"name": "tag",
											"value": "468"
										},
										{
											"begin": 14249,
											"end": 14268,
											"name": "JUMPDEST"
										},
										{
											"begin": 14249,
											"end": 14268,
											"name": "DIV"
										},
										{
											"begin": 14239,
											"end": 14268,
											"name": "SWAP1"
										},
										{
											"begin": 14239,
											"end": 14268,
											"name": "POP"
										},
										{
											"begin": 14276,
											"end": 14283,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14286,
											"end": 14328,
											"name": "PUSH [tag]",
											"value": "469"
										},
										{
											"begin": 14323,
											"end": 14327,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14310,
											"end": 14320,
											"name": "PUSH [tag]",
											"value": "470"
										},
										{
											"begin": 14317,
											"end": 14319,
											"name": "DUP6"
										},
										{
											"begin": 14310,
											"end": 14312,
											"name": "DUP7"
										},
										{
											"begin": 14310,
											"end": 14316,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 14310,
											"end": 14316,
											"name": "SWAP1"
										},
										{
											"begin": 14310,
											"end": 14320,
											"name": "SWAP2"
										},
										{
											"begin": 14310,
											"end": 14320,
											"name": "SWAP1"
										},
										{
											"begin": 14310,
											"end": 14320,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14310,
											"end": 14320,
											"name": "AND"
										},
										{
											"begin": 14310,
											"end": 14320,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14310,
											"end": 14320,
											"name": "tag",
											"value": "470"
										},
										{
											"begin": 14310,
											"end": 14320,
											"name": "JUMPDEST"
										},
										{
											"begin": 14310,
											"end": 14327,
											"name": "DUP2"
										},
										{
											"begin": 14310,
											"end": 14327,
											"name": "PUSH [tag]",
											"value": "471"
										},
										{
											"begin": 14310,
											"end": 14327,
											"name": "JUMPI"
										},
										{
											"begin": 14310,
											"end": 14327,
											"name": "INVALID"
										},
										{
											"begin": 14310,
											"end": 14327,
											"name": "tag",
											"value": "471"
										},
										{
											"begin": 14310,
											"end": 14327,
											"name": "JUMPDEST"
										},
										{
											"begin": 14310,
											"end": 14327,
											"name": "DIV"
										},
										{
											"begin": 14300,
											"end": 14304,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14287,
											"end": 14297,
											"name": "PUSH [tag]",
											"value": "472"
										},
										{
											"begin": 14294,
											"end": 14296,
											"name": "DUP8"
										},
										{
											"begin": 14287,
											"end": 14289,
											"name": "DUP9"
										},
										{
											"begin": 14287,
											"end": 14293,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 14287,
											"end": 14293,
											"name": "SWAP1"
										},
										{
											"begin": 14287,
											"end": 14297,
											"name": "SWAP2"
										},
										{
											"begin": 14287,
											"end": 14297,
											"name": "SWAP1"
										},
										{
											"begin": 14287,
											"end": 14297,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14287,
											"end": 14297,
											"name": "AND"
										},
										{
											"begin": 14287,
											"end": 14297,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14287,
											"end": 14297,
											"name": "tag",
											"value": "472"
										},
										{
											"begin": 14287,
											"end": 14297,
											"name": "JUMPDEST"
										},
										{
											"begin": 14287,
											"end": 14304,
											"name": "DUP2"
										},
										{
											"begin": 14287,
											"end": 14304,
											"name": "PUSH [tag]",
											"value": "473"
										},
										{
											"begin": 14287,
											"end": 14304,
											"name": "JUMPI"
										},
										{
											"begin": 14287,
											"end": 14304,
											"name": "INVALID"
										},
										{
											"begin": 14287,
											"end": 14304,
											"name": "tag",
											"value": "473"
										},
										{
											"begin": 14287,
											"end": 14304,
											"name": "JUMPDEST"
										},
										{
											"begin": 14287,
											"end": 14304,
											"name": "DIV"
										},
										{
											"begin": 14286,
											"end": 14309,
											"name": "PUSH [tag]",
											"value": "435"
										},
										{
											"begin": 14286,
											"end": 14309,
											"name": "SWAP1"
										},
										{
											"begin": 14286,
											"end": 14328,
											"name": "SWAP2"
										},
										{
											"begin": 14286,
											"end": 14328,
											"name": "SWAP1"
										},
										{
											"begin": 14286,
											"end": 14328,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14286,
											"end": 14328,
											"name": "AND"
										},
										{
											"begin": 14286,
											"end": 14328,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14286,
											"end": 14328,
											"name": "tag",
											"value": "469"
										},
										{
											"begin": 14286,
											"end": 14328,
											"name": "JUMPDEST"
										},
										{
											"begin": 14276,
											"end": 14328,
											"name": "SWAP1"
										},
										{
											"begin": 14276,
											"end": 14328,
											"name": "POP"
										},
										{
											"begin": 14357,
											"end": 14361,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14344,
											"end": 14354,
											"name": "PUSH [tag]",
											"value": "474"
										},
										{
											"begin": 14351,
											"end": 14353,
											"name": "DUP3"
										},
										{
											"begin": 14344,
											"end": 14346,
											"name": "DUP5"
										},
										{
											"begin": 14344,
											"end": 14350,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 14344,
											"end": 14350,
											"name": "SWAP1"
										},
										{
											"begin": 14344,
											"end": 14354,
											"name": "SWAP2"
										},
										{
											"begin": 14344,
											"end": 14354,
											"name": "SWAP1"
										},
										{
											"begin": 14344,
											"end": 14354,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14344,
											"end": 14354,
											"name": "AND"
										},
										{
											"begin": 14344,
											"end": 14354,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14344,
											"end": 14354,
											"name": "tag",
											"value": "474"
										},
										{
											"begin": 14344,
											"end": 14354,
											"name": "JUMPDEST"
										},
										{
											"begin": 14344,
											"end": 14361,
											"name": "DUP2"
										},
										{
											"begin": 14344,
											"end": 14361,
											"name": "PUSH [tag]",
											"value": "475"
										},
										{
											"begin": 14344,
											"end": 14361,
											"name": "JUMPI"
										},
										{
											"begin": 14344,
											"end": 14361,
											"name": "INVALID"
										},
										{
											"begin": 14344,
											"end": 14361,
											"name": "tag",
											"value": "475"
										},
										{
											"begin": 14344,
											"end": 14361,
											"name": "JUMPDEST"
										},
										{
											"begin": 14344,
											"end": 14361,
											"name": "DIV"
										},
										{
											"begin": 14336,
											"end": 14361,
											"name": "SWAP5"
										},
										{
											"begin": 14336,
											"end": 14361,
											"name": "POP"
										},
										{
											"begin": 14336,
											"end": 14361,
											"name": "POP"
										},
										{
											"begin": 14336,
											"end": 14361,
											"name": "POP"
										},
										{
											"begin": 14336,
											"end": 14361,
											"name": "POP"
										},
										{
											"begin": 14336,
											"end": 14361,
											"name": "POP"
										},
										{
											"begin": 14336,
											"end": 14361,
											"name": "PUSH [tag]",
											"value": "461"
										},
										{
											"begin": 14336,
											"end": 14361,
											"name": "JUMP"
										},
										{
											"begin": 14097,
											"end": 14384,
											"name": "tag",
											"value": "462"
										},
										{
											"begin": 14097,
											"end": 14384,
											"name": "JUMPDEST"
										},
										{
											"begin": 14396,
											"end": 14418,
											"name": "PUSH [tag]",
											"value": "476"
										},
										{
											"begin": 14409,
											"end": 14417,
											"name": "DUP3"
										},
										{
											"begin": 14396,
											"end": 14404,
											"name": "DUP5"
										},
										{
											"begin": 14396,
											"end": 14408,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 14396,
											"end": 14408,
											"name": "SWAP1"
										},
										{
											"begin": 14396,
											"end": 14418,
											"name": "SWAP2"
										},
										{
											"begin": 14396,
											"end": 14418,
											"name": "SWAP1"
										},
										{
											"begin": 14396,
											"end": 14418,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14396,
											"end": 14418,
											"name": "AND"
										},
										{
											"begin": 14396,
											"end": 14418,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14396,
											"end": 14418,
											"name": "tag",
											"value": "476"
										},
										{
											"begin": 14396,
											"end": 14418,
											"name": "JUMPDEST"
										},
										{
											"begin": 14389,
											"end": 14418,
											"name": "SWAP1"
										},
										{
											"begin": 14389,
											"end": 14418,
											"name": "POP"
										},
										{
											"begin": 14020,
											"end": 14423,
											"name": "tag",
											"value": "461"
										},
										{
											"begin": 14020,
											"end": 14423,
											"name": "JUMPDEST"
										},
										{
											"begin": 14020,
											"end": 14423,
											"name": "SWAP3"
										},
										{
											"begin": 14020,
											"end": 14423,
											"name": "SWAP2"
										},
										{
											"begin": 14020,
											"end": 14423,
											"name": "POP"
										},
										{
											"begin": 14020,
											"end": 14423,
											"name": "POP"
										},
										{
											"begin": 14020,
											"end": 14423,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 421,
											"end": 561,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 421,
											"end": 561,
											"name": "JUMPDEST"
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 504,
											"end": 505,
											"name": "DUP1"
										},
										{
											"begin": 499,
											"end": 500,
											"name": "DUP3"
										},
										{
											"begin": 499,
											"end": 505,
											"name": "EQ"
										},
										{
											"begin": 499,
											"end": 529,
											"name": "DUP1"
										},
										{
											"begin": 499,
											"end": 529,
											"name": "PUSH [tag]",
											"value": "478"
										},
										{
											"begin": 499,
											"end": 529,
											"name": "JUMPI"
										},
										{
											"begin": 499,
											"end": 529,
											"name": "POP"
										},
										{
											"begin": 528,
											"end": 529,
											"name": "DUP3"
										},
										{
											"begin": 523,
											"end": 524,
											"name": "DUP3"
										},
										{
											"begin": 518,
											"end": 519,
											"name": "DUP4"
										},
										{
											"begin": 514,
											"end": 515,
											"name": "DUP6"
										},
										{
											"begin": 514,
											"end": 519,
											"name": "MUL"
										},
										{
											"begin": 510,
											"end": 519,
											"name": "SWAP3"
										},
										{
											"begin": 510,
											"end": 519,
											"name": "POP"
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP3"
										},
										{
											"begin": 509,
											"end": 524,
											"name": "DUP2"
										},
										{
											"begin": 509,
											"end": 524,
											"name": "PUSH [tag]",
											"value": "479"
										},
										{
											"begin": 509,
											"end": 524,
											"name": "JUMPI"
										},
										{
											"begin": 509,
											"end": 524,
											"name": "INVALID"
										},
										{
											"begin": 509,
											"end": 524,
											"name": "tag",
											"value": "479"
										},
										{
											"begin": 509,
											"end": 524,
											"name": "JUMPDEST"
										},
										{
											"begin": 509,
											"end": 524,
											"name": "DIV"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "EQ"
										},
										{
											"begin": 499,
											"end": 529,
											"name": "tag",
											"value": "478"
										},
										{
											"begin": 499,
											"end": 529,
											"name": "JUMPDEST"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "PUSH [tag]",
											"value": "480"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "JUMPI"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "MLOAD"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "DUP2"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "MSTORE"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "ADD"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "DUP1"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "DUP1"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "ADD"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "DUP3"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "DUP2"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "SUB"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "DUP3"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "MSTORE"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "DUP2"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "MSTORE"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "ADD"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "DUP1"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "PUSH",
											"value": "64732D6D6174682D6D756C2D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "DUP2"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "MSTORE"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "POP"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "ADD"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "SWAP2"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "POP"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "POP"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "MLOAD"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "DUP1"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "SWAP2"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "SUB"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "SWAP1"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "REVERT"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "tag",
											"value": "480"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "JUMPDEST"
										},
										{
											"begin": 421,
											"end": 561,
											"name": "SWAP3"
										},
										{
											"begin": 421,
											"end": 561,
											"name": "SWAP2"
										},
										{
											"begin": 421,
											"end": 561,
											"name": "POP"
										},
										{
											"begin": 421,
											"end": 561,
											"name": "POP"
										},
										{
											"begin": 421,
											"end": 561,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 307,
											"end": 599,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 307,
											"end": 599,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 378,
											"end": 379,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 374,
											"end": 375,
											"name": "DUP3"
										},
										{
											"begin": 374,
											"end": 379,
											"name": "GT"
										},
										{
											"begin": 370,
											"end": 593,
											"name": "ISZERO"
										},
										{
											"begin": 370,
											"end": 593,
											"name": "PUSH [tag]",
											"value": "482"
										},
										{
											"begin": 370,
											"end": 593,
											"name": "JUMPI"
										},
										{
											"begin": 399,
											"end": 400,
											"name": "DUP2"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 414,
											"end": 420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 431,
											"end": 432,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 427,
											"end": 428,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 423,
											"end": 424,
											"name": "DUP5"
										},
										{
											"begin": 423,
											"end": 428,
											"name": "DUP2"
										},
										{
											"begin": 423,
											"end": 428,
											"name": "PUSH [tag]",
											"value": "483"
										},
										{
											"begin": 423,
											"end": 428,
											"name": "JUMPI"
										},
										{
											"begin": 423,
											"end": 428,
											"name": "INVALID"
										},
										{
											"begin": 423,
											"end": 428,
											"name": "tag",
											"value": "483"
										},
										{
											"begin": 423,
											"end": 428,
											"name": "JUMPDEST"
										},
										{
											"begin": 423,
											"end": 428,
											"name": "DIV"
										},
										{
											"begin": 423,
											"end": 432,
											"name": "ADD"
										},
										{
											"begin": 414,
											"end": 432,
											"name": "SWAP1"
										},
										{
											"begin": 414,
											"end": 432,
											"name": "POP"
										},
										{
											"begin": 446,
											"end": 535,
											"name": "tag",
											"value": "484"
										},
										{
											"begin": 446,
											"end": 535,
											"name": "JUMPDEST"
										},
										{
											"begin": 457,
											"end": 458,
											"name": "DUP2"
										},
										{
											"begin": 453,
											"end": 454,
											"name": "DUP2"
										},
										{
											"begin": 453,
											"end": 458,
											"name": "LT"
										},
										{
											"begin": 446,
											"end": 535,
											"name": "ISZERO"
										},
										{
											"begin": 446,
											"end": 535,
											"name": "PUSH [tag]",
											"value": "485"
										},
										{
											"begin": 446,
											"end": 535,
											"name": "JUMPI"
										},
										{
											"begin": 482,
											"end": 483,
											"name": "DUP1"
										},
										{
											"begin": 478,
											"end": 483,
											"name": "SWAP2"
										},
										{
											"begin": 478,
											"end": 483,
											"name": "POP"
										},
										{
											"begin": 519,
											"end": 520,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 514,
											"end": 515,
											"name": "DUP2"
										},
										{
											"begin": 510,
											"end": 511,
											"name": "DUP3"
										},
										{
											"begin": 506,
											"end": 507,
											"name": "DUP6"
										},
										{
											"begin": 506,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 506,
											"end": 511,
											"name": "PUSH [tag]",
											"value": "486"
										},
										{
											"begin": 506,
											"end": 511,
											"name": "JUMPI"
										},
										{
											"begin": 506,
											"end": 511,
											"name": "INVALID"
										},
										{
											"begin": 506,
											"end": 511,
											"name": "tag",
											"value": "486"
										},
										{
											"begin": 506,
											"end": 511,
											"name": "JUMPDEST"
										},
										{
											"begin": 506,
											"end": 511,
											"name": "DIV"
										},
										{
											"begin": 506,
											"end": 515,
											"name": "ADD"
										},
										{
											"begin": 505,
											"end": 520,
											"name": "DUP2"
										},
										{
											"begin": 505,
											"end": 520,
											"name": "PUSH [tag]",
											"value": "487"
										},
										{
											"begin": 505,
											"end": 520,
											"name": "JUMPI"
										},
										{
											"begin": 505,
											"end": 520,
											"name": "INVALID"
										},
										{
											"begin": 505,
											"end": 520,
											"name": "tag",
											"value": "487"
										},
										{
											"begin": 505,
											"end": 520,
											"name": "JUMPDEST"
										},
										{
											"begin": 505,
											"end": 520,
											"name": "DIV"
										},
										{
											"begin": 501,
											"end": 520,
											"name": "SWAP1"
										},
										{
											"begin": 501,
											"end": 520,
											"name": "POP"
										},
										{
											"begin": 446,
											"end": 535,
											"name": "PUSH [tag]",
											"value": "484"
										},
										{
											"begin": 446,
											"end": 535,
											"name": "JUMP"
										},
										{
											"begin": 446,
											"end": 535,
											"name": "tag",
											"value": "485"
										},
										{
											"begin": 446,
											"end": 535,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 593,
											"name": "POP"
										},
										{
											"begin": 370,
											"end": 593,
											"name": "PUSH [tag]",
											"value": "488"
										},
										{
											"begin": 370,
											"end": 593,
											"name": "JUMP"
										},
										{
											"begin": 370,
											"end": 593,
											"name": "tag",
											"value": "482"
										},
										{
											"begin": 370,
											"end": 593,
											"name": "JUMPDEST"
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 555,
											"end": 556,
											"name": "DUP3"
										},
										{
											"begin": 555,
											"end": 561,
											"name": "EQ"
										},
										{
											"begin": 551,
											"end": 593,
											"name": "PUSH [tag]",
											"value": "489"
										},
										{
											"begin": 551,
											"end": 593,
											"name": "JUMPI"
										},
										{
											"begin": 581,
											"end": 582,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 577,
											"end": 582,
											"name": "SWAP1"
										},
										{
											"begin": 577,
											"end": 582,
											"name": "POP"
										},
										{
											"begin": 551,
											"end": 593,
											"name": "tag",
											"value": "489"
										},
										{
											"begin": 551,
											"end": 593,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 593,
											"name": "tag",
											"value": "488"
										},
										{
											"begin": 370,
											"end": 593,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 599,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 599,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 599,
											"name": "POP"
										},
										{
											"begin": 307,
											"end": 599,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1371,
											"end": 1568,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 1371,
											"end": 1568,
											"name": "JUMPDEST"
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "PUSH [tag]",
											"value": "491"
										},
										{
											"begin": 1459,
											"end": 1464,
											"name": "DUP2"
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "SLOAD"
										},
										{
											"begin": 1443,
											"end": 1458,
											"name": "PUSH [tag]",
											"value": "435"
										},
										{
											"begin": 1443,
											"end": 1458,
											"name": "SWAP1"
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "SWAP2"
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "SWAP1"
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "AND"
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "tag",
											"value": "491"
										},
										{
											"begin": 1443,
											"end": 1465,
											"name": "JUMPDEST"
										},
										{
											"begin": 1429,
											"end": 1440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1465,
											"name": "DUP2"
										},
										{
											"begin": 1429,
											"end": 1465,
											"name": "SWAP1"
										},
										{
											"begin": 1429,
											"end": 1465,
											"name": "SSTORE"
										},
										{
											"begin": 1429,
											"end": 1465,
											"name": "POP"
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "PUSH [tag]",
											"value": "492"
										},
										{
											"begin": 1509,
											"end": 1514,
											"name": "DUP2"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "DUP6"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "AND"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "AND"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "DUP2"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "MSTORE"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "ADD"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "SWAP1"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "DUP2"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "MSTORE"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "ADD"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "KECCAK256"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "SLOAD"
										},
										{
											"begin": 1491,
											"end": 1508,
											"name": "PUSH [tag]",
											"value": "435"
										},
										{
											"begin": 1491,
											"end": 1508,
											"name": "SWAP1"
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "SWAP2"
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "SWAP1"
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "AND"
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "tag",
											"value": "492"
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "JUMPDEST"
										},
										{
											"begin": 1475,
											"end": 1484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1487,
											"name": "DUP5"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "AND"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "AND"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "DUP2"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "MSTORE"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "ADD"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "SWAP1"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "DUP2"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "MSTORE"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "ADD"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "KECCAK256"
										},
										{
											"begin": 1475,
											"end": 1515,
											"name": "DUP2"
										},
										{
											"begin": 1475,
											"end": 1515,
											"name": "SWAP1"
										},
										{
											"begin": 1475,
											"end": 1515,
											"name": "SSTORE"
										},
										{
											"begin": 1475,
											"end": 1515,
											"name": "POP"
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "DUP2"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "AND"
										},
										{
											"begin": 1547,
											"end": 1548,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "AND"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1555,
											"end": 1560,
											"name": "DUP4"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "MLOAD"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "DUP1"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "DUP3"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "DUP2"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "MSTORE"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "ADD"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "SWAP2"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "POP"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "POP"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "MLOAD"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "DUP1"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "SWAP2"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "SUB"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "SWAP1"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "LOG3"
										},
										{
											"begin": 1371,
											"end": 1568,
											"name": "POP"
										},
										{
											"begin": 1371,
											"end": 1568,
											"name": "POP"
										},
										{
											"begin": 1371,
											"end": 1568,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 98,
											"end": 192,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 98,
											"end": 192,
											"name": "JUMPDEST"
										},
										{
											"begin": 150,
											"end": 156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 173,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 177,
											"name": "LT"
										},
										{
											"begin": 172,
											"end": 185,
											"name": "PUSH [tag]",
											"value": "494"
										},
										{
											"begin": 172,
											"end": 185,
											"name": "JUMPI"
										},
										{
											"begin": 184,
											"end": 185,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 185,
											"name": "PUSH [tag]",
											"value": "495"
										},
										{
											"begin": 172,
											"end": 185,
											"name": "JUMP"
										},
										{
											"begin": 172,
											"end": 185,
											"name": "tag",
											"value": "494"
										},
										{
											"begin": 172,
											"end": 185,
											"name": "JUMPDEST"
										},
										{
											"begin": 180,
											"end": 181,
											"name": "DUP3"
										},
										{
											"begin": 172,
											"end": 185,
											"name": "tag",
											"value": "495"
										},
										{
											"begin": 172,
											"end": 185,
											"name": "JUMPDEST"
										},
										{
											"begin": 168,
											"end": 185,
											"name": "SWAP1"
										},
										{
											"begin": 168,
											"end": 185,
											"name": "POP"
										},
										{
											"begin": 98,
											"end": 192,
											"name": "SWAP3"
										},
										{
											"begin": 98,
											"end": 192,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 192,
											"name": "POP"
										},
										{
											"begin": 98,
											"end": 192,
											"name": "POP"
										},
										{
											"begin": 98,
											"end": 192,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4930,
											"end": 5206,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 4930,
											"end": 5206,
											"name": "JUMPDEST"
										},
										{
											"begin": 5019,
											"end": 5022,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4999,
											"end": 5023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4999,
											"end": 5023,
											"name": "AND"
										},
										{
											"begin": 4999,
											"end": 5007,
											"name": "DUP3"
										},
										{
											"begin": 4999,
											"end": 5023,
											"name": "GT"
										},
										{
											"begin": 4999,
											"end": 5023,
											"name": "ISZERO"
										},
										{
											"begin": 4999,
											"end": 5051,
											"name": "DUP1"
										},
										{
											"begin": 4999,
											"end": 5051,
											"name": "ISZERO"
										},
										{
											"begin": 4999,
											"end": 5051,
											"name": "PUSH [tag]",
											"value": "497"
										},
										{
											"begin": 4999,
											"end": 5051,
											"name": "JUMPI"
										},
										{
											"begin": 4999,
											"end": 5051,
											"name": "POP"
										},
										{
											"begin": 5047,
											"end": 5050,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5027,
											"end": 5051,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5027,
											"end": 5051,
											"name": "AND"
										},
										{
											"begin": 5027,
											"end": 5035,
											"name": "DUP2"
										},
										{
											"begin": 5027,
											"end": 5051,
											"name": "GT"
										},
										{
											"begin": 5027,
											"end": 5051,
											"name": "ISZERO"
										},
										{
											"begin": 4999,
											"end": 5051,
											"name": "tag",
											"value": "497"
										},
										{
											"begin": 4999,
											"end": 5051,
											"name": "JUMPDEST"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "PUSH [tag]",
											"value": "498"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "JUMPI"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "MLOAD"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "DUP2"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "MSTORE"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "ADD"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "DUP1"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "DUP1"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "ADD"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "DUP3"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "DUP2"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "SUB"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "DUP3"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "MSTORE"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "DUP2"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "MSTORE"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "ADD"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "DUP1"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A204F564552464C4F57000000000000000000"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "DUP2"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "MSTORE"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "POP"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "ADD"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "SWAP2"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "POP"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "POP"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "MLOAD"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "DUP1"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "SWAP2"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "SUB"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "SWAP1"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "REVERT"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "tag",
											"value": "498"
										},
										{
											"begin": 4991,
											"end": 5079,
											"name": "JUMPDEST"
										},
										{
											"begin": 5105,
											"end": 5113,
											"name": "DUP2"
										},
										{
											"begin": 5086,
											"end": 5094,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5086,
											"end": 5094,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "EXP"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "DUP2"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "SLOAD"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "DUP2"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "MUL"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "NOT"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "AND"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "SWAP1"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "DUP4"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "AND"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "MUL"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "OR"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "SWAP1"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "SSTORE"
										},
										{
											"begin": 5086,
											"end": 5114,
											"name": "POP"
										},
										{
											"begin": 5139,
											"end": 5147,
											"name": "DUP1"
										},
										{
											"begin": 5120,
											"end": 5128,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5120,
											"end": 5128,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "EXP"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "DUP2"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "SLOAD"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "DUP2"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "MUL"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "NOT"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "AND"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "SWAP1"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "DUP4"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "AND"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "MUL"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "OR"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "SWAP1"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "SSTORE"
										},
										{
											"begin": 5120,
											"end": 5148,
											"name": "POP"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "PUSH",
											"value": "1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1"
										},
										{
											"begin": 5172,
											"end": 5180,
											"name": "DUP3"
										},
										{
											"begin": 5191,
											"end": 5199,
											"name": "DUP3"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "MLOAD"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "DUP1"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "DUP4"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "AND"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "AND"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "DUP2"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "MSTORE"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "ADD"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "DUP3"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "AND"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "AND"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "DUP2"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "MSTORE"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "ADD"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "SWAP3"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "POP"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "POP"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "POP"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "MLOAD"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "DUP1"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "SWAP2"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "SUB"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "SWAP1"
										},
										{
											"begin": 5159,
											"end": 5201,
											"name": "LOG1"
										},
										{
											"begin": 4930,
											"end": 5206,
											"name": "POP"
										},
										{
											"begin": 4930,
											"end": 5206,
											"name": "POP"
										},
										{
											"begin": 4930,
											"end": 5206,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1574,
											"end": 1779,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 1574,
											"end": 1779,
											"name": "JUMPDEST"
										},
										{
											"begin": 1652,
											"end": 1678,
											"name": "PUSH [tag]",
											"value": "500"
										},
										{
											"begin": 1672,
											"end": 1677,
											"name": "DUP2"
										},
										{
											"begin": 1652,
											"end": 1661,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "DUP6"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "AND"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "AND"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "DUP2"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "MSTORE"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "ADD"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "SWAP1"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "DUP2"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "MSTORE"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "ADD"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "KECCAK256"
										},
										{
											"begin": 1652,
											"end": 1667,
											"name": "SLOAD"
										},
										{
											"begin": 1652,
											"end": 1671,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 1652,
											"end": 1671,
											"name": "SWAP1"
										},
										{
											"begin": 1652,
											"end": 1678,
											"name": "SWAP2"
										},
										{
											"begin": 1652,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1652,
											"end": 1678,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1678,
											"name": "AND"
										},
										{
											"begin": 1652,
											"end": 1678,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1652,
											"end": 1678,
											"name": "tag",
											"value": "500"
										},
										{
											"begin": 1652,
											"end": 1678,
											"name": "JUMPDEST"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1648,
											"name": "DUP5"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "AND"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "AND"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "DUP2"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "MSTORE"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "ADD"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "SWAP1"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "DUP2"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "MSTORE"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "ADD"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "KECCAK256"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "DUP2"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "SSTORE"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1702,
											"end": 1724,
											"name": "PUSH [tag]",
											"value": "501"
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "DUP2"
										},
										{
											"begin": 1702,
											"end": 1713,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1713,
											"name": "SLOAD"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "SWAP1"
										},
										{
											"begin": 1702,
											"end": 1724,
											"name": "SWAP2"
										},
										{
											"begin": 1702,
											"end": 1724,
											"name": "SWAP1"
										},
										{
											"begin": 1702,
											"end": 1724,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1724,
											"name": "AND"
										},
										{
											"begin": 1702,
											"end": 1724,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1702,
											"end": 1724,
											"name": "tag",
											"value": "501"
										},
										{
											"begin": 1702,
											"end": 1724,
											"name": "JUMPDEST"
										},
										{
											"begin": 1688,
											"end": 1699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1724,
											"name": "DUP2"
										},
										{
											"begin": 1688,
											"end": 1724,
											"name": "SWAP1"
										},
										{
											"begin": 1688,
											"end": 1724,
											"name": "SSTORE"
										},
										{
											"begin": 1688,
											"end": 1724,
											"name": "POP"
										},
										{
											"begin": 1762,
											"end": 1763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1752,
											"name": "DUP3"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "AND"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1766,
											"end": 1771,
											"name": "DUP4"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "MLOAD"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "DUP1"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "DUP3"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "DUP2"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "MSTORE"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "ADD"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "SWAP2"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "POP"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "POP"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "MLOAD"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "DUP1"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "SWAP2"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "SUB"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1739,
											"end": 1772,
											"name": "LOG3"
										},
										{
											"begin": 1574,
											"end": 1779,
											"name": "POP"
										},
										{
											"begin": 1574,
											"end": 1779,
											"name": "POP"
										},
										{
											"begin": 1574,
											"end": 1779,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1865,
											"end": 2143,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 1865,
											"end": 2143,
											"name": "JUMPDEST"
										},
										{
											"begin": 1942,
											"end": 1954,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1973,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "DUP5"
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "AND"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "MLOAD"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "DUP1"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "ADD"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "MSTORE"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "DUP1"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "DUP2"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "MSTORE"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "ADD"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "PUSH",
											"value": "7472616E7366657228616464726573732C75696E743235362900000000000000"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "DUP2"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "MSTORE"
										},
										{
											"begin": 421,
											"end": 455,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 456,
											"name": "MLOAD"
										},
										{
											"begin": 411,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 411,
											"end": 456,
											"name": "ADD"
										},
										{
											"begin": 411,
											"end": 456,
											"name": "KECCAK256"
										},
										{
											"begin": 2021,
											"end": 2023,
											"name": "DUP6"
										},
										{
											"begin": 2025,
											"end": 2030,
											"name": "DUP6"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "MLOAD"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "ADD"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "DUP1"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "DUP4"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "AND"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "AND"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "DUP2"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "MSTORE"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "ADD"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "DUP3"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "DUP2"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "MSTORE"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "ADD"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "SWAP3"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "POP"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "POP"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "POP"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "SWAP1"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "MSTORE"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "SWAP1"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "NOT"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 1988,
											"end": 2031,
											"name": "POP"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "MLOAD"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "DUP1"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "DUP3"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "DUP1"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "MLOAD"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "SWAP1"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "ADD"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "SWAP1"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "DUP1"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "DUP4"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "503"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "505"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "503"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "505"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "POP"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "POP"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "POP"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "SWAP1"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "POP"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "ADD"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "SWAP2"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "POP"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "POP"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "MLOAD"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "DUP1"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "DUP4"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "SUB"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "DUP2"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "DUP7"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "GAS"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "CALL"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "SWAP2"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "POP"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "POP"
										},
										{
											"begin": 1977,
											"end": 2032,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "507"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "506"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "507"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "506"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 1941,
											"end": 2032,
											"name": "SWAP2"
										},
										{
											"begin": 1941,
											"end": 2032,
											"name": "POP"
										},
										{
											"begin": 1941,
											"end": 2032,
											"name": "SWAP2"
										},
										{
											"begin": 1941,
											"end": 2032,
											"name": "POP"
										},
										{
											"begin": 2046,
											"end": 2053,
											"name": "DUP2"
										},
										{
											"begin": 2046,
											"end": 2103,
											"name": "DUP1"
										},
										{
											"begin": 2046,
											"end": 2103,
											"name": "ISZERO"
										},
										{
											"begin": 2046,
											"end": 2103,
											"name": "PUSH [tag]",
											"value": "508"
										},
										{
											"begin": 2046,
											"end": 2103,
											"name": "JUMPI"
										},
										{
											"begin": 2046,
											"end": 2103,
											"name": "POP"
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2062,
											"name": "DUP2"
										},
										{
											"begin": 2058,
											"end": 2069,
											"name": "MLOAD"
										},
										{
											"begin": 2058,
											"end": 2074,
											"name": "EQ"
										},
										{
											"begin": 2058,
											"end": 2102,
											"name": "DUP1"
										},
										{
											"begin": 2058,
											"end": 2102,
											"name": "PUSH [tag]",
											"value": "509"
										},
										{
											"begin": 2058,
											"end": 2102,
											"name": "JUMPI"
										},
										{
											"begin": 2058,
											"end": 2102,
											"name": "POP"
										},
										{
											"begin": 2089,
											"end": 2093,
											"name": "DUP1"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "DUP1"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "ADD"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "SWAP1"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "510"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "510"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "DUP2"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "ADD"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "SWAP1"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "DUP1"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "DUP1"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "MLOAD"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "SWAP1"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "ADD"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "SWAP1"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "SWAP3"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "SWAP2"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "SWAP1"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "POP"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "POP"
										},
										{
											"begin": 2078,
											"end": 2102,
											"name": "POP"
										},
										{
											"begin": 2058,
											"end": 2102,
											"name": "tag",
											"value": "509"
										},
										{
											"begin": 2058,
											"end": 2102,
											"name": "JUMPDEST"
										},
										{
											"begin": 2046,
											"end": 2103,
											"name": "tag",
											"value": "508"
										},
										{
											"begin": 2046,
											"end": 2103,
											"name": "JUMPDEST"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "PUSH [tag]",
											"value": "511"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "JUMPI"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "MLOAD"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "DUP2"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "MSTORE"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "ADD"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "DUP1"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "DUP1"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "ADD"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "DUP3"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "DUP2"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "SUB"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "DUP3"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "MSTORE"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "DUP2"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "MSTORE"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "ADD"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "DUP1"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "PUSH",
											"value": "655A4B616C69627572506169723A205452414E534645525F4641494C45440000"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "DUP2"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "MSTORE"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "POP"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "ADD"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "SWAP2"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "POP"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "POP"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "MLOAD"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "DUP1"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "SWAP2"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "SUB"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "SWAP1"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "REVERT"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "tag",
											"value": "511"
										},
										{
											"begin": 2038,
											"end": 2138,
											"name": "JUMPDEST"
										},
										{
											"begin": 1865,
											"end": 2143,
											"name": "POP"
										},
										{
											"begin": 1865,
											"end": 2143,
											"name": "POP"
										},
										{
											"begin": 1865,
											"end": 2143,
											"name": "POP"
										},
										{
											"begin": 1865,
											"end": 2143,
											"name": "POP"
										},
										{
											"begin": 1865,
											"end": 2143,
											"name": "POP"
										},
										{
											"begin": 1865,
											"end": 2143,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15521,
											"end": 16617,
											"name": "tag",
											"value": "315"
										},
										{
											"begin": 15521,
											"end": 16617,
											"name": "JUMPDEST"
										},
										{
											"begin": 15648,
											"end": 15652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "SWAP1"
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "SLOAD"
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "SWAP1"
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "EXP"
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "SWAP1"
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "DIV"
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "AND"
										},
										{
											"begin": 15660,
											"end": 16613,
											"name": "ISZERO"
										},
										{
											"begin": 15660,
											"end": 16613,
											"name": "PUSH [tag]",
											"value": "513"
										},
										{
											"begin": 15660,
											"end": 16613,
											"name": "JUMPI"
										},
										{
											"begin": 15695,
											"end": 15751,
											"name": "PUSH [tag]",
											"value": "514"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 15708,
											"end": 15732,
											"name": "PUSH [tag]",
											"value": "515"
										},
										{
											"begin": 15721,
											"end": 15731,
											"name": "DUP5"
										},
										{
											"begin": 15708,
											"end": 15716,
											"name": "DUP10"
										},
										{
											"begin": 15708,
											"end": 15720,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 15708,
											"end": 15720,
											"name": "SWAP1"
										},
										{
											"begin": 15708,
											"end": 15732,
											"name": "SWAP2"
										},
										{
											"begin": 15708,
											"end": 15732,
											"name": "SWAP1"
										},
										{
											"begin": 15708,
											"end": 15732,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15708,
											"end": 15732,
											"name": "AND"
										},
										{
											"begin": 15708,
											"end": 15732,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15708,
											"end": 15732,
											"name": "tag",
											"value": "515"
										},
										{
											"begin": 15708,
											"end": 15732,
											"name": "JUMPDEST"
										},
										{
											"begin": 15708,
											"end": 15750,
											"name": "DUP2"
										},
										{
											"begin": 15708,
											"end": 15750,
											"name": "PUSH [tag]",
											"value": "516"
										},
										{
											"begin": 15708,
											"end": 15750,
											"name": "JUMPI"
										},
										{
											"begin": 15708,
											"end": 15750,
											"name": "INVALID"
										},
										{
											"begin": 15708,
											"end": 15750,
											"name": "tag",
											"value": "516"
										},
										{
											"begin": 15708,
											"end": 15750,
											"name": "JUMPDEST"
										},
										{
											"begin": 15708,
											"end": 15750,
											"name": "DIV"
										},
										{
											"begin": 15695,
											"end": 15703,
											"name": "DUP8"
										},
										{
											"begin": 15695,
											"end": 15707,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 15695,
											"end": 15707,
											"name": "SWAP1"
										},
										{
											"begin": 15695,
											"end": 15751,
											"name": "SWAP2"
										},
										{
											"begin": 15695,
											"end": 15751,
											"name": "SWAP1"
										},
										{
											"begin": 15695,
											"end": 15751,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15695,
											"end": 15751,
											"name": "AND"
										},
										{
											"begin": 15695,
											"end": 15751,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15695,
											"end": 15751,
											"name": "tag",
											"value": "514"
										},
										{
											"begin": 15695,
											"end": 15751,
											"name": "JUMPDEST"
										},
										{
											"begin": 15684,
											"end": 15751,
											"name": "SWAP6"
										},
										{
											"begin": 15684,
											"end": 15751,
											"name": "POP"
										},
										{
											"begin": 15794,
											"end": 15801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15804,
											"end": 15828,
											"name": "PUSH [tag]",
											"value": "517"
										},
										{
											"begin": 15807,
											"end": 15816,
											"name": "DUP6"
										},
										{
											"begin": 15818,
											"end": 15827,
											"name": "DUP6"
										},
										{
											"begin": 15804,
											"end": 15806,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 15804,
											"end": 15828,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15804,
											"end": 15828,
											"name": "tag",
											"value": "517"
										},
										{
											"begin": 15804,
											"end": 15828,
											"name": "JUMPDEST"
										},
										{
											"begin": 15794,
											"end": 15828,
											"name": "SWAP1"
										},
										{
											"begin": 15794,
											"end": 15828,
											"name": "POP"
										},
										{
											"begin": 15867,
											"end": 15887,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 15867,
											"end": 15887,
											"name": "SLOAD"
										},
										{
											"begin": 15860,
											"end": 15864,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15848,
											"end": 15857,
											"name": "DUP7"
										},
										{
											"begin": 15848,
											"end": 15864,
											"name": "MUL"
										},
										{
											"begin": 15848,
											"end": 15887,
											"name": "DUP2"
										},
										{
											"begin": 15848,
											"end": 15887,
											"name": "PUSH [tag]",
											"value": "518"
										},
										{
											"begin": 15848,
											"end": 15887,
											"name": "JUMPI"
										},
										{
											"begin": 15848,
											"end": 15887,
											"name": "INVALID"
										},
										{
											"begin": 15848,
											"end": 15887,
											"name": "tag",
											"value": "518"
										},
										{
											"begin": 15848,
											"end": 15887,
											"name": "JUMPDEST"
										},
										{
											"begin": 15848,
											"end": 15887,
											"name": "DIV"
										},
										{
											"begin": 15836,
											"end": 15887,
											"name": "SWAP5"
										},
										{
											"begin": 15836,
											"end": 15887,
											"name": "POP"
										},
										{
											"begin": 15926,
											"end": 15946,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 15926,
											"end": 15946,
											"name": "SLOAD"
										},
										{
											"begin": 15919,
											"end": 15923,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15907,
											"end": 15916,
											"name": "DUP6"
										},
										{
											"begin": 15907,
											"end": 15923,
											"name": "MUL"
										},
										{
											"begin": 15907,
											"end": 15946,
											"name": "DUP2"
										},
										{
											"begin": 15907,
											"end": 15946,
											"name": "PUSH [tag]",
											"value": "519"
										},
										{
											"begin": 15907,
											"end": 15946,
											"name": "JUMPI"
										},
										{
											"begin": 15907,
											"end": 15946,
											"name": "INVALID"
										},
										{
											"begin": 15907,
											"end": 15946,
											"name": "tag",
											"value": "519"
										},
										{
											"begin": 15907,
											"end": 15946,
											"name": "JUMPDEST"
										},
										{
											"begin": 15907,
											"end": 15946,
											"name": "DIV"
										},
										{
											"begin": 15895,
											"end": 15946,
											"name": "SWAP4"
										},
										{
											"begin": 15895,
											"end": 15946,
											"name": "POP"
										},
										{
											"begin": 15956,
											"end": 15969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15971,
											"end": 15984,
											"name": "DUP1"
										},
										{
											"begin": 15999,
											"end": 16005,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 15999,
											"end": 16005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15999,
											"end": 16005,
											"name": "SWAP1"
										},
										{
											"begin": 15999,
											"end": 16005,
											"name": "SLOAD"
										},
										{
											"begin": 15999,
											"end": 16005,
											"name": "SWAP1"
										},
										{
											"begin": 15999,
											"end": 16005,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15999,
											"end": 16005,
											"name": "EXP"
										},
										{
											"begin": 15999,
											"end": 16005,
											"name": "SWAP1"
										},
										{
											"begin": 15999,
											"end": 16005,
											"name": "DIV"
										},
										{
											"begin": 15999,
											"end": 16005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15999,
											"end": 16005,
											"name": "AND"
										},
										{
											"begin": 15988,
											"end": 16005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15988,
											"end": 16005,
											"name": "AND"
										},
										{
											"begin": 15988,
											"end": 15995,
											"name": "DUP9"
										},
										{
											"begin": 15988,
											"end": 16005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15988,
											"end": 16005,
											"name": "AND"
										},
										{
											"begin": 15988,
											"end": 16005,
											"name": "EQ"
										},
										{
											"begin": 15988,
											"end": 16055,
											"name": "PUSH [tag]",
											"value": "520"
										},
										{
											"begin": 15988,
											"end": 16055,
											"name": "JUMPI"
										},
										{
											"begin": 16034,
											"end": 16043,
											"name": "DUP6"
										},
										{
											"begin": 16045,
											"end": 16054,
											"name": "DUP8"
										},
										{
											"begin": 15988,
											"end": 16055,
											"name": "PUSH [tag]",
											"value": "521"
										},
										{
											"begin": 15988,
											"end": 16055,
											"name": "JUMP"
										},
										{
											"begin": 15988,
											"end": 16055,
											"name": "tag",
											"value": "520"
										},
										{
											"begin": 15988,
											"end": 16055,
											"name": "JUMPDEST"
										},
										{
											"begin": 16009,
											"end": 16018,
											"name": "DUP7"
										},
										{
											"begin": 16020,
											"end": 16029,
											"name": "DUP7"
										},
										{
											"begin": 15988,
											"end": 16055,
											"name": "tag",
											"value": "521"
										},
										{
											"begin": 15988,
											"end": 16055,
											"name": "JUMPDEST"
										},
										{
											"begin": 15955,
											"end": 16055,
											"name": "SWAP2"
										},
										{
											"begin": 15955,
											"end": 16055,
											"name": "POP"
										},
										{
											"begin": 15955,
											"end": 16055,
											"name": "SWAP2"
										},
										{
											"begin": 15955,
											"end": 16055,
											"name": "POP"
										},
										{
											"begin": 16085,
											"end": 16091,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16085,
											"end": 16091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16085,
											"end": 16091,
											"name": "SWAP1"
										},
										{
											"begin": 16085,
											"end": 16091,
											"name": "SLOAD"
										},
										{
											"begin": 16085,
											"end": 16091,
											"name": "SWAP1"
										},
										{
											"begin": 16085,
											"end": 16091,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16085,
											"end": 16091,
											"name": "EXP"
										},
										{
											"begin": 16085,
											"end": 16091,
											"name": "SWAP1"
										},
										{
											"begin": 16085,
											"end": 16091,
											"name": "DIV"
										},
										{
											"begin": 16085,
											"end": 16091,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16085,
											"end": 16091,
											"name": "AND"
										},
										{
											"begin": 16074,
											"end": 16091,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16074,
											"end": 16091,
											"name": "AND"
										},
										{
											"begin": 16074,
											"end": 16081,
											"name": "DUP9"
										},
										{
											"begin": 16074,
											"end": 16091,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16074,
											"end": 16091,
											"name": "AND"
										},
										{
											"begin": 16074,
											"end": 16091,
											"name": "EQ"
										},
										{
											"begin": 16074,
											"end": 16173,
											"name": "PUSH [tag]",
											"value": "522"
										},
										{
											"begin": 16074,
											"end": 16173,
											"name": "JUMPI"
										},
										{
											"begin": 16153,
											"end": 16173,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 16153,
											"end": 16173,
											"name": "SLOAD"
										},
										{
											"begin": 16146,
											"end": 16150,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 16135,
											"end": 16143,
											"name": "DUP11"
										},
										{
											"begin": 16135,
											"end": 16150,
											"name": "MUL"
										},
										{
											"begin": 16135,
											"end": 16173,
											"name": "DUP2"
										},
										{
											"begin": 16135,
											"end": 16173,
											"name": "PUSH [tag]",
											"value": "523"
										},
										{
											"begin": 16135,
											"end": 16173,
											"name": "JUMPI"
										},
										{
											"begin": 16135,
											"end": 16173,
											"name": "INVALID"
										},
										{
											"begin": 16135,
											"end": 16173,
											"name": "tag",
											"value": "523"
										},
										{
											"begin": 16135,
											"end": 16173,
											"name": "JUMPDEST"
										},
										{
											"begin": 16135,
											"end": 16173,
											"name": "DIV"
										},
										{
											"begin": 16074,
											"end": 16173,
											"name": "PUSH [tag]",
											"value": "524"
										},
										{
											"begin": 16074,
											"end": 16173,
											"name": "JUMP"
										},
										{
											"begin": 16074,
											"end": 16173,
											"name": "tag",
											"value": "522"
										},
										{
											"begin": 16074,
											"end": 16173,
											"name": "JUMPDEST"
										},
										{
											"begin": 16112,
											"end": 16132,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 16112,
											"end": 16132,
											"name": "SLOAD"
										},
										{
											"begin": 16105,
											"end": 16109,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 16094,
											"end": 16102,
											"name": "DUP11"
										},
										{
											"begin": 16094,
											"end": 16109,
											"name": "MUL"
										},
										{
											"begin": 16094,
											"end": 16132,
											"name": "DUP2"
										},
										{
											"begin": 16094,
											"end": 16132,
											"name": "PUSH [tag]",
											"value": "525"
										},
										{
											"begin": 16094,
											"end": 16132,
											"name": "JUMPI"
										},
										{
											"begin": 16094,
											"end": 16132,
											"name": "INVALID"
										},
										{
											"begin": 16094,
											"end": 16132,
											"name": "tag",
											"value": "525"
										},
										{
											"begin": 16094,
											"end": 16132,
											"name": "JUMPDEST"
										},
										{
											"begin": 16094,
											"end": 16132,
											"name": "DIV"
										},
										{
											"begin": 16074,
											"end": 16173,
											"name": "tag",
											"value": "524"
										},
										{
											"begin": 16074,
											"end": 16173,
											"name": "JUMPDEST"
										},
										{
											"begin": 16063,
											"end": 16173,
											"name": "SWAP9"
										},
										{
											"begin": 16063,
											"end": 16173,
											"name": "POP"
										},
										{
											"begin": 16181,
											"end": 16187,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16201,
											"end": 16242,
											"name": "PUSH [tag]",
											"value": "526"
										},
										{
											"begin": 16219,
											"end": 16227,
											"name": "DUP4"
										},
										{
											"begin": 16208,
											"end": 16216,
											"name": "DUP12"
										},
										{
											"begin": 16208,
											"end": 16227,
											"name": "ADD"
										},
										{
											"begin": 16229,
											"end": 16231,
											"name": "DUP6"
										},
										{
											"begin": 16233,
											"end": 16241,
											"name": "DUP5"
										},
										{
											"begin": 16201,
											"end": 16207,
											"name": "PUSH [tag]",
											"value": "527"
										},
										{
											"begin": 16201,
											"end": 16242,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16201,
											"end": 16242,
											"name": "tag",
											"value": "526"
										},
										{
											"begin": 16201,
											"end": 16242,
											"name": "JUMPDEST"
										},
										{
											"begin": 16190,
											"end": 16198,
											"name": "DUP3"
										},
										{
											"begin": 16190,
											"end": 16242,
											"name": "SUB"
										},
										{
											"begin": 16181,
											"end": 16242,
											"name": "SWAP1"
										},
										{
											"begin": 16181,
											"end": 16242,
											"name": "POP"
										},
										{
											"begin": 16329,
											"end": 16333,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 16273,
											"end": 16279,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16273,
											"end": 16279,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16273,
											"end": 16279,
											"name": "SWAP1"
										},
										{
											"begin": 16273,
											"end": 16279,
											"name": "SLOAD"
										},
										{
											"begin": 16273,
											"end": 16279,
											"name": "SWAP1"
										},
										{
											"begin": 16273,
											"end": 16279,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16273,
											"end": 16279,
											"name": "EXP"
										},
										{
											"begin": 16273,
											"end": 16279,
											"name": "SWAP1"
										},
										{
											"begin": 16273,
											"end": 16279,
											"name": "DIV"
										},
										{
											"begin": 16273,
											"end": 16279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16273,
											"end": 16279,
											"name": "AND"
										},
										{
											"begin": 16262,
											"end": 16279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16262,
											"end": 16279,
											"name": "AND"
										},
										{
											"begin": 16262,
											"end": 16269,
											"name": "DUP11"
										},
										{
											"begin": 16262,
											"end": 16279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16262,
											"end": 16279,
											"name": "AND"
										},
										{
											"begin": 16262,
											"end": 16279,
											"name": "EQ"
										},
										{
											"begin": 16262,
											"end": 16325,
											"name": "PUSH [tag]",
											"value": "528"
										},
										{
											"begin": 16262,
											"end": 16325,
											"name": "JUMPI"
										},
										{
											"begin": 16305,
											"end": 16325,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 16305,
											"end": 16325,
											"name": "SLOAD"
										},
										{
											"begin": 16262,
											"end": 16325,
											"name": "PUSH [tag]",
											"value": "529"
										},
										{
											"begin": 16262,
											"end": 16325,
											"name": "JUMP"
										},
										{
											"begin": 16262,
											"end": 16325,
											"name": "tag",
											"value": "528"
										},
										{
											"begin": 16262,
											"end": 16325,
											"name": "JUMPDEST"
										},
										{
											"begin": 16282,
											"end": 16302,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 16282,
											"end": 16302,
											"name": "SLOAD"
										},
										{
											"begin": 16262,
											"end": 16325,
											"name": "tag",
											"value": "529"
										},
										{
											"begin": 16262,
											"end": 16325,
											"name": "JUMPDEST"
										},
										{
											"begin": 16257,
											"end": 16258,
											"name": "DUP3"
										},
										{
											"begin": 16257,
											"end": 16326,
											"name": "MUL"
										},
										{
											"begin": 16257,
											"end": 16333,
											"name": "DUP2"
										},
										{
											"begin": 16257,
											"end": 16333,
											"name": "PUSH [tag]",
											"value": "530"
										},
										{
											"begin": 16257,
											"end": 16333,
											"name": "JUMPI"
										},
										{
											"begin": 16257,
											"end": 16333,
											"name": "INVALID"
										},
										{
											"begin": 16257,
											"end": 16333,
											"name": "tag",
											"value": "530"
										},
										{
											"begin": 16257,
											"end": 16333,
											"name": "JUMPDEST"
										},
										{
											"begin": 16257,
											"end": 16333,
											"name": "DIV"
										},
										{
											"begin": 16250,
											"end": 16333,
											"name": "SWAP5"
										},
										{
											"begin": 16250,
											"end": 16333,
											"name": "POP"
										},
										{
											"begin": 16250,
											"end": 16333,
											"name": "POP"
										},
										{
											"begin": 16250,
											"end": 16333,
											"name": "POP"
										},
										{
											"begin": 16250,
											"end": 16333,
											"name": "POP"
										},
										{
											"begin": 16250,
											"end": 16333,
											"name": "POP"
										},
										{
											"begin": 16250,
											"end": 16333,
											"name": "PUSH [tag]",
											"value": "512"
										},
										{
											"begin": 16250,
											"end": 16333,
											"name": "JUMP"
										},
										{
											"begin": 15660,
											"end": 16613,
											"name": "tag",
											"value": "513"
										},
										{
											"begin": 15660,
											"end": 16613,
											"name": "JUMPDEST"
										},
										{
											"begin": 16356,
											"end": 16369,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16371,
											"end": 16384,
											"name": "DUP1"
										},
										{
											"begin": 16399,
											"end": 16405,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16399,
											"end": 16405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16399,
											"end": 16405,
											"name": "SWAP1"
										},
										{
											"begin": 16399,
											"end": 16405,
											"name": "SLOAD"
										},
										{
											"begin": 16399,
											"end": 16405,
											"name": "SWAP1"
										},
										{
											"begin": 16399,
											"end": 16405,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16399,
											"end": 16405,
											"name": "EXP"
										},
										{
											"begin": 16399,
											"end": 16405,
											"name": "SWAP1"
										},
										{
											"begin": 16399,
											"end": 16405,
											"name": "DIV"
										},
										{
											"begin": 16399,
											"end": 16405,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16399,
											"end": 16405,
											"name": "AND"
										},
										{
											"begin": 16388,
											"end": 16405,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16388,
											"end": 16405,
											"name": "AND"
										},
										{
											"begin": 16388,
											"end": 16395,
											"name": "DUP8"
										},
										{
											"begin": 16388,
											"end": 16405,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16388,
											"end": 16405,
											"name": "AND"
										},
										{
											"begin": 16388,
											"end": 16405,
											"name": "EQ"
										},
										{
											"begin": 16388,
											"end": 16455,
											"name": "PUSH [tag]",
											"value": "532"
										},
										{
											"begin": 16388,
											"end": 16455,
											"name": "JUMPI"
										},
										{
											"begin": 16434,
											"end": 16443,
											"name": "DUP5"
										},
										{
											"begin": 16445,
											"end": 16454,
											"name": "DUP7"
										},
										{
											"begin": 16388,
											"end": 16455,
											"name": "PUSH [tag]",
											"value": "533"
										},
										{
											"begin": 16388,
											"end": 16455,
											"name": "JUMP"
										},
										{
											"begin": 16388,
											"end": 16455,
											"name": "tag",
											"value": "532"
										},
										{
											"begin": 16388,
											"end": 16455,
											"name": "JUMPDEST"
										},
										{
											"begin": 16409,
											"end": 16418,
											"name": "DUP6"
										},
										{
											"begin": 16420,
											"end": 16429,
											"name": "DUP6"
										},
										{
											"begin": 16388,
											"end": 16455,
											"name": "tag",
											"value": "533"
										},
										{
											"begin": 16388,
											"end": 16455,
											"name": "JUMPDEST"
										},
										{
											"begin": 16355,
											"end": 16455,
											"name": "SWAP2"
										},
										{
											"begin": 16355,
											"end": 16455,
											"name": "POP"
										},
										{
											"begin": 16355,
											"end": 16455,
											"name": "SWAP2"
										},
										{
											"begin": 16355,
											"end": 16455,
											"name": "POP"
										},
										{
											"begin": 16474,
											"end": 16519,
											"name": "PUSH [tag]",
											"value": "534"
										},
										{
											"begin": 16487,
											"end": 16518,
											"name": "PUSH [tag]",
											"value": "535"
										},
										{
											"begin": 16507,
											"end": 16517,
											"name": "DUP6"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 16487,
											"end": 16506,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 16487,
											"end": 16506,
											"name": "SWAP1"
										},
										{
											"begin": 16487,
											"end": 16518,
											"name": "SWAP2"
										},
										{
											"begin": 16487,
											"end": 16518,
											"name": "SWAP1"
										},
										{
											"begin": 16487,
											"end": 16518,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16487,
											"end": 16518,
											"name": "AND"
										},
										{
											"begin": 16487,
											"end": 16518,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16487,
											"end": 16518,
											"name": "tag",
											"value": "535"
										},
										{
											"begin": 16487,
											"end": 16518,
											"name": "JUMPDEST"
										},
										{
											"begin": 16474,
											"end": 16482,
											"name": "DUP10"
										},
										{
											"begin": 16474,
											"end": 16486,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 16474,
											"end": 16486,
											"name": "SWAP1"
										},
										{
											"begin": 16474,
											"end": 16519,
											"name": "SWAP2"
										},
										{
											"begin": 16474,
											"end": 16519,
											"name": "SWAP1"
										},
										{
											"begin": 16474,
											"end": 16519,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16474,
											"end": 16519,
											"name": "AND"
										},
										{
											"begin": 16474,
											"end": 16519,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16474,
											"end": 16519,
											"name": "tag",
											"value": "534"
										},
										{
											"begin": 16474,
											"end": 16519,
											"name": "JUMPDEST"
										},
										{
											"begin": 16463,
											"end": 16519,
											"name": "SWAP8"
										},
										{
											"begin": 16463,
											"end": 16519,
											"name": "POP"
										},
										{
											"begin": 16562,
											"end": 16605,
											"name": "PUSH [tag]",
											"value": "536"
										},
										{
											"begin": 16596,
											"end": 16604,
											"name": "DUP9"
										},
										{
											"begin": 16562,
											"end": 16591,
											"name": "PUSH [tag]",
											"value": "537"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 16562,
											"end": 16570,
											"name": "DUP6"
										},
										{
											"begin": 16562,
											"end": 16574,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 16562,
											"end": 16574,
											"name": "SWAP1"
										},
										{
											"begin": 16562,
											"end": 16591,
											"name": "SWAP2"
										},
										{
											"begin": 16562,
											"end": 16591,
											"name": "SWAP1"
										},
										{
											"begin": 16562,
											"end": 16591,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16562,
											"end": 16591,
											"name": "AND"
										},
										{
											"begin": 16562,
											"end": 16591,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16562,
											"end": 16591,
											"name": "tag",
											"value": "537"
										},
										{
											"begin": 16562,
											"end": 16591,
											"name": "JUMPDEST"
										},
										{
											"begin": 16562,
											"end": 16595,
											"name": "PUSH [tag]",
											"value": "435"
										},
										{
											"begin": 16562,
											"end": 16595,
											"name": "SWAP1"
										},
										{
											"begin": 16562,
											"end": 16605,
											"name": "SWAP2"
										},
										{
											"begin": 16562,
											"end": 16605,
											"name": "SWAP1"
										},
										{
											"begin": 16562,
											"end": 16605,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16562,
											"end": 16605,
											"name": "AND"
										},
										{
											"begin": 16562,
											"end": 16605,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16562,
											"end": 16605,
											"name": "tag",
											"value": "536"
										},
										{
											"begin": 16562,
											"end": 16605,
											"name": "JUMPDEST"
										},
										{
											"begin": 16535,
											"end": 16557,
											"name": "PUSH [tag]",
											"value": "538"
										},
										{
											"begin": 16548,
											"end": 16556,
											"name": "DUP3"
										},
										{
											"begin": 16535,
											"end": 16543,
											"name": "DUP11"
										},
										{
											"begin": 16535,
											"end": 16547,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 16535,
											"end": 16547,
											"name": "SWAP1"
										},
										{
											"begin": 16535,
											"end": 16557,
											"name": "SWAP2"
										},
										{
											"begin": 16535,
											"end": 16557,
											"name": "SWAP1"
										},
										{
											"begin": 16535,
											"end": 16557,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16535,
											"end": 16557,
											"name": "AND"
										},
										{
											"begin": 16535,
											"end": 16557,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16535,
											"end": 16557,
											"name": "tag",
											"value": "538"
										},
										{
											"begin": 16535,
											"end": 16557,
											"name": "JUMPDEST"
										},
										{
											"begin": 16534,
											"end": 16606,
											"name": "DUP2"
										},
										{
											"begin": 16534,
											"end": 16606,
											"name": "PUSH [tag]",
											"value": "539"
										},
										{
											"begin": 16534,
											"end": 16606,
											"name": "JUMPI"
										},
										{
											"begin": 16534,
											"end": 16606,
											"name": "INVALID"
										},
										{
											"begin": 16534,
											"end": 16606,
											"name": "tag",
											"value": "539"
										},
										{
											"begin": 16534,
											"end": 16606,
											"name": "JUMPDEST"
										},
										{
											"begin": 16534,
											"end": 16606,
											"name": "DIV"
										},
										{
											"begin": 16527,
											"end": 16606,
											"name": "SWAP3"
										},
										{
											"begin": 16527,
											"end": 16606,
											"name": "POP"
										},
										{
											"begin": 16527,
											"end": 16606,
											"name": "POP"
										},
										{
											"begin": 16527,
											"end": 16606,
											"name": "POP"
										},
										{
											"begin": 15521,
											"end": 16617,
											"name": "tag",
											"value": "512"
										},
										{
											"begin": 15521,
											"end": 16617,
											"name": "JUMPDEST"
										},
										{
											"begin": 15521,
											"end": 16617,
											"name": "SWAP6"
										},
										{
											"begin": 15521,
											"end": 16617,
											"name": "SWAP5"
										},
										{
											"begin": 15521,
											"end": 16617,
											"name": "POP"
										},
										{
											"begin": 15521,
											"end": 16617,
											"name": "POP"
										},
										{
											"begin": 15521,
											"end": 16617,
											"name": "POP"
										},
										{
											"begin": 15521,
											"end": 16617,
											"name": "POP"
										},
										{
											"begin": 15521,
											"end": 16617,
											"name": "POP"
										},
										{
											"begin": 15521,
											"end": 16617,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "tag",
											"value": "435"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 249,
											"end": 250,
											"name": "DUP3"
										},
										{
											"begin": 243,
											"end": 244,
											"name": "DUP3"
										},
										{
											"begin": 239,
											"end": 240,
											"name": "DUP5"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "ADD"
										},
										{
											"begin": 235,
											"end": 244,
											"name": "SWAP2"
										},
										{
											"begin": 235,
											"end": 244,
											"name": "POP"
										},
										{
											"begin": 235,
											"end": 244,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 250,
											"name": "LT"
										},
										{
											"begin": 234,
											"end": 250,
											"name": "ISZERO"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH [tag]",
											"value": "541"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "SWAP2"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "SWAP2"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "REVERT"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "tag",
											"value": "541"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "JUMPDEST"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "SWAP3"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "SWAP2"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14427,
											"end": 14955,
											"name": "tag",
											"value": "527"
										},
										{
											"begin": 14427,
											"end": 14955,
											"name": "JUMPDEST"
										},
										{
											"begin": 14492,
											"end": 14496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14509,
											"end": 14515,
											"name": "DUP1"
										},
										{
											"begin": 14518,
											"end": 14519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14509,
											"end": 14519,
											"name": "SWAP1"
										},
										{
											"begin": 14509,
											"end": 14519,
											"name": "POP"
										},
										{
											"begin": 14504,
											"end": 14937,
											"name": "tag",
											"value": "543"
										},
										{
											"begin": 14504,
											"end": 14937,
											"name": "JUMPDEST"
										},
										{
											"begin": 14525,
											"end": 14528,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 14521,
											"end": 14522,
											"name": "DUP2"
										},
										{
											"begin": 14521,
											"end": 14528,
											"name": "LT"
										},
										{
											"begin": 14504,
											"end": 14937,
											"name": "ISZERO"
										},
										{
											"begin": 14504,
											"end": 14937,
											"name": "PUSH [tag]",
											"value": "544"
										},
										{
											"begin": 14504,
											"end": 14937,
											"name": "JUMPI"
										},
										{
											"begin": 14543,
											"end": 14554,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14557,
											"end": 14558,
											"name": "DUP4"
										},
										{
											"begin": 14543,
											"end": 14558,
											"name": "SWAP1"
										},
										{
											"begin": 14543,
											"end": 14558,
											"name": "POP"
										},
										{
											"begin": 14566,
											"end": 14572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14575,
											"end": 14584,
											"name": "PUSH [tag]",
											"value": "546"
										},
										{
											"begin": 14578,
											"end": 14580,
											"name": "DUP8"
										},
										{
											"begin": 14582,
											"end": 14583,
											"name": "DUP7"
										},
										{
											"begin": 14575,
											"end": 14577,
											"name": "PUSH [tag]",
											"value": "547"
										},
										{
											"begin": 14575,
											"end": 14584,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14575,
											"end": 14584,
											"name": "tag",
											"value": "546"
										},
										{
											"begin": 14575,
											"end": 14584,
											"name": "JUMPDEST"
										},
										{
											"begin": 14566,
											"end": 14584,
											"name": "SWAP1"
										},
										{
											"begin": 14566,
											"end": 14584,
											"name": "POP"
										},
										{
											"begin": 14600,
											"end": 14602,
											"name": "DUP6"
										},
										{
											"begin": 14596,
											"end": 14597,
											"name": "DUP2"
										},
										{
											"begin": 14596,
											"end": 14602,
											"name": "LT"
										},
										{
											"begin": 14592,
											"end": 14762,
											"name": "ISZERO"
										},
										{
											"begin": 14592,
											"end": 14762,
											"name": "PUSH [tag]",
											"value": "548"
										},
										{
											"begin": 14592,
											"end": 14762,
											"name": "JUMPI"
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14642,
											"end": 14651,
											"name": "PUSH [tag]",
											"value": "549"
										},
										{
											"begin": 14645,
											"end": 14647,
											"name": "DUP9"
										},
										{
											"begin": 14649,
											"end": 14650,
											"name": "DUP8"
										},
										{
											"begin": 14642,
											"end": 14644,
											"name": "PUSH [tag]",
											"value": "550"
										},
										{
											"begin": 14642,
											"end": 14651,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14642,
											"end": 14651,
											"name": "tag",
											"value": "549"
										},
										{
											"begin": 14642,
											"end": 14651,
											"name": "JUMPDEST"
										},
										{
											"begin": 14635,
											"end": 14639,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14630,
											"end": 14631,
											"name": "DUP4"
										},
										{
											"begin": 14625,
											"end": 14627,
											"name": "DUP10"
										},
										{
											"begin": 14625,
											"end": 14631,
											"name": "SUB"
										},
										{
											"begin": 14624,
											"end": 14639,
											"name": "MUL"
										},
										{
											"begin": 14624,
											"end": 14651,
											"name": "DUP2"
										},
										{
											"begin": 14624,
											"end": 14651,
											"name": "PUSH [tag]",
											"value": "551"
										},
										{
											"begin": 14624,
											"end": 14651,
											"name": "JUMPI"
										},
										{
											"begin": 14624,
											"end": 14651,
											"name": "INVALID"
										},
										{
											"begin": 14624,
											"end": 14651,
											"name": "tag",
											"value": "551"
										},
										{
											"begin": 14624,
											"end": 14651,
											"name": "JUMPDEST"
										},
										{
											"begin": 14624,
											"end": 14651,
											"name": "DIV"
										},
										{
											"begin": 14614,
											"end": 14651,
											"name": "SWAP1"
										},
										{
											"begin": 14614,
											"end": 14651,
											"name": "POP"
										},
										{
											"begin": 14669,
											"end": 14671,
											"name": "DUP1"
										},
										{
											"begin": 14665,
											"end": 14666,
											"name": "DUP7"
										},
										{
											"begin": 14665,
											"end": 14671,
											"name": "ADD"
										},
										{
											"begin": 14661,
											"end": 14671,
											"name": "SWAP6"
										},
										{
											"begin": 14661,
											"end": 14671,
											"name": "POP"
										},
										{
											"begin": 14592,
											"end": 14762,
											"name": "POP"
										},
										{
											"begin": 14592,
											"end": 14762,
											"name": "PUSH [tag]",
											"value": "552"
										},
										{
											"begin": 14592,
											"end": 14762,
											"name": "JUMP"
										},
										{
											"begin": 14592,
											"end": 14762,
											"name": "tag",
											"value": "548"
										},
										{
											"begin": 14592,
											"end": 14762,
											"name": "JUMPDEST"
										},
										{
											"begin": 14696,
											"end": 14703,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14724,
											"end": 14733,
											"name": "PUSH [tag]",
											"value": "553"
										},
										{
											"begin": 14727,
											"end": 14729,
											"name": "DUP9"
										},
										{
											"begin": 14731,
											"end": 14732,
											"name": "DUP8"
										},
										{
											"begin": 14724,
											"end": 14726,
											"name": "PUSH [tag]",
											"value": "550"
										},
										{
											"begin": 14724,
											"end": 14733,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14724,
											"end": 14733,
											"name": "tag",
											"value": "553"
										},
										{
											"begin": 14724,
											"end": 14733,
											"name": "JUMPDEST"
										},
										{
											"begin": 14717,
											"end": 14721,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14711,
											"end": 14713,
											"name": "DUP9"
										},
										{
											"begin": 14707,
											"end": 14708,
											"name": "DUP5"
										},
										{
											"begin": 14707,
											"end": 14713,
											"name": "SUB"
										},
										{
											"begin": 14706,
											"end": 14721,
											"name": "MUL"
										},
										{
											"begin": 14706,
											"end": 14733,
											"name": "DUP2"
										},
										{
											"begin": 14706,
											"end": 14733,
											"name": "PUSH [tag]",
											"value": "554"
										},
										{
											"begin": 14706,
											"end": 14733,
											"name": "JUMPI"
										},
										{
											"begin": 14706,
											"end": 14733,
											"name": "INVALID"
										},
										{
											"begin": 14706,
											"end": 14733,
											"name": "tag",
											"value": "554"
										},
										{
											"begin": 14706,
											"end": 14733,
											"name": "JUMPDEST"
										},
										{
											"begin": 14706,
											"end": 14733,
											"name": "DIV"
										},
										{
											"begin": 14696,
											"end": 14733,
											"name": "SWAP1"
										},
										{
											"begin": 14696,
											"end": 14733,
											"name": "POP"
										},
										{
											"begin": 14751,
											"end": 14753,
											"name": "DUP1"
										},
										{
											"begin": 14747,
											"end": 14748,
											"name": "DUP7"
										},
										{
											"begin": 14747,
											"end": 14753,
											"name": "SUB"
										},
										{
											"begin": 14743,
											"end": 14753,
											"name": "SWAP6"
										},
										{
											"begin": 14743,
											"end": 14753,
											"name": "POP"
										},
										{
											"begin": 14592,
											"end": 14762,
											"name": "POP"
										},
										{
											"begin": 14592,
											"end": 14762,
											"name": "tag",
											"value": "552"
										},
										{
											"begin": 14592,
											"end": 14762,
											"name": "JUMPDEST"
										},
										{
											"begin": 14777,
											"end": 14783,
											"name": "DUP2"
										},
										{
											"begin": 14773,
											"end": 14774,
											"name": "DUP6"
										},
										{
											"begin": 14773,
											"end": 14783,
											"name": "GT"
										},
										{
											"begin": 14769,
											"end": 14931,
											"name": "ISZERO"
										},
										{
											"begin": 14769,
											"end": 14931,
											"name": "PUSH [tag]",
											"value": "555"
										},
										{
											"begin": 14769,
											"end": 14931,
											"name": "JUMPI"
										},
										{
											"begin": 14813,
											"end": 14814,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14803,
											"end": 14809,
											"name": "DUP3"
										},
										{
											"begin": 14799,
											"end": 14800,
											"name": "DUP7"
										},
										{
											"begin": 14799,
											"end": 14809,
											"name": "SUB"
										},
										{
											"begin": 14799,
											"end": 14814,
											"name": "GT"
										},
										{
											"begin": 14795,
											"end": 14847,
											"name": "PUSH [tag]",
											"value": "556"
										},
										{
											"begin": 14795,
											"end": 14847,
											"name": "JUMPI"
										},
										{
											"begin": 14835,
											"end": 14836,
											"name": "DUP5"
										},
										{
											"begin": 14828,
											"end": 14836,
											"name": "SWAP4"
										},
										{
											"begin": 14828,
											"end": 14836,
											"name": "POP"
										},
										{
											"begin": 14828,
											"end": 14836,
											"name": "POP"
										},
										{
											"begin": 14828,
											"end": 14836,
											"name": "POP"
										},
										{
											"begin": 14828,
											"end": 14836,
											"name": "POP"
										},
										{
											"begin": 14828,
											"end": 14836,
											"name": "PUSH [tag]",
											"value": "542"
										},
										{
											"begin": 14828,
											"end": 14836,
											"name": "JUMP"
										},
										{
											"begin": 14795,
											"end": 14847,
											"name": "tag",
											"value": "556"
										},
										{
											"begin": 14795,
											"end": 14847,
											"name": "JUMPDEST"
										},
										{
											"begin": 14769,
											"end": 14931,
											"name": "PUSH [tag]",
											"value": "557"
										},
										{
											"begin": 14769,
											"end": 14931,
											"name": "JUMP"
										},
										{
											"begin": 14769,
											"end": 14931,
											"name": "tag",
											"value": "555"
										},
										{
											"begin": 14769,
											"end": 14931,
											"name": "JUMPDEST"
										},
										{
											"begin": 14889,
											"end": 14890,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14884,
											"end": 14885,
											"name": "DUP6"
										},
										{
											"begin": 14875,
											"end": 14881,
											"name": "DUP4"
										},
										{
											"begin": 14875,
											"end": 14885,
											"name": "SUB"
										},
										{
											"begin": 14875,
											"end": 14890,
											"name": "GT"
										},
										{
											"begin": 14871,
											"end": 14923,
											"name": "PUSH [tag]",
											"value": "558"
										},
										{
											"begin": 14871,
											"end": 14923,
											"name": "JUMPI"
										},
										{
											"begin": 14911,
											"end": 14912,
											"name": "DUP5"
										},
										{
											"begin": 14904,
											"end": 14912,
											"name": "SWAP4"
										},
										{
											"begin": 14904,
											"end": 14912,
											"name": "POP"
										},
										{
											"begin": 14904,
											"end": 14912,
											"name": "POP"
										},
										{
											"begin": 14904,
											"end": 14912,
											"name": "POP"
										},
										{
											"begin": 14904,
											"end": 14912,
											"name": "POP"
										},
										{
											"begin": 14904,
											"end": 14912,
											"name": "PUSH [tag]",
											"value": "542"
										},
										{
											"begin": 14904,
											"end": 14912,
											"name": "JUMP"
										},
										{
											"begin": 14871,
											"end": 14923,
											"name": "tag",
											"value": "558"
										},
										{
											"begin": 14871,
											"end": 14923,
											"name": "JUMPDEST"
										},
										{
											"begin": 14769,
											"end": 14931,
											"name": "tag",
											"value": "557"
										},
										{
											"begin": 14769,
											"end": 14931,
											"name": "JUMPDEST"
										},
										{
											"begin": 14504,
											"end": 14937,
											"name": "POP"
										},
										{
											"begin": 14504,
											"end": 14937,
											"name": "POP"
										},
										{
											"begin": 14530,
											"end": 14533,
											"name": "DUP1"
										},
										{
											"begin": 14530,
											"end": 14533,
											"name": "DUP1"
										},
										{
											"begin": 14530,
											"end": 14533,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14530,
											"end": 14533,
											"name": "ADD"
										},
										{
											"begin": 14530,
											"end": 14533,
											"name": "SWAP2"
										},
										{
											"begin": 14530,
											"end": 14533,
											"name": "POP"
										},
										{
											"begin": 14530,
											"end": 14533,
											"name": "POP"
										},
										{
											"begin": 14504,
											"end": 14937,
											"name": "PUSH [tag]",
											"value": "543"
										},
										{
											"begin": 14504,
											"end": 14937,
											"name": "JUMP"
										},
										{
											"begin": 14504,
											"end": 14937,
											"name": "tag",
											"value": "544"
										},
										{
											"begin": 14504,
											"end": 14937,
											"name": "JUMPDEST"
										},
										{
											"begin": 14504,
											"end": 14937,
											"name": "POP"
										},
										{
											"begin": 14949,
											"end": 14950,
											"name": "DUP2"
										},
										{
											"begin": 14942,
											"end": 14950,
											"name": "SWAP1"
										},
										{
											"begin": 14942,
											"end": 14950,
											"name": "POP"
										},
										{
											"begin": 14427,
											"end": 14955,
											"name": "tag",
											"value": "542"
										},
										{
											"begin": 14427,
											"end": 14955,
											"name": "JUMPDEST"
										},
										{
											"begin": 14427,
											"end": 14955,
											"name": "SWAP4"
										},
										{
											"begin": 14427,
											"end": 14955,
											"name": "SWAP3"
										},
										{
											"begin": 14427,
											"end": 14955,
											"name": "POP"
										},
										{
											"begin": 14427,
											"end": 14955,
											"name": "POP"
										},
										{
											"begin": 14427,
											"end": 14955,
											"name": "POP"
										},
										{
											"begin": 14427,
											"end": 14955,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14959,
											"end": 15114,
											"name": "tag",
											"value": "547"
										},
										{
											"begin": 14959,
											"end": 15114,
											"name": "JUMPDEST"
										},
										{
											"begin": 15011,
											"end": 15015,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15105,
											"end": 15109,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15101,
											"end": 15102,
											"name": "DUP3"
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15088,
											"end": 15090,
											"name": "DUP6"
										},
										{
											"begin": 15081,
											"end": 15085,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15076,
											"end": 15078,
											"name": "DUP8"
										},
										{
											"begin": 15071,
											"end": 15073,
											"name": "DUP9"
										},
										{
											"begin": 15071,
											"end": 15078,
											"name": "MUL"
										},
										{
											"begin": 15071,
											"end": 15085,
											"name": "DUP2"
										},
										{
											"begin": 15071,
											"end": 15085,
											"name": "PUSH [tag]",
											"value": "560"
										},
										{
											"begin": 15071,
											"end": 15085,
											"name": "JUMPI"
										},
										{
											"begin": 15071,
											"end": 15085,
											"name": "INVALID"
										},
										{
											"begin": 15071,
											"end": 15085,
											"name": "tag",
											"value": "560"
										},
										{
											"begin": 15071,
											"end": 15085,
											"name": "JUMPDEST"
										},
										{
											"begin": 15071,
											"end": 15085,
											"name": "DIV"
										},
										{
											"begin": 15071,
											"end": 15090,
											"name": "MUL"
										},
										{
											"begin": 15071,
											"end": 15097,
											"name": "DUP2"
										},
										{
											"begin": 15071,
											"end": 15097,
											"name": "PUSH [tag]",
											"value": "561"
										},
										{
											"begin": 15071,
											"end": 15097,
											"name": "JUMPI"
										},
										{
											"begin": 15071,
											"end": 15097,
											"name": "INVALID"
										},
										{
											"begin": 15071,
											"end": 15097,
											"name": "tag",
											"value": "561"
										},
										{
											"begin": 15071,
											"end": 15097,
											"name": "JUMPDEST"
										},
										{
											"begin": 15071,
											"end": 15097,
											"name": "DIV"
										},
										{
											"begin": 15070,
											"end": 15102,
											"name": "MUL"
										},
										{
											"begin": 15070,
											"end": 15109,
											"name": "DUP2"
										},
										{
											"begin": 15070,
											"end": 15109,
											"name": "PUSH [tag]",
											"value": "562"
										},
										{
											"begin": 15070,
											"end": 15109,
											"name": "JUMPI"
										},
										{
											"begin": 15070,
											"end": 15109,
											"name": "INVALID"
										},
										{
											"begin": 15070,
											"end": 15109,
											"name": "tag",
											"value": "562"
										},
										{
											"begin": 15070,
											"end": 15109,
											"name": "JUMPDEST"
										},
										{
											"begin": 15070,
											"end": 15109,
											"name": "DIV"
										},
										{
											"begin": 15063,
											"end": 15067,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15055,
											"end": 15059,
											"name": "DUP1"
										},
										{
											"begin": 15051,
											"end": 15052,
											"name": "DUP5"
										},
										{
											"begin": 15044,
											"end": 15048,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15040,
											"end": 15041,
											"name": "DUP7"
										},
										{
											"begin": 15036,
											"end": 15037,
											"name": "DUP8"
										},
										{
											"begin": 15036,
											"end": 15041,
											"name": "MUL"
										},
										{
											"begin": 15036,
											"end": 15048,
											"name": "DUP2"
										},
										{
											"begin": 15036,
											"end": 15048,
											"name": "PUSH [tag]",
											"value": "563"
										},
										{
											"begin": 15036,
											"end": 15048,
											"name": "JUMPI"
										},
										{
											"begin": 15036,
											"end": 15048,
											"name": "INVALID"
										},
										{
											"begin": 15036,
											"end": 15048,
											"name": "tag",
											"value": "563"
										},
										{
											"begin": 15036,
											"end": 15048,
											"name": "JUMPDEST"
										},
										{
											"begin": 15036,
											"end": 15048,
											"name": "DIV"
										},
										{
											"begin": 15036,
											"end": 15052,
											"name": "MUL"
										},
										{
											"begin": 15036,
											"end": 15059,
											"name": "DUP2"
										},
										{
											"begin": 15036,
											"end": 15059,
											"name": "PUSH [tag]",
											"value": "564"
										},
										{
											"begin": 15036,
											"end": 15059,
											"name": "JUMPI"
										},
										{
											"begin": 15036,
											"end": 15059,
											"name": "INVALID"
										},
										{
											"begin": 15036,
											"end": 15059,
											"name": "tag",
											"value": "564"
										},
										{
											"begin": 15036,
											"end": 15059,
											"name": "JUMPDEST"
										},
										{
											"begin": 15036,
											"end": 15059,
											"name": "DIV"
										},
										{
											"begin": 15030,
											"end": 15032,
											"name": "DUP6"
										},
										{
											"begin": 15030,
											"end": 15060,
											"name": "MUL"
										},
										{
											"begin": 15030,
											"end": 15067,
											"name": "DUP2"
										},
										{
											"begin": 15030,
											"end": 15067,
											"name": "PUSH [tag]",
											"value": "565"
										},
										{
											"begin": 15030,
											"end": 15067,
											"name": "JUMPI"
										},
										{
											"begin": 15030,
											"end": 15067,
											"name": "INVALID"
										},
										{
											"begin": 15030,
											"end": 15067,
											"name": "tag",
											"value": "565"
										},
										{
											"begin": 15030,
											"end": 15067,
											"name": "JUMPDEST"
										},
										{
											"begin": 15030,
											"end": 15067,
											"name": "DIV"
										},
										{
											"begin": 15030,
											"end": 15109,
											"name": "ADD"
										},
										{
											"begin": 15023,
											"end": 15109,
											"name": "SWAP1"
										},
										{
											"begin": 15023,
											"end": 15109,
											"name": "POP"
										},
										{
											"begin": 14959,
											"end": 15114,
											"name": "SWAP3"
										},
										{
											"begin": 14959,
											"end": 15114,
											"name": "SWAP2"
										},
										{
											"begin": 14959,
											"end": 15114,
											"name": "POP"
										},
										{
											"begin": 14959,
											"end": 15114,
											"name": "POP"
										},
										{
											"begin": 14959,
											"end": 15114,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15118,
											"end": 15255,
											"name": "tag",
											"value": "550"
										},
										{
											"begin": 15118,
											"end": 15255,
											"name": "JUMPDEST"
										},
										{
											"begin": 15170,
											"end": 15174,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15245,
											"end": 15249,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15240,
											"end": 15242,
											"name": "DUP4"
										},
										{
											"begin": 15233,
											"end": 15237,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15228,
											"end": 15230,
											"name": "DUP6"
										},
										{
											"begin": 15223,
											"end": 15225,
											"name": "DUP7"
										},
										{
											"begin": 15223,
											"end": 15230,
											"name": "MUL"
										},
										{
											"begin": 15223,
											"end": 15237,
											"name": "DUP2"
										},
										{
											"begin": 15223,
											"end": 15237,
											"name": "PUSH [tag]",
											"value": "567"
										},
										{
											"begin": 15223,
											"end": 15237,
											"name": "JUMPI"
										},
										{
											"begin": 15223,
											"end": 15237,
											"name": "INVALID"
										},
										{
											"begin": 15223,
											"end": 15237,
											"name": "tag",
											"value": "567"
										},
										{
											"begin": 15223,
											"end": 15237,
											"name": "JUMPDEST"
										},
										{
											"begin": 15223,
											"end": 15237,
											"name": "DIV"
										},
										{
											"begin": 15223,
											"end": 15242,
											"name": "MUL"
										},
										{
											"begin": 15223,
											"end": 15249,
											"name": "DUP2"
										},
										{
											"begin": 15223,
											"end": 15249,
											"name": "PUSH [tag]",
											"value": "568"
										},
										{
											"begin": 15223,
											"end": 15249,
											"name": "JUMPI"
										},
										{
											"begin": 15223,
											"end": 15249,
											"name": "INVALID"
										},
										{
											"begin": 15223,
											"end": 15249,
											"name": "tag",
											"value": "568"
										},
										{
											"begin": 15223,
											"end": 15249,
											"name": "JUMPDEST"
										},
										{
											"begin": 15223,
											"end": 15249,
											"name": "DIV"
										},
										{
											"begin": 15215,
											"end": 15219,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15207,
											"end": 15211,
											"name": "DUP1"
										},
										{
											"begin": 15203,
											"end": 15204,
											"name": "DUP5"
										},
										{
											"begin": 15199,
											"end": 15200,
											"name": "DUP6"
										},
										{
											"begin": 15199,
											"end": 15204,
											"name": "MUL"
										},
										{
											"begin": 15199,
											"end": 15211,
											"name": "DUP2"
										},
										{
											"begin": 15199,
											"end": 15211,
											"name": "PUSH [tag]",
											"value": "569"
										},
										{
											"begin": 15199,
											"end": 15211,
											"name": "JUMPI"
										},
										{
											"begin": 15199,
											"end": 15211,
											"name": "INVALID"
										},
										{
											"begin": 15199,
											"end": 15211,
											"name": "tag",
											"value": "569"
										},
										{
											"begin": 15199,
											"end": 15211,
											"name": "JUMPDEST"
										},
										{
											"begin": 15199,
											"end": 15211,
											"name": "DIV"
										},
										{
											"begin": 15193,
											"end": 15195,
											"name": "DUP6"
										},
										{
											"begin": 15189,
											"end": 15190,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 15189,
											"end": 15195,
											"name": "MUL"
										},
										{
											"begin": 15189,
											"end": 15212,
											"name": "MUL"
										},
										{
											"begin": 15189,
											"end": 15219,
											"name": "DUP2"
										},
										{
											"begin": 15189,
											"end": 15219,
											"name": "PUSH [tag]",
											"value": "570"
										},
										{
											"begin": 15189,
											"end": 15219,
											"name": "JUMPI"
										},
										{
											"begin": 15189,
											"end": 15219,
											"name": "INVALID"
										},
										{
											"begin": 15189,
											"end": 15219,
											"name": "tag",
											"value": "570"
										},
										{
											"begin": 15189,
											"end": 15219,
											"name": "JUMPDEST"
										},
										{
											"begin": 15189,
											"end": 15219,
											"name": "DIV"
										},
										{
											"begin": 15189,
											"end": 15250,
											"name": "ADD"
										},
										{
											"begin": 15182,
											"end": 15250,
											"name": "SWAP1"
										},
										{
											"begin": 15182,
											"end": 15250,
											"name": "POP"
										},
										{
											"begin": 15118,
											"end": 15255,
											"name": "SWAP3"
										},
										{
											"begin": 15118,
											"end": 15255,
											"name": "SWAP2"
										},
										{
											"begin": 15118,
											"end": 15255,
											"name": "POP"
										},
										{
											"begin": 15118,
											"end": 15255,
											"name": "POP"
										},
										{
											"begin": 15118,
											"end": 15255,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMPDEST"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "MLOAD"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "ADD"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "MSTORE"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "AND"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "MSTORE"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "ADD"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "AND"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "MSTORE"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "ADD"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "MSTORE"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "ADD"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "MSTORE"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "ADD"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "MSTORE"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "ADD"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "MSTORE"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "ADD"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "MSTORE"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "ADD"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "DUP2"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "MSTORE"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "POP"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "SWAP1"
										},
										{
											"begin": 236,
											"end": 17820,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"2BE17C6303E0C10DA5FF1EB4B266C473AE5FD600C60B6F9FACCEE86002AD7D5E": "655a4b616c69627572506169723a2066656550657263656e74206d7573746e27742065786365656420746865206d6178696d756d",
										"5C26FE7BAC5BD215670303820601AC49F0D4BAEB8F47FD314BBC05E382CA9E12": "655a4b616c69627572506169723a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
										"6C8AFA2437545964FFEE4C84B28541AF800177F71A1BAD08A0655CAE5B8D43E9": "655a4b616c69627572506169723a20494e53554646494349454e545f4c4951554944495459",
										"8AB36B58F19F5658E716652A965572C61EC94CA2B0078CC5663963339A0EF78F": "655a4b616c69627572506169723a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
										"985AF2D628585B86A62C2A3E0E095AA532421CF73AFCD9F40539C0E984229C9A": "655a4b616c69627572506169723a20494e53554646494349454e545f4f55545055545f414d4f554e54",
										"9FF115C8F228BB5656172ECE44E1ABAFBA1EB82B0FF5C74955E92E978F9BE43B": "655a4b616c69627572506169723a206f6e6c7920666163746f7279277320736574537461626c654f776e6572",
										"B31389CDCE9C235FB73CF94E115B26CC6B115463D873636778ED56513ABEFEA0": "655a4b616c69627572506169723a20494e53554646494349454e545f494e5055545f414d4f554e54",
										"B812A7BB29DEC6F526121E1BFDF77DA0D9FD5F3D8C74BE699D0A2F01BE67E231": "655a4b616c69627572506169723a206c697175696469747920726174696f206e6f7420696e697469616c697a6564",
										"D1BF768DB97CBB37158F2706C5B1B11EF80704D9D42C88986D88C55D10379282": "655a4b616c69627572506169723a2066656550657263656e74206d7573746e27742065786365656420746865206d696e696d756d",
										"F80FC17E443115161D9ED24AAF21C6E6102496443806D2822FE65BC11FC7A8D3": "655a4b616c69627572506169723a206f6e6c7920666163746f7279277320666565416d6f756e744f776e6572",
										"FD83120603ED4D82DE96120F878F97F3EAB3D3E5B9B17EB433B2F605B574072D": "655a4b616c69627572506169723a206f6e6c7920666163746f72792773206f776e6572"
									}
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"FEE_DENOMINATOR()": "d73792a9",
							"MAX_FEE_PERCENT()": "67d81740",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"drainWrongToken(address,address)": "f39ac11f",
							"factory()": "c45a0155",
							"getAmountOut(uint256,address)": "f140a35a",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"initialized()": "158ef93e",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"pairTypeImmutable()": "b6200b07",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"precisionMultiplier0()": "3b9f1dc0",
							"precisionMultiplier1()": "288e5d02",
							"setFeePercent(uint16,uint16)": "48e5d260",
							"setPairTypeImmutable()": "3ba17077",
							"setStableSwap(bool,uint112,uint112)": "3029e5d4",
							"skim(address)": "bc25cf77",
							"stableSwap()": "9e548b7f",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"swap(uint256,uint256,address,bytes,address)": "6e1fdd7f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token0FeePercent()": "62ecec03",
							"token1()": "d21220a7",
							"token1FeePercent()": "2fcd1692",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"DrainWrongToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"token0FeePercent\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"token1FeePercent\",\"type\":\"uint16\"}],\"name\":\"FeePercentUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SetPairTypeImmutable\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"prevStableSwap\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"stableSwap\",\"type\":\"bool\"}],\"name\":\"SetStableSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Skim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FEE_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_FEE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"drainWrongToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint16\",\"name\":\"_token0FeePercent\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_token1FeePercent\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pairTypeImmutable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"precisionMultiplier0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"precisionMultiplier1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newToken0FeePercent\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"newToken1FeePercent\",\"type\":\"uint16\"}],\"name\":\"setFeePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setPairTypeImmutable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"expectedReserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"expectedReserve1\",\"type\":\"uint112\"}],\"name\":\"setStableSwap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stableSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0FeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1FeePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"drainWrongToken(address,address)\":{\"details\":\"Allow to recover token sent here by mistake  * Can only be called by factory's owner\"},\"setFeePercent(uint16,uint16)\":{\"details\":\"Updates the swap fees percent  * Can only be called by the factory's feeAmountOwner\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/pair.sol\":\"EZKaliburPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UniswapV2ERC20.sol\":{\"keccak256\":\"0x13a4240b24ff1952f2aee5b6d1cc82cb8ca07b3cfe6c33f6f981f788c26d533a\",\"urls\":[\"bzz-raw://0a9a153a771a9721f70ec3370edcc31a3d121a3073a92f686ce6ca78d8a17938\",\"dweb:/ipfs/QmRMkGcPkf3ekirYEjWWW1XXKsU3qErFGLAn97c2kt97g9\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x61db17aebc5d812c7002d15c1da954065e56abe49d64b14c034abe5604d70eb3\",\"urls\":[\"bzz-raw://b006685e753f9120469f10b09c159f222d4cb8b507a6c1f0c14ed50c883ebe66\",\"dweb:/ipfs/QmSyY7iTugbczPwfGK67etiyPULenYGzzRYbt8aabwwkUb\"]},\"contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0x9dc30a29e23d6f856525d3555ba9fa59c69d714d04659494d6b79ed63b81ff9e\",\"urls\":[\"bzz-raw://e63be599e1ac42dff55d4e974b9e58f99189af3002721482e36bb4edddb2de9e\",\"dweb:/ipfs/QmPfJvQBF6qS5E5SwUapLKinCHdLASoeDmDX2wdkKFtd1X\"]},\"contracts/interfaces/IPair.sol\":{\"keccak256\":\"0x58a590f3255843597ae481db1e095656b314e7a69e041152a26eb5d982e85523\",\"urls\":[\"bzz-raw://0c8156cd523ad57d02919ef243ab2f1746617e510c1e7543bf5970eac57b63e6\",\"dweb:/ipfs/QmadYSF7CE1XsmHJxdNPTjTwPnj3G61VmypeLeJEjmNBqk\"]},\"contracts/interfaces/IUniswapV2Callee.sol\":{\"keccak256\":\"0xdb17a1fb73e261e736ae8862be2d9a32964fc4b3741f48980f5cdc9d92b99a96\",\"urls\":[\"bzz-raw://468dab23a95d9d9b7d6ce74008d45eef3de2f137ede604e6be6c5e7d0121c5e9\",\"dweb:/ipfs/QmcXwjTfp6tCRgf1KsNQyUAtrqKhiaN6fbaHVGr22eficP\"]},\"contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x9e433765e9ef7b4ff5e406b260b222c47c2aa27d36df756db708064fcb239ae7\",\"urls\":[\"bzz-raw://5b67c24a5e1652b51ad2f37adad2905519f0e05e7c8b2b4d8b3e00b429bb9213\",\"dweb:/ipfs/QmarJq43GabAGGSqtMUb87ACYQt73mSFbXKyFAPDXpbFNM\"]},\"contracts/libraries/Math.sol\":{\"keccak256\":\"0x05927cb4aa14897bd567607522c18d2d518fa803ade6f870fac244c6f3702a3b\",\"urls\":[\"bzz-raw://b2805464c2d75cbdd726d6bd5c9b8d1f2c8566b606ec769ffa9a194a42248862\",\"dweb:/ipfs/QmWBa9BsCH8gbncvDFXmfMJX1USTHvAREtc8C7nz6miQpw\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x9ea215227e02c4462247124b424db9dc7364f7d5ac0961debf46c16d5861ad21\",\"urls\":[\"bzz-raw://1c02a26140f0789d05f820916aaebb2981ce714b67022f0bb7c635c91454f490\",\"dweb:/ipfs/QmR5BDEdyncBMss8vRgzK6jsGrBRkk4wqgNNHNmzi36k11\"]},\"contracts/pair.sol\":{\"keccak256\":\"0x2fd7b46ca963ed45f19c0bebabfb957a502989450ff34f85aa121076b6f2e10c\",\"urls\":[\"bzz-raw://e7c736d065fd8986b65d10a0569b2df9beaf6034fbf41977d0235e6ef3ef40d0\",\"dweb:/ipfs/QmUoaEZ5yBXdpd6a4dg8KhABbbBQM5pNDXgGRznWymX1j7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 38,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1143,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "factory",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1145,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "token0",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1147,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "token1",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1149,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "initialized",
								"offset": 20,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 1157,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "reserve0",
								"offset": 0,
								"slot": "8",
								"type": "t_uint112"
							},
							{
								"astId": 1159,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "reserve1",
								"offset": 14,
								"slot": "8",
								"type": "t_uint112"
							},
							{
								"astId": 1162,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "token0FeePercent",
								"offset": 28,
								"slot": "8",
								"type": "t_uint16"
							},
							{
								"astId": 1165,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "token1FeePercent",
								"offset": 30,
								"slot": "8",
								"type": "t_uint16"
							},
							{
								"astId": 1167,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "precisionMultiplier0",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1169,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "precisionMultiplier1",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1171,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "kLast",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1173,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "stableSwap",
								"offset": 0,
								"slot": "12",
								"type": "t_bool"
							},
							{
								"astId": 1175,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "pairTypeImmutable",
								"offset": 1,
								"slot": "12",
								"type": "t_bool"
							},
							{
								"astId": 1178,
								"contract": "contracts/pair.sol:EZKaliburPair",
								"label": "unlocked",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint112": {
								"encoding": "inplace",
								"label": "uint112",
								"numberOfBytes": "14"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/UniswapV2ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/UniswapV2ERC20.sol",
					"exportedSymbols": {
						"UniswapV2ERC20": [
							395
						]
					},
					"id": 396,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "contracts/interfaces/IUniswapV2ERC20.sol",
							"file": "./interfaces/IUniswapV2ERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 396,
							"sourceUnit": 962,
							"src": "26:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 396,
							"sourceUnit": 1113,
							"src": "69:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "IUniswapV2ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 961,
										"src": "132:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2ERC20_$961",
											"typeString": "contract IUniswapV2ERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "132:15:0"
								}
							],
							"contractDependencies": [
								961
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 395,
							"linearizedBaseContracts": [
								395,
								961
							],
							"name": "UniswapV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1112,
										"src": "160:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1112",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "154:24:0",
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "173:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 11,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "184:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 9,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "184:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "655a4b616c69627572204c50",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "214:14:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1f4aa004952556408152a687a8eb8176a64c2644112563c60e3c6f12560a2d0e",
											"typeString": "literal_string \"eZKalibur LP\""
										},
										"value": "eZKalibur LP"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "234:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 12,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "234:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "655a4b2d4c50",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "266:8:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_a777ddb335170c0d1b9f4ce091aed0e225ef9cc1f088d61e0a6d365b079b86aa",
											"typeString": "literal_string \"eZK-LP\""
										},
										"value": "eZK-LP"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "280:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "280:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "313:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "321:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "321:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "351:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "359:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "351:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "370:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "398:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "406:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "398:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 27,
											"keyType": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "425:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "417:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 26,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "436:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 31,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "466:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 30,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "466:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 34,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "607:108:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 32,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "649:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "721:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 37,
										"keyType": {
											"id": 35,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "729:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "721:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 36,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "740:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 46,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "781:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "804:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "829:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "780:60:0"
									},
									"src": "766:75:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 54,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "861:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "883:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "903:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "903:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "860:54:0"
									},
									"src": "846:69:0"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "942:423:0",
										"statements": [
											{
												"assignments": [
													58
												],
												"declarations": [
													{
														"constant": false,
														"id": 58,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "952:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 57,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "952:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 59,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "952:12:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 58,
															"isOffset": false,
															"isSlot": false,
															"src": "997:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 60,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "974:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 61,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1034:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1114:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 65,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3228,
																			"src": "1104:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1104:95:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 70,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 11,
																						"src": "1233:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 69,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1227:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1227:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 68,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3228,
																			"src": "1217:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1217:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 75,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1273:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 74,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1267:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 76,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1267:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 73,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3228,
																			"src": "1257:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1257:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 78,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1296:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 80,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3252,
																				"src": "1329:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_UniswapV2ERC20_$395",
																					"typeString": "contract UniswapV2ERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_UniswapV2ERC20_$395",
																					"typeString": "contract UniswapV2ERC20"
																				}
																			],
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1321:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1321:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 63,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3221,
																		"src": "1076:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1076:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1076:272:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 62,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3228,
															"src": "1053:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1053:305:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1034:324:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1034:324:0"
											}
										]
									},
									"documentation": null,
									"id": 87,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "942:0:0"
									},
									"scope": 395,
									"src": "921:444:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1419:149:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 94,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1429:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 97,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1459:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 95,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1443:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1061,
															"src": "1443:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1443:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1429:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1429:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 101,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1475:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 103,
														"indexExpression": {
															"argumentTypes": null,
															"id": 102,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1485:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1475:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 108,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1509:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 104,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1491:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 106,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 105,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1501:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1491:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1061,
															"src": "1491:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1491:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1475:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1475:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1547:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1539:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1539:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1551:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 117,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1555:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 112,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1530:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1530:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "EmitStatement",
												"src": "1525:36:0"
											}
										]
									},
									"documentation": null,
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1386:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1398:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1398:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1385:24:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1419:0:0"
									},
									"scope": 395,
									"src": "1371:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1624:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 128,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1634:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 130,
														"indexExpression": {
															"argumentTypes": null,
															"id": 129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1644:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1634:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 135,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1672:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 131,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1652:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 133,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 132,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1662:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1652:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1083,
															"src": "1652:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1652:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1634:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "1634:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 139,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1688:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 142,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1718:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 140,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1702:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1083,
															"src": "1702:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1702:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1688:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "1688:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 147,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1748:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1762:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1754:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1754:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 151,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1766:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 146,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1739:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1739:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "EmitStatement",
												"src": "1734:38:0"
											}
										]
									},
									"documentation": null,
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1589:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1603:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1603:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1588:26:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1624:0:0"
									},
									"scope": 395,
									"src": "1574:205:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1855:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 164,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1865:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 167,
															"indexExpression": {
																"argumentTypes": null,
																"id": 165,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1875:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1865:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 168,
														"indexExpression": {
															"argumentTypes": null,
															"id": 166,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1882:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1865:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 169,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1893:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1865:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1865:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 173,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1922:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 174,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1929:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 175,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "1938:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 172,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															46
														],
														"referencedDeclaration": 46,
														"src": "1913:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1913:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "1908:36:0"
											}
										]
									},
									"documentation": null,
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1803:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1818:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1835:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1835:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1802:44:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1855:0:0"
									},
									"scope": 395,
									"src": "1785:166:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "2022:151:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 188,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2032:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 190,
														"indexExpression": {
															"argumentTypes": null,
															"id": 189,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2042:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2032:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 195,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2070:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 191,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2050:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 193,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 192,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "2060:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2050:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1083,
															"src": "2050:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2050:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2032:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2032:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 199,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2086:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 201,
														"indexExpression": {
															"argumentTypes": null,
															"id": 200,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2096:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2086:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 206,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2120:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 202,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2102:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 204,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 203,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "2112:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2102:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1061,
															"src": "2102:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2102:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2086:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "2086:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 211,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2150:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 212,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2156:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 213,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2160:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 210,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "2141:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2141:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "2136:30:0"
											}
										]
									},
									"documentation": null,
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1976:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1990:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2002:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2002:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1975:38:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:0:0"
									},
									"scope": 395,
									"src": "1957:216:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "2249:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 227,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3234,
																"src": "2268:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2268:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 229,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "2280:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 230,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2289:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 226,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2259:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2259:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2259:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2312:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 225,
												"id": 234,
												"nodeType": "Return",
												"src": "2305:11:0"
											}
										]
									},
									"documentation": null,
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2196:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2213:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2213:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2195:29:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2243:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2243:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2242:6:0"
									},
									"scope": 395,
									"src": "2179:144:0",
									"stateMutability": "nonpayable",
									"superFunction": 906,
									"visibility": "external"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "2395:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 246,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3234,
																"src": "2415:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2415:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 248,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "2427:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 249,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2431:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 245,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2405:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2405:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "2405:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2454:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 244,
												"id": 253,
												"nodeType": "Return",
												"src": "2447:11:0"
											}
										]
									},
									"documentation": null,
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2347:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2359:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2359:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2346:24:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2389:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2389:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2388:6:0"
									},
									"scope": 395,
									"src": "2329:136:0",
									"stateMutability": "nonpayable",
									"superFunction": 915,
									"visibility": "external"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "2555:307:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 266,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2569:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 268,
															"indexExpression": {
																"argumentTypes": null,
																"id": 267,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "2579:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2569:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 271,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3234,
																"src": "2585:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2585:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2569:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "2605:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2606:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2600:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2600:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2569:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 306,
												"nodeType": "IfStatement",
												"src": "2565:234:0",
												"trueBody": {
													"id": 305,
													"nodeType": "Block",
													"src": "2610:189:0",
													"statements": [
														{
															"assignments": [
																278
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 278,
																	"name": "remaining",
																	"nodeType": "VariableDeclaration",
																	"scope": 305,
																	"src": "2624:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 277,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2624:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 288,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 286,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "2673:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 279,
																				"name": "allowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "2641:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(address => uint256))"
																				}
																			},
																			"id": 281,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 280,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 257,
																				"src": "2651:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2641:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 284,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 282,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3234,
																				"src": "2657:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "2657:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2641:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1083,
																	"src": "2641:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2641:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2624:55:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 289,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "2693:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 293,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 290,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 257,
																			"src": "2703:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2693:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 294,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 291,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3234,
																			"src": "2709:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2709:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2693:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 295,
																	"name": "remaining",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "2723:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2693:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 297,
															"nodeType": "ExpressionStatement",
															"src": "2693:39:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 299,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "2760:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 300,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3234,
																			"src": "2766:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2766:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 302,
																		"name": "remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "2778:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 298,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		46
																	],
																	"referencedDeclaration": 46,
																	"src": "2751:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2751:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 304,
															"nodeType": "EmitStatement",
															"src": "2746:42:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 308,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2818:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 309,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2824:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 310,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2828:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 307,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2808:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2808:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2808:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2851:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 265,
												"id": 314,
												"nodeType": "Return",
												"src": "2844:11:0"
											}
										]
									},
									"documentation": null,
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2493:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2507:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2519:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2519:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2492:38:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2549:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2549:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2548:6:0"
									},
									"scope": 395,
									"src": "2471:391:0",
									"stateMutability": "nonpayable",
									"superFunction": 926,
									"visibility": "external"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "2983:547:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 334,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "3001:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 335,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "3013:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3013:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3001:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a2045585049524544",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3030:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
																"typeString": "literal_string \"UniswapV2: EXPIRED\""
															},
															"value": "UniswapV2: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
																"typeString": "literal_string \"UniswapV2: EXPIRED\""
															}
														],
														"id": 333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "2993:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2993:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "2993:58:0"
											},
											{
												"assignments": [
													342
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "3061:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 341,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3061:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3135:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 347,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "3163:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 351,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 34,
																					"src": "3218:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 352,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 318,
																					"src": "3235:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 353,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 320,
																					"src": "3242:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 354,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 322,
																					"src": "3251:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 358,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3258:15:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 355,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 38,
																							"src": "3258:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 357,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 356,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 318,
																							"src": "3265:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3258:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 359,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 324,
																					"src": "3275:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 349,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3221,
																					"src": "3207:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3207:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3207:77:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 348,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3228,
																		"src": "3197:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3197:88:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 344,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3221,
																	"src": "3101:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3101:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3101:198:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 343,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3228,
														"src": "3078:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3078:231:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3061:248:0"
											},
											{
												"assignments": [
													366
												],
												"declarations": [
													{
														"constant": false,
														"id": 366,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "3319:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 365,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3319:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 373,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 368,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "3356:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 369,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "3364:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 370,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "3367:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 371,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "3370:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 367,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3226,
														"src": "3346:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3346:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3319:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 375,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "3390:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3418:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3410:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3410:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3390:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 380,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "3424:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 381,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "3444:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3424:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3390:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20494e56414c49445f5349474e4154555245",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3451:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
																"typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
															},
															"value": "UniswapV2: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
																"typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
															}
														],
														"id": 374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "3382:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3382:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "3382:100:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 388,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "3501:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 389,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "3508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 390,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "3517:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 387,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3492:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3492:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "3492:31:0"
											}
										]
									},
									"documentation": null,
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2884:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2899:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2916:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2916:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2928:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2928:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2943:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 325,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2943:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2952:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 327,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2963:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2883:90:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2983:0:0"
									},
									"scope": 395,
									"src": "2868:662:0",
									"stateMutability": "nonpayable",
									"superFunction": 960,
									"visibility": "external"
								}
							],
							"scope": 396,
							"src": "105:3427:0"
						}
					],
					"src": "0:3533:0"
				},
				"id": 0
			},
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							479
						]
					},
					"id": 480,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 397,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 479,
							"linearizedBaseContracts": [
								479
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 405,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "64:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "87:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "87:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "112:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "112:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "63:60:1"
									},
									"src": "49:75:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 413,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "144:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "166:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "166:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "186:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "186:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "143:54:1"
									},
									"src": "129:69:1"
								},
								{
									"body": null,
									"documentation": null,
									"id": 418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "217:2:1"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "243:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 415,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "243:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "242:15:1"
									},
									"scope": 479,
									"src": "204:54:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "278:2:1"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "304:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 420,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "304:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "303:15:1"
									},
									"scope": 479,
									"src": "263:56:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "341:2:1"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "367:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 425,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "367:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "366:7:1"
									},
									"scope": 479,
									"src": "324:50:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "399:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "425:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "425:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "424:6:1"
									},
									"scope": 479,
									"src": "379:52:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "455:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "454:15:1"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "493:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "493:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "492:6:1"
									},
									"scope": 479,
									"src": "436:63:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "523:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "538:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "522:32:1"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "578:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "578:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "577:6:1"
									},
									"scope": 479,
									"src": "504:80:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "607:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "624:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "624:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "606:29:1"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "654:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "654:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "653:6:1"
									},
									"scope": 479,
									"src": "590:70:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "683:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "695:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "682:24:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "725:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 464,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "725:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "724:6:1"
									},
									"scope": 479,
									"src": "665:66:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "758:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "772:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "784:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "784:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "757:38:1"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "814:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 475,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "813:6:1"
									},
									"scope": 479,
									"src": "736:84:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 480,
							"src": "26:796:1"
						}
					],
					"src": "0:823:1"
				},
				"id": 1
			},
			"contracts/interfaces/IFactory.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IFactory.sol",
					"exportedSymbols": {
						"IFactory": [
							566
						]
					},
					"id": 567,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 481,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 566,
							"linearizedBaseContracts": [
								566
							],
							"name": "IFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 491,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"indexed": true,
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "69:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"indexed": true,
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "93:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "93:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"indexed": false,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "117:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "117:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"indexed": false,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "131:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "131:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "68:71:2"
									},
									"src": "51:89:2"
								},
								{
									"body": null,
									"documentation": null,
									"id": 496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "160:2:2"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "186:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "186:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "185:9:2"
									},
									"scope": 566,
									"src": "146:49:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feePercentOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "224:2:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "250:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "249:9:2"
									},
									"scope": 566,
									"src": "200:59:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setStableOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:2:2"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "313:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "313:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "312:9:2"
									},
									"scope": 566,
									"src": "264:58:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "341:2:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "367:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "367:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "366:9:2"
									},
									"scope": 566,
									"src": "327:49:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerFeeShare",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "404:2:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "430:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "429:9:2"
									},
									"scope": 566,
									"src": "382:57:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "referrersFeeShare",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "471:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "470:9:2"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "503:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "502:9:2"
									},
									"scope": 566,
									"src": "444:68:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "535:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "551:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "534:32:2"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "590:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "589:14:2"
									},
									"scope": 566,
									"src": "518:86:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "627:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "626:9:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "659:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "658:14:2"
									},
									"scope": 566,
									"src": "609:64:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "701:2:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "727:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "726:9:2"
									},
									"scope": 566,
									"src": "678:58:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "762:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "778:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "761:32:2"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "812:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "811:14:2"
									},
									"scope": 566,
									"src": "742:84:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "850:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:9:2"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "867:0:2"
									},
									"scope": 566,
									"src": "832:36:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeInfo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "889:2:2"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"name": "_ownerFeeShare",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "915:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "915:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"name": "_feeTo",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "936:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "914:37:2"
									},
									"scope": 566,
									"src": "873:79:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 567,
							"src": "26:928:2"
						}
					],
					"src": "0:955:2"
				},
				"id": 2
			},
			"contracts/interfaces/IPair.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IPair.sol",
					"exportedSymbols": {
						"IPair": [
							829
						]
					},
					"id": 830,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 568,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 829,
							"linearizedBaseContracts": [
								829
							],
							"name": "IPair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 576,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "63:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "86:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "86:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "111:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "111:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "62:60:3"
									},
									"src": "48:75:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 584,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "143:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "165:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "185:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "185:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "142:54:3"
									},
									"src": "128:69:3"
								},
								{
									"body": null,
									"documentation": null,
									"id": 589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "216:2:3"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "242:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 586,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "242:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "241:15:3"
									},
									"scope": 829,
									"src": "203:54:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:2:3"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "303:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "303:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "302:15:3"
									},
									"scope": 829,
									"src": "262:56:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "340:2:3"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "366:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 596,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "366:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "365:7:3"
									},
									"scope": 829,
									"src": "323:50:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "398:2:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "424:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "424:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "423:6:3"
									},
									"scope": 829,
									"src": "378:52:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "454:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "454:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "453:15:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "492:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "492:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "491:6:3"
									},
									"scope": 829,
									"src": "435:63:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "522:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "537:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "521:32:3"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "577:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "577:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "576:6:3"
									},
									"scope": 829,
									"src": "503:80:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "606:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "623:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "623:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "605:29:3"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "653:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 626,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "653:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "652:6:3"
									},
									"scope": 829,
									"src": "589:70:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "682:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "694:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "681:24:3"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "724:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "724:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "723:6:3"
									},
									"scope": 829,
									"src": "664:66:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 649,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "757:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "771:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "783:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "783:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "756:38:3"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "813:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 646,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "813:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "812:6:3"
									},
									"scope": 829,
									"src": "735:84:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "850:2:3"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "876:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 651,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "875:9:3"
									},
									"scope": 829,
									"src": "825:60:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 659,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "914:2:3"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 656,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 829,
									"src": "890:59:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "970:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "969:15:3"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1008:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1008:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1007:6:3"
									},
									"scope": 829,
									"src": "954:60:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1036:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1051:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1068:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1068:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1080:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1080:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1095:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 675,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1095:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1104:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 677,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1115:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 679,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1035:90:3"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1134:0:3"
									},
									"scope": 829,
									"src": "1020:115:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 691,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1152:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1176:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1176:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1190:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1190:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1151:52:3"
									},
									"src": "1141:63:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 701,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1220:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1244:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1244:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1258:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1258:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1272:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1219:72:3"
									},
									"src": "1209:83:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 715,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1317:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1317:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1349:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1349:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1373:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1373:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1397:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1397:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1422:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1422:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1447:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1307:164:3"
									},
									"src": "1297:175:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 721,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1488:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 716,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1506:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 718,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1487:36:3"
									},
									"src": "1477:47:3"
								},
								{
									"body": null,
									"documentation": null,
									"id": 726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1556:2:3"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1582:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1582:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1581:6:3"
									},
									"scope": 829,
									"src": "1530:58:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1609:2:3"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1635:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1634:9:3"
									},
									"scope": 829,
									"src": "1593:51:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1664:2:3"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1690:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1689:9:3"
									},
									"scope": 829,
									"src": "1649:50:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1719:2:3"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "1745:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1744:9:3"
									},
									"scope": 829,
									"src": "1704:50:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1779:2:3"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1805:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 743,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1823:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 745,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"name": "token0feePercent",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1841:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 747,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1841:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"name": "token1FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1866:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 749,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1866:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1804:86:3"
									},
									"scope": 829,
									"src": "1759:132:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1918:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1918:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"name": "tokenIn",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1933:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1933:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1917:32:3"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1973:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1973:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1972:6:3"
									},
									"scope": 829,
									"src": "1896:83:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1998:2:3"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "2024:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2024:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2023:6:3"
									},
									"scope": 829,
									"src": "1984:46:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeePercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"name": "token0FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "2059:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 767,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2059:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"name": "token1FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "2084:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 769,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2084:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2058:50:3"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2117:0:3"
									},
									"scope": 829,
									"src": "2036:82:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2137:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2137:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2136:12:3"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2167:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2167:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2166:16:3"
									},
									"scope": 829,
									"src": "2123:60:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 789,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "2202:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2201:12:3"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "2232:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2232:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "2246:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2246:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2231:28:3"
									},
									"scope": 829,
									"src": "2188:72:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2279:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2279:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2296:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2296:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2313:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2313:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2325:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 796,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2325:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2278:67:3"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:0:3"
									},
									"scope": 829,
									"src": "2265:90:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "2374:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2374:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "2391:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "2408:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "2420:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2420:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"name": "referrer",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "2441:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2373:85:3"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2467:0:3"
									},
									"scope": 829,
									"src": "2360:108:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2487:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2486:12:3"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2507:0:3"
									},
									"scope": 829,
									"src": "2473:35:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 821,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2526:2:3"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:0:3"
									},
									"scope": 829,
									"src": "2513:25:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2564:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2573:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2573:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2563:18:3"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2590:0:3"
									},
									"scope": 829,
									"src": "2544:47:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 830,
							"src": "26:2567:3"
						}
					],
					"src": "0:2594:3"
				},
				"id": 3
			},
			"contracts/interfaces/IUniswapV2Callee.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IUniswapV2Callee.sol",
					"exportedSymbols": {
						"IUniswapV2Callee": [
							843
						]
					},
					"id": 844,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 831,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 843,
							"linearizedBaseContracts": [
								843
							],
							"name": "IUniswapV2Callee",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV2Call",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "82:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "82:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "98:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "98:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "112:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "112:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "126:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 838,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "126:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "81:65:4"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "155:0:4"
									},
									"scope": 843,
									"src": "59:97:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 844,
							"src": "26:132:4"
						}
					],
					"src": "0:159:4"
				},
				"id": 4
			},
			"contracts/interfaces/IUniswapV2ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IUniswapV2ERC20.sol",
					"exportedSymbols": {
						"IUniswapV2ERC20": [
							961
						]
					},
					"id": 962,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 845,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 961,
							"linearizedBaseContracts": [
								961
							],
							"name": "IUniswapV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 853,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "73:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "73:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "96:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "96:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "121:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "121:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "72:60:5"
									},
									"src": "58:75:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 861,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "153:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "153:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "175:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "195:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "195:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "152:54:5"
									},
									"src": "138:69:5"
								},
								{
									"body": null,
									"documentation": null,
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:5"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "252:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 863,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "252:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "251:15:5"
									},
									"scope": 961,
									"src": "213:54:5",
									"stateMutability": "pure",
									"superFunction": 589,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:2:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "313:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 868,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "313:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "312:15:5"
									},
									"scope": 961,
									"src": "272:56:5",
									"stateMutability": "pure",
									"superFunction": 594,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:2:5"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "376:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 873,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "376:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "375:7:5"
									},
									"scope": 961,
									"src": "333:50:5",
									"stateMutability": "pure",
									"superFunction": 599,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:2:5"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "434:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "434:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "433:6:5"
									},
									"scope": 961,
									"src": "388:52:5",
									"stateMutability": "view",
									"superFunction": 604,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "464:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "463:15:5"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "502:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "502:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "501:6:5"
									},
									"scope": 961,
									"src": "445:63:5",
									"stateMutability": "view",
									"superFunction": 611,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 897,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "532:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "547:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "531:32:5"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "587:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "587:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "586:6:5"
									},
									"scope": 961,
									"src": "513:80:5",
									"stateMutability": "view",
									"superFunction": 620,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 906,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "616:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "633:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "633:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "615:29:5"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "663:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 903,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "663:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "662:6:5"
									},
									"scope": 961,
									"src": "599:70:5",
									"stateMutability": "nonpayable",
									"superFunction": 629,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 915,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "692:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "704:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "704:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:24:5"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "734:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 912,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "734:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "733:6:5"
									},
									"scope": 961,
									"src": "674:66:5",
									"stateMutability": "nonpayable",
									"superFunction": 638,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "767:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "781:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "793:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "793:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:38:5"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "823:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 923,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "823:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "822:6:5"
									},
									"scope": 961,
									"src": "745:84:5",
									"stateMutability": "nonpayable",
									"superFunction": 649,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 931,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:2:5"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "886:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 928,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "885:9:5"
									},
									"scope": 961,
									"src": "835:60:5",
									"stateMutability": "view",
									"superFunction": 654,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "924:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "950:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 933,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "949:9:5"
									},
									"scope": 961,
									"src": "900:59:5",
									"stateMutability": "pure",
									"superFunction": 659,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 943,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "980:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "979:15:5"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "1018:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1018:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1017:6:5"
									},
									"scope": 961,
									"src": "964:60:5",
									"stateMutability": "view",
									"superFunction": 666,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 960,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1046:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1061:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1078:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1078:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1090:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1090:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1105:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 952,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1105:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1114:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 954,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1125:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 956,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1045:90:5"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1144:0:5"
									},
									"scope": 961,
									"src": "1030:115:5",
									"stateMutability": "nonpayable",
									"superFunction": 683,
									"visibility": "external"
								}
							],
							"scope": 962,
							"src": "26:1121:5"
						}
					],
					"src": "0:1148:5"
				},
				"id": 5
			},
			"contracts/libraries/Math.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Math.sol",
					"exportedSymbols": {
						"Math": [
							1037
						]
					},
					"id": 1038,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 963,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:6"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1037,
							"linearizedBaseContracts": [
								1037
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "158:34:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 972,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "168:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 973,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "172:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 974,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "176:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "172:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 977,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "184:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "172:13:6",
														"trueExpression": {
															"argumentTypes": null,
															"id": 976,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "180:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "168:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "168:17:6"
											}
										]
									},
									"documentation": null,
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "111:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "111:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "119:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "119:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "110:16:6"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "150:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "150:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "149:8:6"
									},
									"scope": 1037,
									"src": "98:94:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "360:239:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 989,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "374:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "378:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "374:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1025,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "555:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "560:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "555:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 1033,
													"nodeType": "IfStatement",
													"src": "551:42:6",
													"trueBody": {
														"id": 1032,
														"nodeType": "Block",
														"src": "563:30:6",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 1028,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "577:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "581:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "577:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1031,
																"nodeType": "ExpressionStatement",
																"src": "577:5:6"
															}
														]
													}
												},
												"id": 1034,
												"nodeType": "IfStatement",
												"src": "370:223:6",
												"trueBody": {
													"id": 1024,
													"nodeType": "Block",
													"src": "381:164:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 992,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "395:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 993,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "399:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "395:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 995,
															"nodeType": "ExpressionStatement",
															"src": "395:5:6"
														},
														{
															"assignments": [
																997
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 997,
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"scope": 1024,
																	"src": "414:6:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 996,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "414:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1003,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 998,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "423:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "427:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "423:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "431:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "423:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "414:18:6"
														},
														{
															"body": {
																"id": 1022,
																"nodeType": "Block",
																"src": "460:75:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1007,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 987,
																				"src": "478:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 1008,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "482:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "478:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1010,
																		"nodeType": "ExpressionStatement",
																		"src": "478:5:6"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1011,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "501:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1016,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1014,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 1012,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 984,
																									"src": "506:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 1013,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 997,
																									"src": "510:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "506:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 1015,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 997,
																								"src": "514:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "506:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1017,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "505:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 1018,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "519:1:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "505:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "501:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1021,
																		"nodeType": "ExpressionStatement",
																		"src": "501:19:6"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1004,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "453:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1005,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "457:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "453:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1023,
															"nodeType": "WhileStatement",
															"src": "446:89:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "321:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "321:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "320:8:6"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "352:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "352:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "351:8:6"
									},
									"scope": 1037,
									"src": "307:292:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1038,
							"src": "79:522:6"
						}
					],
					"src": "0:602:6"
				},
				"id": 6
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1112
						]
					},
					"id": 1113,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1039,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1112,
							"linearizedBaseContracts": [
								1112
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "216:66:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1049,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1046,
																			"src": "235:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1050,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1041,
																				"src": "239:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1051,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1043,
																				"src": "243:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "239:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "235:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1054,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "234:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1055,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "249:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "234:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "252:22:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 1048,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "226:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "226:49:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "226:49:7"
											}
										]
									},
									"documentation": null,
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "169:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "169:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "177:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "177:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "168:16:7"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "208:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "208:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "207:8:7"
									},
									"scope": 1112,
									"src": "156:126:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "348:67:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1071,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1068,
																			"src": "367:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1072,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1063,
																				"src": "371:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1073,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1065,
																				"src": "375:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "371:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "367:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1076,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "366:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1077,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "381:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "366:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "384:23:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 1070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "358:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "358:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "358:50:7"
											}
										]
									},
									"documentation": null,
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "301:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "301:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "309:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "309:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "300:16:7"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "340:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "340:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "339:8:7"
									},
									"scope": 1112,
									"src": "288:127:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "481:80:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1093,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "499:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "504:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "499:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 1100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1096,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1090,
																					"src": "510:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1099,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1097,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1085,
																						"src": "514:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 1098,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1087,
																						"src": "518:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "514:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "510:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1101,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "509:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1102,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "523:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "509:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1104,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "528:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "509:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "499:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "531:22:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "491:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "491:63:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "491:63:7"
											}
										]
									},
									"documentation": null,
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "434:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "434:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "442:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "442:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "433:16:7"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "473:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "473:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "472:8:7"
									},
									"scope": 1112,
									"src": "421:140:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1113,
							"src": "133:430:7"
						}
					],
					"src": "0:564:7"
				},
				"id": 7
			},
			"contracts/pair.sol": {
				"ast": {
					"absolutePath": "contracts/pair.sol",
					"exportedSymbols": {
						"EZKaliburPair": [
							3219
						]
					},
					"id": 3220,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1114,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:8"
						},
						{
							"absolutePath": "contracts/interfaces/IPair.sol",
							"file": "./interfaces/IPair.sol",
							"id": 1115,
							"nodeType": "ImportDirective",
							"scope": 3220,
							"sourceUnit": 830,
							"src": "26:32:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/UniswapV2ERC20.sol",
							"file": "./UniswapV2ERC20.sol",
							"id": 1116,
							"nodeType": "ImportDirective",
							"scope": 3220,
							"sourceUnit": 396,
							"src": "59:30:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Math.sol",
							"file": "./libraries/Math.sol",
							"id": 1117,
							"nodeType": "ImportDirective",
							"scope": 3220,
							"sourceUnit": 1038,
							"src": "90:30:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 1118,
							"nodeType": "ImportDirective",
							"scope": 3220,
							"sourceUnit": 480,
							"src": "121:33:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IFactory.sol",
							"file": "./interfaces/IFactory.sol",
							"id": 1119,
							"nodeType": "ImportDirective",
							"scope": 3220,
							"sourceUnit": 567,
							"src": "155:35:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IUniswapV2Callee.sol",
							"file": "./interfaces/IUniswapV2Callee.sol",
							"id": 1120,
							"nodeType": "ImportDirective",
							"scope": 3220,
							"sourceUnit": 844,
							"src": "191:43:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1121,
										"name": "IPair",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 829,
										"src": "262:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPair_$829",
											"typeString": "contract IPair"
										}
									},
									"id": 1122,
									"nodeType": "InheritanceSpecifier",
									"src": "262:5:8"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1123,
										"name": "UniswapV2ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 395,
										"src": "269:14:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UniswapV2ERC20_$395",
											"typeString": "contract UniswapV2ERC20"
										}
									},
									"id": 1124,
									"nodeType": "InheritanceSpecifier",
									"src": "269:14:8"
								}
							],
							"contractDependencies": [
								395,
								829,
								961
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 3219,
							"linearizedBaseContracts": [
								3219,
								395,
								961,
								829
							],
							"name": "EZKaliburPair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1127,
									"libraryName": {
										"contractScope": null,
										"id": 1125,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1112,
										"src": "294:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1112",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "288:25:8",
									"typeName": {
										"id": 1126,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "308:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1132,
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "317:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1128,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "317:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"id": 1131,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 1129,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "358:2:8",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "33",
											"id": 1130,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "364:1:8",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"src": "358:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1141,
									"name": "SELECTOR",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "369:88:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1133,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "369:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "7472616e7366657228616464726573732c75696e7432353629",
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "427:27:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																},
																"value": "transfer(address,uint256)"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																}
															],
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "421:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": "bytes"
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "421:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													],
													"id": 1135,
													"name": "keccak256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3228,
													"src": "411:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
														"typeString": "function (bytes memory) pure returns (bytes32)"
													}
												},
												"id": 1139,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "411:45:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											],
											"id": 1134,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "404:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": "bytes4"
										},
										"id": 1140,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "404:53:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1143,
									"name": "factory",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "462:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1142,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "462:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1145,
									"name": "token0",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "488:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1144,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "488:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1147,
									"name": "token1",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "513:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1146,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "513:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1149,
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "539:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1148,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "539:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1152,
									"name": "FEE_DENOMINATOR",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "567:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1150,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "567:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "313030303030",
										"id": 1151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "606:6:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1155,
									"name": "MAX_FEE_PERCENT",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "616:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1153,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "616:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32303030",
										"id": 1154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "655:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000_by_1",
											"typeString": "int_const 2000"
										},
										"value": "2000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1157,
									"name": "reserve0",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "672:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 1156,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "672:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1159,
									"name": "reserve1",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "766:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 1158,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "766:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1162,
									"name": "token0FeePercent",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "860:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1160,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "860:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "333030",
										"id": 1161,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "893:3:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "300"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1165,
									"name": "token1FeePercent",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "975:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1163,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "975:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "333030",
										"id": 1164,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1008:3:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "300"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1167,
									"name": "precisionMultiplier0",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "1091:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1166,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1091:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1169,
									"name": "precisionMultiplier1",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "1127:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1168,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1127:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1171,
									"name": "kLast",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "1164:17:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1170,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1164:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1173,
									"name": "stableSwap",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "1266:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1172,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1266:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1175,
									"name": "pairTypeImmutable",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "1339:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1174,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1339:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1178,
									"name": "unlocked",
									"nodeType": "VariableDeclaration",
									"scope": 3219,
									"src": "1436:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1176,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1436:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 1177,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1460:1:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "1481:101:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1181,
																"name": "unlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "1495:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1507:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1495:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a204c4f434b4544",
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1510:23:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eed891807287f78b73907747fcb9fab34bfad99a8b481cbc6c1e413147a6fde3",
																"typeString": "literal_string \"eZKaliburPair: LOCKED\""
															},
															"value": "eZKaliburPair: LOCKED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eed891807287f78b73907747fcb9fab34bfad99a8b481cbc6c1e413147a6fde3",
																"typeString": "literal_string \"eZKaliburPair: LOCKED\""
															}
														],
														"id": 1180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "1487:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1487:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "1487:47:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1187,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "1540:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1551:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1540:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "1540:12:8"
											},
											{
												"id": 1191,
												"nodeType": "PlaceholderStatement",
												"src": "1558:1:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1192,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "1565:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1576:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1565:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "1565:12:8"
											}
										]
									},
									"documentation": null,
									"id": 1197,
									"name": "lock",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1478:2:8"
									},
									"src": "1465:117:8",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "1720:141:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1208,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "1726:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1209,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "1738:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1726:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "1726:20:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1212,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "1752:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1213,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "1764:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1752:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "1752:20:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1216,
														"name": "_token0FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "1778:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1217,
														"name": "token0FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "1798:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1778:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "1778:36:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1220,
														"name": "_token1FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "1820:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1221,
														"name": "token1FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "1840:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1820:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "1820:36:8"
											}
										]
									},
									"documentation": null,
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1606:2:8"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "1630:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1199,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "1649:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1201,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"name": "_token0FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "1668:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1203,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1668:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"name": "_token1FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "1694:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1205,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1694:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1629:90:8"
									},
									"scope": 3219,
									"src": "1586:275:8",
									"stateMutability": "view",
									"superFunction": 752,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "1935:208:8",
										"statements": [
											{
												"assignments": [
													1235,
													1237
												],
												"declarations": [
													{
														"constant": false,
														"id": 1235,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1266,
														"src": "1942:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1234,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1942:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1237,
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 1266,
														"src": "1956:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1236,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1956:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1247,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1242,
																	"name": "SELECTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "2011:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1243,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "2021:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1244,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "2025:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1240,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3221,
																	"src": "1988:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1988:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1988:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1238,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "1977:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1977:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1977:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1941:91:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1249,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "2046:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1250,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1237,
																					"src": "2058:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2058:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1252,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2073:1:8",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2058:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1256,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1237,
																					"src": "2089:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"id": 1257,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2096:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": "bool"
																						}
																					],
																					"id": 1258,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2095:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1254,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3221,
																					"src": "2078:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2078:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2078:24:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2058:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1261,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2057:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2046:57:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a205452414e534645525f4641494c4544",
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2105:32:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7ea3d6f8710bb298236125fa23056babec439b4b93760bcfe74bf598f98627e",
																"typeString": "literal_string \"eZKaliburPair: TRANSFER_FAILED\""
															},
															"value": "eZKaliburPair: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7ea3d6f8710bb298236125fa23056babec439b4b93760bcfe74bf598f98627e",
																"typeString": "literal_string \"eZKaliburPair: TRANSFER_FAILED\""
															}
														],
														"id": 1248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "2038:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2038:100:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "2038:100:8"
											}
										]
									},
									"documentation": null,
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1888:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1903:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1915:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1915:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1887:39:8"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1935:0:8"
									},
									"scope": 3219,
									"src": "1865:278:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1273,
									"name": "DrainWrongToken",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"indexed": true,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2169:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2169:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"indexed": false,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2192:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2192:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2168:35:8"
									},
									"src": "2147:57:8"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1279,
									"name": "FeePercentUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"indexed": false,
												"name": "token0FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2231:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1274,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2231:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"indexed": false,
												"name": "token1FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2256:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1276,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2256:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2230:50:8"
									},
									"src": "2207:74:8"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1285,
									"name": "SetStableSwap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"indexed": false,
												"name": "prevStableSwap",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2304:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1280,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"indexed": false,
												"name": "stableSwap",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2325:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2325:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2303:38:8"
									},
									"src": "2284:58:8"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1287,
									"name": "SetPairTypeImmutable",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2371:2:8"
									},
									"src": "2345:29:8"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1295,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2388:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2412:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2412:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2426:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2426:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2387:52:8"
									},
									"src": "2377:63:8"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1305,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "2454:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "2478:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2478:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "2492:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2492:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "2506:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2453:72:8"
									},
									"src": "2443:83:8"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1319,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "2545:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2545:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "2573:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2573:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "2593:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2593:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "2613:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2613:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "2634:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2634:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "2655:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2539:138:8"
									},
									"src": "2529:149:8"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1325,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2692:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1320,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2710:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1322,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2691:36:8"
									},
									"src": "2681:47:8"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1327,
									"name": "Skim",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2741:2:8"
									},
									"src": "2731:13:8"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "2769:31:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1330,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "2775:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1331,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3234,
															"src": "2785:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2785:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2775:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "2775:20:8"
											}
										]
									},
									"documentation": null,
									"id": 1336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2759:2:8"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2769:0:8"
									},
									"scope": 3219,
									"src": "2748:52:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "2921:313:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1344,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3234,
																		"src": "2935:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2935:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1346,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "2949:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2935:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2960:12:8",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1348,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "2961:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2935:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a20464f5242494444454e",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2974:26:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2288ba75fafdfe7eca8b43882a4454089db084660b31e3ee8ac0221dabbf775e",
																"typeString": "literal_string \"eZKaliburPair: FORBIDDEN\""
															},
															"value": "eZKaliburPair: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2288ba75fafdfe7eca8b43882a4454089db084660b31e3ee8ac0221dabbf775e",
																"typeString": "literal_string \"eZKaliburPair: FORBIDDEN\""
															}
														],
														"id": 1343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "2927:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2927:74:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "2927:74:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1354,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "3031:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1355,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "3040:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3031:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "3031:16:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1358,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "3053:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1359,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "3062:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3053:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "3053:16:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1362,
														"name": "precisionMultiplier0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "3076:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3130",
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3099:2:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1366,
																					"name": "_token0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1338,
																					"src": "3117:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1365,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "3110:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3110:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$479",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "decimals",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 428,
																		"src": "3110:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																			"typeString": "function () view external returns (uint8)"
																		}
																	},
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3110:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3105:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3105:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3099:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3076:61:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "3076:61:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1374,
														"name": "precisionMultiplier1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "3143:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3130",
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3166:2:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1378,
																					"name": "_token1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1340,
																					"src": "3184:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1377,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "3177:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3177:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$479",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "decimals",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 428,
																		"src": "3177:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																			"typeString": "function () view external returns (uint8)"
																		}
																	},
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3177:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3172:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3172:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3166:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3143:61:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "3143:61:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1386,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "3211:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3225:4:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3211:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "3211:18:8"
											}
										]
									},
									"documentation": null,
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"name": "_token0",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2878:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2878:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"name": "_token1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2895:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2895:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2877:34:8"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2921:0:8"
									},
									"scope": 3219,
									"src": "2858:376:8",
									"stateMutability": "nonpayable",
									"superFunction": 828,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "3440:547:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1401,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3234,
																	"src": "3454:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3454:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1404,
																				"name": "factory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1143,
																				"src": "3477:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1403,
																			"name": "IFactory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 566,
																			"src": "3468:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IFactory_$566_$",
																				"typeString": "type(contract IFactory)"
																			}
																		},
																		"id": 1405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3468:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IFactory_$566",
																			"typeString": "contract IFactory"
																		}
																	},
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feePercentOwner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 501,
																	"src": "3468:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3468:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3454:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a206f6e6c7920666163746f7279277320666565416d6f756e744f776e6572",
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3505:46:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f80fc17e443115161d9ed24aaf21c6e6102496443806d2822fe65bc11fc7a8d3",
																"typeString": "literal_string \"eZKaliburPair: only factory's feeAmountOwner\""
															},
															"value": "eZKaliburPair: only factory's feeAmountOwner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f80fc17e443115161d9ed24aaf21c6e6102496443806d2822fe65bc11fc7a8d3",
																"typeString": "literal_string \"eZKaliburPair: only factory's feeAmountOwner\""
															}
														],
														"id": 1400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "3446:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3446:106:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "3446:106:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1413,
																	"name": "newToken0FeePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "3566:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1414,
																	"name": "MAX_FEE_PERCENT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "3589:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3566:38:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1416,
																	"name": "newToken1FeePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1395,
																	"src": "3608:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1417,
																	"name": "MAX_FEE_PERCENT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "3631:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3608:38:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3566:80:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a2066656550657263656e74206d7573746e27742065786365656420746865206d6178696d756d",
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3648:54:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2be17c6303e0c10da5ff1eb4b266c473ae5fd600c60b6f9faccee86002ad7d5e",
																"typeString": "literal_string \"eZKaliburPair: feePercent mustn't exceed the maximum\""
															},
															"value": "eZKaliburPair: feePercent mustn't exceed the maximum"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2be17c6303e0c10da5ff1eb4b266c473ae5fd600c60b6f9faccee86002ad7d5e",
																"typeString": "literal_string \"eZKaliburPair: feePercent mustn't exceed the maximum\""
															}
														],
														"id": 1412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "3558:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3558:145:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "3558:145:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1424,
																	"name": "newToken0FeePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "3717:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3739:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3717:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1427,
																	"name": "newToken1FeePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1395,
																	"src": "3744:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3766:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3744:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3717:50:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a2066656550657263656e74206d7573746e27742065786365656420746865206d696e696d756d",
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3769:54:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1bf768db97cbb37158f2706c5b1b11ef80704d9d42c88986d88c55d10379282",
																"typeString": "literal_string \"eZKaliburPair: feePercent mustn't exceed the minimum\""
															},
															"value": "eZKaliburPair: feePercent mustn't exceed the minimum"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d1bf768db97cbb37158f2706c5b1b11ef80704d9d42c88986d88c55d10379282",
																"typeString": "literal_string \"eZKaliburPair: feePercent mustn't exceed the minimum\""
															}
														],
														"id": 1423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "3709:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3709:115:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "3709:115:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1434,
														"name": "token0FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "3830:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1435,
														"name": "newToken0FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "3849:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "3830:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "3830:38:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1438,
														"name": "token1FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "3874:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1439,
														"name": "newToken1FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "3893:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "3874:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "3874:38:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1443,
															"name": "newToken0FeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "3941:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"argumentTypes": null,
															"id": 1444,
															"name": "newToken1FeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "3962:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 1442,
														"name": "FeePercentUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "3923:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint16_$_t_uint16_$returns$__$",
															"typeString": "function (uint16,uint16)"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3923:59:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1446,
												"nodeType": "EmitStatement",
												"src": "3918:64:8"
											}
										]
									},
									"documentation": "@dev Updates the swap fees percent\n  * Can only be called by the factory's feeAmountOwner",
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1398,
											"modifierName": {
												"argumentTypes": null,
												"id": 1397,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1197,
												"src": "3435:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3435:4:8"
										}
									],
									"name": "setFeePercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"name": "newToken0FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "3370:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1392,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3370:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"name": "newToken1FeePercent",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "3398:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1394,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3398:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3369:56:8"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3440:0:8"
									},
									"scope": 3219,
									"src": "3347:640:8",
									"stateMutability": "nonpayable",
									"superFunction": 773,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "4093:531:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1460,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3234,
																	"src": "4107:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4107:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1463,
																				"name": "factory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1143,
																				"src": "4130:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1462,
																			"name": "IFactory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 566,
																			"src": "4121:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IFactory_$566_$",
																				"typeString": "type(contract IFactory)"
																			}
																		},
																		"id": 1464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4121:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IFactory_$566",
																			"typeString": "contract IFactory"
																		}
																	},
																	"id": 1465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "setStableOwner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 506,
																	"src": "4121:32:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4121:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4107:48:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a206f6e6c7920666163746f7279277320736574537461626c654f776e6572",
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4157:46:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9ff115c8f228bb5656172ece44e1abafba1eb82b0ff5c74955e92e978f9be43b",
																"typeString": "literal_string \"eZKaliburPair: only factory's setStableOwner\""
															},
															"value": "eZKaliburPair: only factory's setStableOwner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9ff115c8f228bb5656172ece44e1abafba1eb82b0ff5c74955e92e978f9be43b",
																"typeString": "literal_string \"eZKaliburPair: only factory's setStableOwner\""
															}
														],
														"id": 1459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "4099:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4099:105:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "4099:105:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4218:18:8",
															"subExpression": {
																"argumentTypes": null,
																"id": 1472,
																"name": "pairTypeImmutable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "4219:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a20696d6d757461626c65",
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4238:26:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7a51ebeffea847262067dac685d68f1385d6b8f63e1f7ff2c89777afe77ec36",
																"typeString": "literal_string \"eZKaliburPair: immutable\""
															},
															"value": "eZKaliburPair: immutable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b7a51ebeffea847262067dac685d68f1385d6b8f63e1f7ff2c89777afe77ec36",
																"typeString": "literal_string \"eZKaliburPair: immutable\""
															}
														],
														"id": 1471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "4210:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4210:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "4210:55:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1478,
																"name": "stable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "4280:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1479,
																"name": "stableSwap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "4290:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4280:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a206e6f20757064617465",
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:26:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8eaa77674e506caff15c6f227935b198d58db8be5a1dffe493dac4a8b9879e68",
																"typeString": "literal_string \"eZKaliburPair: no update\""
															},
															"value": "eZKaliburPair: no update"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8eaa77674e506caff15c6f227935b198d58db8be5a1dffe493dac4a8b9879e68",
																"typeString": "literal_string \"eZKaliburPair: no update\""
															}
														],
														"id": 1477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "4272:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "4272:57:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1485,
																	"name": "expectedReserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "4343:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1486,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "4363:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "4343:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																},
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1488,
																	"name": "expectedReserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1454,
																	"src": "4375:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1489,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "4395:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "4375:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4343:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a206661696c6564",
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4405:23:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a0058cffec7f0401241297840dcaebc75083361fdd69523ff97aad3d75472eb5",
																"typeString": "literal_string \"eZKaliburPair: failed\""
															},
															"value": "eZKaliburPair: failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a0058cffec7f0401241297840dcaebc75083361fdd69523ff97aad3d75472eb5",
																"typeString": "literal_string \"eZKaliburPair: failed\""
															}
														],
														"id": 1484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "4335:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4335:94:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1494,
												"nodeType": "ExpressionStatement",
												"src": "4335:94:8"
											},
											{
												"assignments": [
													1496
												],
												"declarations": [
													{
														"constant": false,
														"id": 1496,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1528,
														"src": "4436:10:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1495,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4436:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1501,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1498,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "4458:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1499,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "4468:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1497,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "4449:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4449:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4436:41:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1503,
															"name": "stableSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "4503:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1504,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "4515:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1502,
														"name": "SetStableSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "4489:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (bool,bool)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4489:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "EmitStatement",
												"src": "4484:38:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1507,
														"name": "stableSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "4528:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1508,
														"name": "stable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "4541:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4528:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "4528:19:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1511,
														"name": "kLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "4553:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1512,
																		"name": "stable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "4562:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1513,
																		"name": "feeOn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1496,
																		"src": "4572:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4562:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1515,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4561:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4618:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "4561:58:8",
														"trueExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1518,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "4589:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4584:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4584:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1521,
																			"name": "reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "4605:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4600:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4600:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1516,
																"name": "_k",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2709,
																"src": "4581:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) view returns (uint256)"
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4581:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4553:66:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "4553:66:8"
											}
										]
									},
									"documentation": null,
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1457,
											"modifierName": {
												"argumentTypes": null,
												"id": 1456,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1197,
												"src": "4088:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4088:4:8"
										}
									],
									"name": "setStableSwap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"name": "stable",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "4014:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1449,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4014:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"name": "expectedReserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "4027:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1451,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"name": "expectedReserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "4053:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1453,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "4053:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4013:65:8"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4093:0:8"
									},
									"scope": 3219,
									"src": "3991:633:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1559,
										"nodeType": "Block",
										"src": "4674:231:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1535,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3234,
																	"src": "4688:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4688:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1538,
																				"name": "factory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1143,
																				"src": "4711:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1537,
																			"name": "IFactory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 566,
																			"src": "4702:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IFactory_$566_$",
																				"typeString": "type(contract IFactory)"
																			}
																		},
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4702:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IFactory_$566",
																			"typeString": "contract IFactory"
																		}
																	},
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 496,
																	"src": "4702:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4702:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4688:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a206f6e6c7920666163746f72792773206f776e6572",
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4729:37:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fd83120603ed4d82de96120f878f97f3eab3d3e5b9b17eb433b2f605b574072d",
																"typeString": "literal_string \"eZKaliburPair: only factory's owner\""
															},
															"value": "eZKaliburPair: only factory's owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fd83120603ed4d82de96120f878f97f3eab3d3e5b9b17eb433b2f605b574072d",
																"typeString": "literal_string \"eZKaliburPair: only factory's owner\""
															}
														],
														"id": 1534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "4680:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4680:87:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "4680:87:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4781:18:8",
															"subExpression": {
																"argumentTypes": null,
																"id": 1547,
																"name": "pairTypeImmutable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "4782:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a20616c726561647920696d6d757461626c65",
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4801:34:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f050a41f5df4e85164f931367dfd69a288d3553fe86e831af03a6d831e683337",
																"typeString": "literal_string \"eZKaliburPair: already immutable\""
															},
															"value": "eZKaliburPair: already immutable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f050a41f5df4e85164f931367dfd69a288d3553fe86e831af03a6d831e683337",
																"typeString": "literal_string \"eZKaliburPair: already immutable\""
															}
														],
														"id": 1546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "4773:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4773:63:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "4773:63:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1552,
														"name": "pairTypeImmutable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "4843:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4863:4:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4843:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "4843:24:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1556,
														"name": "SetPairTypeImmutable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "4878:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1558,
												"nodeType": "EmitStatement",
												"src": "4873:27:8"
											}
										]
									},
									"documentation": null,
									"id": 1560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1532,
											"modifierName": {
												"argumentTypes": null,
												"id": 1531,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1197,
												"src": "4669:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4669:4:8"
										}
									],
									"name": "setPairTypeImmutable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4657:2:8"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4674:0:8"
									},
									"scope": 3219,
									"src": "4628:277:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1605,
										"nodeType": "Block",
										"src": "4985:221:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1568,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1562,
																	"src": "4999:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "5019:3:8",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5021:1:8",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5011:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5011:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "4999:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1574,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1564,
																	"src": "5027:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "5047:3:8",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5049:1:8",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5039:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5039:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "5027:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4999:52:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a204f564552464c4f57",
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5053:25:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb136e6b7bfdb7b34d3ba4af923ed27cc4386757d9f31a18489c2ff9ece3cfa5",
																"typeString": "literal_string \"eZKaliburPair: OVERFLOW\""
															},
															"value": "eZKaliburPair: OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb136e6b7bfdb7b34d3ba4af923ed27cc4386757d9f31a18489c2ff9ece3cfa5",
																"typeString": "literal_string \"eZKaliburPair: OVERFLOW\""
															}
														],
														"id": 1567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "4991:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4991:88:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "4991:88:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1584,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "5086:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1586,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1562,
																"src": "5105:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5097:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5097:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "5086:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "5086:28:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1590,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "5120:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1592,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1564,
																"src": "5139:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5131:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5131:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "5120:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "5120:28:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1598,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1562,
																	"src": "5172:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5164:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint112_$",
																	"typeString": "type(uint112)"
																},
																"typeName": "uint112"
															},
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5164:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1601,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1564,
																	"src": "5191:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5183:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint112_$",
																	"typeString": "type(uint112)"
																},
																"typeName": "uint112"
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5183:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1596,
														"name": "Sync",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1325
														],
														"referencedDeclaration": 1325,
														"src": "5159:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint112,uint112)"
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5159:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1604,
												"nodeType": "EmitStatement",
												"src": "5154:47:8"
											}
										]
									},
									"documentation": null,
									"id": 1606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"name": "balance0",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "4947:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4947:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"name": "balance1",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "4962:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4962:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4946:30:8"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4985:0:8"
									},
									"scope": 3219,
									"src": "4930:276:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "5426:767:8",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1615,
													"name": "stableSwap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1173,
													"src": "5435:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1618,
												"nodeType": "IfStatement",
												"src": "5432:27:8",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5454:5:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 1614,
													"id": 1617,
													"nodeType": "Return",
													"src": "5447:12:8"
												}
											},
											{
												"assignments": [
													1620,
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1620,
														"name": "ownerFeeShare",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "5467:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1619,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5467:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1622,
														"name": "feeTo",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "5487:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1621,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5487:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1628,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1624,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "5513:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1623,
																"name": "IFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "5504:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IFactory_$566_$",
																	"typeString": "type(contract IFactory)"
																}
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5504:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFactory_$566",
																"typeString": "contract IFactory"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "feeInfo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "5504:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_address_$",
															"typeString": "function () view external returns (uint256,address)"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5504:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5466:65:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1629,
														"name": "feeOn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "5537:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1630,
															"name": "feeTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "5545:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5562:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5554:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5554:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "5545:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5537:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "5537:27:8"
											},
											{
												"assignments": [
													1638
												],
												"declarations": [
													{
														"constant": false,
														"id": 1638,
														"name": "_kLast",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "5570:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1637,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5570:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1640,
												"initialValue": {
													"argumentTypes": null,
													"id": 1639,
													"name": "kLast",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1171,
													"src": "5584:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5570:19:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1641,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1613,
													"src": "5618:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1728,
															"name": "_kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "6152:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6162:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6152:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 1736,
													"nodeType": "IfStatement",
													"src": "6148:41:8",
													"trueBody": {
														"id": 1735,
														"nodeType": "Block",
														"src": "6165:24:8",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 1733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 1731,
																		"name": "kLast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1171,
																		"src": "6173:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6181:1:8",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6173:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1734,
																"nodeType": "ExpressionStatement",
																"src": "6173:9:8"
															}
														]
													}
												},
												"id": 1737,
												"nodeType": "IfStatement",
												"src": "5614:575:8",
												"trueBody": {
													"id": 1727,
													"nodeType": "Block",
													"src": "5625:517:8",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1642,
																	"name": "_kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "5637:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5647:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5637:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1726,
															"nodeType": "IfStatement",
															"src": "5633:503:8",
															"trueBody": {
																"id": 1725,
																"nodeType": "Block",
																"src": "5650:486:8",
																"statements": [
																	{
																		"assignments": [
																			1646
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1646,
																				"name": "rootK",
																				"nodeType": "VariableDeclaration",
																				"scope": 1725,
																				"src": "5660:10:8",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1645,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "5660:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1658,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 1651,
																									"name": "_reserve0",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1608,
																									"src": "5691:9:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								],
																								"id": 1650,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "5686:4:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": "uint"
																							},
																							"id": 1652,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5686:15:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 1654,
																									"name": "_reserve1",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1610,
																									"src": "5708:9:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								],
																								"id": 1653,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "5703:4:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": "uint"
																							},
																							"id": 1655,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5703:15:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1649,
																						"name": "_k",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2709,
																						"src": "5683:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) view returns (uint256)"
																						}
																					},
																					"id": 1656,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5683:36:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1647,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1037,
																					"src": "5673:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$1037_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1648,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1036,
																				"src": "5673:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5673:47:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5660:60:8"
																	},
																	{
																		"assignments": [
																			1660
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1660,
																				"name": "rootKLast",
																				"nodeType": "VariableDeclaration",
																				"scope": 1725,
																				"src": "5730:14:8",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1659,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "5730:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1665,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1663,
																					"name": "_kLast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1638,
																					"src": "5757:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1661,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1037,
																					"src": "5747:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$1037_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1036,
																				"src": "5747:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5747:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5730:34:8"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1666,
																				"name": "rootK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1646,
																				"src": "5778:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1667,
																				"name": "rootKLast",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1660,
																				"src": "5786:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5778:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 1724,
																		"nodeType": "IfStatement",
																		"src": "5774:354:8",
																		"trueBody": {
																			"id": 1723,
																			"nodeType": "Block",
																			"src": "5797:331:8",
																			"statements": [
																				{
																					"assignments": [
																						1670
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1670,
																							"name": "d",
																							"nodeType": "VariableDeclaration",
																							"scope": 1723,
																							"src": "5809:6:8",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1669,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "5809:4:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1681,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "313030",
																								"id": 1679,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5865:3:8",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								},
																								"value": "100"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1676,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"arguments": [
																												{
																													"argumentTypes": null,
																													"hexValue": "313030",
																													"id": 1673,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "5839:3:8",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_100_by_1",
																														"typeString": "int_const 100"
																													},
																													"value": "100"
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_rational_100_by_1",
																														"typeString": "int_const 100"
																													}
																												],
																												"expression": {
																													"argumentTypes": null,
																													"id": 1671,
																													"name": "FEE_DENOMINATOR",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1152,
																													"src": "5819:15:8",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"id": 1672,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "mul",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1111,
																												"src": "5819:19:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																													"typeString": "function (uint256,uint256) pure returns (uint256)"
																												}
																											},
																											"id": 1674,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "5819:24:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "/",
																										"rightExpression": {
																											"argumentTypes": null,
																											"id": 1675,
																											"name": "ownerFeeShare",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1620,
																											"src": "5846:13:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "5819:40:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1677,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "5818:42:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1678,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sub",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1083,
																							"src": "5818:46:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1680,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5818:51:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "5809:60:8"
																				},
																				{
																					"assignments": [
																						1683
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1683,
																							"name": "numerator",
																							"nodeType": "VariableDeclaration",
																							"scope": 1723,
																							"src": "5881:14:8",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1682,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "5881:4:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1694,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "313030",
																								"id": 1692,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5940:3:8",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								},
																								"value": "100"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 1688,
																												"name": "rootKLast",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1660,
																												"src": "5924:9:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"id": 1686,
																												"name": "rootK",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1646,
																												"src": "5914:5:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1687,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "sub",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1083,
																											"src": "5914:9:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1689,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "5914:20:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 1684,
																										"name": "totalSupply",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 19,
																										"src": "5898:11:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1685,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1111,
																									"src": "5898:15:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1690,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5898:37:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1691,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1111,
																							"src": "5898:41:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1693,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5898:46:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "5881:63:8"
																				},
																				{
																					"assignments": [
																						1696
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1696,
																							"name": "denominator",
																							"nodeType": "VariableDeclaration",
																							"scope": 1723,
																							"src": "5956:16:8",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1695,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "5956:4:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1707,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "313030",
																										"id": 1704,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "6006:3:8",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_100_by_1",
																											"typeString": "int_const 100"
																										},
																										"value": "100"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_100_by_1",
																											"typeString": "int_const 100"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 1702,
																										"name": "rootKLast",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1660,
																										"src": "5992:9:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1703,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1111,
																									"src": "5992:13:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1705,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5992:18:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 1699,
																										"name": "d",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1670,
																										"src": "5985:1:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 1697,
																										"name": "rootK",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1646,
																										"src": "5975:5:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1698,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1111,
																									"src": "5975:9:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1700,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5975:12:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1701,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1061,
																							"src": "5975:16:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1706,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5975:36:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "5956:55:8"
																				},
																				{
																					"assignments": [
																						1709
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1709,
																							"name": "liquidity",
																							"nodeType": "VariableDeclaration",
																							"scope": 1723,
																							"src": "6023:14:8",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1708,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "6023:4:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1713,
																					"initialValue": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1712,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1710,
																							"name": "numerator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1683,
																							"src": "6040:9:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 1711,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1696,
																							"src": "6052:11:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "6040:23:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "6023:40:8"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1716,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1714,
																							"name": "liquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1709,
																							"src": "6079:9:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 1715,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6091:1:8",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "6079:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1722,
																					"nodeType": "IfStatement",
																					"src": "6075:42:8",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 1718,
																									"name": "feeTo",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1622,
																									"src": "6100:5:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"argumentTypes": null,
																									"id": 1719,
																									"name": "liquidity",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1709,
																									"src": "6107:9:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1717,
																								"name": "_mint",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 121,
																								"src": "6094:5:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																									"typeString": "function (address,uint256)"
																								}
																							},
																							"id": 1720,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "6094:23:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 1721,
																						"nodeType": "ExpressionStatement",
																						"src": "6094:23:8"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "5359:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1607,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5359:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "5378:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1609,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5378:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5358:38:8"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"name": "feeOn",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "5414:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5414:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5413:12:8"
									},
									"scope": 3219,
									"src": "5341:852:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "6363:1082:8",
										"statements": [
											{
												"assignments": [
													1749,
													1751,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1749,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1883,
														"src": "6370:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1748,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "6370:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1751,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1883,
														"src": "6389:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1750,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "6389:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null,
													null
												],
												"id": 1754,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1752,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "6412:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint16_$_t_uint16_$",
															"typeString": "function () view returns (uint112,uint112,uint16,uint16)"
														}
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6412:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint16_$_t_uint16_$",
														"typeString": "tuple(uint112,uint112,uint16,uint16)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6369:56:8"
											},
											{
												"assignments": [
													1756
												],
												"declarations": [
													{
														"constant": false,
														"id": 1756,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1883,
														"src": "6450:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1755,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6450:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1765,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1762,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "6499:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																		"typeString": "contract EZKaliburPair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																		"typeString": "contract EZKaliburPair"
																	}
																],
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6491:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6491:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1758,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "6473:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1757,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "6466:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6466:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$479",
																"typeString": "contract IERC20"
															}
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 440,
														"src": "6466:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6466:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6450:55:8"
											},
											{
												"assignments": [
													1767
												],
												"declarations": [
													{
														"constant": false,
														"id": 1767,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1883,
														"src": "6511:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1766,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6511:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1776,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1773,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "6560:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																		"typeString": "contract EZKaliburPair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																		"typeString": "contract EZKaliburPair"
																	}
																],
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6552:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6552:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1769,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "6534:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1768,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "6527:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6527:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$479",
																"typeString": "contract IERC20"
															}
														},
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 440,
														"src": "6527:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6527:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6511:55:8"
											},
											{
												"assignments": [
													1778
												],
												"declarations": [
													{
														"constant": false,
														"id": 1778,
														"name": "amount0",
														"nodeType": "VariableDeclaration",
														"scope": 1883,
														"src": "6572:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1777,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6572:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1783,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1781,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "6600:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1779,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "6587:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1083,
														"src": "6587:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6587:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6572:38:8"
											},
											{
												"assignments": [
													1785
												],
												"declarations": [
													{
														"constant": false,
														"id": 1785,
														"name": "amount1",
														"nodeType": "VariableDeclaration",
														"scope": 1883,
														"src": "6616:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1784,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6616:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1790,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1788,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "6644:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1786,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "6631:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1083,
														"src": "6631:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6631:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6616:38:8"
											},
											{
												"assignments": [
													1792
												],
												"declarations": [
													{
														"constant": false,
														"id": 1792,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1883,
														"src": "6661:10:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1791,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6661:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1797,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1794,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "6683:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1795,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "6694:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1793,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "6674:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6674:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6661:43:8"
											},
											{
												"assignments": [
													1799
												],
												"declarations": [
													{
														"constant": false,
														"id": 1799,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1883,
														"src": "6710:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1798,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6710:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1801,
												"initialValue": {
													"argumentTypes": null,
													"id": 1800,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "6730:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6710:31:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1802,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "6833:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6849:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6833:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1844,
													"nodeType": "Block",
													"src": "7044:113:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1826,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "7052:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1831,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1799,
																						"src": "7085:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1829,
																						"name": "amount0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1778,
																						"src": "7073:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1830,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1111,
																					"src": "7073:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1832,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7073:25:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1833,
																				"name": "_reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1749,
																				"src": "7101:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "7073:37:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1837,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1799,
																						"src": "7124:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1835,
																						"name": "amount1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1785,
																						"src": "7112:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1836,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1111,
																					"src": "7112:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7112:25:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1839,
																				"name": "_reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1751,
																				"src": "7140:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "7112:37:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1827,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1037,
																			"src": "7064:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$1037_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 1828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 982,
																		"src": "7064:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7064:86:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7052:98:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1843,
															"nodeType": "ExpressionStatement",
															"src": "7052:98:8"
														}
													]
												},
												"id": 1845,
												"nodeType": "IfStatement",
												"src": "6829:328:8",
												"trueBody": {
													"id": 1825,
													"nodeType": "Block",
													"src": "6852:186:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1805,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "6860:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1814,
																			"name": "MINIMUM_LIQUIDITY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1132,
																			"src": "6908:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1810,
																							"name": "amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1785,
																							"src": "6894:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1808,
																							"name": "amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1778,
																							"src": "6882:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1809,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1111,
																						"src": "6882:11:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1811,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6882:20:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1806,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1037,
																					"src": "6872:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$1037_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1036,
																				"src": "6872:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6872:31:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1083,
																		"src": "6872:35:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6872:54:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6860:66:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1817,
															"nodeType": "ExpressionStatement",
															"src": "6860:66:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6948:1:8",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6940:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6940:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1822,
																		"name": "MINIMUM_LIQUIDITY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "6952:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1818,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "6934:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6934:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1824,
															"nodeType": "ExpressionStatement",
															"src": "6934:36:8"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1847,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1746,
																"src": "7170:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7182:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7170:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7185:46:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ab36b58f19f5658e716652a965572c61ec94ca2b0078cc5663963339a0ef78f",
																"typeString": "literal_string \"eZKaliburPair: INSUFFICIENT_LIQUIDITY_MINTED\""
															},
															"value": "eZKaliburPair: INSUFFICIENT_LIQUIDITY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ab36b58f19f5658e716652a965572c61ec94ca2b0078cc5663963339a0ef78f",
																"typeString": "literal_string \"eZKaliburPair: INSUFFICIENT_LIQUIDITY_MINTED\""
															}
														],
														"id": 1846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "7162:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7162:70:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "7162:70:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "7244:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1855,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "7248:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1853,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "7238:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7238:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1857,
												"nodeType": "ExpressionStatement",
												"src": "7238:20:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1859,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "7273:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1860,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "7283:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1858,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "7265:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1862,
												"nodeType": "ExpressionStatement",
												"src": "7265:27:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1863,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1792,
													"src": "7302:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1875,
												"nodeType": "IfStatement",
												"src": "7298:53:8",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1864,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "7309:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1867,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "7325:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7320:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7320:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1870,
																			"name": "reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "7341:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7336:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7336:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1865,
																"name": "_k",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2709,
																"src": "7317:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) view returns (uint256)"
																}
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7317:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7309:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1874,
													"nodeType": "ExpressionStatement",
													"src": "7309:42:8"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1877,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3234,
																"src": "7411:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7411:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1879,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1778,
															"src": "7423:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1880,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "7432:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1876,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1295
														],
														"referencedDeclaration": 1295,
														"src": "7406:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7406:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1882,
												"nodeType": "EmitStatement",
												"src": "7401:39:8"
											}
										]
									},
									"documentation": null,
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1744,
											"modifierName": {
												"argumentTypes": null,
												"id": 1743,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1197,
												"src": "6333:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6333:4:8"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "6312:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6312:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6311:12:8"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "6347:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6347:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6346:16:8"
									},
									"scope": 3219,
									"src": "6298:1147:8",
									"stateMutability": "nonpayable",
									"superFunction": 780,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2047,
										"nodeType": "Block",
										"src": "7627:1216:8",
										"statements": [
											{
												"assignments": [
													1896,
													1898,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1896,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 2047,
														"src": "7634:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1895,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7634:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1898,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 2047,
														"src": "7653:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1897,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7653:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null,
													null
												],
												"id": 1901,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1899,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "7676:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint16_$_t_uint16_$",
															"typeString": "function () view returns (uint112,uint112,uint16,uint16)"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7676:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint16_$_t_uint16_$",
														"typeString": "tuple(uint112,uint112,uint16,uint16)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7633:56:8"
											},
											{
												"assignments": [
													1903
												],
												"declarations": [
													{
														"constant": false,
														"id": 1903,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 2047,
														"src": "7710:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1902,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7710:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1905,
												"initialValue": {
													"argumentTypes": null,
													"id": 1904,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1145,
													"src": "7728:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7710:24:8"
											},
											{
												"assignments": [
													1907
												],
												"declarations": [
													{
														"constant": false,
														"id": 1907,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 2047,
														"src": "7755:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1906,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7755:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1909,
												"initialValue": {
													"argumentTypes": null,
													"id": 1908,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1147,
													"src": "7773:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7755:24:8"
											},
											{
												"assignments": [
													1911
												],
												"declarations": [
													{
														"constant": false,
														"id": 1911,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 2047,
														"src": "7800:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1910,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7800:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1920,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1917,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "7850:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																		"typeString": "contract EZKaliburPair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																		"typeString": "contract EZKaliburPair"
																	}
																],
																"id": 1916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7842:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7842:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1913,
																	"name": "_token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1903,
																	"src": "7823:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1912,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "7816:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7816:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$479",
																"typeString": "contract IERC20"
															}
														},
														"id": 1915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 440,
														"src": "7816:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7816:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7800:56:8"
											},
											{
												"assignments": [
													1922
												],
												"declarations": [
													{
														"constant": false,
														"id": 1922,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 2047,
														"src": "7862:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1921,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7862:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1931,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1928,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "7912:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																		"typeString": "contract EZKaliburPair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																		"typeString": "contract EZKaliburPair"
																	}
																],
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7904:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7904:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1924,
																	"name": "_token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "7885:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1923,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "7878:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7878:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$479",
																"typeString": "contract IERC20"
															}
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 440,
														"src": "7878:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7878:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7862:56:8"
											},
											{
												"assignments": [
													1933
												],
												"declarations": [
													{
														"constant": false,
														"id": 1933,
														"name": "liquidity",
														"nodeType": "VariableDeclaration",
														"scope": 2047,
														"src": "7924:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1932,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7924:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1939,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1934,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "7941:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1938,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1936,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3264,
																"src": "7959:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																	"typeString": "contract EZKaliburPair"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																	"typeString": "contract EZKaliburPair"
																}
															],
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7951:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7951:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7941:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7924:41:8"
											},
											{
												"assignments": [
													1941
												],
												"declarations": [
													{
														"constant": false,
														"id": 1941,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 2047,
														"src": "7972:10:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1940,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7972:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1946,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1943,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "7994:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1944,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "8005:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1942,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "7985:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7985:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7972:43:8"
											},
											{
												"assignments": [
													1948
												],
												"declarations": [
													{
														"constant": false,
														"id": 1948,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 2047,
														"src": "8021:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1947,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8021:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1950,
												"initialValue": {
													"argumentTypes": null,
													"id": 1949,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "8041:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8021:31:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1951,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1891,
														"src": "8136:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1954,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "8160:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1952,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "8146:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1111,
																"src": "8146:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1956,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "8172:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8146:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8136:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1959,
												"nodeType": "ExpressionStatement",
												"src": "8136:48:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1960,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "8238:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1963,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1922,
																	"src": "8262:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1961,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "8248:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1111,
																"src": "8248:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8248:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1965,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "8274:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8248:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8238:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1968,
												"nodeType": "ExpressionStatement",
												"src": "8238:48:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1970,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "8348:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8358:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8348:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1973,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "8363:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8373:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8363:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8348:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8376:46:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c26fe7bac5bd215670303820601ac49f0d4baeb8f47fd314bbc05e382ca9e12",
																"typeString": "literal_string \"eZKaliburPair: INSUFFICIENT_LIQUIDITY_BURNED\""
															},
															"value": "eZKaliburPair: INSUFFICIENT_LIQUIDITY_BURNED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c26fe7bac5bd215670303820601ac49f0d4baeb8f47fd314bbc05e382ca9e12",
																"typeString": "literal_string \"eZKaliburPair: INSUFFICIENT_LIQUIDITY_BURNED\""
															}
														],
														"id": 1969,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "8340:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8340:83:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1979,
												"nodeType": "ExpressionStatement",
												"src": "8340:83:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1982,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "8443:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																		"typeString": "contract EZKaliburPair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																		"typeString": "contract EZKaliburPair"
																	}
																],
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8435:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8435:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1984,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "8450:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1980,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "8429:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8429:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1986,
												"nodeType": "ExpressionStatement",
												"src": "8429:31:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1988,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "8480:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1989,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "8489:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1990,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1891,
															"src": "8493:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1987,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "8466:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8466:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1992,
												"nodeType": "ExpressionStatement",
												"src": "8466:35:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1994,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "8521:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1995,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "8530:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1996,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "8534:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1993,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "8507:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8507:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1998,
												"nodeType": "ExpressionStatement",
												"src": "8507:35:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1999,
														"name": "balance0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "8548:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2005,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3264,
																		"src": "8593:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																			"typeString": "contract EZKaliburPair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																			"typeString": "contract EZKaliburPair"
																		}
																	],
																	"id": 2004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8585:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 2006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8585:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2001,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1903,
																		"src": "8566:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2000,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "8559:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8559:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$479",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 440,
															"src": "8559:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 2007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8559:40:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8548:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2009,
												"nodeType": "ExpressionStatement",
												"src": "8548:51:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2010,
														"name": "balance1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "8605:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2016,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3264,
																		"src": "8650:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																			"typeString": "contract EZKaliburPair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																			"typeString": "contract EZKaliburPair"
																		}
																	],
																	"id": 2015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8642:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8642:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2012,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1907,
																		"src": "8623:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2011,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "8616:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8616:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$479",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 440,
															"src": "8616:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8616:40:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8605:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2020,
												"nodeType": "ExpressionStatement",
												"src": "8605:51:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2022,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "8671:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2023,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "8681:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2021,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "8663:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8663:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2025,
												"nodeType": "ExpressionStatement",
												"src": "8663:27:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 2026,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1941,
													"src": "8700:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2038,
												"nodeType": "IfStatement",
												"src": "8696:53:8",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 2036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 2027,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "8707:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2030,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "8723:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 2029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8718:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 2031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8718:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2033,
																			"name": "reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "8739:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8734:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 2034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8734:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2028,
																"name": "_k",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2709,
																"src": "8715:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) view returns (uint256)"
																}
															},
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8715:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8707:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2037,
													"nodeType": "ExpressionStatement",
													"src": "8707:42:8"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2040,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3234,
																"src": "8805:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8805:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2042,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1891,
															"src": "8817:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2043,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "8826:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2044,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "8835:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2039,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1305
														],
														"referencedDeclaration": 1305,
														"src": "8800:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address)"
														}
													},
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8800:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2046,
												"nodeType": "EmitStatement",
												"src": "8795:43:8"
											}
										]
									},
									"documentation": null,
									"id": 2048,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1889,
											"modifierName": {
												"argumentTypes": null,
												"id": 1888,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1197,
												"src": "7585:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7585:4:8"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "7564:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7564:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7563:12:8"
									},
									"returnParameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "7599:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7599:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "7613:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7613:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7598:28:8"
									},
									"scope": 3219,
									"src": "7550:1293:8",
									"stateMutability": "nonpayable",
									"superFunction": 789,
									"visibility": "external"
								},
								{
									"canonicalName": "EZKaliburPair.TokensData",
									"id": 2065,
									"members": [
										{
											"constant": false,
											"id": 2050,
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 2065,
											"src": "8871:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2049,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8871:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2052,
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 2065,
											"src": "8891:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2051,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8891:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2054,
											"name": "amount0Out",
											"nodeType": "VariableDeclaration",
											"scope": 2065,
											"src": "8911:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2053,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8911:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2056,
											"name": "amount1Out",
											"nodeType": "VariableDeclaration",
											"scope": 2065,
											"src": "8932:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2055,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8932:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2058,
											"name": "balance0",
											"nodeType": "VariableDeclaration",
											"scope": 2065,
											"src": "8953:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2057,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8953:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2060,
											"name": "balance1",
											"nodeType": "VariableDeclaration",
											"scope": 2065,
											"src": "8972:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2059,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8972:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2062,
											"name": "remainingFee0",
											"nodeType": "VariableDeclaration",
											"scope": 2065,
											"src": "8991:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2061,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8991:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2064,
											"name": "remainingFee1",
											"nodeType": "VariableDeclaration",
											"scope": 2065,
											"src": "9015:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2063,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9015:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "TokensData",
									"nodeType": "StructDefinition",
									"scope": 3219,
									"src": "8847:191:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2098,
										"nodeType": "Block",
										"src": "9233:295:8",
										"statements": [
											{
												"assignments": [
													2077
												],
												"declarations": [
													{
														"constant": false,
														"id": 2077,
														"name": "tokensData",
														"nodeType": "VariableDeclaration",
														"scope": 2098,
														"src": "9239:28:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
															"typeString": "struct EZKaliburPair.TokensData"
														},
														"typeName": {
															"contractScope": null,
															"id": 2076,
															"name": "TokensData",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2065,
															"src": "9239:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokensData_$2065_storage_ptr",
																"typeString": "struct EZKaliburPair.TokensData"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2088,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2079,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "9297:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2080,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "9319:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2081,
															"name": "amount0Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "9345:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2082,
															"name": "amount1Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2069,
															"src": "9375:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9403:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9422:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9446:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9470:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2078,
														"name": "TokensData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "9270:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_TokensData_$2065_storage_ptr_$",
															"typeString": "type(struct EZKaliburPair.TokensData storage pointer)"
														}
													},
													"id": 2087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"token0",
														"token1",
														"amount0Out",
														"amount1Out",
														"balance0",
														"balance1",
														"remainingFee0",
														"remainingFee1"
													],
													"nodeType": "FunctionCall",
													"src": "9270:208:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokensData_$2065_memory",
														"typeString": "struct EZKaliburPair.TokensData memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9239:239:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2090,
															"name": "tokensData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "9490:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																"typeString": "struct EZKaliburPair.TokensData memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2091,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2071,
															"src": "9502:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2092,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "9506:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9520:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9512:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9512:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																"typeString": "struct EZKaliburPair.TokensData memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2089,
														"name": "_swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2638,
														"src": "9484:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TokensData_$2065_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (struct EZKaliburPair.TokensData memory,address,bytes memory,address)"
														}
													},
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9484:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2097,
												"nodeType": "ExpressionStatement",
												"src": "9484:39:8"
											}
										]
									},
									"documentation": null,
									"id": 2099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "9157:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9157:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "9174:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9174:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "9191:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9191:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "9203:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2072,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9203:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9156:67:8"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9233:0:8"
									},
									"scope": 3219,
									"src": "9143:385:8",
									"stateMutability": "nonpayable",
									"superFunction": 800,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "9741:293:8",
										"statements": [
											{
												"assignments": [
													2113
												],
												"declarations": [
													{
														"constant": false,
														"id": 2113,
														"name": "tokensData",
														"nodeType": "VariableDeclaration",
														"scope": 2132,
														"src": "9747:28:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
															"typeString": "struct EZKaliburPair.TokensData"
														},
														"typeName": {
															"contractScope": null,
															"id": 2112,
															"name": "TokensData",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2065,
															"src": "9747:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokensData_$2065_storage_ptr",
																"typeString": "struct EZKaliburPair.TokensData"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2124,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2115,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "9805:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2116,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "9827:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2117,
															"name": "amount0Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2101,
															"src": "9853:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2118,
															"name": "amount1Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "9883:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9911:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9930:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9954:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9978:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2114,
														"name": "TokensData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "9778:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_TokensData_$2065_storage_ptr_$",
															"typeString": "type(struct EZKaliburPair.TokensData storage pointer)"
														}
													},
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"token0",
														"token1",
														"amount0Out",
														"amount1Out",
														"balance0",
														"balance1",
														"remainingFee0",
														"remainingFee1"
													],
													"nodeType": "FunctionCall",
													"src": "9778:208:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokensData_$2065_memory",
														"typeString": "struct EZKaliburPair.TokensData memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9747:239:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2126,
															"name": "tokensData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "9998:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																"typeString": "struct EZKaliburPair.TokensData memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2127,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2105,
															"src": "10010:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2128,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "10014:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"argumentTypes": null,
															"id": 2129,
															"name": "referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "10020:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																"typeString": "struct EZKaliburPair.TokensData memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2125,
														"name": "_swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2638,
														"src": "9992:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TokensData_$2065_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (struct EZKaliburPair.TokensData memory,address,bytes memory,address)"
														}
													},
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9992:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2131,
												"nodeType": "ExpressionStatement",
												"src": "9992:37:8"
											}
										]
									},
									"documentation": null,
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "9647:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9647:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "9664:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9664:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "9681:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9681:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "9693:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2106,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9693:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2109,
												"name": "referrer",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "9714:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9714:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9646:85:8"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9741:0:8"
									},
									"scope": 3219,
									"src": "9633:401:8",
									"stateMutability": "nonpayable",
									"superFunction": 813,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2637,
										"nodeType": "Block",
										"src": "10147:3869:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2147,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "10161:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																			"typeString": "struct EZKaliburPair.TokensData memory"
																		}
																	},
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount0Out",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2054,
																	"src": "10161:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10185:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10161:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2151,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "10190:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																			"typeString": "struct EZKaliburPair.TokensData memory"
																		}
																	},
																	"id": 2152,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount1Out",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2056,
																	"src": "10190:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10214:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10190:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10161:54:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a20494e53554646494349454e545f4f55545055545f414d4f554e54",
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10217:43:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_985af2d628585b86a62c2a3e0e095aa532421cf73afcd9f40539c0e984229c9a",
																"typeString": "literal_string \"eZKaliburPair: INSUFFICIENT_OUTPUT_AMOUNT\""
															},
															"value": "eZKaliburPair: INSUFFICIENT_OUTPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_985af2d628585b86a62c2a3e0e095aa532421cf73afcd9f40539c0e984229c9a",
																"typeString": "literal_string \"eZKaliburPair: INSUFFICIENT_OUTPUT_AMOUNT\""
															}
														],
														"id": 2146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "10153:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10153:108:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2158,
												"nodeType": "ExpressionStatement",
												"src": "10153:108:8"
											},
											{
												"assignments": [
													2160,
													2162,
													2164,
													2166
												],
												"declarations": [
													{
														"constant": false,
														"id": 2160,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 2637,
														"src": "10269:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 2159,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10269:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2162,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 2637,
														"src": "10288:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 2161,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10288:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2164,
														"name": "_token0FeePercent",
														"nodeType": "VariableDeclaration",
														"scope": 2637,
														"src": "10307:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 2163,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "10307:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2166,
														"name": "_token1FeePercent",
														"nodeType": "VariableDeclaration",
														"scope": 2637,
														"src": "10333:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 2165,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "10333:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2169,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2167,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "10361:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint16_$_t_uint16_$",
															"typeString": "function () view returns (uint112,uint112,uint16,uint16)"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10361:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint16_$_t_uint16_$",
														"typeString": "tuple(uint112,uint112,uint16,uint16)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10268:106:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2171,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "10388:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																			"typeString": "struct EZKaliburPair.TokensData memory"
																		}
																	},
																	"id": 2172,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount0Out",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2054,
																	"src": "10388:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2173,
																	"name": "_reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2160,
																	"src": "10412:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "10388:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2175,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "10425:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																			"typeString": "struct EZKaliburPair.TokensData memory"
																		}
																	},
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount1Out",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2056,
																	"src": "10425:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2177,
																	"name": "_reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2162,
																	"src": "10449:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "10425:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10388:70:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a20494e53554646494349454e545f4c4951554944495459",
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10460:39:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c8afa2437545964ffee4c84b28541af800177f71a1bad08a0655cae5b8d43e9",
																"typeString": "literal_string \"eZKaliburPair: INSUFFICIENT_LIQUIDITY\""
															},
															"value": "eZKaliburPair: INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c8afa2437545964ffee4c84b28541af800177f71a1bad08a0655cae5b8d43e9",
																"typeString": "literal_string \"eZKaliburPair: INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 2170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "10380:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10380:120:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2182,
												"nodeType": "ExpressionStatement",
												"src": "10380:120:8"
											},
											{
												"id": 2268,
												"nodeType": "Block",
												"src": "10508:666:8",
												"statements": [
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2184,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "10524:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2185,
																				"name": "tokensData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2135,
																				"src": "10530:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																					"typeString": "struct EZKaliburPair.TokensData memory"
																				}
																			},
																			"id": 2186,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token0",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2050,
																			"src": "10530:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "10524:23:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2188,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "10551:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2189,
																				"name": "tokensData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2135,
																				"src": "10557:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																					"typeString": "struct EZKaliburPair.TokensData memory"
																				}
																			},
																			"id": 2190,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token1",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2052,
																			"src": "10557:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "10551:23:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "10524:50:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "655a4b616c69627572506169723a20494e56414c49445f544f",
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10576:27:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_5bad7394d5c2b6c700798117138a4ffc679eeee8acb74a08825543575446109e",
																		"typeString": "literal_string \"eZKaliburPair: INVALID_TO\""
																	},
																	"value": "eZKaliburPair: INVALID_TO"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_5bad7394d5c2b6c700798117138a4ffc679eeee8acb74a08825543575446109e",
																		"typeString": "literal_string \"eZKaliburPair: INVALID_TO\""
																	}
																],
																"id": 2183,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3237,
																	3238
																],
																"referencedDeclaration": 3238,
																"src": "10516:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10516:88:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2195,
														"nodeType": "ExpressionStatement",
														"src": "10516:88:8"
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2196,
																	"name": "tokensData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2135,
																	"src": "10656:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																		"typeString": "struct EZKaliburPair.TokensData memory"
																	}
																},
																"id": 2197,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount0Out",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2054,
																"src": "10656:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10680:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10656:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 2208,
														"nodeType": "IfStatement",
														"src": "10652:90:8",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2201,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2135,
																			"src": "10697:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																				"typeString": "struct EZKaliburPair.TokensData memory"
																			}
																		},
																		"id": 2202,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2050,
																		"src": "10697:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2203,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "10716:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2204,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2135,
																			"src": "10720:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																				"typeString": "struct EZKaliburPair.TokensData memory"
																			}
																		},
																		"id": 2205,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount0Out",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2054,
																		"src": "10720:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2200,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "10683:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10683:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2207,
															"nodeType": "ExpressionStatement",
															"src": "10683:59:8"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2209,
																	"name": "tokensData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2135,
																	"src": "10794:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																		"typeString": "struct EZKaliburPair.TokensData memory"
																	}
																},
																"id": 2210,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount1Out",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2056,
																"src": "10794:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10818:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10794:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 2221,
														"nodeType": "IfStatement",
														"src": "10790:90:8",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2214,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2135,
																			"src": "10835:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																				"typeString": "struct EZKaliburPair.TokensData memory"
																			}
																		},
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2052,
																		"src": "10835:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2216,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "10854:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2217,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2135,
																			"src": "10858:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																				"typeString": "struct EZKaliburPair.TokensData memory"
																			}
																		},
																		"id": 2218,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount1Out",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2056,
																		"src": "10858:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2213,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "10821:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10821:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2220,
															"nodeType": "ExpressionStatement",
															"src": "10821:59:8"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2222,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2139,
																	"src": "10892:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10892:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10906:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10892:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 2239,
														"nodeType": "IfStatement",
														"src": "10888:119:8",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2230,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3234,
																			"src": "10944:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10944:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2232,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2135,
																			"src": "10956:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																				"typeString": "struct EZKaliburPair.TokensData memory"
																			}
																		},
																		"id": 2233,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount0Out",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2054,
																		"src": "10956:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2234,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2135,
																			"src": "10979:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																				"typeString": "struct EZKaliburPair.TokensData memory"
																			}
																		},
																		"id": 2235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount1Out",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2056,
																		"src": "10979:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2236,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2139,
																		"src": "11002:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2227,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2137,
																				"src": "10926:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2226,
																			"name": "IUniswapV2Callee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 843,
																			"src": "10909:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUniswapV2Callee_$843_$",
																				"typeString": "type(contract IUniswapV2Callee)"
																			}
																		},
																		"id": 2228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10909:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Callee_$843",
																			"typeString": "contract IUniswapV2Callee"
																		}
																	},
																	"id": 2229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "uniswapV2Call",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 842,
																	"src": "10909:34:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,uint256,bytes memory) external"
																	}
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10909:98:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2238,
															"nodeType": "ExpressionStatement",
															"src": "10909:98:8"
														}
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2240,
																	"name": "tokensData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2135,
																	"src": "11015:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																		"typeString": "struct EZKaliburPair.TokensData memory"
																	}
																},
																"id": 2242,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2058,
																"src": "11015:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2249,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3264,
																				"src": "11081:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																					"typeString": "contract EZKaliburPair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																					"typeString": "contract EZKaliburPair"
																				}
																			],
																			"id": 2248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11073:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 2250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11073:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 2244,
																					"name": "tokensData",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2135,
																					"src": "11044:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																						"typeString": "struct EZKaliburPair.TokensData memory"
																					}
																				},
																				"id": 2245,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token0",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2050,
																				"src": "11044:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2243,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 479,
																			"src": "11037:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11037:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$479",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 440,
																	"src": "11037:35:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11037:50:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11015:72:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2253,
														"nodeType": "ExpressionStatement",
														"src": "11015:72:8"
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2254,
																	"name": "tokensData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2135,
																	"src": "11095:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																		"typeString": "struct EZKaliburPair.TokensData memory"
																	}
																},
																"id": 2256,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2060,
																"src": "11095:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2263,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3264,
																				"src": "11161:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																					"typeString": "contract EZKaliburPair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																					"typeString": "contract EZKaliburPair"
																				}
																			],
																			"id": 2262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11153:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 2264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11153:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 2258,
																					"name": "tokensData",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2135,
																					"src": "11124:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																						"typeString": "struct EZKaliburPair.TokensData memory"
																					}
																				},
																				"id": 2259,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token1",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2052,
																				"src": "11124:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2257,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 479,
																			"src": "11117:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11117:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$479",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 440,
																	"src": "11117:35:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11117:50:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11095:72:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2267,
														"nodeType": "ExpressionStatement",
														"src": "11095:72:8"
													}
												]
											},
											{
												"assignments": [
													2270
												],
												"declarations": [
													{
														"constant": false,
														"id": 2270,
														"name": "amount0In",
														"nodeType": "VariableDeclaration",
														"scope": 2637,
														"src": "11180:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2269,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11180:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2288,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2271,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "11197:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																	"typeString": "struct EZKaliburPair.TokensData memory"
																}
															},
															"id": 2272,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2058,
															"src": "11197:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2273,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2160,
																"src": "11219:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2274,
																	"name": "tokensData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2135,
																	"src": "11231:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																		"typeString": "struct EZKaliburPair.TokensData memory"
																	}
																},
																"id": 2275,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount0Out",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2054,
																"src": "11231:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11219:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11197:55:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11315:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11197:119:8",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2278,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "11255:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																	"typeString": "struct EZKaliburPair.TokensData memory"
																}
															},
															"id": 2279,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2058,
															"src": "11255:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2280,
																		"name": "_reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2160,
																		"src": "11278:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2281,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2135,
																			"src": "11290:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																				"typeString": "struct EZKaliburPair.TokensData memory"
																			}
																		},
																		"id": 2282,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount0Out",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2054,
																		"src": "11290:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11278:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2284,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11277:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11255:57:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11180:136:8"
											},
											{
												"assignments": [
													2290
												],
												"declarations": [
													{
														"constant": false,
														"id": 2290,
														"name": "amount1In",
														"nodeType": "VariableDeclaration",
														"scope": 2637,
														"src": "11322:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2289,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11322:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2308,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2291,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "11339:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																	"typeString": "struct EZKaliburPair.TokensData memory"
																}
															},
															"id": 2292,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2060,
															"src": "11339:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2293,
																"name": "_reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2162,
																"src": "11361:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2294,
																	"name": "tokensData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2135,
																	"src": "11373:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																		"typeString": "struct EZKaliburPair.TokensData memory"
																	}
																},
																"id": 2295,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount1Out",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2056,
																"src": "11373:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11361:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11339:55:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11457:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11339:119:8",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2298,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "11397:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																	"typeString": "struct EZKaliburPair.TokensData memory"
																}
															},
															"id": 2299,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2060,
															"src": "11397:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2300,
																		"name": "_reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2162,
																		"src": "11420:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2301,
																			"name": "tokensData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2135,
																			"src": "11432:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																				"typeString": "struct EZKaliburPair.TokensData memory"
																			}
																		},
																		"id": 2302,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount1Out",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2056,
																		"src": "11432:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11420:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2304,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11419:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11397:57:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11322:136:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2310,
																	"name": "amount0In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2270,
																	"src": "11472:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11484:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11472:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2313,
																	"name": "amount1In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2290,
																	"src": "11489:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11501:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11489:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11472:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a20494e53554646494349454e545f494e5055545f414d4f554e54",
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11504:42:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b31389cdce9c235fb73cf94e115b26cc6b115463d873636778ed56513abefea0",
																"typeString": "literal_string \"eZKaliburPair: INSUFFICIENT_INPUT_AMOUNT\""
															},
															"value": "eZKaliburPair: INSUFFICIENT_INPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b31389cdce9c235fb73cf94e115b26cc6b115463d873636778ed56513abefea0",
																"typeString": "literal_string \"eZKaliburPair: INSUFFICIENT_INPUT_AMOUNT\""
															}
														],
														"id": 2309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "11464:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11464:83:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2319,
												"nodeType": "ExpressionStatement",
												"src": "11464:83:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2320,
															"name": "tokensData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "11554:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																"typeString": "struct EZKaliburPair.TokensData memory"
															}
														},
														"id": 2322,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "remainingFee0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2062,
														"src": "11554:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2325,
																	"name": "_token0FeePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2164,
																	"src": "11595:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2323,
																	"name": "amount0In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2270,
																	"src": "11581:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1111,
																"src": "11581:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11581:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2327,
															"name": "FEE_DENOMINATOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "11616:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11581:50:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11554:77:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2330,
												"nodeType": "ExpressionStatement",
												"src": "11554:77:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2331,
															"name": "tokensData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "11637:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																"typeString": "struct EZKaliburPair.TokensData memory"
															}
														},
														"id": 2333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "remainingFee1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2064,
														"src": "11637:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2336,
																	"name": "_token1FeePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2166,
																	"src": "11678:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2334,
																	"name": "amount1In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2290,
																	"src": "11664:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1111,
																"src": "11664:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11664:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2338,
															"name": "FEE_DENOMINATOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "11699:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11664:50:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11637:77:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2341,
												"nodeType": "ExpressionStatement",
												"src": "11637:77:8"
											},
											{
												"id": 2581,
												"nodeType": "Block",
												"src": "11721:1785:8",
												"statements": [
													{
														"assignments": [
															2343
														],
														"declarations": [
															{
																"constant": false,
																"id": 2343,
																"name": "fee",
																"nodeType": "VariableDeclaration",
																"scope": 2581,
																"src": "11772:8:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2342,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "11772:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 2345,
														"initialValue": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11783:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11772:12:8"
													},
													{
														"assignments": [
															2347
														],
														"declarations": [
															{
																"constant": false,
																"id": 2347,
																"name": "referrerInputFeeShare",
																"nodeType": "VariableDeclaration",
																"scope": 2581,
																"src": "11793:26:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2346,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "11793:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 2361,
														"initialValue": {
															"argumentTypes": null,
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2348,
																	"name": "referrer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2141,
																	"src": "11822:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 2350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11842:1:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11834:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11834:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "11822:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11895:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "11822:74:8",
															"trueExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2357,
																		"name": "referrer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2141,
																		"src": "11883:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2354,
																				"name": "factory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1143,
																				"src": "11856:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2353,
																			"name": "IFactory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 566,
																			"src": "11847:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IFactory_$566_$",
																				"typeString": "type(contract IFactory)"
																			}
																		},
																		"id": 2355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11847:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IFactory_$566",
																			"typeString": "contract IFactory"
																		}
																	},
																	"id": 2356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "referrersFeeShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 523,
																	"src": "11847:35:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11847:45:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11793:103:8"
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2362,
																"name": "referrerInputFeeShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2347,
																"src": "11908:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11932:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11908:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 2440,
														"nodeType": "IfStatement",
														"src": "11904:584:8",
														"trueBody": {
															"id": 2439,
															"nodeType": "Block",
															"src": "11935:553:8",
															"statements": [
																{
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2365,
																			"name": "amount0In",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2270,
																			"src": "11949:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 2366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "11949:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 2401,
																	"nodeType": "IfStatement",
																	"src": "11945:263:8",
																	"trueBody": {
																		"id": 2400,
																		"nodeType": "Block",
																		"src": "11964:244:8",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 2381,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 2368,
																						"name": "fee",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2343,
																						"src": "11976:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2380,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 2374,
																									"name": "_token0FeePercent",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2164,
																									"src": "12023:17:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint16",
																										"typeString": "uint16"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint16",
																										"typeString": "uint16"
																									}
																								],
																								"expression": {
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"id": 2371,
																											"name": "referrerInputFeeShare",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2347,
																											"src": "11996:21:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"argumentTypes": null,
																											"id": 2369,
																											"name": "amount0In",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2270,
																											"src": "11982:9:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2370,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1111,
																										"src": "11982:13:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2372,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "11982:36:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2373,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1111,
																								"src": "11982:40:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2375,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11982:59:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"argumentTypes": null,
																							"components": [
																								{
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 2378,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"id": 2376,
																										"name": "FEE_DENOMINATOR",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1152,
																										"src": "12045:15:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "**",
																									"rightExpression": {
																										"argumentTypes": null,
																										"hexValue": "32",
																										"id": 2377,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12064:1:8",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"src": "12045:20:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 2379,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "12044:22:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11982:84:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11976:90:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2382,
																				"nodeType": "ExpressionStatement",
																				"src": "11976:90:8"
																			},
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 2391,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2383,
																							"name": "tokensData",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2135,
																							"src": "12078:10:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																								"typeString": "struct EZKaliburPair.TokensData memory"
																							}
																						},
																						"id": 2385,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "remainingFee0",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2062,
																						"src": "12078:24:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 2389,
																								"name": "fee",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2343,
																								"src": "12134:3:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 2386,
																									"name": "tokensData",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2135,
																									"src": "12105:10:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																										"typeString": "struct EZKaliburPair.TokensData memory"
																									}
																								},
																								"id": 2387,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "remainingFee0",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2062,
																								"src": "12105:24:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2388,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sub",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1083,
																							"src": "12105:28:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2390,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12105:33:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12078:60:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2392,
																				"nodeType": "ExpressionStatement",
																				"src": "12078:60:8"
																			},
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 2394,
																								"name": "tokensData",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2135,
																								"src": "12164:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																									"typeString": "struct EZKaliburPair.TokensData memory"
																								}
																							},
																							"id": 2395,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "token0",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2050,
																							"src": "12164:17:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"id": 2396,
																							"name": "referrer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2141,
																							"src": "12183:8:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"id": 2397,
																							"name": "fee",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2343,
																							"src": "12193:3:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2393,
																						"name": "_safeTransfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1267,
																						"src": "12150:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 2398,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12150:47:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2399,
																				"nodeType": "ExpressionStatement",
																				"src": "12150:47:8"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2402,
																			"name": "amount1In",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2290,
																			"src": "12221:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12233:1:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "12221:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 2438,
																	"nodeType": "IfStatement",
																	"src": "12217:263:8",
																	"trueBody": {
																		"id": 2437,
																		"nodeType": "Block",
																		"src": "12236:244:8",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 2418,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 2405,
																						"name": "fee",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2343,
																						"src": "12248:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2417,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 2411,
																									"name": "_token1FeePercent",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2166,
																									"src": "12295:17:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint16",
																										"typeString": "uint16"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint16",
																										"typeString": "uint16"
																									}
																								],
																								"expression": {
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"id": 2408,
																											"name": "referrerInputFeeShare",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2347,
																											"src": "12268:21:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"argumentTypes": null,
																											"id": 2406,
																											"name": "amount1In",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2290,
																											"src": "12254:9:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2407,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1111,
																										"src": "12254:13:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2409,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "12254:36:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2410,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1111,
																								"src": "12254:40:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2412,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "12254:59:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"argumentTypes": null,
																							"components": [
																								{
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 2415,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"id": 2413,
																										"name": "FEE_DENOMINATOR",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1152,
																										"src": "12317:15:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "**",
																									"rightExpression": {
																										"argumentTypes": null,
																										"hexValue": "32",
																										"id": 2414,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12336:1:8",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"src": "12317:20:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 2416,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "12316:22:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "12254:84:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12248:90:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2419,
																				"nodeType": "ExpressionStatement",
																				"src": "12248:90:8"
																			},
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 2428,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2420,
																							"name": "tokensData",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2135,
																							"src": "12350:10:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																								"typeString": "struct EZKaliburPair.TokensData memory"
																							}
																						},
																						"id": 2422,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "remainingFee1",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2064,
																						"src": "12350:24:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 2426,
																								"name": "fee",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2343,
																								"src": "12406:3:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 2423,
																									"name": "tokensData",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2135,
																									"src": "12377:10:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																										"typeString": "struct EZKaliburPair.TokensData memory"
																									}
																								},
																								"id": 2424,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "remainingFee1",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2064,
																								"src": "12377:24:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2425,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sub",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1083,
																							"src": "12377:28:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2427,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12377:33:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12350:60:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2429,
																				"nodeType": "ExpressionStatement",
																				"src": "12350:60:8"
																			},
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 2431,
																								"name": "tokensData",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2135,
																								"src": "12436:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																									"typeString": "struct EZKaliburPair.TokensData memory"
																								}
																							},
																							"id": 2432,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "token1",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2052,
																							"src": "12436:17:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"id": 2433,
																							"name": "referrer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2141,
																							"src": "12455:8:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"id": 2434,
																							"name": "fee",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2343,
																							"src": "12465:3:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2430,
																						"name": "_safeTransfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1267,
																						"src": "12422:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 2435,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12422:47:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2436,
																				"nodeType": "ExpressionStatement",
																				"src": "12422:47:8"
																			}
																		]
																	}
																}
															]
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"id": 2441,
															"name": "stableSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "12499:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 2544,
														"nodeType": "IfStatement",
														"src": "12496:773:8",
														"trueBody": {
															"id": 2543,
															"nodeType": "Block",
															"src": "12510:759:8",
															"statements": [
																{
																	"assignments": [
																		2443,
																		2445
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2443,
																			"name": "ownerFeeShare",
																			"nodeType": "VariableDeclaration",
																			"scope": 2543,
																			"src": "12521:18:8",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2442,
																				"name": "uint",
																				"nodeType": "ElementaryTypeName",
																				"src": "12521:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"value": null,
																			"visibility": "internal"
																		},
																		{
																			"constant": false,
																			"id": 2445,
																			"name": "feeTo",
																			"nodeType": "VariableDeclaration",
																			"scope": 2543,
																			"src": "12541:13:8",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"typeName": {
																				"id": 2444,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12541:7:8",
																				"stateMutability": "nonpayable",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"value": null,
																			"visibility": "internal"
																		}
																	],
																	"id": 2451,
																	"initialValue": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2447,
																						"name": "factory",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1143,
																						"src": "12567:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2446,
																					"name": "IFactory",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "12558:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IFactory_$566_$",
																						"typeString": "type(contract IFactory)"
																					}
																				},
																				"id": 2448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12558:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IFactory_$566",
																					"typeString": "contract IFactory"
																				}
																			},
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "feeInfo",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 565,
																			"src": "12558:25:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_address_$",
																				"typeString": "function () view external returns (uint256,address)"
																			}
																		},
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12558:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
																			"typeString": "tuple(uint256,address)"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "12520:65:8"
																},
																{
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2452,
																			"name": "feeTo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2445,
																			"src": "12598:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 2454,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12615:1:8",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12607:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12607:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"src": "12598:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 2542,
																	"nodeType": "IfStatement",
																	"src": "12595:666:8",
																	"trueBody": {
																		"id": 2541,
																		"nodeType": "Block",
																		"src": "12619:642:8",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 2465,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 2457,
																						"name": "ownerFeeShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2443,
																						"src": "12631:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 2463,
																								"name": "ownerFeeShare",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2443,
																								"src": "12694:13:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 2460,
																										"name": "referrerInputFeeShare",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2347,
																										"src": "12667:21:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 2458,
																										"name": "FEE_DENOMINATOR",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1152,
																										"src": "12647:15:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 2459,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sub",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1083,
																									"src": "12647:19:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 2461,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12647:42:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2462,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1111,
																							"src": "12647:46:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2464,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12647:61:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12631:77:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2466,
																				"nodeType": "ExpressionStatement",
																				"src": "12631:77:8"
																			},
																			{
																				"condition": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2469,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2467,
																						"name": "amount0In",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2270,
																						"src": "12724:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 2468,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12736:1:8",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "12724:13:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": null,
																				"id": 2503,
																				"nodeType": "IfStatement",
																				"src": "12720:260:8",
																				"trueBody": {
																					"id": 2502,
																					"nodeType": "Block",
																					"src": "12739:241:8",
																					"statements": [
																						{
																							"expression": {
																								"argumentTypes": null,
																								"id": 2483,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"argumentTypes": null,
																									"id": 2470,
																									"name": "fee",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2343,
																									"src": "12753:3:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 2482,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 2476,
																												"name": "_token0FeePercent",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2164,
																												"src": "12792:17:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint16",
																													"typeString": "uint16"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint16",
																													"typeString": "uint16"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"arguments": [
																													{
																														"argumentTypes": null,
																														"id": 2473,
																														"name": "ownerFeeShare",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2443,
																														"src": "12773:13:8",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"argumentTypes": null,
																														"id": 2471,
																														"name": "amount0In",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2270,
																														"src": "12759:9:8",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 2472,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1111,
																													"src": "12759:13:8",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 2474,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "12759:28:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 2475,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "mul",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1111,
																											"src": "12759:32:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 2477,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "12759:51:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "/",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 2480,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"id": 2478,
																													"name": "FEE_DENOMINATOR",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1152,
																													"src": "12814:15:8",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "**",
																												"rightExpression": {
																													"argumentTypes": null,
																													"hexValue": "33",
																													"id": 2479,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "12833:1:8",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_3_by_1",
																														"typeString": "int_const 3"
																													},
																													"value": "3"
																												},
																												"src": "12814:20:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 2481,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "12813:22:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "12759:76:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "12753:82:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2484,
																							"nodeType": "ExpressionStatement",
																							"src": "12753:82:8"
																						},
																						{
																							"expression": {
																								"argumentTypes": null,
																								"id": 2493,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"argumentTypes": null,
																									"expression": {
																										"argumentTypes": null,
																										"id": 2485,
																										"name": "tokensData",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2135,
																										"src": "12849:10:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																											"typeString": "struct EZKaliburPair.TokensData memory"
																										}
																									},
																									"id": 2487,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"memberName": "remainingFee0",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2062,
																									"src": "12849:24:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"id": 2491,
																											"name": "fee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2343,
																											"src": "12905:3:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"argumentTypes": null,
																											"expression": {
																												"argumentTypes": null,
																												"id": 2488,
																												"name": "tokensData",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2135,
																												"src": "12876:10:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																													"typeString": "struct EZKaliburPair.TokensData memory"
																												}
																											},
																											"id": 2489,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "remainingFee0",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2062,
																											"src": "12876:24:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2490,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sub",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1083,
																										"src": "12876:28:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2492,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "12876:33:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "12849:60:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2494,
																							"nodeType": "ExpressionStatement",
																							"src": "12849:60:8"
																						},
																						{
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"expression": {
																											"argumentTypes": null,
																											"id": 2496,
																											"name": "tokensData",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2135,
																											"src": "12937:10:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																												"typeString": "struct EZKaliburPair.TokensData memory"
																											}
																										},
																										"id": 2497,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token0",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 2050,
																										"src": "12937:17:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"argumentTypes": null,
																										"id": 2498,
																										"name": "feeTo",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2445,
																										"src": "12956:5:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"argumentTypes": null,
																										"id": 2499,
																										"name": "fee",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2343,
																										"src": "12963:3:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 2495,
																									"name": "_safeTransfer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1267,
																									"src": "12923:13:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																										"typeString": "function (address,address,uint256)"
																									}
																								},
																								"id": 2500,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12923:44:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2501,
																							"nodeType": "ExpressionStatement",
																							"src": "12923:44:8"
																						}
																					]
																				}
																			},
																			{
																				"condition": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2506,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2504,
																						"name": "amount1In",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2290,
																						"src": "12995:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 2505,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13007:1:8",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "12995:13:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": null,
																				"id": 2540,
																				"nodeType": "IfStatement",
																				"src": "12991:260:8",
																				"trueBody": {
																					"id": 2539,
																					"nodeType": "Block",
																					"src": "13010:241:8",
																					"statements": [
																						{
																							"expression": {
																								"argumentTypes": null,
																								"id": 2520,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"argumentTypes": null,
																									"id": 2507,
																									"name": "fee",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2343,
																									"src": "13024:3:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 2519,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 2513,
																												"name": "_token1FeePercent",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2166,
																												"src": "13063:17:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint16",
																													"typeString": "uint16"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint16",
																													"typeString": "uint16"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"arguments": [
																													{
																														"argumentTypes": null,
																														"id": 2510,
																														"name": "ownerFeeShare",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2443,
																														"src": "13044:13:8",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"argumentTypes": null,
																														"id": 2508,
																														"name": "amount1In",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2290,
																														"src": "13030:9:8",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 2509,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1111,
																													"src": "13030:13:8",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 2511,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "13030:28:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 2512,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "mul",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1111,
																											"src": "13030:32:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 2514,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "13030:51:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "/",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 2517,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"id": 2515,
																													"name": "FEE_DENOMINATOR",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1152,
																													"src": "13085:15:8",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "**",
																												"rightExpression": {
																													"argumentTypes": null,
																													"hexValue": "33",
																													"id": 2516,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "13104:1:8",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_3_by_1",
																														"typeString": "int_const 3"
																													},
																													"value": "3"
																												},
																												"src": "13085:20:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 2518,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "13084:22:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "13030:76:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "13024:82:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2521,
																							"nodeType": "ExpressionStatement",
																							"src": "13024:82:8"
																						},
																						{
																							"expression": {
																								"argumentTypes": null,
																								"id": 2530,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"argumentTypes": null,
																									"expression": {
																										"argumentTypes": null,
																										"id": 2522,
																										"name": "tokensData",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2135,
																										"src": "13120:10:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																											"typeString": "struct EZKaliburPair.TokensData memory"
																										}
																									},
																									"id": 2524,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"memberName": "remainingFee1",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2064,
																									"src": "13120:24:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"id": 2528,
																											"name": "fee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2343,
																											"src": "13176:3:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"argumentTypes": null,
																											"expression": {
																												"argumentTypes": null,
																												"id": 2525,
																												"name": "tokensData",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2135,
																												"src": "13147:10:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																													"typeString": "struct EZKaliburPair.TokensData memory"
																												}
																											},
																											"id": 2526,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "remainingFee1",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2064,
																											"src": "13147:24:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2527,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sub",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1083,
																										"src": "13147:28:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2529,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "13147:33:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "13120:60:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2531,
																							"nodeType": "ExpressionStatement",
																							"src": "13120:60:8"
																						},
																						{
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"expression": {
																											"argumentTypes": null,
																											"id": 2533,
																											"name": "tokensData",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2135,
																											"src": "13208:10:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																												"typeString": "struct EZKaliburPair.TokensData memory"
																											}
																										},
																										"id": 2534,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token1",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 2052,
																										"src": "13208:17:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"argumentTypes": null,
																										"id": 2535,
																										"name": "feeTo",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2445,
																										"src": "13227:5:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"argumentTypes": null,
																										"id": 2536,
																										"name": "fee",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2343,
																										"src": "13234:3:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 2532,
																									"name": "_safeTransfer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1267,
																									"src": "13194:13:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																										"typeString": "function (address,address,uint256)"
																									}
																								},
																								"id": 2537,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13194:44:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2538,
																							"nodeType": "ExpressionStatement",
																							"src": "13194:44:8"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2545,
																"name": "amount0In",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "13313:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13325:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13313:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 2562,
														"nodeType": "IfStatement",
														"src": "13309:91:8",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"id": 2560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2548,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "13328:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																			"typeString": "struct EZKaliburPair.TokensData memory"
																		}
																	},
																	"id": 2550,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "balance0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2058,
																	"src": "13328:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2557,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3264,
																					"src": "13394:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																						"typeString": "contract EZKaliburPair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																						"typeString": "contract EZKaliburPair"
																					}
																				],
																				"id": 2556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13386:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 2558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13386:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 2552,
																						"name": "tokensData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2135,
																						"src": "13357:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																							"typeString": "struct EZKaliburPair.TokensData memory"
																						}
																					},
																					"id": 2553,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "token0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2050,
																					"src": "13357:17:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2551,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "13350:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 2554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13350:25:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$479",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 440,
																		"src": "13350:35:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13350:50:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13328:72:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2561,
															"nodeType": "ExpressionStatement",
															"src": "13328:72:8"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2563,
																"name": "amount1In",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2290,
																"src": "13412:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13424:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13412:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 2580,
														"nodeType": "IfStatement",
														"src": "13408:91:8",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"id": 2578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2566,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "13427:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																			"typeString": "struct EZKaliburPair.TokensData memory"
																		}
																	},
																	"id": 2568,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "balance1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2060,
																	"src": "13427:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2575,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3264,
																					"src": "13493:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																						"typeString": "contract EZKaliburPair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																						"typeString": "contract EZKaliburPair"
																					}
																				],
																				"id": 2574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13485:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13485:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 2570,
																						"name": "tokensData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2135,
																						"src": "13456:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																							"typeString": "struct EZKaliburPair.TokensData memory"
																						}
																					},
																					"id": 2571,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "token1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2052,
																					"src": "13456:17:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2569,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "13449:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 2572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13449:25:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$479",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 440,
																		"src": "13449:35:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13449:50:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13427:72:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2579,
															"nodeType": "ExpressionStatement",
															"src": "13427:72:8"
														}
													}
												]
											},
											{
												"id": 2617,
												"nodeType": "Block",
												"src": "13511:347:8",
												"statements": [
													{
														"assignments": [
															2583
														],
														"declarations": [
															{
																"constant": false,
																"id": 2583,
																"name": "balance0Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 2617,
																"src": "13582:21:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2582,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "13582:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 2590,
														"initialValue": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2587,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "13630:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																			"typeString": "struct EZKaliburPair.TokensData memory"
																		}
																	},
																	"id": 2588,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "remainingFee0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2062,
																	"src": "13630:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2584,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "13606:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																			"typeString": "struct EZKaliburPair.TokensData memory"
																		}
																	},
																	"id": 2585,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2058,
																	"src": "13606:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1083,
																"src": "13606:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13606:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13582:73:8"
													},
													{
														"assignments": [
															2592
														],
														"declarations": [
															{
																"constant": false,
																"id": 2592,
																"name": "balance1Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 2617,
																"src": "13663:21:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2591,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "13663:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 2599,
														"initialValue": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2596,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "13711:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																			"typeString": "struct EZKaliburPair.TokensData memory"
																		}
																	},
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "remainingFee1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2064,
																	"src": "13711:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2593,
																		"name": "tokensData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "13687:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																			"typeString": "struct EZKaliburPair.TokensData memory"
																		}
																	},
																	"id": 2594,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2060,
																	"src": "13687:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1083,
																"src": "13687:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13687:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13663:73:8"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2602,
																				"name": "balance0Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2583,
																				"src": "13755:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 2603,
																				"name": "balance1Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2592,
																				"src": "13773:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2601,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "13752:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) view returns (uint256)"
																			}
																		},
																		"id": 2604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13752:38:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2607,
																						"name": "_reserve0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2160,
																						"src": "13802:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"id": 2606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "13797:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": "uint"
																				},
																				"id": 2608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13797:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2610,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2162,
																						"src": "13819:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"id": 2609,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "13814:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": "uint"
																				},
																				"id": 2611,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13814:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2605,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "13794:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) view returns (uint256)"
																			}
																		},
																		"id": 2612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13794:36:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13752:78:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "655a4b616c69627572506169723a204b",
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13832:18:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_bb61dab0943bb05cdec73c8ed2f1cf724044eb62a0f4502feca557647f6f17b8",
																		"typeString": "literal_string \"eZKaliburPair: K\""
																	},
																	"value": "eZKaliburPair: K"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_bb61dab0943bb05cdec73c8ed2f1cf724044eb62a0f4502feca557647f6f17b8",
																		"typeString": "literal_string \"eZKaliburPair: K\""
																	}
																],
																"id": 2600,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3237,
																	3238
																],
																"referencedDeclaration": 3238,
																"src": "13744:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13744:107:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2616,
														"nodeType": "ExpressionStatement",
														"src": "13744:107:8"
													}
												]
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2619,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "13871:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																	"typeString": "struct EZKaliburPair.TokensData memory"
																}
															},
															"id": 2620,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2058,
															"src": "13871:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2621,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "13892:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																	"typeString": "struct EZKaliburPair.TokensData memory"
																}
															},
															"id": 2622,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2060,
															"src": "13892:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2618,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "13863:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13863:49:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2624,
												"nodeType": "ExpressionStatement",
												"src": "13863:49:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2626,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3234,
																"src": "13928:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13928:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2628,
															"name": "amount0In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2270,
															"src": "13940:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2629,
															"name": "amount1In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2290,
															"src": "13951:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2630,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "13962:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																	"typeString": "struct EZKaliburPair.TokensData memory"
																}
															},
															"id": 2631,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount0Out",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2054,
															"src": "13962:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2632,
																"name": "tokensData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "13985:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
																	"typeString": "struct EZKaliburPair.TokensData memory"
																}
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount1Out",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2056,
															"src": "13985:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2634,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2137,
															"src": "14008:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2625,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1319
														],
														"referencedDeclaration": 1319,
														"src": "13923:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,address)"
														}
													},
													"id": 2635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13923:88:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2636,
												"nodeType": "EmitStatement",
												"src": "13918:93:8"
											}
										]
									},
									"documentation": null,
									"id": 2638,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2144,
											"modifierName": {
												"argumentTypes": null,
												"id": 2143,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1197,
												"src": "10142:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10142:4:8"
										}
									],
									"name": "_swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"name": "tokensData",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "10054:28:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokensData_$2065_memory_ptr",
													"typeString": "struct EZKaliburPair.TokensData"
												},
												"typeName": {
													"contractScope": null,
													"id": 2134,
													"name": "TokensData",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2065,
													"src": "10054:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokensData_$2065_storage_ptr",
														"typeString": "struct EZKaliburPair.TokensData"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "10084:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10084:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2139,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "10096:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2138,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10096:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2141,
												"name": "referrer",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "10115:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10115:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10053:79:8"
									},
									"returnParameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10147:0:8"
									},
									"scope": 3219,
									"src": "10039:3977:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2708,
										"nodeType": "Block",
										"src": "14091:332:8",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 2647,
													"name": "stableSwap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1173,
													"src": "14101:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2702,
												"nodeType": "IfStatement",
												"src": "14097:287:8",
												"trueBody": {
													"id": 2701,
													"nodeType": "Block",
													"src": "14113:271:8",
													"statements": [
														{
															"assignments": [
																2649
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2649,
																	"name": "_x",
																	"nodeType": "VariableDeclaration",
																	"scope": 2701,
																	"src": "14121:7:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2648,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "14121:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2656,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 2652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14144:4:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2650,
																			"name": "balance0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2640,
																			"src": "14131:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1111,
																		"src": "14131:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14131:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2654,
																	"name": "precisionMultiplier0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "14152:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14131:41:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14121:51:8"
														},
														{
															"assignments": [
																2658
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2658,
																	"name": "_y",
																	"nodeType": "VariableDeclaration",
																	"scope": 2701,
																	"src": "14180:7:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2657,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "14180:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2665,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 2661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14203:4:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2659,
																			"name": "balance1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2642,
																			"src": "14190:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1111,
																		"src": "14190:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14190:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2663,
																	"name": "precisionMultiplier1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "14211:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14190:41:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14180:51:8"
														},
														{
															"assignments": [
																2667
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2667,
																	"name": "_a",
																	"nodeType": "VariableDeclaration",
																	"scope": 2701,
																	"src": "14239:7:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2666,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "14239:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2675,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2670,
																					"name": "_y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2658,
																					"src": "14257:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2668,
																					"name": "_x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2649,
																					"src": "14250:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1111,
																				"src": "14250:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14250:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2672,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14249:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 2673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14264:4:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "14249:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14239:29:8"
														},
														{
															"assignments": [
																2677
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2677,
																	"name": "_b",
																	"nodeType": "VariableDeclaration",
																	"scope": 2701,
																	"src": "14276:7:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2676,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "14276:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2693,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2688,
																					"name": "_y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2658,
																					"src": "14317:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2686,
																					"name": "_y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2658,
																					"src": "14310:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1111,
																				"src": "14310:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14310:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 2690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:4:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "14310:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 2680,
																							"name": "_x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2649,
																							"src": "14294:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 2678,
																							"name": "_x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2649,
																							"src": "14287:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2679,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1111,
																						"src": "14287:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2681,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14287:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31653138",
																					"id": 2682,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14300:4:8",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "14287:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2684,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "14286:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1061,
																	"src": "14286:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14286:42:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14276:52:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2696,
																			"name": "_b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2677,
																			"src": "14351:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2694,
																			"name": "_a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2667,
																			"src": "14344:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1111,
																		"src": "14344:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14344:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 2698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14357:4:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "14344:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2646,
															"id": 2700,
															"nodeType": "Return",
															"src": "14336:25:8"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2705,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2642,
															"src": "14409:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2703,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2640,
															"src": "14396:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1111,
														"src": "14396:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14396:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2646,
												"id": 2707,
												"nodeType": "Return",
												"src": "14389:29:8"
											}
										]
									},
									"documentation": null,
									"id": 2709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_k",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2640,
												"name": "balance0",
												"nodeType": "VariableDeclaration",
												"scope": 2709,
												"src": "14032:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2639,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14032:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2642,
												"name": "balance1",
												"nodeType": "VariableDeclaration",
												"scope": 2709,
												"src": "14047:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2641,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14047:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14031:30:8"
									},
									"returnParameters": {
										"id": 2646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2645,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2709,
												"src": "14085:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2644,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14085:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14084:6:8"
									},
									"scope": 3219,
									"src": "14020:403:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2815,
										"nodeType": "Block",
										"src": "14498:457:8",
										"statements": [
											{
												"body": {
													"id": 2811,
													"nodeType": "Block",
													"src": "14535:402:8",
													"statements": [
														{
															"assignments": [
																2731
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2731,
																	"name": "y_prev",
																	"nodeType": "VariableDeclaration",
																	"scope": 2811,
																	"src": "14543:11:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2730,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "14543:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2733,
															"initialValue": {
																"argumentTypes": null,
																"id": 2732,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2715,
																"src": "14557:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14543:15:8"
														},
														{
															"assignments": [
																2735
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2735,
																	"name": "k",
																	"nodeType": "VariableDeclaration",
																	"scope": 2811,
																	"src": "14566:6:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2734,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "14566:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2740,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2737,
																		"name": "x0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2711,
																		"src": "14578:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2738,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2715,
																		"src": "14582:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2736,
																	"name": "_f",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2856,
																	"src": "14575:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14575:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14566:18:8"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2741,
																	"name": "k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2735,
																	"src": "14596:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2742,
																	"name": "xy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2713,
																	"src": "14600:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14596:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2785,
																"nodeType": "Block",
																"src": "14686:76:8",
																"statements": [
																	{
																		"assignments": [
																			2766
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2766,
																				"name": "dy",
																				"nodeType": "VariableDeclaration",
																				"scope": 2785,
																				"src": "14696:7:8",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2765,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "14696:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 2778,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2772,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2769,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 2767,
																								"name": "k",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2735,
																								"src": "14707:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 2768,
																								"name": "xy",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2713,
																								"src": "14711:2:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "14707:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2770,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "14706:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31653138",
																					"id": 2771,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14717:4:8",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "14706:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2774,
																						"name": "x0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2711,
																						"src": "14727:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 2775,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2715,
																						"src": "14731:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2773,
																					"name": "_d",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2890,
																					"src": "14724:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14724:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14706:27:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "14696:37:8"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2779,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2715,
																				"src": "14743:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 2780,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2715,
																					"src": "14747:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 2781,
																					"name": "dy",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2766,
																					"src": "14751:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14747:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14743:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2784,
																		"nodeType": "ExpressionStatement",
																		"src": "14743:10:8"
																	}
																]
															},
															"id": 2786,
															"nodeType": "IfStatement",
															"src": "14592:170:8",
															"trueBody": {
																"id": 2764,
																"nodeType": "Block",
																"src": "14604:76:8",
																"statements": [
																	{
																		"assignments": [
																			2745
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2745,
																				"name": "dy",
																				"nodeType": "VariableDeclaration",
																				"scope": 2764,
																				"src": "14614:7:8",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2744,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "14614:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 2757,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2748,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 2746,
																								"name": "xy",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2713,
																								"src": "14625:2:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 2747,
																								"name": "k",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2735,
																								"src": "14630:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "14625:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2749,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "14624:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31653138",
																					"id": 2750,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14635:4:8",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "14624:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2753,
																						"name": "x0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2711,
																						"src": "14645:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 2754,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2715,
																						"src": "14649:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2752,
																					"name": "_d",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2890,
																					"src": "14642:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14642:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14624:27:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "14614:37:8"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2758,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2715,
																				"src": "14661:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 2759,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2715,
																					"src": "14665:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 2760,
																					"name": "dy",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2745,
																					"src": "14669:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14665:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14661:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2763,
																		"nodeType": "ExpressionStatement",
																		"src": "14661:10:8"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2787,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2715,
																	"src": "14773:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2788,
																	"name": "y_prev",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2731,
																	"src": "14777:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14773:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2809,
																"nodeType": "Block",
																"src": "14861:70:8",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 2800,
																					"name": "y_prev",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2731,
																					"src": "14875:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 2801,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2715,
																					"src": "14884:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14875:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 2803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14889:1:8",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "14875:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 2808,
																		"nodeType": "IfStatement",
																		"src": "14871:52:8",
																		"trueBody": {
																			"id": 2807,
																			"nodeType": "Block",
																			"src": "14892:31:8",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 2805,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2715,
																						"src": "14911:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 2719,
																					"id": 2806,
																					"nodeType": "Return",
																					"src": "14904:8:8"
																				}
																			]
																		}
																	}
																]
															},
															"id": 2810,
															"nodeType": "IfStatement",
															"src": "14769:162:8",
															"trueBody": {
																"id": 2799,
																"nodeType": "Block",
																"src": "14785:70:8",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2792,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 2790,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2715,
																					"src": "14799:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 2791,
																					"name": "y_prev",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2731,
																					"src": "14803:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14799:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 2793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14813:1:8",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "14799:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 2798,
																		"nodeType": "IfStatement",
																		"src": "14795:52:8",
																		"trueBody": {
																			"id": 2797,
																			"nodeType": "Block",
																			"src": "14816:31:8",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 2795,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2715,
																						"src": "14835:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 2719,
																					"id": 2796,
																					"nodeType": "Return",
																					"src": "14828:8:8"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2724,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2721,
														"src": "14521:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "323535",
														"id": 2725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14525:3:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "14521:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2812,
												"initializationExpression": {
													"assignments": [
														2721
													],
													"declarations": [
														{
															"constant": false,
															"id": 2721,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2812,
															"src": "14509:6:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2720,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "14509:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 2723,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14518:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14509:10:8"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14530:3:8",
														"subExpression": {
															"argumentTypes": null,
															"id": 2727,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2721,
															"src": "14530:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2729,
													"nodeType": "ExpressionStatement",
													"src": "14530:3:8"
												},
												"nodeType": "ForStatement",
												"src": "14504:433:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2813,
													"name": "y",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2715,
													"src": "14949:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2719,
												"id": 2814,
												"nodeType": "Return",
												"src": "14942:8:8"
											}
										]
									},
									"documentation": null,
									"id": 2816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_get_y",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2711,
												"name": "x0",
												"nodeType": "VariableDeclaration",
												"scope": 2816,
												"src": "14443:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2710,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14443:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2713,
												"name": "xy",
												"nodeType": "VariableDeclaration",
												"scope": 2816,
												"src": "14452:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2712,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14452:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2715,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2816,
												"src": "14461:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2714,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14461:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14442:26:8"
									},
									"returnParameters": {
										"id": 2719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2718,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2816,
												"src": "14492:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2717,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14492:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14491:6:8"
									},
									"scope": 3219,
									"src": "14427:528:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2855,
										"nodeType": "Block",
										"src": "15017:97:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2825,
																"name": "x0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "15030:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2826,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2820,
																						"src": "15036:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 2827,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2820,
																						"src": "15040:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15036:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31653138",
																					"id": 2829,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15044:4:8",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "15036:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2831,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2820,
																				"src": "15051:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15036:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 2833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15055:4:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "15036:23:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2835,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15035:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15030:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31653138",
															"id": 2837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15063:4:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "15030:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2843,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2841,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2839,
																						"name": "x0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2818,
																						"src": "15071:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 2840,
																						"name": "x0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2818,
																						"src": "15076:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15071:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31653138",
																					"id": 2842,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15081:4:8",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "15071:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2844,
																				"name": "x0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2818,
																				"src": "15088:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15071:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 2846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15093:4:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "15071:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2848,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15070:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2849,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2820,
																"src": "15101:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15070:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31653138",
															"id": 2851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15105:4:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "15070:39:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15030:79:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2824,
												"id": 2854,
												"nodeType": "Return",
												"src": "15023:86:8"
											}
										]
									},
									"documentation": null,
									"id": 2856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_f",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"name": "x0",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "14971:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2817,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14971:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2820,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "14980:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2819,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14980:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14970:17:8"
									},
									"returnParameters": {
										"id": 2824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2823,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "15011:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2822,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15011:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15010:6:8"
									},
									"scope": 3219,
									"src": "14959:155:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2889,
										"nodeType": "Block",
										"src": "15176:79:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "33",
																	"id": 2865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15189:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2866,
																	"name": "x0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2858,
																	"src": "15193:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15189:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2868,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2860,
																				"src": "15199:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2869,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2860,
																				"src": "15203:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15199:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 2871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15207:4:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "15199:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2873,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15198:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15189:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31653138",
															"id": 2875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15215:4:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "15189:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2877,
																				"name": "x0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2858,
																				"src": "15223:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2878,
																				"name": "x0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2858,
																				"src": "15228:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15223:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 2880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15233:4:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "15223:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2882,
																		"name": "x0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2858,
																		"src": "15240:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15223:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 2884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15245:4:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "15223:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2886,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "15222:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15189:61:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2864,
												"id": 2888,
												"nodeType": "Return",
												"src": "15182:68:8"
											}
										]
									},
									"documentation": null,
									"id": 2890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_d",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"name": "x0",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "15130:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2857,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15130:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2860,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "15139:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2859,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15139:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15129:17:8"
									},
									"returnParameters": {
										"id": 2864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2863,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "15170:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2862,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15170:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15169:6:8"
									},
									"scope": 3219,
									"src": "15118:137:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2920,
										"nodeType": "Block",
										"src": "15342:175:8",
										"statements": [
											{
												"assignments": [
													2900
												],
												"declarations": [
													{
														"constant": false,
														"id": 2900,
														"name": "feePercent",
														"nodeType": "VariableDeclaration",
														"scope": 2920,
														"src": "15348:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 2899,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "15348:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2907,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2901,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2894,
															"src": "15368:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2902,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "15379:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15368:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 2905,
														"name": "token1FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "15407:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"id": 2906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "15368:55:8",
													"trueExpression": {
														"argumentTypes": null,
														"id": 2904,
														"name": "token0FeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "15388:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15348:75:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2909,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2892,
															"src": "15450:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2910,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2894,
															"src": "15460:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2912,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "15474:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15469:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 2913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15469:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2915,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "15490:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15485:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 2916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15485:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2917,
															"name": "feePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2900,
															"src": "15501:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2908,
														"name": "_getAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3072,
														"src": "15436:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,address,uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 2918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15436:76:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2898,
												"id": 2919,
												"nodeType": "Return",
												"src": "15429:83:8"
											}
										]
									},
									"documentation": null,
									"id": 2921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2892,
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "15281:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2891,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15281:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2894,
												"name": "tokenIn",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "15296:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15296:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15280:32:8"
									},
									"returnParameters": {
										"id": 2898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2897,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "15336:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2896,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15336:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15335:6:8"
									},
									"scope": 3219,
									"src": "15259:258:8",
									"stateMutability": "view",
									"superFunction": 761,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3071,
										"nodeType": "Block",
										"src": "15654:963:8",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 2936,
													"name": "stableSwap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1173,
													"src": "15664:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3069,
													"nodeType": "Block",
													"src": "16347:266:8",
													"statements": [
														{
															"assignments": [
																3030,
																3032
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3030,
																	"name": "reserveA",
																	"nodeType": "VariableDeclaration",
																	"scope": 3069,
																	"src": "16356:13:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3029,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "16356:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 3032,
																	"name": "reserveB",
																	"nodeType": "VariableDeclaration",
																	"scope": 3069,
																	"src": "16371:13:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3031,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "16371:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 3043,
															"initialValue": {
																"argumentTypes": null,
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 3035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 3033,
																		"name": "tokenIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2925,
																		"src": "16388:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 3034,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "16399:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "16388:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"id": 3039,
																			"name": "_reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2929,
																			"src": "16434:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 3040,
																			"name": "_reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "16445:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3041,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16433:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"id": 3042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "16388:67:8",
																"trueExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"id": 3036,
																			"name": "_reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "16409:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 3037,
																			"name": "_reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2929,
																			"src": "16420:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3038,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16408:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16355:100:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 3052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 3044,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2923,
																	"src": "16463:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3049,
																					"name": "feePercent",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2931,
																					"src": "16507:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 3047,
																					"name": "FEE_DENOMINATOR",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1152,
																					"src": "16487:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3048,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1083,
																				"src": "16487:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16487:31:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 3045,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2923,
																			"src": "16474:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1111,
																		"src": "16474:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16474:45:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16463:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3053,
															"nodeType": "ExpressionStatement",
															"src": "16463:56:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3056,
																					"name": "reserveB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3032,
																					"src": "16548:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 3054,
																					"name": "amountIn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2923,
																					"src": "16535:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3055,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1111,
																				"src": "16535:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16535:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3058,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16534:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3064,
																					"name": "amountIn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2923,
																					"src": "16596:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 3061,
																							"name": "FEE_DENOMINATOR",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1152,
																							"src": "16575:15:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 3059,
																							"name": "reserveA",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3030,
																							"src": "16562:8:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 3060,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1111,
																						"src": "16562:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 3062,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16562:29:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1061,
																				"src": "16562:33:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16562:43:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3066,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16561:45:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16534:72:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2935,
															"id": 3068,
															"nodeType": "Return",
															"src": "16527:79:8"
														}
													]
												},
												"id": 3070,
												"nodeType": "IfStatement",
												"src": "15660:953:8",
												"trueBody": {
													"id": 3028,
													"nodeType": "Block",
													"src": "15676:665:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2937,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2923,
																	"src": "15684:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2942,
																						"name": "feePercent",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2931,
																						"src": "15721:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 2940,
																						"name": "amountIn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2923,
																						"src": "15708:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2941,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1111,
																					"src": "15708:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2943,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15708:24:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2944,
																				"name": "FEE_DENOMINATOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1152,
																				"src": "15735:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15708:42:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2938,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2923,
																			"src": "15695:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1083,
																		"src": "15695:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15695:56:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15684:67:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2948,
															"nodeType": "ExpressionStatement",
															"src": "15684:67:8"
														},
														{
															"assignments": [
																2950
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2950,
																	"name": "xy",
																	"nodeType": "VariableDeclaration",
																	"scope": 3028,
																	"src": "15794:7:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2949,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "15794:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2955,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2952,
																		"name": "_reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2927,
																		"src": "15807:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2953,
																		"name": "_reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2929,
																		"src": "15818:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2951,
																	"name": "_k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2709,
																	"src": "15804:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 2954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15804:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15794:34:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2956,
																	"name": "_reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2927,
																	"src": "15836:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2957,
																			"name": "_reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "15848:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 2958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15860:4:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "15848:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2960,
																		"name": "precisionMultiplier0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "15867:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15848:39:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15836:51:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2963,
															"nodeType": "ExpressionStatement",
															"src": "15836:51:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2964,
																	"name": "_reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2929,
																	"src": "15895:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2965,
																			"name": "_reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2929,
																			"src": "15907:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 2966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15919:4:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "15907:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2968,
																		"name": "precisionMultiplier1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "15926:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15907:39:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15895:51:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2971,
															"nodeType": "ExpressionStatement",
															"src": "15895:51:8"
														},
														{
															"assignments": [
																2973,
																2975
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2973,
																	"name": "reserveA",
																	"nodeType": "VariableDeclaration",
																	"scope": 3028,
																	"src": "15956:13:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2972,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "15956:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2975,
																	"name": "reserveB",
																	"nodeType": "VariableDeclaration",
																	"scope": 3028,
																	"src": "15971:13:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2974,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "15971:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2986,
															"initialValue": {
																"argumentTypes": null,
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2976,
																		"name": "tokenIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2925,
																		"src": "15988:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2977,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "15999:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "15988:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"id": 2982,
																			"name": "_reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2929,
																			"src": "16034:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 2983,
																			"name": "_reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "16045:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2984,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16033:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"id": 2985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "15988:67:8",
																"trueExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"id": 2979,
																			"name": "_reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "16009:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 2980,
																			"name": "_reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2929,
																			"src": "16020:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2981,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16008:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15955:100:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 3002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2987,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2923,
																	"src": "16063:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2988,
																			"name": "tokenIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2925,
																			"src": "16074:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2989,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "16085:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "16074:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2996,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2923,
																				"src": "16135:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31653138",
																				"id": 2997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16146:4:8",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			},
																			"src": "16135:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2999,
																			"name": "precisionMultiplier1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1169,
																			"src": "16153:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16135:38:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "16074:99:8",
																	"trueExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2991,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2923,
																				"src": "16094:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31653138",
																				"id": 2992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16105:4:8",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			},
																			"src": "16094:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2994,
																			"name": "precisionMultiplier0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1167,
																			"src": "16112:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16094:38:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16063:110:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3003,
															"nodeType": "ExpressionStatement",
															"src": "16063:110:8"
														},
														{
															"assignments": [
																3005
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3005,
																	"name": "y",
																	"nodeType": "VariableDeclaration",
																	"scope": 3028,
																	"src": "16181:6:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3004,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "16181:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 3015,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 3006,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2975,
																	"src": "16190:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 3008,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2923,
																				"src": "16208:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 3009,
																				"name": "reserveA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2973,
																				"src": "16219:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16208:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 3011,
																			"name": "xy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2950,
																			"src": "16229:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 3012,
																			"name": "reserveB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2975,
																			"src": "16233:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3007,
																		"name": "_get_y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2816,
																		"src": "16201:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16201:41:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16190:52:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16181:61:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 3016,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3005,
																		"src": "16257:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"id": 3019,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 3017,
																						"name": "tokenIn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2925,
																						"src": "16262:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 3018,
																						"name": "token0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1145,
																						"src": "16273:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "16262:17:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"id": 3021,
																					"name": "precisionMultiplier0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1167,
																					"src": "16305:20:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "16262:63:8",
																				"trueExpression": {
																					"argumentTypes": null,
																					"id": 3020,
																					"name": "precisionMultiplier1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1169,
																					"src": "16282:20:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 3023,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "16261:65:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16257:69:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 3025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16329:4:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "16257:76:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2935,
															"id": 3027,
															"nodeType": "Return",
															"src": "16250:83:8"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 3072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2923,
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 3072,
												"src": "15544:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2922,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15544:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2925,
												"name": "tokenIn",
												"nodeType": "VariableDeclaration",
												"scope": 3072,
												"src": "15559:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15559:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2927,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 3072,
												"src": "15576:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2926,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15576:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2929,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 3072,
												"src": "15592:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2928,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15592:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2931,
												"name": "feePercent",
												"nodeType": "VariableDeclaration",
												"scope": 3072,
												"src": "15608:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2930,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15608:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15543:81:8"
									},
									"returnParameters": {
										"id": 2935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2934,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3072,
												"src": "15648:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2933,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15648:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15647:6:8"
									},
									"scope": 3219,
									"src": "15521:1096:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3122,
										"nodeType": "Block",
										"src": "16699:296:8",
										"statements": [
											{
												"assignments": [
													3080
												],
												"declarations": [
													{
														"constant": false,
														"id": 3080,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 3122,
														"src": "16705:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3079,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16705:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3082,
												"initialValue": {
													"argumentTypes": null,
													"id": 3081,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1145,
													"src": "16723:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16705:24:8"
											},
											{
												"assignments": [
													3084
												],
												"declarations": [
													{
														"constant": false,
														"id": 3084,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 3122,
														"src": "16754:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3083,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16754:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3086,
												"initialValue": {
													"argumentTypes": null,
													"id": 3085,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1147,
													"src": "16772:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16754:24:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3088,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3080,
															"src": "16817:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 3089,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3074,
															"src": "16826:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3099,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "16875:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3095,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3264,
																					"src": "16864:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																						"typeString": "contract EZKaliburPair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																						"typeString": "contract EZKaliburPair"
																					}
																				],
																				"id": 3094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "16856:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 3096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16856:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3091,
																					"name": "_token0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3080,
																					"src": "16837:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3090,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "16830:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 3092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16830:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$479",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 3093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 440,
																		"src": "16830:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 3097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16830:40:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1083,
																"src": "16830:44:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16830:54:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3087,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "16803:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16803:82:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3102,
												"nodeType": "ExpressionStatement",
												"src": "16803:82:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3104,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3084,
															"src": "16905:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 3105,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3074,
															"src": "16914:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3115,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "16963:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3111,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3264,
																					"src": "16952:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																						"typeString": "contract EZKaliburPair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																						"typeString": "contract EZKaliburPair"
																					}
																				],
																				"id": 3110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "16944:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 3112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16944:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 3107,
																					"name": "_token1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3084,
																					"src": "16925:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3106,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "16918:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 3108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16918:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$479",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 3109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 440,
																		"src": "16918:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 3113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16918:40:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1083,
																"src": "16918:44:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16918:54:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3103,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "16891:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16891:82:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3118,
												"nodeType": "ExpressionStatement",
												"src": "16891:82:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3119,
														"name": "Skim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "16984:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16984:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3121,
												"nodeType": "EmitStatement",
												"src": "16979:11:8"
											}
										]
									},
									"documentation": null,
									"id": 3123,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 3077,
											"modifierName": {
												"argumentTypes": null,
												"id": 3076,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1197,
												"src": "16694:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16694:4:8"
										}
									],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3074,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "16673:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16673:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16672:12:8"
									},
									"returnParameters": {
										"id": 3078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16699:0:8"
									},
									"scope": 3219,
									"src": "16659:336:8",
									"stateMutability": "nonpayable",
									"superFunction": 818,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3166,
										"nodeType": "Block",
										"src": "17067:285:8",
										"statements": [
											{
												"assignments": [
													3129
												],
												"declarations": [
													{
														"constant": false,
														"id": 3129,
														"name": "token0Balance",
														"nodeType": "VariableDeclaration",
														"scope": 3166,
														"src": "17073:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3128,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17073:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3138,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3135,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "17127:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																		"typeString": "contract EZKaliburPair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																		"typeString": "contract EZKaliburPair"
																	}
																],
																"id": 3134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17119:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 3136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17119:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3131,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "17101:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3130,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "17094:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 3132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17094:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$479",
																"typeString": "contract IERC20"
															}
														},
														"id": 3133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 440,
														"src": "17094:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17094:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17073:60:8"
											},
											{
												"assignments": [
													3140
												],
												"declarations": [
													{
														"constant": false,
														"id": 3140,
														"name": "token1Balance",
														"nodeType": "VariableDeclaration",
														"scope": 3166,
														"src": "17139:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3139,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17139:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3149,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3146,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3264,
																	"src": "17193:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																		"typeString": "contract EZKaliburPair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																		"typeString": "contract EZKaliburPair"
																	}
																],
																"id": 3145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17185:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 3147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17185:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 3142,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "17167:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3141,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "17160:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 3143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17160:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$479",
																"typeString": "contract IERC20"
															}
														},
														"id": 3144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 440,
														"src": "17160:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17160:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17139:60:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 3151,
																	"name": "token0Balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3129,
																	"src": "17213:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 3152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17230:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17213:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 3154,
																	"name": "token1Balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3140,
																	"src": "17235:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 3155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17252:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17235:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17213:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a206c697175696469747920726174696f206e6f7420696e697469616c697a6564",
															"id": 3158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17255:48:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b812a7bb29dec6f526121e1bfdf77da0d9fd5f3d8c74be699d0a2f01be67e231",
																"typeString": "literal_string \"eZKaliburPair: liquidity ratio not initialized\""
															},
															"value": "eZKaliburPair: liquidity ratio not initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b812a7bb29dec6f526121e1bfdf77da0d9fd5f3d8c74be699d0a2f01be67e231",
																"typeString": "literal_string \"eZKaliburPair: liquidity ratio not initialized\""
															}
														],
														"id": 3150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "17205:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17205:99:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3160,
												"nodeType": "ExpressionStatement",
												"src": "17205:99:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3162,
															"name": "token0Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3129,
															"src": "17318:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 3163,
															"name": "token1Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3140,
															"src": "17333:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3161,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "17310:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17310:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3165,
												"nodeType": "ExpressionStatement",
												"src": "17310:37:8"
											}
										]
									},
									"documentation": null,
									"id": 3167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 3126,
											"modifierName": {
												"argumentTypes": null,
												"id": 3125,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1197,
												"src": "17062:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17062:4:8"
										}
									],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17050:2:8"
									},
									"returnParameters": {
										"id": 3127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17067:0:8"
									},
									"scope": 3219,
									"src": "17037:315:8",
									"stateMutability": "nonpayable",
									"superFunction": 821,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3217,
										"nodeType": "Block",
										"src": "17532:286:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 3177,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3234,
																	"src": "17546:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17546:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 3180,
																				"name": "factory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1143,
																				"src": "17569:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3179,
																			"name": "IFactory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 566,
																			"src": "17560:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IFactory_$566_$",
																				"typeString": "type(contract IFactory)"
																			}
																		},
																		"id": 3181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17560:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IFactory_$566",
																			"typeString": "contract IFactory"
																		}
																	},
																	"id": 3182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 496,
																	"src": "17560:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 3183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17560:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17546:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a206f6e6c7920666163746f72792773206f776e6572",
															"id": 3185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17587:37:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fd83120603ed4d82de96120f878f97f3eab3d3e5b9b17eb433b2f605b574072d",
																"typeString": "literal_string \"eZKaliburPair: only factory's owner\""
															},
															"value": "eZKaliburPair: only factory's owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fd83120603ed4d82de96120f878f97f3eab3d3e5b9b17eb433b2f605b574072d",
																"typeString": "literal_string \"eZKaliburPair: only factory's owner\""
															}
														],
														"id": 3176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "17538:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17538:87:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3187,
												"nodeType": "ExpressionStatement",
												"src": "17538:87:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 3189,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3169,
																	"src": "17639:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 3190,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "17648:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "17639:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 3192,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3169,
																	"src": "17658:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 3193,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "17667:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "17658:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17639:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "655a4b616c69627572506169723a20696e76616c696420746f6b656e",
															"id": 3196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17675:30:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70d03085ec43ec66cc39e77b138683221fc12f15a9f3dd1682c738c635063280",
																"typeString": "literal_string \"eZKaliburPair: invalid token\""
															},
															"value": "eZKaliburPair: invalid token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70d03085ec43ec66cc39e77b138683221fc12f15a9f3dd1682c738c635063280",
																"typeString": "literal_string \"eZKaliburPair: invalid token\""
															}
														],
														"id": 3188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3237,
															3238
														],
														"referencedDeclaration": 3238,
														"src": "17631:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17631:75:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3198,
												"nodeType": "ExpressionStatement",
												"src": "17631:75:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3169,
															"src": "17726:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 3201,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3171,
															"src": "17733:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 3207,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3264,
																			"src": "17769:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																				"typeString": "contract EZKaliburPair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EZKaliburPair_$3219",
																				"typeString": "contract EZKaliburPair"
																			}
																		],
																		"id": 3206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17761:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 3208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17761:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 3203,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3169,
																			"src": "17744:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3202,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "17737:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$479_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 3204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17737:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$479",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 3205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 440,
																"src": "17737:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 3209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17737:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3199,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "17712:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17712:64:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3211,
												"nodeType": "ExpressionStatement",
												"src": "17712:64:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3169,
															"src": "17803:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 3214,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3171,
															"src": "17810:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3212,
														"name": "DrainWrongToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "17787:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 3215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17787:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3216,
												"nodeType": "EmitStatement",
												"src": "17782:31:8"
											}
										]
									},
									"documentation": "@dev Allow to recover token sent here by mistake\n  * Can only be called by factory's owner",
									"id": 3218,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 3174,
											"modifierName": {
												"argumentTypes": null,
												"id": 3173,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1197,
												"src": "17527:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17527:4:8"
										}
									],
									"name": "drainWrongToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3169,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "17491:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17491:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3171,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "17506:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17506:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17490:27:8"
									},
									"returnParameters": {
										"id": 3175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17532:0:8"
									},
									"scope": 3219,
									"src": "17466:352:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 3220,
							"src": "236:17584:8"
						}
					],
					"src": "0:17821:8"
				},
				"id": 8
			}
		}
	}
}